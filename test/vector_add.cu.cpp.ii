# 0 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.cpp"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "/usr/include/stdc-predef.h" 1 3 4
# 0 "<command-line>" 2
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.cpp"
# 1 "vector_add.cu"
#pragma GCC diagnostic ignored "-Wunused-local-typedefs"
# 1 "vector_add.cu"
#pragma GCC diagnostic push
# 1 "vector_add.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "vector_add.cu"
#pragma GCC diagnostic ignored "-Wunused-function"
# 1 "vector_add.cu"
static char __nv_inited_managed_rt = 0; static void **__nv_fatbinhandle_for_managed_rt; static void __nv_save_fatbinhandle_for_managed_rt(void **in){__nv_fatbinhandle_for_managed_rt = in;} static char __nv_init_managed_rt_with_module(void **); static inline void __nv_init_managed_rt(void) { __nv_inited_managed_rt = (__nv_inited_managed_rt ? __nv_inited_managed_rt : __nv_init_managed_rt_with_module(__nv_fatbinhandle_for_managed_rt));}
# 1 "vector_add.cu"
#pragma GCC diagnostic pop
# 1 "vector_add.cu"
#pragma GCC diagnostic ignored "-Wunused-variable"
# 1 "vector_add.cu"
# 1 "vector_add.cu"
# 61 "/usr/include/cuda_runtime.h" 3
#pragma GCC diagnostic push
# 64 "/usr/include/cuda_runtime.h" 3
#pragma GCC diagnostic ignored "-Wunused-function"
# 68 "/usr/include/device_types.h" 3
# 100 "/usr/include/vector_types.h" 3
# 105 "/usr/include/vector_types.h" 3
# 111 "/usr/include/vector_types.h" 3
# 116 "/usr/include/vector_types.h" 3
# 121 "/usr/include/vector_types.h" 3
# 126 "/usr/include/vector_types.h" 3
# 131 "/usr/include/vector_types.h" 3
# 136 "/usr/include/vector_types.h" 3
# 141 "/usr/include/vector_types.h" 3
# 146 "/usr/include/vector_types.h" 3
# 151 "/usr/include/vector_types.h" 3
# 156 "/usr/include/vector_types.h" 3
# 161 "/usr/include/vector_types.h" 3
# 166 "/usr/include/vector_types.h" 3
# 171 "/usr/include/vector_types.h" 3
# 172 "/usr/include/vector_types.h" 3
# 174 "/usr/include/vector_types.h" 3
# 179 "/usr/include/vector_types.h" 3
# 184 "/usr/include/vector_types.h" 3
# 185 "/usr/include/vector_types.h" 3
# 187 "/usr/include/vector_types.h" 3
# 192 "/usr/include/vector_types.h" 3
# 197 "/usr/include/vector_types.h" 3
# 202 "/usr/include/vector_types.h" 3
# 207 "/usr/include/vector_types.h" 3
# 212 "/usr/include/vector_types.h" 3
# 222 "/usr/include/vector_types.h" 3
# 227 "/usr/include/vector_types.h" 3
# 234 "/usr/include/vector_types.h" 3
# 239 "/usr/include/vector_types.h" 3
# 244 "/usr/include/vector_types.h" 3
# 249 "/usr/include/vector_types.h" 3
# 254 "/usr/include/vector_types.h" 3
# 276 "/usr/include/vector_types.h" 3
# 281 "/usr/include/vector_types.h" 3
# 286 "/usr/include/vector_types.h" 3
# 291 "/usr/include/vector_types.h" 3
# 296 "/usr/include/vector_types.h" 3
# 301 "/usr/include/vector_types.h" 3
# 306 "/usr/include/vector_types.h" 3
# 311 "/usr/include/vector_types.h" 3
# 316 "/usr/include/vector_types.h" 3
# 321 "/usr/include/vector_types.h" 3
# 326 "/usr/include/vector_types.h" 3
# 331 "/usr/include/vector_types.h" 3
# 336 "/usr/include/vector_types.h" 3
# 341 "/usr/include/vector_types.h" 3
# 346 "/usr/include/vector_types.h" 3
# 363 "/usr/include/vector_types.h" 3
# 364 "/usr/include/vector_types.h" 3
# 365 "/usr/include/vector_types.h" 3
# 366 "/usr/include/vector_types.h" 3
# 367 "/usr/include/vector_types.h" 3
# 368 "/usr/include/vector_types.h" 3
# 369 "/usr/include/vector_types.h" 3
# 370 "/usr/include/vector_types.h" 3
# 371 "/usr/include/vector_types.h" 3
# 372 "/usr/include/vector_types.h" 3
# 373 "/usr/include/vector_types.h" 3
# 374 "/usr/include/vector_types.h" 3
# 375 "/usr/include/vector_types.h" 3
# 376 "/usr/include/vector_types.h" 3
# 377 "/usr/include/vector_types.h" 3
# 378 "/usr/include/vector_types.h" 3
# 379 "/usr/include/vector_types.h" 3
# 380 "/usr/include/vector_types.h" 3
# 381 "/usr/include/vector_types.h" 3
# 382 "/usr/include/vector_types.h" 3
# 383 "/usr/include/vector_types.h" 3
# 384 "/usr/include/vector_types.h" 3
# 385 "/usr/include/vector_types.h" 3
# 386 "/usr/include/vector_types.h" 3
# 387 "/usr/include/vector_types.h" 3
# 388 "/usr/include/vector_types.h" 3
# 389 "/usr/include/vector_types.h" 3
# 390 "/usr/include/vector_types.h" 3
# 391 "/usr/include/vector_types.h" 3
# 392 "/usr/include/vector_types.h" 3
# 393 "/usr/include/vector_types.h" 3
# 394 "/usr/include/vector_types.h" 3
# 395 "/usr/include/vector_types.h" 3
# 396 "/usr/include/vector_types.h" 3
# 397 "/usr/include/vector_types.h" 3
# 398 "/usr/include/vector_types.h" 3
# 399 "/usr/include/vector_types.h" 3
# 400 "/usr/include/vector_types.h" 3
# 401 "/usr/include/vector_types.h" 3
# 402 "/usr/include/vector_types.h" 3
# 403 "/usr/include/vector_types.h" 3
# 404 "/usr/include/vector_types.h" 3
# 405 "/usr/include/vector_types.h" 3
# 406 "/usr/include/vector_types.h" 3
# 407 "/usr/include/vector_types.h" 3
# 408 "/usr/include/vector_types.h" 3
# 409 "/usr/include/vector_types.h" 3
# 410 "/usr/include/vector_types.h" 3
# 418 "/usr/include/vector_types.h" 3
# 434 "/usr/include/vector_types.h" 3
# 23 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 3

# 23 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 3
extern "C" {
# 24 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 3
extern long __sysconf(int __name) noexcept(true);
# 25 "/usr/include/x86_64-linux-gnu/bits/pthread_stack_min-dynamic.h" 3
}
# 145 "/usr/lib/gcc/x86_64-linux-gnu/12/include/stddef.h" 3
typedef long ptrdiff_t;
# 214 "/usr/lib/gcc/x86_64-linux-gnu/12/include/stddef.h" 3
typedef unsigned long size_t;



# 1 "/usr/include/crt/host_runtime.h" 1 3 4
# 58 "/usr/include/crt/host_runtime.h" 3 4
# 1 "/usr/include/builtin_types.h" 1 3 4
# 56 "/usr/include/builtin_types.h" 3 4
# 1 "/usr/include/device_types.h" 1 3 4
# 59 "/usr/include/device_types.h" 3 4
# 1 "/usr/include/crt/host_defines.h" 1 3 4
# 60 "/usr/include/device_types.h" 2 3 4
# 68 "/usr/include/device_types.h" 3 4
enum cudaRoundMode
{
    cudaRoundNearest,
    cudaRoundZero,
    cudaRoundPosInf,
    cudaRoundMinInf
};
# 57 "/usr/include/builtin_types.h" 2 3 4


# 1 "/usr/include/driver_types.h" 1 3 4
# 59 "/usr/include/driver_types.h" 3 4
# 1 "/usr/include/crt/host_defines.h" 1 3 4
# 60 "/usr/include/driver_types.h" 2 3 4

# 1 "/usr/include/vector_types.h" 1 3 4
# 65 "/usr/include/vector_types.h" 3 4
# 1 "/usr/include/crt/host_defines.h" 1 3 4
# 66 "/usr/include/vector_types.h" 2 3 4
# 100 "/usr/include/vector_types.h" 3 4
struct char1
{
    signed char x;
};

struct uchar1
{
    unsigned char x;
};


struct __attribute__((aligned(2))) char2
{
    signed char x, y;
};

struct __attribute__((aligned(2))) uchar2
{
    unsigned char x, y;
};

struct char3
{
    signed char x, y, z;
};

struct uchar3
{
    unsigned char x, y, z;
};

struct __attribute__((aligned(4))) char4
{
    signed char x, y, z, w;
};

struct __attribute__((aligned(4))) uchar4
{
    unsigned char x, y, z, w;
};

struct short1
{
    short x;
};

struct ushort1
{
    unsigned short x;
};

struct __attribute__((aligned(4))) short2
{
    short x, y;
};

struct __attribute__((aligned(4))) ushort2
{
    unsigned short x, y;
};

struct short3
{
    short x, y, z;
};

struct ushort3
{
    unsigned short x, y, z;
};

struct __attribute__((aligned(8))) short4 { short x; short y; short z; short w; };
struct __attribute__((aligned(8))) ushort4 { unsigned short x; unsigned short y; unsigned short z; unsigned short w; };

struct int1
{
    int x;
};

struct uint1
{
    unsigned int x;
};

struct __attribute__((aligned(8))) int2 { int x; int y; };
struct __attribute__((aligned(8))) uint2 { unsigned int x; unsigned int y; };

struct int3
{
    int x, y, z;
};

struct uint3
{
    unsigned int x, y, z;
};

struct __attribute__((aligned(16))) int4
{
    int x, y, z, w;
};

struct __attribute__((aligned(16))) uint4
{
    unsigned int x, y, z, w;
};

struct long1
{
    long int x;
};

struct ulong1
{
    unsigned long x;
};






struct __attribute__((aligned(2*sizeof(long int)))) long2
{
    long int x, y;
};

struct __attribute__((aligned(2*sizeof(unsigned long int)))) ulong2
{
    unsigned long int x, y;
};



struct long3
{
    long int x, y, z;
};

struct ulong3
{
    unsigned long int x, y, z;
};

struct __attribute__((aligned(16))) long4
{
    long int x, y, z, w;
};

struct __attribute__((aligned(16))) ulong4
{
    unsigned long int x, y, z, w;
};

struct float1
{
    float x;
};
# 276 "/usr/include/vector_types.h" 3 4
struct __attribute__((aligned(8))) float2 { float x; float y; };




struct float3
{
    float x, y, z;
};

struct __attribute__((aligned(16))) float4
{
    float x, y, z, w;
};

struct longlong1
{
    long long int x;
};

struct ulonglong1
{
    unsigned long long int x;
};

struct __attribute__((aligned(16))) longlong2
{
    long long int x, y;
};

struct __attribute__((aligned(16))) ulonglong2
{
    unsigned long long int x, y;
};

struct longlong3
{
    long long int x, y, z;
};

struct ulonglong3
{
    unsigned long long int x, y, z;
};

struct __attribute__((aligned(16))) longlong4
{
    long long int x, y, z ,w;
};

struct __attribute__((aligned(16))) ulonglong4
{
    unsigned long long int x, y, z, w;
};

struct double1
{
    double x;
};

struct __attribute__((aligned(16))) double2
{
    double x, y;
};

struct double3
{
    double x, y, z;
};

struct __attribute__((aligned(16))) double4
{
    double x, y, z, w;
};
# 363 "/usr/include/vector_types.h" 3 4
typedef struct char1 char1;
typedef struct uchar1 uchar1;
typedef struct char2 char2;
typedef struct uchar2 uchar2;
typedef struct char3 char3;
typedef struct uchar3 uchar3;
typedef struct char4 char4;
typedef struct uchar4 uchar4;
typedef struct short1 short1;
typedef struct ushort1 ushort1;
typedef struct short2 short2;
typedef struct ushort2 ushort2;
typedef struct short3 short3;
typedef struct ushort3 ushort3;
typedef struct short4 short4;
typedef struct ushort4 ushort4;
typedef struct int1 int1;
typedef struct uint1 uint1;
typedef struct int2 int2;
typedef struct uint2 uint2;
typedef struct int3 int3;
typedef struct uint3 uint3;
typedef struct int4 int4;
typedef struct uint4 uint4;
typedef struct long1 long1;
typedef struct ulong1 ulong1;
typedef struct long2 long2;
typedef struct ulong2 ulong2;
typedef struct long3 long3;
typedef struct ulong3 ulong3;
typedef struct long4 long4;
typedef struct ulong4 ulong4;
typedef struct float1 float1;
typedef struct float2 float2;
typedef struct float3 float3;
typedef struct float4 float4;
typedef struct longlong1 longlong1;
typedef struct ulonglong1 ulonglong1;
typedef struct longlong2 longlong2;
typedef struct ulonglong2 ulonglong2;
typedef struct longlong3 longlong3;
typedef struct ulonglong3 ulonglong3;
typedef struct longlong4 longlong4;
typedef struct ulonglong4 ulonglong4;
typedef struct double1 double1;
typedef struct double2 double2;
typedef struct double3 double3;
typedef struct double4 double4;







struct dim3
{
    unsigned int x, y, z;


    constexpr dim3(unsigned int vx = 1, unsigned int vy = 1, unsigned int vz = 1) : x(vx), y(vy), z(vz) {}
    constexpr dim3(uint3 v) : x(v.x), y(v.y), z(v.z) {}
    constexpr operator uint3(void) const { return uint3{x, y, z}; }






};

typedef struct dim3 dim3;
# 62 "/usr/include/driver_types.h" 2 3 4
# 202 "/usr/include/driver_types.h" 3 4
enum cudaError
{





    cudaSuccess = 0,





    cudaErrorInvalidValue = 1,





    cudaErrorMemoryAllocation = 2,





    cudaErrorInitializationError = 3,






    cudaErrorCudartUnloading = 4,






    cudaErrorProfilerDisabled = 5,







    cudaErrorProfilerNotInitialized = 6,






    cudaErrorProfilerAlreadyStarted = 7,






     cudaErrorProfilerAlreadyStopped = 8,
# 272 "/usr/include/driver_types.h" 3 4
    cudaErrorInvalidConfiguration = 9,





    cudaErrorInvalidPitchValue = 12,





    cudaErrorInvalidSymbol = 13,







    cudaErrorInvalidHostPointer = 16,







    cudaErrorInvalidDevicePointer = 17,





    cudaErrorInvalidTexture = 18,





    cudaErrorInvalidTextureBinding = 19,






    cudaErrorInvalidChannelDescriptor = 20,





    cudaErrorInvalidMemcpyDirection = 21,
# 335 "/usr/include/driver_types.h" 3 4
    cudaErrorAddressOfConstant = 22,
# 344 "/usr/include/driver_types.h" 3 4
    cudaErrorTextureFetchFailed = 23,
# 353 "/usr/include/driver_types.h" 3 4
    cudaErrorTextureNotBound = 24,
# 362 "/usr/include/driver_types.h" 3 4
    cudaErrorSynchronizationError = 25,





    cudaErrorInvalidFilterSetting = 26,





    cudaErrorInvalidNormSetting = 27,







    cudaErrorMixedDeviceExecution = 28,







    cudaErrorNotYetImplemented = 31,
# 399 "/usr/include/driver_types.h" 3 4
    cudaErrorMemoryValueTooLarge = 32,






    cudaErrorStubLibrary = 34,






    cudaErrorInsufficientDriver = 35,






    cudaErrorCallRequiresNewerDriver = 36,





    cudaErrorInvalidSurface = 37,





    cudaErrorDuplicateVariableName = 43,





    cudaErrorDuplicateTextureName = 44,





    cudaErrorDuplicateSurfaceName = 45,
# 454 "/usr/include/driver_types.h" 3 4
    cudaErrorDevicesUnavailable = 46,
# 467 "/usr/include/driver_types.h" 3 4
    cudaErrorIncompatibleDriverContext = 49,





    cudaErrorMissingConfiguration = 52,
# 482 "/usr/include/driver_types.h" 3 4
    cudaErrorPriorLaunchFailure = 53,






    cudaErrorLaunchMaxDepthExceeded = 65,







    cudaErrorLaunchFileScopedTex = 66,







    cudaErrorLaunchFileScopedSurf = 67,
# 521 "/usr/include/driver_types.h" 3 4
    cudaErrorSyncDepthExceeded = 68,
# 533 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchPendingCountExceeded = 69,





    cudaErrorInvalidDeviceFunction = 98,





    cudaErrorNoDevice = 100,






    cudaErrorInvalidDevice = 101,




    cudaErrorDeviceNotLicensed = 102,
# 566 "/usr/include/driver_types.h" 3 4
   cudaErrorSoftwareValidityNotEstablished = 103,




    cudaErrorStartupFailure = 127,




    cudaErrorInvalidKernelImage = 200,
# 586 "/usr/include/driver_types.h" 3 4
    cudaErrorDeviceUninitialized = 201,




    cudaErrorMapBufferObjectFailed = 205,




    cudaErrorUnmapBufferObjectFailed = 206,





    cudaErrorArrayIsMapped = 207,




    cudaErrorAlreadyMapped = 208,







    cudaErrorNoKernelImageForDevice = 209,




    cudaErrorAlreadyAcquired = 210,




    cudaErrorNotMapped = 211,





    cudaErrorNotMappedAsArray = 212,





    cudaErrorNotMappedAsPointer = 213,





    cudaErrorECCUncorrectable = 214,





    cudaErrorUnsupportedLimit = 215,





    cudaErrorDeviceAlreadyInUse = 216,





    cudaErrorPeerAccessUnsupported = 217,





    cudaErrorInvalidPtx = 218,




    cudaErrorInvalidGraphicsContext = 219,





    cudaErrorNvlinkUncorrectable = 220,






    cudaErrorJitCompilerNotFound = 221,






    cudaErrorUnsupportedPtxVersion = 222,






    cudaErrorJitCompilationDisabled = 223,




    cudaErrorUnsupportedExecAffinity = 224,




    cudaErrorInvalidSource = 300,




    cudaErrorFileNotFound = 301,




    cudaErrorSharedObjectSymbolNotFound = 302,




    cudaErrorSharedObjectInitFailed = 303,




    cudaErrorOperatingSystem = 304,






    cudaErrorInvalidResourceHandle = 400,





    cudaErrorIllegalState = 401,






    cudaErrorSymbolNotFound = 500,







    cudaErrorNotReady = 600,







    cudaErrorIllegalAddress = 700,
# 774 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchOutOfResources = 701,
# 785 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchTimeout = 702,





    cudaErrorLaunchIncompatibleTexturing = 703,






    cudaErrorPeerAccessAlreadyEnabled = 704,






    cudaErrorPeerAccessNotEnabled = 705,
# 818 "/usr/include/driver_types.h" 3 4
    cudaErrorSetOnActiveProcess = 708,






    cudaErrorContextIsDestroyed = 709,






    cudaErrorAssert = 710,






    cudaErrorTooManyPeers = 711,





    cudaErrorHostMemoryAlreadyRegistered = 712,





    cudaErrorHostMemoryNotRegistered = 713,
# 860 "/usr/include/driver_types.h" 3 4
    cudaErrorHardwareStackError = 714,







    cudaErrorIllegalInstruction = 715,
# 877 "/usr/include/driver_types.h" 3 4
    cudaErrorMisalignedAddress = 716,
# 888 "/usr/include/driver_types.h" 3 4
    cudaErrorInvalidAddressSpace = 717,







    cudaErrorInvalidPc = 718,
# 907 "/usr/include/driver_types.h" 3 4
    cudaErrorLaunchFailure = 719,
# 916 "/usr/include/driver_types.h" 3 4
    cudaErrorCooperativeLaunchTooLarge = 720,




    cudaErrorNotPermitted = 800,





    cudaErrorNotSupported = 801,
# 936 "/usr/include/driver_types.h" 3 4
    cudaErrorSystemNotReady = 802,






    cudaErrorSystemDriverMismatch = 803,
# 952 "/usr/include/driver_types.h" 3 4
    cudaErrorCompatNotSupportedOnDevice = 804,




    cudaErrorMpsConnectionFailed = 805,




    cudaErrorMpsRpcFailure = 806,





    cudaErrorMpsServerNotReady = 807,




    cudaErrorMpsMaxClientsReached = 808,




    cudaErrorMpsMaxConnectionsReached = 809,




    cudaErrorMpsClientTerminated = 810,




    cudaErrorCdpNotSupported = 811,




    cudaErrorCdpVersionMismatch = 812,




    cudaErrorStreamCaptureUnsupported = 900,





    cudaErrorStreamCaptureInvalidated = 901,





    cudaErrorStreamCaptureMerge = 902,




    cudaErrorStreamCaptureUnmatched = 903,





    cudaErrorStreamCaptureUnjoined = 904,






    cudaErrorStreamCaptureIsolation = 905,





    cudaErrorStreamCaptureImplicit = 906,





    cudaErrorCapturedEvent = 907,






    cudaErrorStreamCaptureWrongThread = 908,




    cudaErrorTimeout = 909,





    cudaErrorGraphExecUpdateFailure = 910,
# 1068 "/usr/include/driver_types.h" 3 4
    cudaErrorExternalDevice = 911,





    cudaErrorInvalidClusterSize = 912,




    cudaErrorUnknown = 999,







    cudaErrorApiFailureBase = 10000
};




enum cudaChannelFormatKind
{
    cudaChannelFormatKindSigned = 0,
    cudaChannelFormatKindUnsigned = 1,
    cudaChannelFormatKindFloat = 2,
    cudaChannelFormatKindNone = 3,
    cudaChannelFormatKindNV12 = 4,
    cudaChannelFormatKindUnsignedNormalized8X1 = 5,
    cudaChannelFormatKindUnsignedNormalized8X2 = 6,
    cudaChannelFormatKindUnsignedNormalized8X4 = 7,
    cudaChannelFormatKindUnsignedNormalized16X1 = 8,
    cudaChannelFormatKindUnsignedNormalized16X2 = 9,
    cudaChannelFormatKindUnsignedNormalized16X4 = 10,
    cudaChannelFormatKindSignedNormalized8X1 = 11,
    cudaChannelFormatKindSignedNormalized8X2 = 12,
    cudaChannelFormatKindSignedNormalized8X4 = 13,
    cudaChannelFormatKindSignedNormalized16X1 = 14,
    cudaChannelFormatKindSignedNormalized16X2 = 15,
    cudaChannelFormatKindSignedNormalized16X4 = 16,
    cudaChannelFormatKindUnsignedBlockCompressed1 = 17,
    cudaChannelFormatKindUnsignedBlockCompressed1SRGB = 18,
    cudaChannelFormatKindUnsignedBlockCompressed2 = 19,
    cudaChannelFormatKindUnsignedBlockCompressed2SRGB = 20,
    cudaChannelFormatKindUnsignedBlockCompressed3 = 21,
    cudaChannelFormatKindUnsignedBlockCompressed3SRGB = 22,
    cudaChannelFormatKindUnsignedBlockCompressed4 = 23,
    cudaChannelFormatKindSignedBlockCompressed4 = 24,
    cudaChannelFormatKindUnsignedBlockCompressed5 = 25,
    cudaChannelFormatKindSignedBlockCompressed5 = 26,
    cudaChannelFormatKindUnsignedBlockCompressed6H = 27,
    cudaChannelFormatKindSignedBlockCompressed6H = 28,
    cudaChannelFormatKindUnsignedBlockCompressed7 = 29,
    cudaChannelFormatKindUnsignedBlockCompressed7SRGB = 30
};




struct cudaChannelFormatDesc
{
    int x;
    int y;
    int z;
    int w;
    enum cudaChannelFormatKind f;
};




typedef struct cudaArray *cudaArray_t;




typedef const struct cudaArray *cudaArray_const_t;

struct cudaArray;




typedef struct cudaMipmappedArray *cudaMipmappedArray_t;




typedef const struct cudaMipmappedArray *cudaMipmappedArray_const_t;

struct cudaMipmappedArray;
# 1172 "/usr/include/driver_types.h" 3 4
struct cudaArraySparseProperties {
    struct {
        unsigned int width;
        unsigned int height;
        unsigned int depth;
    } tileExtent;
    unsigned int miptailFirstLevel;
    unsigned long long miptailSize;
    unsigned int flags;
    unsigned int reserved[4];
};




struct cudaArrayMemoryRequirements {
    size_t size;
    size_t alignment;
    unsigned int reserved[4];
};




enum cudaMemoryType
{
    cudaMemoryTypeUnregistered = 0,
    cudaMemoryTypeHost = 1,
    cudaMemoryTypeDevice = 2,
    cudaMemoryTypeManaged = 3
};




enum cudaMemcpyKind
{
    cudaMemcpyHostToHost = 0,
    cudaMemcpyHostToDevice = 1,
    cudaMemcpyDeviceToHost = 2,
    cudaMemcpyDeviceToDevice = 3,
    cudaMemcpyDefault = 4
};






struct cudaPitchedPtr
{
    void *ptr;
    size_t pitch;
    size_t xsize;
    size_t ysize;
};






struct cudaExtent
{
    size_t width;
    size_t height;
    size_t depth;
};






struct cudaPos
{
    size_t x;
    size_t y;
    size_t z;
};




struct cudaMemcpy3DParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;

    struct cudaExtent extent;
    enum cudaMemcpyKind kind;
};




struct cudaMemcpy3DPeerParms
{
    cudaArray_t srcArray;
    struct cudaPos srcPos;
    struct cudaPitchedPtr srcPtr;
    int srcDevice;

    cudaArray_t dstArray;
    struct cudaPos dstPos;
    struct cudaPitchedPtr dstPtr;
    int dstDevice;

    struct cudaExtent extent;
};




struct cudaMemsetParams {
    void *dst;
    size_t pitch;
    unsigned int value;
    unsigned int elementSize;
    size_t width;
    size_t height;
};




enum cudaAccessProperty {
    cudaAccessPropertyNormal = 0,
    cudaAccessPropertyStreaming = 1,
    cudaAccessPropertyPersisting = 2
};
# 1320 "/usr/include/driver_types.h" 3 4
struct cudaAccessPolicyWindow {
    void *base_ptr;
    size_t num_bytes;
    float hitRatio;
    enum cudaAccessProperty hitProp;
    enum cudaAccessProperty missProp;
};
# 1338 "/usr/include/driver_types.h" 3 4
typedef void ( *cudaHostFn_t)(void *userData);




struct cudaHostNodeParams {
    cudaHostFn_t fn;
    void* userData;
};




enum cudaStreamCaptureStatus {
    cudaStreamCaptureStatusNone = 0,
    cudaStreamCaptureStatusActive = 1,
    cudaStreamCaptureStatusInvalidated = 2

};





enum cudaStreamCaptureMode {
    cudaStreamCaptureModeGlobal = 0,
    cudaStreamCaptureModeThreadLocal = 1,
    cudaStreamCaptureModeRelaxed = 2
};

enum cudaSynchronizationPolicy {
    cudaSyncPolicyAuto = 1,
    cudaSyncPolicySpin = 2,
    cudaSyncPolicyYield = 3,
    cudaSyncPolicyBlockingSync = 4
};




enum cudaClusterSchedulingPolicy {
    cudaClusterSchedulingPolicyDefault = 0,
    cudaClusterSchedulingPolicySpread = 1,
    cudaClusterSchedulingPolicyLoadBalancing = 2
};




enum cudaStreamUpdateCaptureDependenciesFlags {
    cudaStreamAddCaptureDependencies = 0x0,
    cudaStreamSetCaptureDependencies = 0x1
};




enum cudaUserObjectFlags {
    cudaUserObjectNoDestructorSync = 0x1
};




enum cudaUserObjectRetainFlags {
    cudaGraphUserObjectMove = 0x1
};




struct cudaGraphicsResource;




enum cudaGraphicsRegisterFlags
{
    cudaGraphicsRegisterFlagsNone = 0,
    cudaGraphicsRegisterFlagsReadOnly = 1,
    cudaGraphicsRegisterFlagsWriteDiscard = 2,
    cudaGraphicsRegisterFlagsSurfaceLoadStore = 4,
    cudaGraphicsRegisterFlagsTextureGather = 8
};




enum cudaGraphicsMapFlags
{
    cudaGraphicsMapFlagsNone = 0,
    cudaGraphicsMapFlagsReadOnly = 1,
    cudaGraphicsMapFlagsWriteDiscard = 2
};




enum cudaGraphicsCubeFace
{
    cudaGraphicsCubeFacePositiveX = 0x00,
    cudaGraphicsCubeFaceNegativeX = 0x01,
    cudaGraphicsCubeFacePositiveY = 0x02,
    cudaGraphicsCubeFaceNegativeY = 0x03,
    cudaGraphicsCubeFacePositiveZ = 0x04,
    cudaGraphicsCubeFaceNegativeZ = 0x05
};




enum cudaResourceType
{
    cudaResourceTypeArray = 0x00,
    cudaResourceTypeMipmappedArray = 0x01,
    cudaResourceTypeLinear = 0x02,
    cudaResourceTypePitch2D = 0x03
};




enum cudaResourceViewFormat
{
    cudaResViewFormatNone = 0x00,
    cudaResViewFormatUnsignedChar1 = 0x01,
    cudaResViewFormatUnsignedChar2 = 0x02,
    cudaResViewFormatUnsignedChar4 = 0x03,
    cudaResViewFormatSignedChar1 = 0x04,
    cudaResViewFormatSignedChar2 = 0x05,
    cudaResViewFormatSignedChar4 = 0x06,
    cudaResViewFormatUnsignedShort1 = 0x07,
    cudaResViewFormatUnsignedShort2 = 0x08,
    cudaResViewFormatUnsignedShort4 = 0x09,
    cudaResViewFormatSignedShort1 = 0x0a,
    cudaResViewFormatSignedShort2 = 0x0b,
    cudaResViewFormatSignedShort4 = 0x0c,
    cudaResViewFormatUnsignedInt1 = 0x0d,
    cudaResViewFormatUnsignedInt2 = 0x0e,
    cudaResViewFormatUnsignedInt4 = 0x0f,
    cudaResViewFormatSignedInt1 = 0x10,
    cudaResViewFormatSignedInt2 = 0x11,
    cudaResViewFormatSignedInt4 = 0x12,
    cudaResViewFormatHalf1 = 0x13,
    cudaResViewFormatHalf2 = 0x14,
    cudaResViewFormatHalf4 = 0x15,
    cudaResViewFormatFloat1 = 0x16,
    cudaResViewFormatFloat2 = 0x17,
    cudaResViewFormatFloat4 = 0x18,
    cudaResViewFormatUnsignedBlockCompressed1 = 0x19,
    cudaResViewFormatUnsignedBlockCompressed2 = 0x1a,
    cudaResViewFormatUnsignedBlockCompressed3 = 0x1b,
    cudaResViewFormatUnsignedBlockCompressed4 = 0x1c,
    cudaResViewFormatSignedBlockCompressed4 = 0x1d,
    cudaResViewFormatUnsignedBlockCompressed5 = 0x1e,
    cudaResViewFormatSignedBlockCompressed5 = 0x1f,
    cudaResViewFormatUnsignedBlockCompressed6H = 0x20,
    cudaResViewFormatSignedBlockCompressed6H = 0x21,
    cudaResViewFormatUnsignedBlockCompressed7 = 0x22
};




struct cudaResourceDesc {
    enum cudaResourceType resType;

    union {
        struct {
            cudaArray_t array;
        } array;
        struct {
            cudaMipmappedArray_t mipmap;
        } mipmap;
        struct {
            void *devPtr;
            struct cudaChannelFormatDesc desc;
            size_t sizeInBytes;
        } linear;
        struct {
            void *devPtr;
            struct cudaChannelFormatDesc desc;
            size_t width;
            size_t height;
            size_t pitchInBytes;
        } pitch2D;
    } res;
};




struct cudaResourceViewDesc
{
    enum cudaResourceViewFormat format;
    size_t width;
    size_t height;
    size_t depth;
    unsigned int firstMipmapLevel;
    unsigned int lastMipmapLevel;
    unsigned int firstLayer;
    unsigned int lastLayer;
};




struct cudaPointerAttributes
{




    enum cudaMemoryType type;
# 1562 "/usr/include/driver_types.h" 3 4
    int device;





    void *devicePointer;
# 1577 "/usr/include/driver_types.h" 3 4
    void *hostPointer;
};




struct cudaFuncAttributes
{





   size_t sharedSizeBytes;





   size_t constSizeBytes;




   size_t localSizeBytes;






   int maxThreadsPerBlock;




   int numRegs;






   int ptxVersion;






   int binaryVersion;





   int cacheModeCA;






   int maxDynamicSharedSizeBytes;
# 1649 "/usr/include/driver_types.h" 3 4
   int preferredShmemCarveout;





   int clusterDimMustBeSet;
# 1666 "/usr/include/driver_types.h" 3 4
   int requiredClusterWidth;
   int requiredClusterHeight;
   int requiredClusterDepth;





   int clusterSchedulingPolicyPreference;
# 1696 "/usr/include/driver_types.h" 3 4
   int nonPortableClusterSizeAllowed;




   int reserved[16];
};




enum cudaFuncAttribute
{
    cudaFuncAttributeMaxDynamicSharedMemorySize = 8,
    cudaFuncAttributePreferredSharedMemoryCarveout = 9,
    cudaFuncAttributeClusterDimMustBeSet = 10,
    cudaFuncAttributeRequiredClusterWidth = 11,
    cudaFuncAttributeRequiredClusterHeight = 12,
    cudaFuncAttributeRequiredClusterDepth = 13,
    cudaFuncAttributeNonPortableClusterSizeAllowed = 14,
    cudaFuncAttributeClusterSchedulingPolicyPreference = 15,
    cudaFuncAttributeMax
};




enum cudaFuncCache
{
    cudaFuncCachePreferNone = 0,
    cudaFuncCachePreferShared = 1,
    cudaFuncCachePreferL1 = 2,
    cudaFuncCachePreferEqual = 3
};





enum cudaSharedMemConfig
{
    cudaSharedMemBankSizeDefault = 0,
    cudaSharedMemBankSizeFourByte = 1,
    cudaSharedMemBankSizeEightByte = 2
};




enum cudaSharedCarveout {
    cudaSharedmemCarveoutDefault = -1,
    cudaSharedmemCarveoutMaxShared = 100,
    cudaSharedmemCarveoutMaxL1 = 0
};




enum cudaComputeMode
{
    cudaComputeModeDefault = 0,
    cudaComputeModeExclusive = 1,
    cudaComputeModeProhibited = 2,
    cudaComputeModeExclusiveProcess = 3
};




enum cudaLimit
{
    cudaLimitStackSize = 0x00,
    cudaLimitPrintfFifoSize = 0x01,
    cudaLimitMallocHeapSize = 0x02,
    cudaLimitDevRuntimeSyncDepth = 0x03,
    cudaLimitDevRuntimePendingLaunchCount = 0x04,
    cudaLimitMaxL2FetchGranularity = 0x05,
    cudaLimitPersistingL2CacheSize = 0x06
};




enum cudaMemoryAdvise
{
    cudaMemAdviseSetReadMostly = 1,
    cudaMemAdviseUnsetReadMostly = 2,
    cudaMemAdviseSetPreferredLocation = 3,
    cudaMemAdviseUnsetPreferredLocation = 4,
    cudaMemAdviseSetAccessedBy = 5,
    cudaMemAdviseUnsetAccessedBy = 6
};




enum cudaMemRangeAttribute
{
    cudaMemRangeAttributeReadMostly = 1,
    cudaMemRangeAttributePreferredLocation = 2,
    cudaMemRangeAttributeAccessedBy = 3,
    cudaMemRangeAttributeLastPrefetchLocation = 4
};




enum cudaFlushGPUDirectRDMAWritesOptions {
    cudaFlushGPUDirectRDMAWritesOptionHost = 1<<0,
    cudaFlushGPUDirectRDMAWritesOptionMemOps = 1<<1
};




enum cudaGPUDirectRDMAWritesOrdering {
    cudaGPUDirectRDMAWritesOrderingNone = 0,
    cudaGPUDirectRDMAWritesOrderingOwner = 100,
    cudaGPUDirectRDMAWritesOrderingAllDevices = 200
};




enum cudaFlushGPUDirectRDMAWritesScope {
    cudaFlushGPUDirectRDMAWritesToOwner = 100,
    cudaFlushGPUDirectRDMAWritesToAllDevices = 200
};




enum cudaFlushGPUDirectRDMAWritesTarget {
    cudaFlushGPUDirectRDMAWritesTargetCurrentDevice
};





enum cudaDeviceAttr
{
    cudaDevAttrMaxThreadsPerBlock = 1,
    cudaDevAttrMaxBlockDimX = 2,
    cudaDevAttrMaxBlockDimY = 3,
    cudaDevAttrMaxBlockDimZ = 4,
    cudaDevAttrMaxGridDimX = 5,
    cudaDevAttrMaxGridDimY = 6,
    cudaDevAttrMaxGridDimZ = 7,
    cudaDevAttrMaxSharedMemoryPerBlock = 8,
    cudaDevAttrTotalConstantMemory = 9,
    cudaDevAttrWarpSize = 10,
    cudaDevAttrMaxPitch = 11,
    cudaDevAttrMaxRegistersPerBlock = 12,
    cudaDevAttrClockRate = 13,
    cudaDevAttrTextureAlignment = 14,
    cudaDevAttrGpuOverlap = 15,
    cudaDevAttrMultiProcessorCount = 16,
    cudaDevAttrKernelExecTimeout = 17,
    cudaDevAttrIntegrated = 18,
    cudaDevAttrCanMapHostMemory = 19,
    cudaDevAttrComputeMode = 20,
    cudaDevAttrMaxTexture1DWidth = 21,
    cudaDevAttrMaxTexture2DWidth = 22,
    cudaDevAttrMaxTexture2DHeight = 23,
    cudaDevAttrMaxTexture3DWidth = 24,
    cudaDevAttrMaxTexture3DHeight = 25,
    cudaDevAttrMaxTexture3DDepth = 26,
    cudaDevAttrMaxTexture2DLayeredWidth = 27,
    cudaDevAttrMaxTexture2DLayeredHeight = 28,
    cudaDevAttrMaxTexture2DLayeredLayers = 29,
    cudaDevAttrSurfaceAlignment = 30,
    cudaDevAttrConcurrentKernels = 31,
    cudaDevAttrEccEnabled = 32,
    cudaDevAttrPciBusId = 33,
    cudaDevAttrPciDeviceId = 34,
    cudaDevAttrTccDriver = 35,
    cudaDevAttrMemoryClockRate = 36,
    cudaDevAttrGlobalMemoryBusWidth = 37,
    cudaDevAttrL2CacheSize = 38,
    cudaDevAttrMaxThreadsPerMultiProcessor = 39,
    cudaDevAttrAsyncEngineCount = 40,
    cudaDevAttrUnifiedAddressing = 41,
    cudaDevAttrMaxTexture1DLayeredWidth = 42,
    cudaDevAttrMaxTexture1DLayeredLayers = 43,
    cudaDevAttrMaxTexture2DGatherWidth = 45,
    cudaDevAttrMaxTexture2DGatherHeight = 46,
    cudaDevAttrMaxTexture3DWidthAlt = 47,
    cudaDevAttrMaxTexture3DHeightAlt = 48,
    cudaDevAttrMaxTexture3DDepthAlt = 49,
    cudaDevAttrPciDomainId = 50,
    cudaDevAttrTexturePitchAlignment = 51,
    cudaDevAttrMaxTextureCubemapWidth = 52,
    cudaDevAttrMaxTextureCubemapLayeredWidth = 53,
    cudaDevAttrMaxTextureCubemapLayeredLayers = 54,
    cudaDevAttrMaxSurface1DWidth = 55,
    cudaDevAttrMaxSurface2DWidth = 56,
    cudaDevAttrMaxSurface2DHeight = 57,
    cudaDevAttrMaxSurface3DWidth = 58,
    cudaDevAttrMaxSurface3DHeight = 59,
    cudaDevAttrMaxSurface3DDepth = 60,
    cudaDevAttrMaxSurface1DLayeredWidth = 61,
    cudaDevAttrMaxSurface1DLayeredLayers = 62,
    cudaDevAttrMaxSurface2DLayeredWidth = 63,
    cudaDevAttrMaxSurface2DLayeredHeight = 64,
    cudaDevAttrMaxSurface2DLayeredLayers = 65,
    cudaDevAttrMaxSurfaceCubemapWidth = 66,
    cudaDevAttrMaxSurfaceCubemapLayeredWidth = 67,
    cudaDevAttrMaxSurfaceCubemapLayeredLayers = 68,
    cudaDevAttrMaxTexture1DLinearWidth = 69,
    cudaDevAttrMaxTexture2DLinearWidth = 70,
    cudaDevAttrMaxTexture2DLinearHeight = 71,
    cudaDevAttrMaxTexture2DLinearPitch = 72,
    cudaDevAttrMaxTexture2DMipmappedWidth = 73,
    cudaDevAttrMaxTexture2DMipmappedHeight = 74,
    cudaDevAttrComputeCapabilityMajor = 75,
    cudaDevAttrComputeCapabilityMinor = 76,
    cudaDevAttrMaxTexture1DMipmappedWidth = 77,
    cudaDevAttrStreamPrioritiesSupported = 78,
    cudaDevAttrGlobalL1CacheSupported = 79,
    cudaDevAttrLocalL1CacheSupported = 80,
    cudaDevAttrMaxSharedMemoryPerMultiprocessor = 81,
    cudaDevAttrMaxRegistersPerMultiprocessor = 82,
    cudaDevAttrManagedMemory = 83,
    cudaDevAttrIsMultiGpuBoard = 84,
    cudaDevAttrMultiGpuBoardGroupID = 85,
    cudaDevAttrHostNativeAtomicSupported = 86,
    cudaDevAttrSingleToDoublePrecisionPerfRatio = 87,
    cudaDevAttrPageableMemoryAccess = 88,
    cudaDevAttrConcurrentManagedAccess = 89,
    cudaDevAttrComputePreemptionSupported = 90,
    cudaDevAttrCanUseHostPointerForRegisteredMem = 91,
    cudaDevAttrReserved92 = 92,
    cudaDevAttrReserved93 = 93,
    cudaDevAttrReserved94 = 94,
    cudaDevAttrCooperativeLaunch = 95,
    cudaDevAttrCooperativeMultiDeviceLaunch = 96,
    cudaDevAttrMaxSharedMemoryPerBlockOptin = 97,
    cudaDevAttrCanFlushRemoteWrites = 98,
    cudaDevAttrHostRegisterSupported = 99,
    cudaDevAttrPageableMemoryAccessUsesHostPageTables = 100,
    cudaDevAttrDirectManagedMemAccessFromHost = 101,
    cudaDevAttrMaxBlocksPerMultiprocessor = 106,
    cudaDevAttrMaxPersistingL2CacheSize = 108,
    cudaDevAttrMaxAccessPolicyWindowSize = 109,
    cudaDevAttrReservedSharedMemoryPerBlock = 111,
    cudaDevAttrSparseCudaArraySupported = 112,
    cudaDevAttrHostRegisterReadOnlySupported = 113,
    cudaDevAttrTimelineSemaphoreInteropSupported = 114,
    cudaDevAttrMaxTimelineSemaphoreInteropSupported = 114,
    cudaDevAttrMemoryPoolsSupported = 115,
    cudaDevAttrGPUDirectRDMASupported = 116,
    cudaDevAttrGPUDirectRDMAFlushWritesOptions = 117,
    cudaDevAttrGPUDirectRDMAWritesOrdering = 118,
    cudaDevAttrMemoryPoolSupportedHandleTypes = 119,
    cudaDevAttrClusterLaunch = 120,
    cudaDevAttrDeferredMappingCudaArraySupported = 121,
    cudaDevAttrReserved122 = 122,
    cudaDevAttrReserved123 = 123,
    cudaDevAttrReserved124 = 124,
    cudaDevAttrIpcEventSupport = 125,
    cudaDevAttrMemSyncDomainCount = 126,
    cudaDevAttrMax
};




enum cudaMemPoolAttr
{
# 1974 "/usr/include/driver_types.h" 3 4
    cudaMemPoolReuseFollowEventDependencies = 0x1,






    cudaMemPoolReuseAllowOpportunistic = 0x2,







    cudaMemPoolReuseAllowInternalDependencies = 0x3,
# 2000 "/usr/include/driver_types.h" 3 4
    cudaMemPoolAttrReleaseThreshold = 0x4,





    cudaMemPoolAttrReservedMemCurrent = 0x5,






    cudaMemPoolAttrReservedMemHigh = 0x6,





    cudaMemPoolAttrUsedMemCurrent = 0x7,






    cudaMemPoolAttrUsedMemHigh = 0x8
};




enum cudaMemLocationType {
    cudaMemLocationTypeInvalid = 0,
    cudaMemLocationTypeDevice = 1
};






struct cudaMemLocation {
    enum cudaMemLocationType type;
    int id;
};




enum cudaMemAccessFlags {
    cudaMemAccessFlagsProtNone = 0,
    cudaMemAccessFlagsProtRead = 1,
    cudaMemAccessFlagsProtReadWrite = 3
};




struct cudaMemAccessDesc {
    struct cudaMemLocation location;
    enum cudaMemAccessFlags flags;
};




enum cudaMemAllocationType {
    cudaMemAllocationTypeInvalid = 0x0,



    cudaMemAllocationTypePinned = 0x1,
    cudaMemAllocationTypeMax = 0x7FFFFFFF
};




enum cudaMemAllocationHandleType {
    cudaMemHandleTypeNone = 0x0,
    cudaMemHandleTypePosixFileDescriptor = 0x1,
    cudaMemHandleTypeWin32 = 0x2,
    cudaMemHandleTypeWin32Kmt = 0x4
};




struct cudaMemPoolProps {
    enum cudaMemAllocationType allocType;
    enum cudaMemAllocationHandleType handleTypes;
    struct cudaMemLocation location;






    void *win32SecurityAttributes;
    unsigned char reserved[64];
};




struct cudaMemPoolPtrExportData {
    unsigned char reserved[64];
};




struct cudaMemAllocNodeParams {




    struct cudaMemPoolProps poolProps;
    const struct cudaMemAccessDesc *accessDescs;
    size_t accessDescCount;
    size_t bytesize;
    void *dptr;
};




enum cudaGraphMemAttributeType {




    cudaGraphMemAttrUsedMemCurrent = 0x0,






    cudaGraphMemAttrUsedMemHigh = 0x1,






    cudaGraphMemAttrReservedMemCurrent = 0x2,






    cudaGraphMemAttrReservedMemHigh = 0x3
};





enum cudaDeviceP2PAttr {
    cudaDevP2PAttrPerformanceRank = 1,
    cudaDevP2PAttrAccessSupported = 2,
    cudaDevP2PAttrNativeAtomicSupported = 3,
    cudaDevP2PAttrCudaArrayAccessSupported = 4
};






struct CUuuid_st {
    char bytes[16];
};
typedef struct CUuuid_st CUuuid;

typedef struct CUuuid_st cudaUUID_t;




struct cudaDeviceProp
{
    char name[256];
    cudaUUID_t uuid;
    char luid[8];
    unsigned int luidDeviceNodeMask;
    size_t totalGlobalMem;
    size_t sharedMemPerBlock;
    int regsPerBlock;
    int warpSize;
    size_t memPitch;
    int maxThreadsPerBlock;
    int maxThreadsDim[3];
    int maxGridSize[3];
    int clockRate;
    size_t totalConstMem;
    int major;
    int minor;
    size_t textureAlignment;
    size_t texturePitchAlignment;
    int deviceOverlap;
    int multiProcessorCount;
    int kernelExecTimeoutEnabled;
    int integrated;
    int canMapHostMemory;
    int computeMode;
    int maxTexture1D;
    int maxTexture1DMipmap;
    int maxTexture1DLinear;
    int maxTexture2D[2];
    int maxTexture2DMipmap[2];
    int maxTexture2DLinear[3];
    int maxTexture2DGather[2];
    int maxTexture3D[3];
    int maxTexture3DAlt[3];
    int maxTextureCubemap;
    int maxTexture1DLayered[2];
    int maxTexture2DLayered[3];
    int maxTextureCubemapLayered[2];
    int maxSurface1D;
    int maxSurface2D[2];
    int maxSurface3D[3];
    int maxSurface1DLayered[2];
    int maxSurface2DLayered[3];
    int maxSurfaceCubemap;
    int maxSurfaceCubemapLayered[2];
    size_t surfaceAlignment;
    int concurrentKernels;
    int ECCEnabled;
    int pciBusID;
    int pciDeviceID;
    int pciDomainID;
    int tccDriver;
    int asyncEngineCount;
    int unifiedAddressing;
    int memoryClockRate;
    int memoryBusWidth;
    int l2CacheSize;
    int persistingL2CacheMaxSize;
    int maxThreadsPerMultiProcessor;
    int streamPrioritiesSupported;
    int globalL1CacheSupported;
    int localL1CacheSupported;
    size_t sharedMemPerMultiprocessor;
    int regsPerMultiprocessor;
    int managedMemory;
    int isMultiGpuBoard;
    int multiGpuBoardGroupID;
    int hostNativeAtomicSupported;
    int singleToDoublePrecisionPerfRatio;
    int pageableMemoryAccess;
    int concurrentManagedAccess;
    int computePreemptionSupported;
    int canUseHostPointerForRegisteredMem;
    int cooperativeLaunch;
    int cooperativeMultiDeviceLaunch;
    size_t sharedMemPerBlockOptin;
    int pageableMemoryAccessUsesHostPageTables;
    int directManagedMemAccessFromHost;
    int maxBlocksPerMultiProcessor;
    int accessPolicyMaxWindowSize;
    size_t reservedSharedMemPerBlock;
    int hostRegisterSupported;
    int sparseCudaArraySupported;
    int hostRegisterReadOnlySupported;
    int timelineSemaphoreInteropSupported;
    int memoryPoolsSupported;
    int gpuDirectRDMASupported;
    unsigned int gpuDirectRDMAFlushWritesOptions;
    int gpuDirectRDMAWritesOrdering;
    unsigned int memoryPoolSupportedHandleTypes;
    int deferredMappingCudaArraySupported;
    int ipcEventSupported;
    int clusterLaunch;
    int unifiedFunctionPointers;
    int reserved[63];
};
# 2289 "/usr/include/driver_types.h" 3 4
typedef struct cudaIpcEventHandle_st
{
    char reserved[64];
}cudaIpcEventHandle_t;




typedef struct cudaIpcMemHandle_st
{
    char reserved[64];
}cudaIpcMemHandle_t;




enum cudaExternalMemoryHandleType {



    cudaExternalMemoryHandleTypeOpaqueFd = 1,



    cudaExternalMemoryHandleTypeOpaqueWin32 = 2,



    cudaExternalMemoryHandleTypeOpaqueWin32Kmt = 3,



    cudaExternalMemoryHandleTypeD3D12Heap = 4,



    cudaExternalMemoryHandleTypeD3D12Resource = 5,



    cudaExternalMemoryHandleTypeD3D11Resource = 6,



    cudaExternalMemoryHandleTypeD3D11ResourceKmt = 7,



    cudaExternalMemoryHandleTypeNvSciBuf = 8
};
# 2380 "/usr/include/driver_types.h" 3 4
struct cudaExternalMemoryHandleDesc {



    enum cudaExternalMemoryHandleType type;
    union {





        int fd;
# 2407 "/usr/include/driver_types.h" 3 4
        struct {



            void *handle;




            const void *name;
        } win32;




        const void *nvSciBufObject;
    } handle;



    unsigned long long size;



    unsigned int flags;
};




struct cudaExternalMemoryBufferDesc {



    unsigned long long offset;



    unsigned long long size;



    unsigned int flags;
};




struct cudaExternalMemoryMipmappedArrayDesc {




    unsigned long long offset;



    struct cudaChannelFormatDesc formatDesc;



    struct cudaExtent extent;




    unsigned int flags;



    unsigned int numLevels;
};




enum cudaExternalSemaphoreHandleType {



    cudaExternalSemaphoreHandleTypeOpaqueFd = 1,



    cudaExternalSemaphoreHandleTypeOpaqueWin32 = 2,



    cudaExternalSemaphoreHandleTypeOpaqueWin32Kmt = 3,



    cudaExternalSemaphoreHandleTypeD3D12Fence = 4,



    cudaExternalSemaphoreHandleTypeD3D11Fence = 5,



     cudaExternalSemaphoreHandleTypeNvSciSync = 6,



    cudaExternalSemaphoreHandleTypeKeyedMutex = 7,



    cudaExternalSemaphoreHandleTypeKeyedMutexKmt = 8,



    cudaExternalSemaphoreHandleTypeTimelineSemaphoreFd = 9,



    cudaExternalSemaphoreHandleTypeTimelineSemaphoreWin32 = 10
};




struct cudaExternalSemaphoreHandleDesc {



    enum cudaExternalSemaphoreHandleType type;
    union {






        int fd;
# 2557 "/usr/include/driver_types.h" 3 4
        struct {



            void *handle;




            const void *name;
        } win32;



        const void* nvSciSyncObj;
    } handle;



    unsigned int flags;
};




struct cudaExternalSemaphoreSignalParams_v1 {
    struct {



        struct {



            unsigned long long value;
        } fence;
        union {




            void *fence;
            unsigned long long reserved;
        } nvSciSync;



        struct {



            unsigned long long key;
        } keyedMutex;
    } params;
# 2621 "/usr/include/driver_types.h" 3 4
    unsigned int flags;
};




struct cudaExternalSemaphoreWaitParams_v1 {
    struct {



        struct {



            unsigned long long value;
        } fence;
        union {




            void *fence;
            unsigned long long reserved;
        } nvSciSync;



        struct {



            unsigned long long key;



            unsigned int timeoutMs;
        } keyedMutex;
    } params;
# 2670 "/usr/include/driver_types.h" 3 4
    unsigned int flags;
};




struct cudaExternalSemaphoreSignalParams{
    struct {



        struct {



            unsigned long long value;
        } fence;
        union {




            void *fence;
            unsigned long long reserved;
        } nvSciSync;



        struct {



            unsigned long long key;
        } keyedMutex;
        unsigned int reserved[12];
    } params;
# 2716 "/usr/include/driver_types.h" 3 4
    unsigned int flags;
    unsigned int reserved[16];
};




struct cudaExternalSemaphoreWaitParams {
    struct {



        struct {



            unsigned long long value;
        } fence;
        union {




            void *fence;
            unsigned long long reserved;
        } nvSciSync;



        struct {



            unsigned long long key;



            unsigned int timeoutMs;
        } keyedMutex;
        unsigned int reserved[10];
    } params;
# 2767 "/usr/include/driver_types.h" 3 4
    unsigned int flags;
    unsigned int reserved[16];
};
# 2780 "/usr/include/driver_types.h" 3 4
typedef enum cudaError cudaError_t;




typedef struct CUstream_st *cudaStream_t;




typedef struct CUevent_st *cudaEvent_t;




typedef struct cudaGraphicsResource *cudaGraphicsResource_t;




typedef struct CUexternalMemory_st *cudaExternalMemory_t;




typedef struct CUexternalSemaphore_st *cudaExternalSemaphore_t;




typedef struct CUgraph_st *cudaGraph_t;




typedef struct CUgraphNode_st *cudaGraphNode_t;




typedef struct CUuserObject_st *cudaUserObject_t;




typedef struct CUfunc_st *cudaFunction_t;




typedef struct CUmemPoolHandle_st *cudaMemPool_t;




enum cudaCGScope {
    cudaCGScopeInvalid = 0,
    cudaCGScopeGrid = 1,
    cudaCGScopeMultiGrid = 2
};




struct cudaLaunchParams
{
    void *func;
    dim3 gridDim;
    dim3 blockDim;
    void **args;
    size_t sharedMem;
    cudaStream_t stream;
};




struct cudaKernelNodeParams {
    void* func;
    dim3 gridDim;
    dim3 blockDim;
    unsigned int sharedMemBytes;
    void **kernelParams;
    void **extra;
};




struct cudaExternalSemaphoreSignalNodeParams {
    cudaExternalSemaphore_t* extSemArray;
    const struct cudaExternalSemaphoreSignalParams* paramsArray;
    unsigned int numExtSems;
};




struct cudaExternalSemaphoreWaitNodeParams {
    cudaExternalSemaphore_t* extSemArray;
    const struct cudaExternalSemaphoreWaitParams* paramsArray;
    unsigned int numExtSems;
};




enum cudaGraphNodeType {
    cudaGraphNodeTypeKernel = 0x00,
    cudaGraphNodeTypeMemcpy = 0x01,
    cudaGraphNodeTypeMemset = 0x02,
    cudaGraphNodeTypeHost = 0x03,
    cudaGraphNodeTypeGraph = 0x04,
    cudaGraphNodeTypeEmpty = 0x05,
    cudaGraphNodeTypeWaitEvent = 0x06,
    cudaGraphNodeTypeEventRecord = 0x07,
    cudaGraphNodeTypeExtSemaphoreSignal = 0x08,
    cudaGraphNodeTypeExtSemaphoreWait = 0x09,
    cudaGraphNodeTypeMemAlloc = 0x0a,
    cudaGraphNodeTypeMemFree = 0x0b,
    cudaGraphNodeTypeCount
};




typedef struct CUgraphExec_st* cudaGraphExec_t;




enum cudaGraphExecUpdateResult {
    cudaGraphExecUpdateSuccess = 0x0,
    cudaGraphExecUpdateError = 0x1,
    cudaGraphExecUpdateErrorTopologyChanged = 0x2,
    cudaGraphExecUpdateErrorNodeTypeChanged = 0x3,
    cudaGraphExecUpdateErrorFunctionChanged = 0x4,
    cudaGraphExecUpdateErrorParametersChanged = 0x5,
    cudaGraphExecUpdateErrorNotSupported = 0x6,
    cudaGraphExecUpdateErrorUnsupportedFunctionChange = 0x7,
    cudaGraphExecUpdateErrorAttributesChanged = 0x8
};




typedef enum cudaGraphInstantiateResult {
    cudaGraphInstantiateSuccess = 0,
    cudaGraphInstantiateError = 1,
    cudaGraphInstantiateInvalidStructure = 2,
    cudaGraphInstantiateNodeOperationNotSupported = 3,
    cudaGraphInstantiateMultipleDevicesNotSupported = 4
} cudaGraphInstantiateResult;




typedef struct cudaGraphInstantiateParams_st
{
    unsigned long long flags;
    cudaStream_t uploadStream;
    cudaGraphNode_t errNode_out;
    cudaGraphInstantiateResult result_out;
} cudaGraphInstantiateParams;




typedef struct cudaGraphExecUpdateResultInfo_st {



    enum cudaGraphExecUpdateResult result;






    cudaGraphNode_t errorNode;




    cudaGraphNode_t errorFromNode;
} cudaGraphExecUpdateResultInfo;





enum cudaGetDriverEntryPointFlags {
    cudaEnableDefault = 0x0,
    cudaEnableLegacyStream = 0x1,
    cudaEnablePerThreadDefaultStream = 0x2
};




enum cudaDriverEntryPointQueryResult {
    cudaDriverEntryPointSuccess = 0,
    cudaDriverEntryPointSymbolNotFound = 1,
    cudaDriverEntryPointVersionNotSufficent = 2
};




enum cudaGraphDebugDotFlags {
    cudaGraphDebugDotFlagsVerbose = 1<<0,
    cudaGraphDebugDotFlagsKernelNodeParams = 1<<2,
    cudaGraphDebugDotFlagsMemcpyNodeParams = 1<<3,
    cudaGraphDebugDotFlagsMemsetNodeParams = 1<<4,
    cudaGraphDebugDotFlagsHostNodeParams = 1<<5,
    cudaGraphDebugDotFlagsEventNodeParams = 1<<6,
    cudaGraphDebugDotFlagsExtSemasSignalNodeParams = 1<<7,
    cudaGraphDebugDotFlagsExtSemasWaitNodeParams = 1<<8,
    cudaGraphDebugDotFlagsKernelNodeAttributes = 1<<9,
    cudaGraphDebugDotFlagsHandles = 1<<10
};




enum cudaGraphInstantiateFlags {
    cudaGraphInstantiateFlagAutoFreeOnLaunch = 1
  , cudaGraphInstantiateFlagUpload = 2
  , cudaGraphInstantiateFlagDeviceLaunch = 4
  , cudaGraphInstantiateFlagUseNodePriority = 8

};

typedef enum cudaLaunchMemSyncDomain {
    cudaLaunchMemSyncDomainDefault = 0,
    cudaLaunchMemSyncDomainRemote = 1
} cudaLaunchMemSyncDomain;

typedef struct cudaLaunchMemSyncDomainMap_st {
    unsigned char default_;
    unsigned char remote;
} cudaLaunchMemSyncDomainMap;




typedef enum cudaLaunchAttributeID {
    cudaLaunchAttributeIgnore = 0
  , cudaLaunchAttributeAccessPolicyWindow = 1
  , cudaLaunchAttributeCooperative = 2
  , cudaLaunchAttributeSynchronizationPolicy = 3
  , cudaLaunchAttributeClusterDimension = 4
  , cudaLaunchAttributeClusterSchedulingPolicyPreference = 5
  , cudaLaunchAttributeProgrammaticStreamSerialization = 6
# 3044 "/usr/include/driver_types.h" 3 4
  , cudaLaunchAttributeProgrammaticEvent = 7
# 3064 "/usr/include/driver_types.h" 3 4
  , cudaLaunchAttributePriority = 8
  , cudaLaunchAttributeMemSyncDomainMap = 9
  , cudaLaunchAttributeMemSyncDomain = 10
} cudaLaunchAttributeID;




typedef union cudaLaunchAttributeValue {
    char pad[64];
    struct cudaAccessPolicyWindow accessPolicyWindow;
    int cooperative;
    enum cudaSynchronizationPolicy syncPolicy;
    struct {
        unsigned int x;
        unsigned int y;
        unsigned int z;
    } clusterDim;
    enum cudaClusterSchedulingPolicy clusterSchedulingPolicyPreference;
    int programmaticStreamSerializationAllowed;
    struct {
        cudaEvent_t event;
        int flags;
        int triggerAtBlockStart;
    } programmaticEvent;
    int priority;
    cudaLaunchMemSyncDomainMap memSyncDomainMap;
    cudaLaunchMemSyncDomain memSyncDomain;
} cudaLaunchAttributeValue;




typedef struct cudaLaunchAttribute_st {
    cudaLaunchAttributeID id;
    char pad[8 - sizeof(cudaLaunchAttributeID)];
    cudaLaunchAttributeValue val;
} cudaLaunchAttribute;




typedef struct cudaLaunchConfig_st {
    dim3 gridDim;
    dim3 blockDim;
    size_t dynamicSmemBytes;
    cudaStream_t stream;
    cudaLaunchAttribute *attrs;
    unsigned int numAttrs;
} cudaLaunchConfig_t;
# 60 "/usr/include/builtin_types.h" 2 3 4


# 1 "/usr/include/surface_types.h" 1 3 4
# 84 "/usr/include/surface_types.h" 3 4
enum cudaSurfaceBoundaryMode
{
    cudaBoundaryModeZero = 0,
    cudaBoundaryModeClamp = 1,
    cudaBoundaryModeTrap = 2
};




enum cudaSurfaceFormatMode
{
    cudaFormatModeForced = 0,
    cudaFormatModeAuto = 1
};




typedef unsigned long long cudaSurfaceObject_t;
# 63 "/usr/include/builtin_types.h" 2 3 4
# 1 "/usr/include/texture_types.h" 1 3 4
# 84 "/usr/include/texture_types.h" 3 4
enum cudaTextureAddressMode
{
    cudaAddressModeWrap = 0,
    cudaAddressModeClamp = 1,
    cudaAddressModeMirror = 2,
    cudaAddressModeBorder = 3
};




enum cudaTextureFilterMode
{
    cudaFilterModePoint = 0,
    cudaFilterModeLinear = 1
};




enum cudaTextureReadMode
{
    cudaReadModeElementType = 0,
    cudaReadModeNormalizedFloat = 1
};




struct cudaTextureDesc
{



    enum cudaTextureAddressMode addressMode[3];



    enum cudaTextureFilterMode filterMode;



    enum cudaTextureReadMode readMode;



    int sRGB;



    float borderColor[4];



    int normalizedCoords;



    unsigned int maxAnisotropy;



    enum cudaTextureFilterMode mipmapFilterMode;



    float mipmapLevelBias;



    float minMipmapLevelClamp;



    float maxMipmapLevelClamp;



    int disableTrilinearOptimization;



    int seamlessCubemap;
};




typedef unsigned long long cudaTextureObject_t;
# 64 "/usr/include/builtin_types.h" 2 3 4
# 59 "/usr/include/crt/host_runtime.h" 2 3 4
# 1 "/usr/include/crt/storage_class.h" 1 3 4
# 60 "/usr/include/crt/host_runtime.h" 2 3 4
# 219 "/usr/lib/gcc/x86_64-linux-gnu/12/include/stddef.h" 2 3
# 435 "/usr/lib/gcc/x86_64-linux-gnu/12/include/stddef.h" 3
typedef
# 424 "/usr/lib/gcc/x86_64-linux-gnu/12/include/stddef.h" 3
struct {
# 425 "/usr/lib/gcc/x86_64-linux-gnu/12/include/stddef.h" 3
long long __max_align_ll __attribute((__aligned__(__alignof__(long long))));
# 426 "/usr/lib/gcc/x86_64-linux-gnu/12/include/stddef.h" 3
long double __max_align_ld __attribute((__aligned__(__alignof__(long double))));
# 435 "/usr/lib/gcc/x86_64-linux-gnu/12/include/stddef.h" 3
} max_align_t;
# 442 "/usr/lib/gcc/x86_64-linux-gnu/12/include/stddef.h" 3
typedef __decltype((nullptr)) nullptr_t;
# 202 "/usr/include/driver_types.h" 3
# 1093 "/usr/include/driver_types.h" 3
# 1131 "/usr/include/driver_types.h" 3
# 1143 "/usr/include/driver_types.h" 3
typedef struct cudaArray *cudaArray_t;
# 1148 "/usr/include/driver_types.h" 3
typedef const cudaArray *cudaArray_const_t;
# 1150 "/usr/include/driver_types.h" 3
struct cudaArray;
# 1155 "/usr/include/driver_types.h" 3
typedef struct cudaMipmappedArray *cudaMipmappedArray_t;
# 1160 "/usr/include/driver_types.h" 3
typedef const cudaMipmappedArray *cudaMipmappedArray_const_t;
# 1162 "/usr/include/driver_types.h" 3
struct cudaMipmappedArray;
# 1172 "/usr/include/driver_types.h" 3
# 1187 "/usr/include/driver_types.h" 3
# 1196 "/usr/include/driver_types.h" 3
# 1207 "/usr/include/driver_types.h" 3
# 1221 "/usr/include/driver_types.h" 3
# 1234 "/usr/include/driver_types.h" 3
# 1246 "/usr/include/driver_types.h" 3
# 1256 "/usr/include/driver_types.h" 3
# 1273 "/usr/include/driver_types.h" 3
# 1291 "/usr/include/driver_types.h" 3
# 1303 "/usr/include/driver_types.h" 3
# 1320 "/usr/include/driver_types.h" 3
# 1338 "/usr/include/driver_types.h" 3
typedef void (*cudaHostFn_t)(void * userData);
# 1343 "/usr/include/driver_types.h" 3
# 1351 "/usr/include/driver_types.h" 3
# 1362 "/usr/include/driver_types.h" 3
# 1368 "/usr/include/driver_types.h" 3
# 1378 "/usr/include/driver_types.h" 3
# 1387 "/usr/include/driver_types.h" 3
# 1395 "/usr/include/driver_types.h" 3
# 1402 "/usr/include/driver_types.h" 3
# 1409 "/usr/include/driver_types.h" 3
struct cudaGraphicsResource;
# 1414 "/usr/include/driver_types.h" 3
# 1426 "/usr/include/driver_types.h" 3
# 1436 "/usr/include/driver_types.h" 3
# 1449 "/usr/include/driver_types.h" 3
# 1460 "/usr/include/driver_types.h" 3
# 1502 "/usr/include/driver_types.h" 3
# 1530 "/usr/include/driver_types.h" 3
# 1545 "/usr/include/driver_types.h" 3
# 1583 "/usr/include/driver_types.h" 3
# 1707 "/usr/include/driver_types.h" 3
# 1723 "/usr/include/driver_types.h" 3
# 1735 "/usr/include/driver_types.h" 3
# 1745 "/usr/include/driver_types.h" 3
# 1754 "/usr/include/driver_types.h" 3
# 1765 "/usr/include/driver_types.h" 3
# 1779 "/usr/include/driver_types.h" 3
# 1792 "/usr/include/driver_types.h" 3
# 1803 "/usr/include/driver_types.h" 3
# 1811 "/usr/include/driver_types.h" 3
# 1820 "/usr/include/driver_types.h" 3
# 1828 "/usr/include/driver_types.h" 3
# 1836 "/usr/include/driver_types.h" 3
# 1964 "/usr/include/driver_types.h" 3
# 2032 "/usr/include/driver_types.h" 3
# 2042 "/usr/include/driver_types.h" 3
# 2050 "/usr/include/driver_types.h" 3
# 2059 "/usr/include/driver_types.h" 3
# 2067 "/usr/include/driver_types.h" 3
# 2079 "/usr/include/driver_types.h" 3
# 2089 "/usr/include/driver_types.h" 3
# 2106 "/usr/include/driver_types.h" 3
# 2113 "/usr/include/driver_types.h" 3
# 2128 "/usr/include/driver_types.h" 3
# 2161 "/usr/include/driver_types.h" 3
# 2173 "/usr/include/driver_types.h" 3
# 2176 "/usr/include/driver_types.h" 3
# 2178 "/usr/include/driver_types.h" 3
# 2183 "/usr/include/driver_types.h" 3
# 2292 "/usr/include/driver_types.h" 3
# 2300 "/usr/include/driver_types.h" 3
# 2305 "/usr/include/driver_types.h" 3
# 2380 "/usr/include/driver_types.h" 3
# 2437 "/usr/include/driver_types.h" 3
# 2455 "/usr/include/driver_types.h" 3
# 2483 "/usr/include/driver_types.h" 3
# 2529 "/usr/include/driver_types.h" 3
# 2582 "/usr/include/driver_types.h" 3
# 2627 "/usr/include/driver_types.h" 3
# 2676 "/usr/include/driver_types.h" 3
# 2723 "/usr/include/driver_types.h" 3
# 2780 "/usr/include/driver_types.h" 3
# 2785 "/usr/include/driver_types.h" 3
# 2790 "/usr/include/driver_types.h" 3
# 2795 "/usr/include/driver_types.h" 3
# 2800 "/usr/include/driver_types.h" 3
# 2805 "/usr/include/driver_types.h" 3
# 2810 "/usr/include/driver_types.h" 3
# 2815 "/usr/include/driver_types.h" 3
# 2820 "/usr/include/driver_types.h" 3
# 2825 "/usr/include/driver_types.h" 3
# 2830 "/usr/include/driver_types.h" 3
# 2835 "/usr/include/driver_types.h" 3
# 2844 "/usr/include/driver_types.h" 3
# 2857 "/usr/include/driver_types.h" 3
# 2869 "/usr/include/driver_types.h" 3
# 2878 "/usr/include/driver_types.h" 3
# 2887 "/usr/include/driver_types.h" 3
# 2906 "/usr/include/driver_types.h" 3
typedef struct CUgraphExec_st *cudaGraphExec_t;
# 2911 "/usr/include/driver_types.h" 3
# 2932 "/usr/include/driver_types.h" 3
# 2943 "/usr/include/driver_types.h" 3
# 2965 "/usr/include/driver_types.h" 3
# 2971 "/usr/include/driver_types.h" 3
# 2980 "/usr/include/driver_types.h" 3
# 2989 "/usr/include/driver_types.h" 3
# 3005 "/usr/include/driver_types.h" 3
# 3016 "/usr/include/driver_types.h" 3
# 3021 "/usr/include/driver_types.h" 3
# 3067 "/usr/include/driver_types.h" 3
# 3092 "/usr/include/driver_types.h" 3
# 3101 "/usr/include/driver_types.h" 3
# 3113 "/usr/include/driver_types.h" 3
# 84 "/usr/include/surface_types.h" 3
# 94 "/usr/include/surface_types.h" 3
# 103 "/usr/include/surface_types.h" 3
# 84 "/usr/include/texture_types.h" 3
# 95 "/usr/include/texture_types.h" 3
# 104 "/usr/include/texture_types.h" 3
# 113 "/usr/include/texture_types.h" 3
# 172 "/usr/include/texture_types.h" 3
# 87 "/usr/include/library_types.h" 3
typedef
# 55 "/usr/include/library_types.h" 3
enum cudaDataType_t {
# 57 "/usr/include/library_types.h" 3
CUDA_R_16F = 2,
# 58 "/usr/include/library_types.h" 3
CUDA_C_16F = 6,
# 59 "/usr/include/library_types.h" 3
CUDA_R_16BF = 14,
# 60 "/usr/include/library_types.h" 3
CUDA_C_16BF,
# 61 "/usr/include/library_types.h" 3
CUDA_R_32F = 0,
# 62 "/usr/include/library_types.h" 3
CUDA_C_32F = 4,
# 63 "/usr/include/library_types.h" 3
CUDA_R_64F = 1,
# 64 "/usr/include/library_types.h" 3
CUDA_C_64F = 5,
# 65 "/usr/include/library_types.h" 3
CUDA_R_4I = 16,
# 66 "/usr/include/library_types.h" 3
CUDA_C_4I,
# 67 "/usr/include/library_types.h" 3
CUDA_R_4U,
# 68 "/usr/include/library_types.h" 3
CUDA_C_4U,
# 69 "/usr/include/library_types.h" 3
CUDA_R_8I = 3,
# 70 "/usr/include/library_types.h" 3
CUDA_C_8I = 7,
# 71 "/usr/include/library_types.h" 3
CUDA_R_8U,
# 72 "/usr/include/library_types.h" 3
CUDA_C_8U,
# 73 "/usr/include/library_types.h" 3
CUDA_R_16I = 20,
# 74 "/usr/include/library_types.h" 3
CUDA_C_16I,
# 75 "/usr/include/library_types.h" 3
CUDA_R_16U,
# 76 "/usr/include/library_types.h" 3
CUDA_C_16U,
# 77 "/usr/include/library_types.h" 3
CUDA_R_32I = 10,
# 78 "/usr/include/library_types.h" 3
CUDA_C_32I,
# 79 "/usr/include/library_types.h" 3
CUDA_R_32U,
# 80 "/usr/include/library_types.h" 3
CUDA_C_32U,
# 81 "/usr/include/library_types.h" 3
CUDA_R_64I = 24,
# 82 "/usr/include/library_types.h" 3
CUDA_C_64I,
# 83 "/usr/include/library_types.h" 3
CUDA_R_64U,
# 84 "/usr/include/library_types.h" 3
CUDA_C_64U,
# 85 "/usr/include/library_types.h" 3
CUDA_R_8F_E4M3,
# 86 "/usr/include/library_types.h" 3
CUDA_R_8F_E5M2
# 87 "/usr/include/library_types.h" 3
} cudaDataType;
# 95 "/usr/include/library_types.h" 3
typedef
# 90 "/usr/include/library_types.h" 3
enum libraryPropertyType_t {
# 92 "/usr/include/library_types.h" 3
MAJOR_VERSION,
# 93 "/usr/include/library_types.h" 3
MINOR_VERSION,
# 94 "/usr/include/library_types.h" 3
PATCH_LEVEL
# 95 "/usr/include/library_types.h" 3
} libraryPropertyType;
# 296 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
namespace std {
# 298 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
typedef unsigned long size_t;
# 299 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
typedef long ptrdiff_t;
# 302 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
typedef __decltype((nullptr)) nullptr_t;
# 305 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
#pragma GCC visibility push ( default )
# 308 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
__attribute((__noreturn__, __always_inline__)) inline void
# 309 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
__terminate() noexcept
# 310 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
{
# 311 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
void terminate() noexcept __attribute((__noreturn__));
# 312 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
terminate();
# 313 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
}
#pragma GCC visibility pop
}
# 329 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
namespace std {
# 331 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11"))) { }
# 332 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
}
# 333 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
namespace __gnu_cxx {
# 335 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
inline namespace __cxx11 __attribute((__abi_tag__("cxx11"))) { }
# 336 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
}
# 515 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
namespace std {
# 517 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
#pragma GCC visibility push ( default )
# 523 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
constexpr bool __is_constant_evaluated() noexcept
# 524 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
{
# 530 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
return __builtin_is_constant_evaluated();
# 534 "/usr/include/x86_64-linux-gnu/c++/12/bits/c++config.h" 3
}
#pragma GCC visibility pop
}
# 34 "/usr/include/stdlib.h" 3
extern "C" {
# 74 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3
typedef float __complex__ __cfloat128 __attribute((__mode__(__TC__)));
# 86 "/usr/include/x86_64-linux-gnu/bits/floatn.h" 3
typedef __float128 _Float128;
# 214 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
typedef float _Float32;
# 251 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
typedef double _Float64;
# 268 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
typedef double _Float32x;
# 285 "/usr/include/x86_64-linux-gnu/bits/floatn-common.h" 3
typedef long double _Float64x;
# 63 "/usr/include/stdlib.h" 3
typedef
# 60 "/usr/include/stdlib.h" 3
struct {
# 61 "/usr/include/stdlib.h" 3
int quot;
# 62 "/usr/include/stdlib.h" 3
int rem;
# 63 "/usr/include/stdlib.h" 3
} div_t;
# 71 "/usr/include/stdlib.h" 3
typedef
# 68 "/usr/include/stdlib.h" 3
struct {
# 69 "/usr/include/stdlib.h" 3
long quot;
# 70 "/usr/include/stdlib.h" 3
long rem;
# 71 "/usr/include/stdlib.h" 3
} ldiv_t;
# 81 "/usr/include/stdlib.h" 3
__extension__ typedef
# 78 "/usr/include/stdlib.h" 3
struct {
# 79 "/usr/include/stdlib.h" 3
long long quot;
# 80 "/usr/include/stdlib.h" 3
long long rem;
# 81 "/usr/include/stdlib.h" 3
} lldiv_t;
# 98 "/usr/include/stdlib.h" 3
extern size_t __ctype_get_mb_cur_max() noexcept(true);
# 102 "/usr/include/stdlib.h" 3
extern double atof(const char * __nptr) noexcept(true)
# 103 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 105 "/usr/include/stdlib.h" 3
extern int atoi(const char * __nptr) noexcept(true)
# 106 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 108 "/usr/include/stdlib.h" 3
extern long atol(const char * __nptr) noexcept(true)
# 109 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 113 "/usr/include/stdlib.h" 3
__extension__ extern long long atoll(const char * __nptr) noexcept(true)
# 114 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 118 "/usr/include/stdlib.h" 3
extern double strtod(const char *__restrict__ __nptr, char **__restrict__ __endptr) noexcept(true)
# 120 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 124 "/usr/include/stdlib.h" 3
extern float strtof(const char *__restrict__ __nptr, char **__restrict__ __endptr) noexcept(true)
# 125 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 127 "/usr/include/stdlib.h" 3
extern long double strtold(const char *__restrict__ __nptr, char **__restrict__ __endptr) noexcept(true)
# 129 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 141 "/usr/include/stdlib.h" 3
extern _Float32 strtof32(const char *__restrict__ __nptr, char **__restrict__ __endptr) noexcept(true)
# 143 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 147 "/usr/include/stdlib.h" 3
extern _Float64 strtof64(const char *__restrict__ __nptr, char **__restrict__ __endptr) noexcept(true)
# 149 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 153 "/usr/include/stdlib.h" 3
extern _Float128 strtof128(const char *__restrict__ __nptr, char **__restrict__ __endptr) noexcept(true)
# 155 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 159 "/usr/include/stdlib.h" 3
extern _Float32x strtof32x(const char *__restrict__ __nptr, char **__restrict__ __endptr) noexcept(true)
# 161 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 165 "/usr/include/stdlib.h" 3
extern _Float64x strtof64x(const char *__restrict__ __nptr, char **__restrict__ __endptr) noexcept(true)
# 167 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 177 "/usr/include/stdlib.h" 3
extern long strtol(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtol")
# 179 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 181 "/usr/include/stdlib.h" 3
extern unsigned long strtoul(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtoul")
# 183 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 188 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtoll")
# 190 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 193 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtouq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtoull")
# 195 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 201 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtoll")
# 203 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 206 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtoull")
# 208 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 215 "/usr/include/stdlib.h" 3
extern long strtol(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtol")
# 218 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 219 "/usr/include/stdlib.h" 3
extern unsigned long strtoul(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtoul")
# 223 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 226 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtoll")
# 229 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 231 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtouq(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtoull")
# 235 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 238 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtoll")
# 241 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 243 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base) noexcept(true) __asm__("__isoc23_strtoull")
# 247 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 278 "/usr/include/stdlib.h" 3
extern int strfromd(char * __dest, size_t __size, const char * __format, double __f) noexcept(true)
# 280 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 282 "/usr/include/stdlib.h" 3
extern int strfromf(char * __dest, size_t __size, const char * __format, float __f) noexcept(true)
# 284 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 286 "/usr/include/stdlib.h" 3
extern int strfroml(char * __dest, size_t __size, const char * __format, long double __f) noexcept(true)
# 288 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 298 "/usr/include/stdlib.h" 3
extern int strfromf32(char * __dest, size_t __size, const char * __format, _Float32 __f) noexcept(true)
# 300 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 304 "/usr/include/stdlib.h" 3
extern int strfromf64(char * __dest, size_t __size, const char * __format, _Float64 __f) noexcept(true)
# 306 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 310 "/usr/include/stdlib.h" 3
extern int strfromf128(char * __dest, size_t __size, const char * __format, _Float128 __f) noexcept(true)
# 312 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 316 "/usr/include/stdlib.h" 3
extern int strfromf32x(char * __dest, size_t __size, const char * __format, _Float32x __f) noexcept(true)
# 318 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 322 "/usr/include/stdlib.h" 3
extern int strfromf64x(char * __dest, size_t __size, const char * __format, _Float64x __f) noexcept(true)
# 324 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 27 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
struct __locale_struct {
# 30 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
struct __locale_data *__locales[13];
# 33 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const unsigned short *__ctype_b;
# 34 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const int *__ctype_tolower;
# 35 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const int *__ctype_toupper;
# 38 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
const char *__names[13];
# 39 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
};
# 41 "/usr/include/x86_64-linux-gnu/bits/types/__locale_t.h" 3
typedef __locale_struct *__locale_t;
# 24 "/usr/include/x86_64-linux-gnu/bits/types/locale_t.h" 3
typedef __locale_t locale_t;
# 340 "/usr/include/stdlib.h" 3
extern long strtol_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) noexcept(true) __asm__("__isoc23_strtol_l")
# 342 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 344 "/usr/include/stdlib.h" 3
extern unsigned long strtoul_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) noexcept(true) __asm__("__isoc23_strtoul_l")
# 347 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 350 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) noexcept(true) __asm__("__isoc23_strtoll_l")
# 353 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 356 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) noexcept(true) __asm__("__isoc23_strtoull_l")
# 359 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 365 "/usr/include/stdlib.h" 3
extern long strtol_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) noexcept(true) __asm__("__isoc23_strtol_l")
# 369 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 370 "/usr/include/stdlib.h" 3
extern unsigned long strtoul_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) noexcept(true) __asm__("__isoc23_strtoul_l")
# 375 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 377 "/usr/include/stdlib.h" 3
__extension__ extern long long strtoll_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) noexcept(true) __asm__("__isoc23_strtoll_l")
# 382 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 384 "/usr/include/stdlib.h" 3
__extension__ extern unsigned long long strtoull_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, int __base, locale_t __loc) noexcept(true) __asm__("__isoc23_strtoull_l")
# 389 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 415 "/usr/include/stdlib.h" 3
extern double strtod_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, locale_t __loc) noexcept(true)
# 417 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 419 "/usr/include/stdlib.h" 3
extern float strtof_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, locale_t __loc) noexcept(true)
# 421 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 423 "/usr/include/stdlib.h" 3
extern long double strtold_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, locale_t __loc) noexcept(true)
# 426 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 436 "/usr/include/stdlib.h" 3
extern _Float32 strtof32_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, locale_t __loc) noexcept(true)
# 439 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 443 "/usr/include/stdlib.h" 3
extern _Float64 strtof64_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, locale_t __loc) noexcept(true)
# 446 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 450 "/usr/include/stdlib.h" 3
extern _Float128 strtof128_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, locale_t __loc) noexcept(true)
# 453 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 457 "/usr/include/stdlib.h" 3
extern _Float32x strtof32x_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, locale_t __loc) noexcept(true)
# 460 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 464 "/usr/include/stdlib.h" 3
extern _Float64x strtof64x_l(const char *__restrict__ __nptr, char **__restrict__ __endptr, locale_t __loc) noexcept(true)
# 467 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 3)));
# 505 "/usr/include/stdlib.h" 3
extern char *l64a(long __n) noexcept(true);
# 508 "/usr/include/stdlib.h" 3
extern long a64l(const char * __s) noexcept(true)
# 509 "/usr/include/stdlib.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 27 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
extern "C" {
# 31 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __u_char;
# 32 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __u_short;
# 33 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __u_int;
# 34 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_long;
# 37 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed char __int8_t;
# 38 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned char __uint8_t;
# 39 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed short __int16_t;
# 40 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned short __uint16_t;
# 41 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed int __int32_t;
# 42 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uint32_t;
# 44 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef signed long __int64_t;
# 45 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __uint64_t;
# 52 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int8_t __int_least8_t;
# 53 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint8_t __uint_least8_t;
# 54 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int16_t __int_least16_t;
# 55 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint16_t __uint_least16_t;
# 56 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int32_t __int_least32_t;
# 57 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint32_t __uint_least32_t;
# 58 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __int64_t __int_least64_t;
# 59 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __uint64_t __uint_least64_t;
# 63 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __quad_t;
# 64 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __u_quad_t;
# 72 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __intmax_t;
# 73 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __uintmax_t;
# 145 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __dev_t;
# 146 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __uid_t;
# 147 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __gid_t;
# 148 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino_t;
# 149 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __ino64_t;
# 150 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __mode_t;
# 151 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __nlink_t;
# 152 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off_t;
# 153 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __off64_t;
# 154 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __pid_t;
# 155 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef struct { int __val[2]; } __fsid_t;
# 156 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __clock_t;
# 157 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim_t;
# 158 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __rlim64_t;
# 159 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __id_t;
# 160 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __time_t;
# 161 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __useconds_t;
# 162 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __suseconds_t;
# 163 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __suseconds64_t;
# 165 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __daddr_t;
# 166 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __key_t;
# 169 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __clockid_t;
# 172 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef void *__timer_t;
# 175 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blksize_t;
# 180 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt_t;
# 181 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __blkcnt64_t;
# 184 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt_t;
# 185 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsblkcnt64_t;
# 188 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt_t;
# 189 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __fsfilcnt64_t;
# 192 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __fsword_t;
# 194 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __ssize_t;
# 197 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __syscall_slong_t;
# 199 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned long __syscall_ulong_t;
# 203 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef __off64_t __loff_t;
# 204 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef char *__caddr_t;
# 207 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef long __intptr_t;
# 210 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef unsigned __socklen_t;
# 215 "/usr/include/x86_64-linux-gnu/bits/types.h" 3
typedef int __sig_atomic_t;
# 33 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_char u_char;
# 34 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_short u_short;
# 35 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_int u_int;
# 36 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_long u_long;
# 37 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __quad_t quad_t;
# 38 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __u_quad_t u_quad_t;
# 39 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsid_t fsid_t;
# 42 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __loff_t loff_t;
# 47 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ino_t ino_t;
# 54 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ino64_t ino64_t;
# 59 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __dev_t dev_t;
# 64 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __gid_t gid_t;
# 69 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __mode_t mode_t;
# 74 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __nlink_t nlink_t;
# 79 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __uid_t uid_t;
# 85 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __off_t off_t;
# 92 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __off64_t off64_t;
# 97 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __pid_t pid_t;
# 103 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __id_t id_t;
# 108 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __ssize_t ssize_t;
# 114 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __daddr_t daddr_t;
# 115 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __caddr_t caddr_t;
# 121 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __key_t key_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/clock_t.h" 3
typedef __clock_t clock_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/clockid_t.h" 3
typedef __clockid_t clockid_t;
# 10 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h" 3
typedef __time_t time_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/timer_t.h" 3
typedef __timer_t timer_t;
# 134 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __useconds_t useconds_t;
# 138 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __suseconds_t suseconds_t;
# 148 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned long ulong;
# 149 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned short ushort;
# 150 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef unsigned uint;
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
typedef __int8_t int8_t;
# 25 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
typedef __int16_t int16_t;
# 26 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
typedef __int32_t int32_t;
# 27 "/usr/include/x86_64-linux-gnu/bits/stdint-intn.h" 3
typedef __int64_t int64_t;
# 158 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __uint8_t u_int8_t;
# 159 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __uint16_t u_int16_t;
# 160 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __uint32_t u_int32_t;
# 161 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __uint64_t u_int64_t;
# 164 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef long register_t __attribute((__mode__(__word__)));
# 34 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
static inline __uint16_t __bswap_16(__uint16_t __bsx)
# 35 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 37 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap16(__bsx);
# 41 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
}
# 49 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
static inline __uint32_t __bswap_32(__uint32_t __bsx)
# 50 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 52 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap32(__bsx);
# 56 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
}
# 70 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
__extension__ static inline __uint64_t __bswap_64(__uint64_t __bsx)
# 71 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
{
# 73 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
return __builtin_bswap64(__bsx);
# 77 "/usr/include/x86_64-linux-gnu/bits/byteswap.h" 3
}
# 33 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
static inline __uint16_t __uint16_identity(__uint16_t __x)
# 34 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 35 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 36 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
}
# 39 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
static inline __uint32_t __uint32_identity(__uint32_t __x)
# 40 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 41 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 42 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
}
# 45 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
static inline __uint64_t __uint64_identity(__uint64_t __x)
# 46 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
{
# 47 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
return __x;
# 48 "/usr/include/x86_64-linux-gnu/bits/uintn-identity.h" 3
}
# 8 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
typedef
# 6 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
struct {
# 7 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
unsigned long __val[(1024) / ((8) * sizeof(unsigned long))];
# 8 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h" 3
} __sigset_t;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/sigset_t.h" 3
typedef __sigset_t sigset_t;
# 8 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
struct timeval {
# 14 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
__time_t tv_sec;
# 15 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
__suseconds_t tv_usec;
# 17 "/usr/include/x86_64-linux-gnu/bits/types/struct_timeval.h" 3
};
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
struct timespec {
# 16 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
__time_t tv_sec;
# 21 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
__syscall_slong_t tv_nsec;
# 31 "/usr/include/x86_64-linux-gnu/bits/types/struct_timespec.h" 3
};
# 49 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef long __fd_mask;
# 70 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef
# 60 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
struct {
# 64 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
__fd_mask fds_bits[1024 / (8 * ((int)sizeof(__fd_mask)))];
# 70 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
} fd_set;
# 77 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
typedef __fd_mask fd_mask;
# 91 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern "C" {
# 102 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern int select(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, timeval *__restrict__ __timeout);
# 127 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
extern int pselect(int __nfds, fd_set *__restrict__ __readfds, fd_set *__restrict__ __writefds, fd_set *__restrict__ __exceptfds, const timespec *__restrict__ __timeout, const __sigset_t *__restrict__ __sigmask);
# 153 "/usr/include/x86_64-linux-gnu/sys/select.h" 3
}
# 185 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blksize_t blksize_t;
# 192 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blkcnt_t blkcnt_t;
# 196 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsblkcnt_t fsblkcnt_t;
# 200 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsfilcnt_t fsfilcnt_t;
# 219 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __blkcnt64_t blkcnt64_t;
# 220 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsblkcnt64_t fsblkcnt64_t;
# 221 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
typedef __fsfilcnt64_t fsfilcnt64_t;
# 33 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3
typedef
# 26 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3
union {
# 27 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3
__extension__ unsigned long long __value64;
# 29 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3
struct {
# 30 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3
unsigned __low;
# 31 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3
unsigned __high;
# 32 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3
} __value32;
# 33 "/usr/include/x86_64-linux-gnu/bits/atomic_wide_counter.h" 3
} __atomic_wide_counter;
# 55 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
typedef
# 51 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct __pthread_internal_list {
# 53 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_internal_list *__prev;
# 54 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_internal_list *__next;
# 55 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __pthread_list_t;
# 60 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
typedef
# 57 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct __pthread_internal_slist {
# 59 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__pthread_internal_slist *__next;
# 60 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __pthread_slist_t;
# 22 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
struct __pthread_mutex_s {
# 24 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
int __lock;
# 25 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
unsigned __count;
# 26 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
int __owner;
# 28 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
unsigned __nusers;
# 32 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
int __kind;
# 34 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
short __spins;
# 35 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
short __elision;
# 36 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
__pthread_list_t __list;
# 53 "/usr/include/x86_64-linux-gnu/bits/struct_mutex.h" 3
};
# 23 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
struct __pthread_rwlock_arch_t {
# 25 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __readers;
# 26 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __writers;
# 27 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __wrphase_futex;
# 28 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __writers_futex;
# 29 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __pad3;
# 30 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __pad4;
# 32 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
int __cur_writer;
# 33 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
int __shared;
# 34 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
signed char __rwelision;
# 39 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned char __pad1[7];
# 42 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned long __pad2;
# 45 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
unsigned __flags;
# 55 "/usr/include/x86_64-linux-gnu/bits/struct_rwlock.h" 3
};
# 94 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct __pthread_cond_s {
# 96 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__atomic_wide_counter __wseq;
# 97 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
__atomic_wide_counter __g1_start;
# 98 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_refs[2];
# 99 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_size[2];
# 100 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g1_orig_size;
# 101 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __wrefs;
# 102 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
unsigned __g_signals[2];
# 103 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
};
# 105 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
typedef unsigned __tss_t;
# 106 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
typedef unsigned long __thrd_t;
# 111 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
typedef
# 109 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
struct {
# 110 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
int __data;
# 111 "/usr/include/x86_64-linux-gnu/bits/thread-shared-types.h" 3
} __once_flag;
# 27 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef unsigned long pthread_t;
# 36 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 33 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 34 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 35 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 36 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutexattr_t;
# 45 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 42 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 43 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 44 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 45 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_condattr_t;
# 49 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef unsigned pthread_key_t;
# 53 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef int pthread_once_t;
# 56 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union pthread_attr_t {
# 58 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 59 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 60 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
};
# 62 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef pthread_attr_t pthread_attr_t;
# 72 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 68 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 69 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_mutex_s __data;
# 70 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[40];
# 71 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 72 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_mutex_t;
# 80 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 76 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 77 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_cond_s __data;
# 78 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[48];
# 79 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__extension__ long long __align;
# 80 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_cond_t;
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 87 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 88 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
__pthread_rwlock_arch_t __data;
# 89 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[56];
# 90 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 91 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlock_t;
# 97 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 94 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 95 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[8];
# 96 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 97 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_rwlockattr_t;
# 103 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef volatile int pthread_spinlock_t;
# 112 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 109 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 110 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[32];
# 111 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
long __align;
# 112 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrier_t;
# 118 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
typedef
# 115 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
union {
# 116 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
char __size[4];
# 117 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
int __align;
# 118 "/usr/include/x86_64-linux-gnu/bits/pthreadtypes.h" 3
} pthread_barrierattr_t;
# 230 "/usr/include/x86_64-linux-gnu/sys/types.h" 3
}
# 521 "/usr/include/stdlib.h" 3
extern long random() noexcept(true);
# 524 "/usr/include/stdlib.h" 3
extern void srandom(unsigned __seed) noexcept(true);
# 530 "/usr/include/stdlib.h" 3
extern char *initstate(unsigned __seed, char * __statebuf, size_t __statelen) noexcept(true)
# 531 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 535 "/usr/include/stdlib.h" 3
extern char *setstate(char * __statebuf) noexcept(true) __attribute((__nonnull__(1)));
# 543 "/usr/include/stdlib.h" 3
struct random_data {
# 545 "/usr/include/stdlib.h" 3
int32_t *fptr;
# 546 "/usr/include/stdlib.h" 3
int32_t *rptr;
# 547 "/usr/include/stdlib.h" 3
int32_t *state;
# 548 "/usr/include/stdlib.h" 3
int rand_type;
# 549 "/usr/include/stdlib.h" 3
int rand_deg;
# 550 "/usr/include/stdlib.h" 3
int rand_sep;
# 551 "/usr/include/stdlib.h" 3
int32_t *end_ptr;
# 552 "/usr/include/stdlib.h" 3
};
# 554 "/usr/include/stdlib.h" 3
extern int random_r(random_data *__restrict__ __buf, int32_t *__restrict__ __result) noexcept(true)
# 555 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 557 "/usr/include/stdlib.h" 3
extern int srandom_r(unsigned __seed, random_data * __buf) noexcept(true)
# 558 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 560 "/usr/include/stdlib.h" 3
extern int initstate_r(unsigned __seed, char *__restrict__ __statebuf, size_t __statelen, random_data *__restrict__ __buf) noexcept(true)
# 563 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2, 4)));
# 565 "/usr/include/stdlib.h" 3
extern int setstate_r(char *__restrict__ __statebuf, random_data *__restrict__ __buf) noexcept(true)
# 567 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 573 "/usr/include/stdlib.h" 3
extern int rand() noexcept(true);
# 575 "/usr/include/stdlib.h" 3
extern void srand(unsigned __seed) noexcept(true);
# 579 "/usr/include/stdlib.h" 3
extern int rand_r(unsigned * __seed) noexcept(true);
# 587 "/usr/include/stdlib.h" 3
extern double drand48() noexcept(true);
# 588 "/usr/include/stdlib.h" 3
extern double erand48(unsigned short __xsubi[3]) noexcept(true) __attribute((__nonnull__(1)));
# 591 "/usr/include/stdlib.h" 3
extern long lrand48() noexcept(true);
# 592 "/usr/include/stdlib.h" 3
extern long nrand48(unsigned short __xsubi[3]) noexcept(true)
# 593 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 596 "/usr/include/stdlib.h" 3
extern long mrand48() noexcept(true);
# 597 "/usr/include/stdlib.h" 3
extern long jrand48(unsigned short __xsubi[3]) noexcept(true)
# 598 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 601 "/usr/include/stdlib.h" 3
extern void srand48(long __seedval) noexcept(true);
# 602 "/usr/include/stdlib.h" 3
extern unsigned short *seed48(unsigned short __seed16v[3]) noexcept(true)
# 603 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 604 "/usr/include/stdlib.h" 3
extern void lcong48(unsigned short __param[7]) noexcept(true) __attribute((__nonnull__(1)));
# 610 "/usr/include/stdlib.h" 3
struct drand48_data {
# 612 "/usr/include/stdlib.h" 3
unsigned short __x[3];
# 613 "/usr/include/stdlib.h" 3
unsigned short __old_x[3];
# 614 "/usr/include/stdlib.h" 3
unsigned short __c;
# 615 "/usr/include/stdlib.h" 3
unsigned short __init;
# 616 "/usr/include/stdlib.h" 3
__extension__ unsigned long long __a;
# 618 "/usr/include/stdlib.h" 3
};
# 621 "/usr/include/stdlib.h" 3
extern int drand48_r(drand48_data *__restrict__ __buffer, double *__restrict__ __result) noexcept(true)
# 622 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 623 "/usr/include/stdlib.h" 3
extern int erand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, double *__restrict__ __result) noexcept(true)
# 625 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 628 "/usr/include/stdlib.h" 3
extern int lrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) noexcept(true)
# 630 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 631 "/usr/include/stdlib.h" 3
extern int nrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) noexcept(true)
# 634 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 637 "/usr/include/stdlib.h" 3
extern int mrand48_r(drand48_data *__restrict__ __buffer, long *__restrict__ __result) noexcept(true)
# 639 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 640 "/usr/include/stdlib.h" 3
extern int jrand48_r(unsigned short __xsubi[3], drand48_data *__restrict__ __buffer, long *__restrict__ __result) noexcept(true)
# 643 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 646 "/usr/include/stdlib.h" 3
extern int srand48_r(long __seedval, drand48_data * __buffer) noexcept(true)
# 647 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 649 "/usr/include/stdlib.h" 3
extern int seed48_r(unsigned short __seed16v[3], drand48_data * __buffer) noexcept(true)
# 650 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 652 "/usr/include/stdlib.h" 3
extern int lcong48_r(unsigned short __param[7], drand48_data * __buffer) noexcept(true)
# 654 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2)));
# 657 "/usr/include/stdlib.h" 3
extern __uint32_t arc4random() noexcept(true);
# 661 "/usr/include/stdlib.h" 3
extern void arc4random_buf(void * __buf, size_t __size) noexcept(true)
# 662 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 666 "/usr/include/stdlib.h" 3
extern __uint32_t arc4random_uniform(__uint32_t __upper_bound) noexcept(true);
# 672 "/usr/include/stdlib.h" 3
extern void *malloc(size_t __size) noexcept(true) __attribute((__malloc__))
# 673 "/usr/include/stdlib.h" 3
 __attribute((__alloc_size__(1)));
# 675 "/usr/include/stdlib.h" 3
extern void *calloc(size_t __nmemb, size_t __size) noexcept(true)
# 676 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__alloc_size__(1, 2)));
# 683 "/usr/include/stdlib.h" 3
extern void *realloc(void * __ptr, size_t __size) noexcept(true)
# 684 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__)) __attribute((__alloc_size__(2)));
# 687 "/usr/include/stdlib.h" 3
extern void free(void * __ptr) noexcept(true);
# 695 "/usr/include/stdlib.h" 3
extern void *reallocarray(void * __ptr, size_t __nmemb, size_t __size) noexcept(true)
# 696 "/usr/include/stdlib.h" 3
 __attribute((__warn_unused_result__))
# 697 "/usr/include/stdlib.h" 3
 __attribute((__alloc_size__(2, 3)))
# 698 "/usr/include/stdlib.h" 3
 __attribute((__malloc__(__builtin_free, 1)));
# 701 "/usr/include/stdlib.h" 3
extern void *reallocarray(void * __ptr, size_t __nmemb, size_t __size) noexcept(true)
# 702 "/usr/include/stdlib.h" 3
 __attribute((__malloc__(reallocarray, 1)));
# 26 "/usr/include/alloca.h" 3
extern "C" {
# 32 "/usr/include/alloca.h" 3
extern void *alloca(size_t __size) noexcept(true);
# 38 "/usr/include/alloca.h" 3
}
# 712 "/usr/include/stdlib.h" 3
extern void *valloc(size_t __size) noexcept(true) __attribute((__malloc__))
# 713 "/usr/include/stdlib.h" 3
 __attribute((__alloc_size__(1)));
# 718 "/usr/include/stdlib.h" 3
extern int posix_memalign(void ** __memptr, size_t __alignment, size_t __size) noexcept(true)
# 719 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 724 "/usr/include/stdlib.h" 3
extern void *aligned_alloc(size_t __alignment, size_t __size) noexcept(true)
# 725 "/usr/include/stdlib.h" 3
 __attribute((__malloc__)) __attribute((__alloc_align__(1 )))
# 726 "/usr/include/stdlib.h" 3
 __attribute((__alloc_size__(2)));
# 730 "/usr/include/stdlib.h" 3
extern void abort() noexcept(true) __attribute((__noreturn__));
# 734 "/usr/include/stdlib.h" 3
extern int atexit(void (* __func)(void)) noexcept(true) __attribute((__nonnull__(1)));
# 739 "/usr/include/stdlib.h" 3
extern "C++" int at_quick_exit(void (* __func)(void)) noexcept(true) __asm__("at_quick_exit")
# 740 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 749 "/usr/include/stdlib.h" 3
extern int on_exit(void (* __func)(int __status, void * __arg), void * __arg) noexcept(true)
# 750 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 756 "/usr/include/stdlib.h" 3
extern void exit(int __status) noexcept(true) __attribute((__noreturn__));
# 762 "/usr/include/stdlib.h" 3
extern void quick_exit(int __status) noexcept(true) __attribute((__noreturn__));
# 768 "/usr/include/stdlib.h" 3
extern void _Exit(int __status) noexcept(true) __attribute((__noreturn__));
# 773 "/usr/include/stdlib.h" 3
extern char *getenv(const char * __name) noexcept(true) __attribute((__nonnull__(1)));
# 778 "/usr/include/stdlib.h" 3
extern char *secure_getenv(const char * __name) noexcept(true)
# 779 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 786 "/usr/include/stdlib.h" 3
extern int putenv(char * __string) noexcept(true) __attribute((__nonnull__(1)));
# 792 "/usr/include/stdlib.h" 3
extern int setenv(const char * __name, const char * __value, int __replace) noexcept(true)
# 793 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2)));
# 796 "/usr/include/stdlib.h" 3
extern int unsetenv(const char * __name) noexcept(true) __attribute((__nonnull__(1)));
# 803 "/usr/include/stdlib.h" 3
extern int clearenv() noexcept(true);
# 814 "/usr/include/stdlib.h" 3
extern char *mktemp(char * __template) noexcept(true) __attribute((__nonnull__(1)));
# 827 "/usr/include/stdlib.h" 3
extern int mkstemp(char * __template) __attribute((__nonnull__(1)));
# 837 "/usr/include/stdlib.h" 3
extern int mkstemp64(char * __template) __attribute((__nonnull__(1)));
# 849 "/usr/include/stdlib.h" 3
extern int mkstemps(char * __template, int __suffixlen) __attribute((__nonnull__(1)));
# 859 "/usr/include/stdlib.h" 3
extern int mkstemps64(char * __template, int __suffixlen)
# 860 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 870 "/usr/include/stdlib.h" 3
extern char *mkdtemp(char * __template) noexcept(true) __attribute((__nonnull__(1)));
# 881 "/usr/include/stdlib.h" 3
extern int mkostemp(char * __template, int __flags) __attribute((__nonnull__(1)));
# 891 "/usr/include/stdlib.h" 3
extern int mkostemp64(char * __template, int __flags) __attribute((__nonnull__(1)));
# 901 "/usr/include/stdlib.h" 3
extern int mkostemps(char * __template, int __suffixlen, int __flags)
# 902 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 913 "/usr/include/stdlib.h" 3
extern int mkostemps64(char * __template, int __suffixlen, int __flags)
# 914 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 923 "/usr/include/stdlib.h" 3
extern int system(const char * __command);
# 929 "/usr/include/stdlib.h" 3
extern char *canonicalize_file_name(const char * __name) noexcept(true)
# 930 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1))) __attribute((__malloc__))
# 931 "/usr/include/stdlib.h" 3
 __attribute((__malloc__(__builtin_free, 1)));
# 940 "/usr/include/stdlib.h" 3
extern char *realpath(const char *__restrict__ __name, char *__restrict__ __resolved) noexcept(true);
# 948 "/usr/include/stdlib.h" 3
typedef int (*__compar_fn_t)(const void *, const void *);
# 951 "/usr/include/stdlib.h" 3
typedef __compar_fn_t comparison_fn_t;
# 955 "/usr/include/stdlib.h" 3
typedef int (*__compar_d_fn_t)(const void *, const void *, void *);
# 960 "/usr/include/stdlib.h" 3
extern void *bsearch(const void * __key, const void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)
# 962 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 5)));
# 970 "/usr/include/stdlib.h" 3
extern void qsort(void * __base, size_t __nmemb, size_t __size, __compar_fn_t __compar)
# 971 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 973 "/usr/include/stdlib.h" 3
extern void qsort_r(void * __base, size_t __nmemb, size_t __size, __compar_d_fn_t __compar, void * __arg)
# 975 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 4)));
# 980 "/usr/include/stdlib.h" 3
extern int abs(int __x) noexcept(true) __attribute((const));
# 981 "/usr/include/stdlib.h" 3
extern long labs(long __x) noexcept(true) __attribute((const));
# 984 "/usr/include/stdlib.h" 3
__extension__ extern long long llabs(long long __x) noexcept(true)
# 985 "/usr/include/stdlib.h" 3
 __attribute((const));
# 992 "/usr/include/stdlib.h" 3
extern div_t div(int __numer, int __denom) noexcept(true)
# 993 "/usr/include/stdlib.h" 3
 __attribute((const));
# 994 "/usr/include/stdlib.h" 3
extern ldiv_t ldiv(long __numer, long __denom) noexcept(true)
# 995 "/usr/include/stdlib.h" 3
 __attribute((const));
# 998 "/usr/include/stdlib.h" 3
__extension__ extern lldiv_t lldiv(long long __numer, long long __denom) noexcept(true)
# 1000 "/usr/include/stdlib.h" 3
 __attribute((const));
# 1012 "/usr/include/stdlib.h" 3
extern char *ecvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) noexcept(true)
# 1013 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 1018 "/usr/include/stdlib.h" 3
extern char *fcvt(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) noexcept(true)
# 1019 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 1024 "/usr/include/stdlib.h" 3
extern char *gcvt(double __value, int __ndigit, char * __buf) noexcept(true)
# 1025 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 1030 "/usr/include/stdlib.h" 3
extern char *qecvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) noexcept(true)
# 1032 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 1033 "/usr/include/stdlib.h" 3
extern char *qfcvt(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign) noexcept(true)
# 1035 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4)));
# 1036 "/usr/include/stdlib.h" 3
extern char *qgcvt(long double __value, int __ndigit, char * __buf) noexcept(true)
# 1037 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3)));
# 1042 "/usr/include/stdlib.h" 3
extern int ecvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) noexcept(true)
# 1044 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 1045 "/usr/include/stdlib.h" 3
extern int fcvt_r(double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) noexcept(true)
# 1047 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 1049 "/usr/include/stdlib.h" 3
extern int qecvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) noexcept(true)
# 1052 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 1053 "/usr/include/stdlib.h" 3
extern int qfcvt_r(long double __value, int __ndigit, int *__restrict__ __decpt, int *__restrict__ __sign, char *__restrict__ __buf, size_t __len) noexcept(true)
# 1056 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(3, 4, 5)));
# 1062 "/usr/include/stdlib.h" 3
extern int mblen(const char * __s, size_t __n) noexcept(true);
# 1065 "/usr/include/stdlib.h" 3
extern int mbtowc(wchar_t *__restrict__ __pwc, const char *__restrict__ __s, size_t __n) noexcept(true);
# 1069 "/usr/include/stdlib.h" 3
extern int wctomb(char * __s, wchar_t __wchar) noexcept(true);
# 1073 "/usr/include/stdlib.h" 3
extern size_t mbstowcs(wchar_t *__restrict__ __pwcs, const char *__restrict__ __s, size_t __n) noexcept(true)
# 1075 "/usr/include/stdlib.h" 3
 __attribute((__access__(__read_only__ , 2 )));
# 1077 "/usr/include/stdlib.h" 3
extern size_t wcstombs(char *__restrict__ __s, const wchar_t *__restrict__ __pwcs, size_t __n) noexcept(true)
# 1080 "/usr/include/stdlib.h" 3
 __attribute((__access__(__write_only__ , 1 , 3 )))
# 1081 "/usr/include/stdlib.h" 3
 __attribute((__access__(__read_only__ , 2 )));
# 1088 "/usr/include/stdlib.h" 3
extern int rpmatch(const char * __response) noexcept(true) __attribute((__nonnull__(1)));
# 1099 "/usr/include/stdlib.h" 3
extern int getsubopt(char **__restrict__ __optionp, char *const *__restrict__ __tokens, char **__restrict__ __valuep) noexcept(true)
# 1102 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1, 2, 3)));
# 1110 "/usr/include/stdlib.h" 3
extern int posix_openpt(int __oflag);
# 1118 "/usr/include/stdlib.h" 3
extern int grantpt(int __fd) noexcept(true);
# 1122 "/usr/include/stdlib.h" 3
extern int unlockpt(int __fd) noexcept(true);
# 1127 "/usr/include/stdlib.h" 3
extern char *ptsname(int __fd) noexcept(true);
# 1134 "/usr/include/stdlib.h" 3
extern int ptsname_r(int __fd, char * __buf, size_t __buflen) noexcept(true)
# 1135 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(2))) __attribute((__access__(__write_only__ , 2 , 3 )));
# 1138 "/usr/include/stdlib.h" 3
extern int getpt();
# 1145 "/usr/include/stdlib.h" 3
extern int getloadavg(double __loadavg[], int __nelem) noexcept(true)
# 1146 "/usr/include/stdlib.h" 3
 __attribute((__nonnull__(1)));
# 1167 "/usr/include/stdlib.h" 3
}
# 46 "/usr/include/c++/12/bits/std_abs.h" 3
extern "C++" {
# 48 "/usr/include/c++/12/bits/std_abs.h" 3
namespace std __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/12/bits/std_abs.h" 3
using ::abs;
# 56 "/usr/include/c++/12/bits/std_abs.h" 3
inline long abs(long __i) { return __builtin_labs(__i); }
# 61 "/usr/include/c++/12/bits/std_abs.h" 3
inline long long abs(long long __x) { return __builtin_llabs(__x); }
# 71 "/usr/include/c++/12/bits/std_abs.h" 3
constexpr double abs(double __x)
# 72 "/usr/include/c++/12/bits/std_abs.h" 3
{ return __builtin_fabs(__x); }
# 75 "/usr/include/c++/12/bits/std_abs.h" 3
constexpr float abs(float __x)
# 76 "/usr/include/c++/12/bits/std_abs.h" 3
{ return __builtin_fabsf(__x); }
# 79 "/usr/include/c++/12/bits/std_abs.h" 3
constexpr long double abs(long double __x)
# 80 "/usr/include/c++/12/bits/std_abs.h" 3
{ return __builtin_fabsl(__x); }
# 85 "/usr/include/c++/12/bits/std_abs.h" 3
__extension__ constexpr __int128 abs(__int128 __x) { return (__x >= (0)) ? __x : (-__x); }
# 117 "/usr/include/c++/12/bits/std_abs.h" 3
}
# 118 "/usr/include/c++/12/bits/std_abs.h" 3
}
# 121 "/usr/include/c++/12/cstdlib" 3
extern "C++" {
# 123 "/usr/include/c++/12/cstdlib" 3
namespace std __attribute((__visibility__("default"))) {
# 127 "/usr/include/c++/12/cstdlib" 3
using ::div_t;
# 128 "/usr/include/c++/12/cstdlib" 3
using ::ldiv_t;
# 130 "/usr/include/c++/12/cstdlib" 3
using ::abort;
# 132 "/usr/include/c++/12/cstdlib" 3
using ::aligned_alloc;
# 134 "/usr/include/c++/12/cstdlib" 3
using ::atexit;
# 137 "/usr/include/c++/12/cstdlib" 3
using ::at_quick_exit;
# 140 "/usr/include/c++/12/cstdlib" 3
using ::atof;
# 141 "/usr/include/c++/12/cstdlib" 3
using ::atoi;
# 142 "/usr/include/c++/12/cstdlib" 3
using ::atol;
# 143 "/usr/include/c++/12/cstdlib" 3
using ::bsearch;
# 144 "/usr/include/c++/12/cstdlib" 3
using ::calloc;
# 145 "/usr/include/c++/12/cstdlib" 3
using ::div;
# 146 "/usr/include/c++/12/cstdlib" 3
using ::exit;
# 147 "/usr/include/c++/12/cstdlib" 3
using ::free;
# 148 "/usr/include/c++/12/cstdlib" 3
using ::getenv;
# 149 "/usr/include/c++/12/cstdlib" 3
using ::labs;
# 150 "/usr/include/c++/12/cstdlib" 3
using ::ldiv;
# 151 "/usr/include/c++/12/cstdlib" 3
using ::malloc;
# 153 "/usr/include/c++/12/cstdlib" 3
using ::mblen;
# 154 "/usr/include/c++/12/cstdlib" 3
using ::mbstowcs;
# 155 "/usr/include/c++/12/cstdlib" 3
using ::mbtowc;
# 157 "/usr/include/c++/12/cstdlib" 3
using ::qsort;
# 160 "/usr/include/c++/12/cstdlib" 3
using ::quick_exit;
# 163 "/usr/include/c++/12/cstdlib" 3
using ::rand;
# 164 "/usr/include/c++/12/cstdlib" 3
using ::realloc;
# 165 "/usr/include/c++/12/cstdlib" 3
using ::srand;
# 166 "/usr/include/c++/12/cstdlib" 3
using ::strtod;
# 167 "/usr/include/c++/12/cstdlib" 3
using ::strtol;
# 168 "/usr/include/c++/12/cstdlib" 3
using ::strtoul;
# 169 "/usr/include/c++/12/cstdlib" 3
using ::system;
# 171 "/usr/include/c++/12/cstdlib" 3
using ::wcstombs;
# 172 "/usr/include/c++/12/cstdlib" 3
using ::wctomb;
# 177 "/usr/include/c++/12/cstdlib" 3
inline ldiv_t div(long __i, long __j) { return ldiv(__i, __j); }
# 182 "/usr/include/c++/12/cstdlib" 3
}
# 195 "/usr/include/c++/12/cstdlib" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 200 "/usr/include/c++/12/cstdlib" 3
using ::lldiv_t;
# 206 "/usr/include/c++/12/cstdlib" 3
using ::_Exit;
# 210 "/usr/include/c++/12/cstdlib" 3
using ::llabs;
# 213 "/usr/include/c++/12/cstdlib" 3
inline lldiv_t div(long long __n, long long __d)
# 214 "/usr/include/c++/12/cstdlib" 3
{ lldiv_t __q; (__q.quot) = (__n / __d); (__q.rem) = (__n % __d); return __q; }
# 216 "/usr/include/c++/12/cstdlib" 3
using ::lldiv;
# 227 "/usr/include/c++/12/cstdlib" 3
using ::atoll;
# 228 "/usr/include/c++/12/cstdlib" 3
using ::strtoll;
# 229 "/usr/include/c++/12/cstdlib" 3
using ::strtoull;
# 231 "/usr/include/c++/12/cstdlib" 3
using ::strtof;
# 232 "/usr/include/c++/12/cstdlib" 3
using ::strtold;
# 235 "/usr/include/c++/12/cstdlib" 3
}
# 237 "/usr/include/c++/12/cstdlib" 3
namespace std {
# 240 "/usr/include/c++/12/cstdlib" 3
using __gnu_cxx::lldiv_t;
# 242 "/usr/include/c++/12/cstdlib" 3
using __gnu_cxx::_Exit;
# 244 "/usr/include/c++/12/cstdlib" 3
using __gnu_cxx::llabs;
# 245 "/usr/include/c++/12/cstdlib" 3
using __gnu_cxx::div;
# 246 "/usr/include/c++/12/cstdlib" 3
using __gnu_cxx::lldiv;
# 248 "/usr/include/c++/12/cstdlib" 3
using __gnu_cxx::atoll;
# 249 "/usr/include/c++/12/cstdlib" 3
using __gnu_cxx::strtof;
# 250 "/usr/include/c++/12/cstdlib" 3
using __gnu_cxx::strtoll;
# 251 "/usr/include/c++/12/cstdlib" 3
using __gnu_cxx::strtoull;
# 252 "/usr/include/c++/12/cstdlib" 3
using __gnu_cxx::strtold;
# 253 "/usr/include/c++/12/cstdlib" 3
}
# 257 "/usr/include/c++/12/cstdlib" 3
}
# 38 "/usr/include/c++/12/stdlib.h" 3
using std::abort;
# 39 "/usr/include/c++/12/stdlib.h" 3
using std::atexit;
# 40 "/usr/include/c++/12/stdlib.h" 3
using std::exit;
# 43 "/usr/include/c++/12/stdlib.h" 3
using std::at_quick_exit;
# 46 "/usr/include/c++/12/stdlib.h" 3
using std::quick_exit;
# 54 "/usr/include/c++/12/stdlib.h" 3
using std::abs;
# 55 "/usr/include/c++/12/stdlib.h" 3
using std::atof;
# 56 "/usr/include/c++/12/stdlib.h" 3
using std::atoi;
# 57 "/usr/include/c++/12/stdlib.h" 3
using std::atol;
# 58 "/usr/include/c++/12/stdlib.h" 3
using std::bsearch;
# 59 "/usr/include/c++/12/stdlib.h" 3
using std::calloc;
# 60 "/usr/include/c++/12/stdlib.h" 3
using std::div;
# 61 "/usr/include/c++/12/stdlib.h" 3
using std::free;
# 62 "/usr/include/c++/12/stdlib.h" 3
using std::getenv;
# 63 "/usr/include/c++/12/stdlib.h" 3
using std::labs;
# 64 "/usr/include/c++/12/stdlib.h" 3
using std::ldiv;
# 65 "/usr/include/c++/12/stdlib.h" 3
using std::malloc;
# 67 "/usr/include/c++/12/stdlib.h" 3
using std::mblen;
# 68 "/usr/include/c++/12/stdlib.h" 3
using std::mbstowcs;
# 69 "/usr/include/c++/12/stdlib.h" 3
using std::mbtowc;
# 71 "/usr/include/c++/12/stdlib.h" 3
using std::qsort;
# 72 "/usr/include/c++/12/stdlib.h" 3
using std::rand;
# 73 "/usr/include/c++/12/stdlib.h" 3
using std::realloc;
# 74 "/usr/include/c++/12/stdlib.h" 3
using std::srand;
# 75 "/usr/include/c++/12/stdlib.h" 3
using std::strtod;
# 76 "/usr/include/c++/12/stdlib.h" 3
using std::strtol;
# 77 "/usr/include/c++/12/stdlib.h" 3
using std::strtoul;
# 78 "/usr/include/c++/12/stdlib.h" 3
using std::system;
# 80 "/usr/include/c++/12/stdlib.h" 3
using std::wcstombs;
# 81 "/usr/include/c++/12/stdlib.h" 3
using std::wctomb;
# 179 "/usr/include/cuda_device_runtime_api.h" 3
extern "C" {
# 186 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaDeviceSynchronizeDeprecationAvoidance();
# 235 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2DeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 236 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2DeviceGetLimit(size_t * pValue, cudaLimit limit);
# 237 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2DeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 238 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2DeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 239 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2GetLastError();
# 240 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2PeekAtLastError();
# 241 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern const char *__cudaCDP2GetErrorString(cudaError_t error);
# 242 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern const char *__cudaCDP2GetErrorName(cudaError_t error);
# 243 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2GetDeviceCount(int * count);
# 244 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2GetDevice(int * device);
# 245 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2StreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 246 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2StreamDestroy(cudaStream_t stream);
# 247 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2StreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 248 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2StreamWaitEvent_ptsz(cudaStream_t stream, cudaEvent_t event, unsigned flags);
# 249 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2EventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 250 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2EventRecord(cudaEvent_t event, cudaStream_t stream);
# 251 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2EventRecord_ptsz(cudaEvent_t event, cudaStream_t stream);
# 252 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2EventRecordWithFlags(cudaEvent_t event, cudaStream_t stream, unsigned flags);
# 253 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2EventRecordWithFlags_ptsz(cudaEvent_t event, cudaStream_t stream, unsigned flags);
# 254 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2EventDestroy(cudaEvent_t event);
# 255 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2FuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 256 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2Free(void * devPtr);
# 257 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2Malloc(void ** devPtr, size_t size);
# 258 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2MemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 259 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2MemcpyAsync_ptsz(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream);
# 260 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2Memcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 261 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2Memcpy2DAsync_ptsz(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream);
# 262 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2Memcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 263 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2Memcpy3DAsync_ptsz(const cudaMemcpy3DParms * p, cudaStream_t stream);
# 264 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2MemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream);
# 265 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2MemsetAsync_ptsz(void * devPtr, int value, size_t count, cudaStream_t stream);
# 266 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2Memset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream);
# 267 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2Memset2DAsync_ptsz(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream);
# 268 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2Memset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 269 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2Memset3DAsync_ptsz(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream);
# 270 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2RuntimeGetVersion(int * runtimeVersion);
# 271 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern void *__cudaCDP2GetParameterBuffer(size_t alignment, size_t size);
# 272 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern void *__cudaCDP2GetParameterBufferV2(void * func, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize);
# 273 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2LaunchDevice_ptsz(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 274 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2LaunchDeviceV2_ptsz(void * parameterBuffer, cudaStream_t stream);
# 275 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2LaunchDevice(void * func, void * parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream);
# 276 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2LaunchDeviceV2(void * parameterBuffer, cudaStream_t stream);
# 277 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2OccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize);
# 278 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t __cudaCDP2OccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSmemSize, unsigned flags);
# 281 "/usr/include/cuda_device_runtime_api.h" 3
extern cudaError_t cudaGraphLaunch(cudaGraphExec_t graphExec, cudaStream_t stream);
# 300 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) static inline cudaGraphExec_t cudaGetCurrentGraphExec()
# 301 "/usr/include/cuda_device_runtime_api.h" 3
{int volatile ___ = 1;
# 305 "/usr/include/cuda_device_runtime_api.h" 3
::exit(___);}
# 323 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) static inline void cudaTriggerProgrammaticLaunchCompletion()
# 324 "/usr/include/cuda_device_runtime_api.h" 3
{int volatile ___ = 1;
# 326 "/usr/include/cuda_device_runtime_api.h" 3
::exit(___);}
# 339 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) static inline void cudaGridDependencySynchronize()
# 340 "/usr/include/cuda_device_runtime_api.h" 3
{int volatile ___ = 1;
# 342 "/usr/include/cuda_device_runtime_api.h" 3
::exit(___);}
# 346 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern unsigned long long cudaCGGetIntrinsicHandle(cudaCGScope scope);
# 347 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaCGSynchronize(unsigned long long handle, unsigned flags);
# 348 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaCGSynchronizeGrid(unsigned long long handle, unsigned flags);
# 349 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaCGGetSize(unsigned * numThreads, unsigned * numGrids, unsigned long long handle);
# 350 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) extern cudaError_t cudaCGGetRank(unsigned * threadRank, unsigned * gridRank, unsigned long long handle);
# 572 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) static inline void *cudaGetParameterBuffer(size_t alignment, size_t size)
# 573 "/usr/include/cuda_device_runtime_api.h" 3
{int volatile ___ = 1;(void)alignment;(void)size;
# 575 "/usr/include/cuda_device_runtime_api.h" 3
::exit(___);}
# 608 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) static inline void *cudaGetParameterBufferV2(void *func, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize)
# 609 "/usr/include/cuda_device_runtime_api.h" 3
{int volatile ___ = 1;(void)func;(void)gridDimension;(void)blockDimension;(void)sharedMemSize;
# 611 "/usr/include/cuda_device_runtime_api.h" 3
::exit(___);}
# 618 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) static inline cudaError_t cudaLaunchDevice_ptsz(void *func, void *parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream)
# 619 "/usr/include/cuda_device_runtime_api.h" 3
{int volatile ___ = 1;(void)func;(void)parameterBuffer;(void)gridDimension;(void)blockDimension;(void)sharedMemSize;(void)stream;
# 621 "/usr/include/cuda_device_runtime_api.h" 3
::exit(___);}
# 623 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) static inline cudaError_t cudaLaunchDeviceV2_ptsz(void *parameterBuffer, cudaStream_t stream)
# 624 "/usr/include/cuda_device_runtime_api.h" 3
{int volatile ___ = 1;(void)parameterBuffer;(void)stream;
# 626 "/usr/include/cuda_device_runtime_api.h" 3
::exit(___);}
# 658 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) static inline cudaError_t cudaLaunchDevice(void *func, void *parameterBuffer, dim3 gridDimension, dim3 blockDimension, unsigned sharedMemSize, cudaStream_t stream)
# 659 "/usr/include/cuda_device_runtime_api.h" 3
{int volatile ___ = 1;(void)func;(void)parameterBuffer;(void)gridDimension;(void)blockDimension;(void)sharedMemSize;(void)stream;
# 661 "/usr/include/cuda_device_runtime_api.h" 3
::exit(___);}
# 663 "/usr/include/cuda_device_runtime_api.h" 3
__attribute__((unused)) static inline cudaError_t cudaLaunchDeviceV2(void *parameterBuffer, cudaStream_t stream)
# 664 "/usr/include/cuda_device_runtime_api.h" 3
{int volatile ___ = 1;(void)parameterBuffer;(void)stream;
# 666 "/usr/include/cuda_device_runtime_api.h" 3
::exit(___);}
# 720 "/usr/include/cuda_device_runtime_api.h" 3
}
# 722 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaMalloc(T ** devPtr, size_t size);
# 723 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, T * entry);
# 724 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize);
# 725 "/usr/include/cuda_device_runtime_api.h" 3
template< class T> static inline cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, T func, int blockSize, size_t dynamicSmemSize, unsigned flags);
# 271 "/usr/include/cuda_runtime_api.h" 3
extern "C" {
# 311 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceReset();
# 333 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSynchronize();
# 419 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSetLimit(cudaLimit limit, size_t value);
# 455 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetLimit(size_t * pValue, cudaLimit limit);
# 478 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetTexture1DLinearMaxWidth(size_t * maxWidthInElements, const cudaChannelFormatDesc * fmtDesc, int device);
# 512 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetCacheConfig(cudaFuncCache * pCacheConfig);
# 549 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
# 593 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSetCacheConfig(cudaFuncCache cacheConfig);
# 624 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetSharedMemConfig(cudaSharedMemConfig * pConfig);
# 668 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSetSharedMemConfig(cudaSharedMemConfig config);
# 695 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetByPCIBusId(int * device, const char * pciBusId);
# 725 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetPCIBusId(char * pciBusId, int len, int device);
# 775 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcGetEventHandle(cudaIpcEventHandle_t * handle, cudaEvent_t event);
# 818 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcOpenEventHandle(cudaEvent_t * event, cudaIpcEventHandle_t handle);
# 862 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcGetMemHandle(cudaIpcMemHandle_t * handle, void * devPtr);
# 928 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcOpenMemHandle(void ** devPtr, cudaIpcMemHandle_t handle, unsigned flags);
# 966 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaIpcCloseMemHandle(void * devPtr);
# 998 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceFlushGPUDirectRDMAWrites(cudaFlushGPUDirectRDMAWritesTarget target, cudaFlushGPUDirectRDMAWritesScope scope);
# 1041 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaThreadExit();
# 1067 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaThreadSynchronize();
# 1116 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaThreadSetLimit(cudaLimit limit, size_t value);
# 1149 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaThreadGetLimit(size_t * pValue, cudaLimit limit);
# 1185 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaThreadGetCacheConfig(cudaFuncCache * pCacheConfig);
# 1232 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaThreadSetCacheConfig(cudaFuncCache cacheConfig);
# 1297 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetLastError();
# 1348 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaPeekAtLastError();
# 1364 "/usr/include/cuda_runtime_api.h" 3
extern const char *cudaGetErrorName(cudaError_t error);
# 1380 "/usr/include/cuda_runtime_api.h" 3
extern const char *cudaGetErrorString(cudaError_t error);
# 1409 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDeviceCount(int * count);
# 1714 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDeviceProperties_v2(cudaDeviceProp * prop, int device);
# 1916 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetAttribute(int * value, cudaDeviceAttr attr, int device);
# 1934 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetDefaultMemPool(cudaMemPool_t * memPool, int device);
# 1958 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSetMemPool(int device, cudaMemPool_t memPool);
# 1978 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetMemPool(cudaMemPool_t * memPool, int device);
# 2026 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetNvSciSyncAttributes(void * nvSciSyncAttrList, int device, int flags);
# 2066 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetP2PAttribute(int * value, cudaDeviceP2PAttr attr, int srcDevice, int dstDevice);
# 2088 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaChooseDevice(int * device, const cudaDeviceProp * prop);
# 2117 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaInitDevice(int device, unsigned deviceFlags, unsigned flags);
# 2163 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetDevice(int device);
# 2185 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDevice(int * device);
# 2216 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetValidDevices(int * device_arr, int len);
# 2282 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSetDeviceFlags(unsigned flags);
# 2327 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDeviceFlags(unsigned * flags);
# 2367 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamCreate(cudaStream_t * pStream);
# 2399 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamCreateWithFlags(cudaStream_t * pStream, unsigned flags);
# 2445 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamCreateWithPriority(cudaStream_t * pStream, unsigned flags, int priority);
# 2472 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamGetPriority(cudaStream_t hStream, int * priority);
# 2497 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamGetFlags(cudaStream_t hStream, unsigned * flags);
# 2532 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamGetId(cudaStream_t hStream, unsigned long long * streamId);
# 2547 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaCtxResetPersistingL2Cache();
# 2567 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamCopyAttributes(cudaStream_t dst, cudaStream_t src);
# 2588 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamGetAttribute(cudaStream_t hStream, cudaLaunchAttributeID attr, cudaLaunchAttributeValue * value_out);
# 2612 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamSetAttribute(cudaStream_t hStream, cudaLaunchAttributeID attr, const cudaLaunchAttributeValue * value);
# 2646 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamDestroy(cudaStream_t stream);
# 2677 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamWaitEvent(cudaStream_t stream, cudaEvent_t event, unsigned flags = 0);
# 2685 "/usr/include/cuda_runtime_api.h" 3
typedef void (*cudaStreamCallback_t)(cudaStream_t stream, cudaError_t status, void * userData);
# 2752 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamAddCallback(cudaStream_t stream, cudaStreamCallback_t callback, void * userData, unsigned flags);
# 2776 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamSynchronize(cudaStream_t stream);
# 2801 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamQuery(cudaStream_t stream);
# 2885 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamAttachMemAsync(cudaStream_t stream, void * devPtr, size_t length = 0, unsigned flags = 4);
# 2924 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamBeginCapture(cudaStream_t stream, cudaStreamCaptureMode mode);
# 2975 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaThreadExchangeStreamCaptureMode(cudaStreamCaptureMode * mode);
# 3003 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamEndCapture(cudaStream_t stream, cudaGraph_t * pGraph);
# 3041 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamIsCapturing(cudaStream_t stream, cudaStreamCaptureStatus * pCaptureStatus);
# 3089 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamGetCaptureInfo_v2(cudaStream_t stream, cudaStreamCaptureStatus * captureStatus_out, unsigned long long * id_out = 0, cudaGraph_t * graph_out = 0, const cudaGraphNode_t ** dependencies_out = 0, size_t * numDependencies_out = 0);
# 3121 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaStreamUpdateCaptureDependencies(cudaStream_t stream, cudaGraphNode_t * dependencies, size_t numDependencies, unsigned flags = 0);
# 3158 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventCreate(cudaEvent_t * event);
# 3195 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventCreateWithFlags(cudaEvent_t * event, unsigned flags);
# 3235 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventRecord(cudaEvent_t event, cudaStream_t stream = 0);
# 3282 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventRecordWithFlags(cudaEvent_t event, cudaStream_t stream = 0, unsigned flags = 0);
# 3314 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventQuery(cudaEvent_t event);
# 3344 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventSynchronize(cudaEvent_t event);
# 3373 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventDestroy(cudaEvent_t event);
# 3417 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaEventElapsedTime(float * ms, cudaEvent_t start, cudaEvent_t end);
# 3598 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaImportExternalMemory(cudaExternalMemory_t * extMem_out, const cudaExternalMemoryHandleDesc * memHandleDesc);
# 3653 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaExternalMemoryGetMappedBuffer(void ** devPtr, cudaExternalMemory_t extMem, const cudaExternalMemoryBufferDesc * bufferDesc);
# 3713 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaExternalMemoryGetMappedMipmappedArray(cudaMipmappedArray_t * mipmap, cudaExternalMemory_t extMem, const cudaExternalMemoryMipmappedArrayDesc * mipmapDesc);
# 3737 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDestroyExternalMemory(cudaExternalMemory_t extMem);
# 3891 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaImportExternalSemaphore(cudaExternalSemaphore_t * extSem_out, const cudaExternalSemaphoreHandleDesc * semHandleDesc);
# 3974 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaSignalExternalSemaphoresAsync_v2(const cudaExternalSemaphore_t * extSemArray, const cudaExternalSemaphoreSignalParams * paramsArray, unsigned numExtSems, cudaStream_t stream = 0);
# 4050 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaWaitExternalSemaphoresAsync_v2(const cudaExternalSemaphore_t * extSemArray, const cudaExternalSemaphoreWaitParams * paramsArray, unsigned numExtSems, cudaStream_t stream = 0);
# 4073 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDestroyExternalSemaphore(cudaExternalSemaphore_t extSem);
# 4140 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaLaunchKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, size_t sharedMem, cudaStream_t stream);
# 4202 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaLaunchKernelExC(const cudaLaunchConfig_t * config, const void * func, void ** args);
# 4259 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaLaunchCooperativeKernel(const void * func, dim3 gridDim, dim3 blockDim, void ** args, size_t sharedMem, cudaStream_t stream);
# 4360 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaLaunchCooperativeKernelMultiDevice(cudaLaunchParams * launchParamsList, unsigned numDevices, unsigned flags = 0);
# 4405 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFuncSetCacheConfig(const void * func, cudaFuncCache cacheConfig);
# 4460 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFuncSetSharedMemConfig(const void * func, cudaSharedMemConfig config);
# 4493 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFuncGetAttributes(cudaFuncAttributes * attr, const void * func);
# 4530 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFuncSetAttribute(const void * func, cudaFuncAttribute attr, int value);
# 4554 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaSetDoubleForDevice(double * d);
# 4578 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaSetDoubleForHost(double * d);
# 4644 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaLaunchHostFunc(cudaStream_t stream, cudaHostFn_t fn, void * userData);
# 4701 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize);
# 4730 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaOccupancyAvailableDynamicSMemPerBlock(size_t * dynamicSmemSize, const void * func, int numBlocks, int blockSize);
# 4775 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, const void * func, int blockSize, size_t dynamicSMemSize, unsigned flags);
# 4810 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxPotentialClusterSize(int * clusterSize, const void * func, const cudaLaunchConfig_t * launchConfig);
# 4849 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaOccupancyMaxActiveClusters(int * numClusters, const void * func, const cudaLaunchConfig_t * launchConfig);
# 4969 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocManaged(void ** devPtr, size_t size, unsigned flags = 1);
# 5002 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMalloc(void ** devPtr, size_t size);
# 5035 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocHost(void ** ptr, size_t size);
# 5078 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocPitch(void ** devPtr, size_t * pitch, size_t width, size_t height);
# 5130 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, size_t width, size_t height = 0, unsigned flags = 0);
# 5168 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFree(void * devPtr);
# 5191 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFreeHost(void * ptr);
# 5214 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFreeArray(cudaArray_t array);
# 5237 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFreeMipmappedArray(cudaMipmappedArray_t mipmappedArray);
# 5303 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostAlloc(void ** pHost, size_t size, unsigned flags);
# 5396 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostRegister(void * ptr, size_t size, unsigned flags);
# 5419 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostUnregister(void * ptr);
# 5464 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostGetDevicePointer(void ** pDevice, void * pHost, unsigned flags);
# 5486 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaHostGetFlags(unsigned * pFlags, void * pHost);
# 5525 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMalloc3D(cudaPitchedPtr * pitchedDevPtr, cudaExtent extent);
# 5670 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMalloc3DArray(cudaArray_t * array, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned flags = 0);
# 5815 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocMipmappedArray(cudaMipmappedArray_t * mipmappedArray, const cudaChannelFormatDesc * desc, cudaExtent extent, unsigned numLevels, unsigned flags = 0);
# 5848 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetMipmappedArrayLevel(cudaArray_t * levelArray, cudaMipmappedArray_const_t mipmappedArray, unsigned level);
# 5953 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3D(const cudaMemcpy3DParms * p);
# 5985 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3DPeer(const cudaMemcpy3DPeerParms * p);
# 6103 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3DAsync(const cudaMemcpy3DParms * p, cudaStream_t stream = 0);
# 6130 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy3DPeerAsync(const cudaMemcpy3DPeerParms * p, cudaStream_t stream = 0);
# 6164 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemGetInfo(size_t * free, size_t * total);
# 6190 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaArrayGetInfo(cudaChannelFormatDesc * desc, cudaExtent * extent, unsigned * flags, cudaArray_t array);
# 6219 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaArrayGetPlane(cudaArray_t * pPlaneArray, cudaArray_t hArray, unsigned planeIdx);
# 6242 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaArrayGetMemoryRequirements(cudaArrayMemoryRequirements * memoryRequirements, cudaArray_t array, int device);
# 6266 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMipmappedArrayGetMemoryRequirements(cudaArrayMemoryRequirements * memoryRequirements, cudaMipmappedArray_t mipmap, int device);
# 6294 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaArrayGetSparseProperties(cudaArraySparseProperties * sparseProperties, cudaArray_t array);
# 6324 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMipmappedArrayGetSparseProperties(cudaArraySparseProperties * sparseProperties, cudaMipmappedArray_t mipmap);
# 6369 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy(void * dst, const void * src, size_t count, cudaMemcpyKind kind);
# 6404 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyPeer(void * dst, int dstDevice, const void * src, int srcDevice, size_t count);
# 6453 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2D(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind);
# 6503 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind);
# 6553 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DFromArray(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind);
# 6600 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t width, size_t height, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 6643 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyToSymbol(const void * symbol, const void * src, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyHostToDevice);
# 6686 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyFromSymbol(void * dst, const void * symbol, size_t count, size_t offset = 0, cudaMemcpyKind kind = cudaMemcpyDeviceToHost);
# 6743 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyAsync(void * dst, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 6778 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyPeerAsync(void * dst, int dstDevice, const void * src, int srcDevice, size_t count, cudaStream_t stream = 0);
# 6841 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DAsync(void * dst, size_t dpitch, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 6899 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t spitch, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 6956 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpy2DFromArrayAsync(void * dst, size_t dpitch, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t width, size_t height, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 7007 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyToSymbolAsync(const void * symbol, const void * src, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 7058 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemcpyFromSymbolAsync(void * dst, const void * symbol, size_t count, size_t offset, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 7087 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset(void * devPtr, int value, size_t count);
# 7121 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset2D(void * devPtr, size_t pitch, int value, size_t width, size_t height);
# 7167 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset3D(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent);
# 7203 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemsetAsync(void * devPtr, int value, size_t count, cudaStream_t stream = 0);
# 7244 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset2DAsync(void * devPtr, size_t pitch, int value, size_t width, size_t height, cudaStream_t stream = 0);
# 7297 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemset3DAsync(cudaPitchedPtr pitchedDevPtr, int value, cudaExtent extent, cudaStream_t stream = 0);
# 7325 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetSymbolAddress(void ** devPtr, const void * symbol);
# 7352 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetSymbolSize(size_t * size, const void * symbol);
# 7422 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPrefetchAsync(const void * devPtr, size_t count, int dstDevice, cudaStream_t stream = 0);
# 7538 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemAdvise(const void * devPtr, size_t count, cudaMemoryAdvise advice, int device);
# 7597 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemRangeGetAttribute(void * data, size_t dataSize, cudaMemRangeAttribute attribute, const void * devPtr, size_t count);
# 7636 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemRangeGetAttributes(void ** data, size_t * dataSizes, cudaMemRangeAttribute * attributes, size_t numAttributes, const void * devPtr, size_t count);
# 7696 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaMemcpyToArray(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind);
# 7738 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaMemcpyFromArray(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind);
# 7781 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaMemcpyArrayToArray(cudaArray_t dst, size_t wOffsetDst, size_t hOffsetDst, cudaArray_const_t src, size_t wOffsetSrc, size_t hOffsetSrc, size_t count, cudaMemcpyKind kind = cudaMemcpyDeviceToDevice);
# 7832 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaMemcpyToArrayAsync(cudaArray_t dst, size_t wOffset, size_t hOffset, const void * src, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 7882 "/usr/include/cuda_runtime_api.h" 3
__attribute((deprecated)) extern cudaError_t cudaMemcpyFromArrayAsync(void * dst, cudaArray_const_t src, size_t wOffset, size_t hOffset, size_t count, cudaMemcpyKind kind, cudaStream_t stream = 0);
# 7951 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocAsync(void ** devPtr, size_t size, cudaStream_t hStream);
# 7977 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaFreeAsync(void * devPtr, cudaStream_t hStream);
# 8002 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPoolTrimTo(cudaMemPool_t memPool, size_t minBytesToKeep);
# 8046 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPoolSetAttribute(cudaMemPool_t memPool, cudaMemPoolAttr attr, void * value);
# 8094 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPoolGetAttribute(cudaMemPool_t memPool, cudaMemPoolAttr attr, void * value);
# 8109 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPoolSetAccess(cudaMemPool_t memPool, const cudaMemAccessDesc * descList, size_t count);
# 8122 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPoolGetAccess(cudaMemAccessFlags * flags, cudaMemPool_t memPool, cudaMemLocation * location);
# 8142 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPoolCreate(cudaMemPool_t * memPool, const cudaMemPoolProps * poolProps);
# 8164 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPoolDestroy(cudaMemPool_t memPool);
# 8200 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMallocFromPoolAsync(void ** ptr, size_t size, cudaMemPool_t memPool, cudaStream_t stream);
# 8225 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPoolExportToShareableHandle(void * shareableHandle, cudaMemPool_t memPool, cudaMemAllocationHandleType handleType, unsigned flags);
# 8252 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPoolImportFromShareableHandle(cudaMemPool_t * memPool, void * shareableHandle, cudaMemAllocationHandleType handleType, unsigned flags);
# 8275 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPoolExportPointer(cudaMemPoolPtrExportData * exportData, void * ptr);
# 8304 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaMemPoolImportPointer(void ** ptr, cudaMemPool_t memPool, cudaMemPoolPtrExportData * exportData);
# 8457 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaPointerGetAttributes(cudaPointerAttributes * attributes, const void * ptr);
# 8498 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceCanAccessPeer(int * canAccessPeer, int device, int peerDevice);
# 8540 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceEnablePeerAccess(int peerDevice, unsigned flags);
# 8562 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceDisablePeerAccess(int peerDevice);
# 8626 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsUnregisterResource(cudaGraphicsResource_t resource);
# 8661 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsResourceSetMapFlags(cudaGraphicsResource_t resource, unsigned flags);
# 8700 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsMapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 8735 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsUnmapResources(int count, cudaGraphicsResource_t * resources, cudaStream_t stream = 0);
# 8767 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsResourceGetMappedPointer(void ** devPtr, size_t * size, cudaGraphicsResource_t resource);
# 8805 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsSubResourceGetMappedArray(cudaArray_t * array, cudaGraphicsResource_t resource, unsigned arrayIndex, unsigned mipLevel);
# 8834 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphicsResourceGetMappedMipmappedArray(cudaMipmappedArray_t * mipmappedArray, cudaGraphicsResource_t resource);
# 8869 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetChannelDesc(cudaChannelFormatDesc * desc, cudaArray_const_t array);
# 8899 "/usr/include/cuda_runtime_api.h" 3
extern cudaChannelFormatDesc cudaCreateChannelDesc(int x, int y, int z, int w, cudaChannelFormatKind f);
# 9123 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaCreateTextureObject(cudaTextureObject_t * pTexObject, const cudaResourceDesc * pResDesc, const cudaTextureDesc * pTexDesc, const cudaResourceViewDesc * pResViewDesc);
# 9143 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDestroyTextureObject(cudaTextureObject_t texObject);
# 9163 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureObjectResourceDesc(cudaResourceDesc * pResDesc, cudaTextureObject_t texObject);
# 9183 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureObjectTextureDesc(cudaTextureDesc * pTexDesc, cudaTextureObject_t texObject);
# 9204 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetTextureObjectResourceViewDesc(cudaResourceViewDesc * pResViewDesc, cudaTextureObject_t texObject);
# 9249 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaCreateSurfaceObject(cudaSurfaceObject_t * pSurfObject, const cudaResourceDesc * pResDesc);
# 9269 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDestroySurfaceObject(cudaSurfaceObject_t surfObject);
# 9288 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetSurfaceObjectResourceDesc(cudaResourceDesc * pResDesc, cudaSurfaceObject_t surfObject);
# 9322 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDriverGetVersion(int * driverVersion);
# 9351 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaRuntimeGetVersion(int * runtimeVersion);
# 9398 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphCreate(cudaGraph_t * pGraph, unsigned flags);
# 9495 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddKernelNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, const cudaKernelNodeParams * pNodeParams);
# 9528 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphKernelNodeGetParams(cudaGraphNode_t node, cudaKernelNodeParams * pNodeParams);
# 9553 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphKernelNodeSetParams(cudaGraphNode_t node, const cudaKernelNodeParams * pNodeParams);
# 9573 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphKernelNodeCopyAttributes(cudaGraphNode_t hSrc, cudaGraphNode_t hDst);
# 9596 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphKernelNodeGetAttribute(cudaGraphNode_t hNode, cudaLaunchAttributeID attr, cudaLaunchAttributeValue * value_out);
# 9620 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphKernelNodeSetAttribute(cudaGraphNode_t hNode, cudaLaunchAttributeID attr, const cudaLaunchAttributeValue * value);
# 9670 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddMemcpyNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, const cudaMemcpy3DParms * pCopyParams);
# 9729 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddMemcpyNodeToSymbol(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, const void * symbol, const void * src, size_t count, size_t offset, cudaMemcpyKind kind);
# 9798 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddMemcpyNodeFromSymbol(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, void * dst, const void * symbol, size_t count, size_t offset, cudaMemcpyKind kind);
# 9866 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddMemcpyNode1D(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, void * dst, const void * src, size_t count, cudaMemcpyKind kind);
# 9898 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphMemcpyNodeGetParams(cudaGraphNode_t node, cudaMemcpy3DParms * pNodeParams);
# 9924 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphMemcpyNodeSetParams(cudaGraphNode_t node, const cudaMemcpy3DParms * pNodeParams);
# 9963 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphMemcpyNodeSetParamsToSymbol(cudaGraphNode_t node, const void * symbol, const void * src, size_t count, size_t offset, cudaMemcpyKind kind);
# 10009 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphMemcpyNodeSetParamsFromSymbol(cudaGraphNode_t node, void * dst, const void * symbol, size_t count, size_t offset, cudaMemcpyKind kind);
# 10055 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphMemcpyNodeSetParams1D(cudaGraphNode_t node, void * dst, const void * src, size_t count, cudaMemcpyKind kind);
# 10102 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddMemsetNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, const cudaMemsetParams * pMemsetParams);
# 10125 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphMemsetNodeGetParams(cudaGraphNode_t node, cudaMemsetParams * pNodeParams);
# 10148 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphMemsetNodeSetParams(cudaGraphNode_t node, const cudaMemsetParams * pNodeParams);
# 10189 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddHostNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, const cudaHostNodeParams * pNodeParams);
# 10212 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphHostNodeGetParams(cudaGraphNode_t node, cudaHostNodeParams * pNodeParams);
# 10235 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphHostNodeSetParams(cudaGraphNode_t node, const cudaHostNodeParams * pNodeParams);
# 10275 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddChildGraphNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, cudaGraph_t childGraph);
# 10302 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphChildGraphNodeGetGraph(cudaGraphNode_t node, cudaGraph_t * pGraph);
# 10339 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddEmptyNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies);
# 10382 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddEventRecordNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, cudaEvent_t event);
# 10409 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphEventRecordNodeGetEvent(cudaGraphNode_t node, cudaEvent_t * event_out);
# 10436 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphEventRecordNodeSetEvent(cudaGraphNode_t node, cudaEvent_t event);
# 10482 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddEventWaitNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, cudaEvent_t event);
# 10509 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphEventWaitNodeGetEvent(cudaGraphNode_t node, cudaEvent_t * event_out);
# 10536 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphEventWaitNodeSetEvent(cudaGraphNode_t node, cudaEvent_t event);
# 10585 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddExternalSemaphoresSignalNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, const cudaExternalSemaphoreSignalNodeParams * nodeParams);
# 10618 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExternalSemaphoresSignalNodeGetParams(cudaGraphNode_t hNode, cudaExternalSemaphoreSignalNodeParams * params_out);
# 10645 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExternalSemaphoresSignalNodeSetParams(cudaGraphNode_t hNode, const cudaExternalSemaphoreSignalNodeParams * nodeParams);
# 10694 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddExternalSemaphoresWaitNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, const cudaExternalSemaphoreWaitNodeParams * nodeParams);
# 10727 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExternalSemaphoresWaitNodeGetParams(cudaGraphNode_t hNode, cudaExternalSemaphoreWaitNodeParams * params_out);
# 10754 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExternalSemaphoresWaitNodeSetParams(cudaGraphNode_t hNode, const cudaExternalSemaphoreWaitNodeParams * nodeParams);
# 10831 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddMemAllocNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, cudaMemAllocNodeParams * nodeParams);
# 10858 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphMemAllocNodeGetParams(cudaGraphNode_t node, cudaMemAllocNodeParams * params_out);
# 10918 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddMemFreeNode(cudaGraphNode_t * pGraphNode, cudaGraph_t graph, const cudaGraphNode_t * pDependencies, size_t numDependencies, void * dptr);
# 10942 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphMemFreeNodeGetParams(cudaGraphNode_t node, void * dptr_out);
# 10970 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGraphMemTrim(int device);
# 11007 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceGetGraphMemAttribute(int device, cudaGraphMemAttributeType attr, void * value);
# 11041 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaDeviceSetGraphMemAttribute(int device, cudaGraphMemAttributeType attr, void * value);
# 11069 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphClone(cudaGraph_t * pGraphClone, cudaGraph_t originalGraph);
# 11097 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphNodeFindInClone(cudaGraphNode_t * pNode, cudaGraphNode_t originalNode, cudaGraph_t clonedGraph);
# 11128 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphNodeGetType(cudaGraphNode_t node, cudaGraphNodeType * pType);
# 11159 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphGetNodes(cudaGraph_t graph, cudaGraphNode_t * nodes, size_t * numNodes);
# 11190 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphGetRootNodes(cudaGraph_t graph, cudaGraphNode_t * pRootNodes, size_t * pNumRootNodes);
# 11224 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphGetEdges(cudaGraph_t graph, cudaGraphNode_t * from, cudaGraphNode_t * to, size_t * numEdges);
# 11255 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphNodeGetDependencies(cudaGraphNode_t node, cudaGraphNode_t * pDependencies, size_t * pNumDependencies);
# 11287 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphNodeGetDependentNodes(cudaGraphNode_t node, cudaGraphNode_t * pDependentNodes, size_t * pNumDependentNodes);
# 11318 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphAddDependencies(cudaGraph_t graph, const cudaGraphNode_t * from, const cudaGraphNode_t * to, size_t numDependencies);
# 11349 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphRemoveDependencies(cudaGraph_t graph, const cudaGraphNode_t * from, const cudaGraphNode_t * to, size_t numDependencies);
# 11379 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphDestroyNode(cudaGraphNode_t node);
# 11441 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphInstantiate(cudaGraphExec_t * pGraphExec, cudaGraph_t graph, unsigned long long flags = 0);
# 11512 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphInstantiateWithFlags(cudaGraphExec_t * pGraphExec, cudaGraph_t graph, unsigned long long flags = 0);
# 11617 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphInstantiateWithParams(cudaGraphExec_t * pGraphExec, cudaGraph_t graph, cudaGraphInstantiateParams * instantiateParams);
# 11642 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecGetFlags(cudaGraphExec_t graphExec, unsigned long long * flags);
# 11693 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecKernelNodeSetParams(cudaGraphExec_t hGraphExec, cudaGraphNode_t node, const cudaKernelNodeParams * pNodeParams);
# 11743 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecMemcpyNodeSetParams(cudaGraphExec_t hGraphExec, cudaGraphNode_t node, const cudaMemcpy3DParms * pNodeParams);
# 11798 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecMemcpyNodeSetParamsToSymbol(cudaGraphExec_t hGraphExec, cudaGraphNode_t node, const void * symbol, const void * src, size_t count, size_t offset, cudaMemcpyKind kind);
# 11861 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecMemcpyNodeSetParamsFromSymbol(cudaGraphExec_t hGraphExec, cudaGraphNode_t node, void * dst, const void * symbol, size_t count, size_t offset, cudaMemcpyKind kind);
# 11922 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecMemcpyNodeSetParams1D(cudaGraphExec_t hGraphExec, cudaGraphNode_t node, void * dst, const void * src, size_t count, cudaMemcpyKind kind);
# 11976 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecMemsetNodeSetParams(cudaGraphExec_t hGraphExec, cudaGraphNode_t node, const cudaMemsetParams * pNodeParams);
# 12015 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecHostNodeSetParams(cudaGraphExec_t hGraphExec, cudaGraphNode_t node, const cudaHostNodeParams * pNodeParams);
# 12061 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecChildGraphNodeSetParams(cudaGraphExec_t hGraphExec, cudaGraphNode_t node, cudaGraph_t childGraph);
# 12105 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecEventRecordNodeSetEvent(cudaGraphExec_t hGraphExec, cudaGraphNode_t hNode, cudaEvent_t event);
# 12149 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecEventWaitNodeSetEvent(cudaGraphExec_t hGraphExec, cudaGraphNode_t hNode, cudaEvent_t event);
# 12196 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecExternalSemaphoresSignalNodeSetParams(cudaGraphExec_t hGraphExec, cudaGraphNode_t hNode, const cudaExternalSemaphoreSignalNodeParams * nodeParams);
# 12243 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecExternalSemaphoresWaitNodeSetParams(cudaGraphExec_t hGraphExec, cudaGraphNode_t hNode, const cudaExternalSemaphoreWaitNodeParams * nodeParams);
# 12283 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphNodeSetEnabled(cudaGraphExec_t hGraphExec, cudaGraphNode_t hNode, unsigned isEnabled);
# 12317 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphNodeGetEnabled(cudaGraphExec_t hGraphExec, cudaGraphNode_t hNode, unsigned * isEnabled);
# 12402 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecUpdate(cudaGraphExec_t hGraphExec, cudaGraph_t hGraph, cudaGraphExecUpdateResultInfo * resultInfo);
# 12427 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphUpload(cudaGraphExec_t graphExec, cudaStream_t stream);
# 12458 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphLaunch(cudaGraphExec_t graphExec, cudaStream_t stream);
# 12481 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphExecDestroy(cudaGraphExec_t graphExec);
# 12502 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphDestroy(cudaGraph_t graph);
# 12521 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphDebugDotPrint(cudaGraph_t graph, const char * path, unsigned flags);
# 12557 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaUserObjectCreate(cudaUserObject_t * object_out, void * ptr, cudaHostFn_t destroy, unsigned initialRefcount, unsigned flags);
# 12581 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaUserObjectRetain(cudaUserObject_t object, unsigned count = 1);
# 12609 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaUserObjectRelease(cudaUserObject_t object, unsigned count = 1);
# 12637 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphRetainUserObject(cudaGraph_t graph, cudaUserObject_t object, unsigned count = 1, unsigned flags = 0);
# 12662 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGraphReleaseUserObject(cudaGraph_t graph, cudaUserObject_t object, unsigned count = 1);
# 12740 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetDriverEntryPoint(const char * symbol, void ** funcPtr, unsigned long long flags, cudaDriverEntryPointQueryResult * driverStatus = 0);
# 12748 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetExportTable(const void ** ppExportTable, const cudaUUID_t * pExportTableId);
# 12927 "/usr/include/cuda_runtime_api.h" 3
extern cudaError_t cudaGetFuncBySymbol(cudaFunction_t * functionPtr, const void * symbolPtr);
# 13088 "/usr/include/cuda_runtime_api.h" 3
}
# 117 "/usr/include/channel_descriptor.h" 3
template< class T> inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 118 "/usr/include/channel_descriptor.h" 3
{
# 119 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 120 "/usr/include/channel_descriptor.h" 3
}
# 122 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf()
# 123 "/usr/include/channel_descriptor.h" 3
{
# 124 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 126 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 127 "/usr/include/channel_descriptor.h" 3
}
# 129 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf1()
# 130 "/usr/include/channel_descriptor.h" 3
{
# 131 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 133 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 134 "/usr/include/channel_descriptor.h" 3
}
# 136 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf2()
# 137 "/usr/include/channel_descriptor.h" 3
{
# 138 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 140 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 141 "/usr/include/channel_descriptor.h" 3
}
# 143 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescHalf4()
# 144 "/usr/include/channel_descriptor.h" 3
{
# 145 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 147 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 148 "/usr/include/channel_descriptor.h" 3
}
# 150 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char> ()
# 151 "/usr/include/channel_descriptor.h" 3
{
# 152 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(char)) * 8);
# 157 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 159 "/usr/include/channel_descriptor.h" 3
}
# 161 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< signed char> ()
# 162 "/usr/include/channel_descriptor.h" 3
{
# 163 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 165 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 166 "/usr/include/channel_descriptor.h" 3
}
# 168 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned char> ()
# 169 "/usr/include/channel_descriptor.h" 3
{
# 170 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 172 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 173 "/usr/include/channel_descriptor.h" 3
}
# 175 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char1> ()
# 176 "/usr/include/channel_descriptor.h" 3
{
# 177 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 179 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 180 "/usr/include/channel_descriptor.h" 3
}
# 182 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar1> ()
# 183 "/usr/include/channel_descriptor.h" 3
{
# 184 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 186 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 187 "/usr/include/channel_descriptor.h" 3
}
# 189 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char2> ()
# 190 "/usr/include/channel_descriptor.h" 3
{
# 191 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 193 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 194 "/usr/include/channel_descriptor.h" 3
}
# 196 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar2> ()
# 197 "/usr/include/channel_descriptor.h" 3
{
# 198 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 200 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 201 "/usr/include/channel_descriptor.h" 3
}
# 203 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< char4> ()
# 204 "/usr/include/channel_descriptor.h" 3
{
# 205 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(signed char)) * 8);
# 207 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 208 "/usr/include/channel_descriptor.h" 3
}
# 210 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uchar4> ()
# 211 "/usr/include/channel_descriptor.h" 3
{
# 212 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned char)) * 8);
# 214 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 215 "/usr/include/channel_descriptor.h" 3
}
# 217 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short> ()
# 218 "/usr/include/channel_descriptor.h" 3
{
# 219 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 221 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 222 "/usr/include/channel_descriptor.h" 3
}
# 224 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned short> ()
# 225 "/usr/include/channel_descriptor.h" 3
{
# 226 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 228 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 229 "/usr/include/channel_descriptor.h" 3
}
# 231 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short1> ()
# 232 "/usr/include/channel_descriptor.h" 3
{
# 233 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 235 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 236 "/usr/include/channel_descriptor.h" 3
}
# 238 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort1> ()
# 239 "/usr/include/channel_descriptor.h" 3
{
# 240 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 242 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 243 "/usr/include/channel_descriptor.h" 3
}
# 245 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short2> ()
# 246 "/usr/include/channel_descriptor.h" 3
{
# 247 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 249 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 250 "/usr/include/channel_descriptor.h" 3
}
# 252 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort2> ()
# 253 "/usr/include/channel_descriptor.h" 3
{
# 254 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 256 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 257 "/usr/include/channel_descriptor.h" 3
}
# 259 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< short4> ()
# 260 "/usr/include/channel_descriptor.h" 3
{
# 261 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(short)) * 8);
# 263 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 264 "/usr/include/channel_descriptor.h" 3
}
# 266 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< ushort4> ()
# 267 "/usr/include/channel_descriptor.h" 3
{
# 268 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned short)) * 8);
# 270 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 271 "/usr/include/channel_descriptor.h" 3
}
# 273 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int> ()
# 274 "/usr/include/channel_descriptor.h" 3
{
# 275 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 277 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 278 "/usr/include/channel_descriptor.h" 3
}
# 280 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< unsigned> ()
# 281 "/usr/include/channel_descriptor.h" 3
{
# 282 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 284 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 285 "/usr/include/channel_descriptor.h" 3
}
# 287 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int1> ()
# 288 "/usr/include/channel_descriptor.h" 3
{
# 289 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 291 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindSigned);
# 292 "/usr/include/channel_descriptor.h" 3
}
# 294 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint1> ()
# 295 "/usr/include/channel_descriptor.h" 3
{
# 296 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 298 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindUnsigned);
# 299 "/usr/include/channel_descriptor.h" 3
}
# 301 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int2> ()
# 302 "/usr/include/channel_descriptor.h" 3
{
# 303 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 305 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindSigned);
# 306 "/usr/include/channel_descriptor.h" 3
}
# 308 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint2> ()
# 309 "/usr/include/channel_descriptor.h" 3
{
# 310 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 312 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindUnsigned);
# 313 "/usr/include/channel_descriptor.h" 3
}
# 315 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< int4> ()
# 316 "/usr/include/channel_descriptor.h" 3
{
# 317 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(int)) * 8);
# 319 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindSigned);
# 320 "/usr/include/channel_descriptor.h" 3
}
# 322 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< uint4> ()
# 323 "/usr/include/channel_descriptor.h" 3
{
# 324 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(unsigned)) * 8);
# 326 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindUnsigned);
# 327 "/usr/include/channel_descriptor.h" 3
}
# 389 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float> ()
# 390 "/usr/include/channel_descriptor.h" 3
{
# 391 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 393 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 394 "/usr/include/channel_descriptor.h" 3
}
# 396 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float1> ()
# 397 "/usr/include/channel_descriptor.h" 3
{
# 398 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 400 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, 0, 0, 0, cudaChannelFormatKindFloat);
# 401 "/usr/include/channel_descriptor.h" 3
}
# 403 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float2> ()
# 404 "/usr/include/channel_descriptor.h" 3
{
# 405 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 407 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, 0, 0, cudaChannelFormatKindFloat);
# 408 "/usr/include/channel_descriptor.h" 3
}
# 410 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< float4> ()
# 411 "/usr/include/channel_descriptor.h" 3
{
# 412 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(float)) * 8);
# 414 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, e, cudaChannelFormatKindFloat);
# 415 "/usr/include/channel_descriptor.h" 3
}
# 417 "/usr/include/channel_descriptor.h" 3
static inline cudaChannelFormatDesc cudaCreateChannelDescNV12()
# 418 "/usr/include/channel_descriptor.h" 3
{
# 419 "/usr/include/channel_descriptor.h" 3
int e = (((int)sizeof(char)) * 8);
# 421 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(e, e, e, 0, cudaChannelFormatKindNV12);
# 422 "/usr/include/channel_descriptor.h" 3
}
# 424 "/usr/include/channel_descriptor.h" 3
template< cudaChannelFormatKind > inline cudaChannelFormatDesc cudaCreateChannelDesc()
# 425 "/usr/include/channel_descriptor.h" 3
{
# 426 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(0, 0, 0, 0, cudaChannelFormatKindNone);
# 427 "/usr/include/channel_descriptor.h" 3
}
# 430 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindSignedNormalized8X1> ()
# 431 "/usr/include/channel_descriptor.h" 3
{
# 432 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 0, 0, 0, cudaChannelFormatKindSignedNormalized8X1);
# 433 "/usr/include/channel_descriptor.h" 3
}
# 435 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindSignedNormalized8X2> ()
# 436 "/usr/include/channel_descriptor.h" 3
{
# 437 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 0, 0, cudaChannelFormatKindSignedNormalized8X2);
# 438 "/usr/include/channel_descriptor.h" 3
}
# 440 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindSignedNormalized8X4> ()
# 441 "/usr/include/channel_descriptor.h" 3
{
# 442 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 8, 8, cudaChannelFormatKindSignedNormalized8X4);
# 443 "/usr/include/channel_descriptor.h" 3
}
# 446 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedNormalized8X1> ()
# 447 "/usr/include/channel_descriptor.h" 3
{
# 448 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 0, 0, 0, cudaChannelFormatKindUnsignedNormalized8X1);
# 449 "/usr/include/channel_descriptor.h" 3
}
# 451 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedNormalized8X2> ()
# 452 "/usr/include/channel_descriptor.h" 3
{
# 453 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 0, 0, cudaChannelFormatKindUnsignedNormalized8X2);
# 454 "/usr/include/channel_descriptor.h" 3
}
# 456 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedNormalized8X4> ()
# 457 "/usr/include/channel_descriptor.h" 3
{
# 458 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 8, 8, cudaChannelFormatKindUnsignedNormalized8X4);
# 459 "/usr/include/channel_descriptor.h" 3
}
# 462 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindSignedNormalized16X1> ()
# 463 "/usr/include/channel_descriptor.h" 3
{
# 464 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(16, 0, 0, 0, cudaChannelFormatKindSignedNormalized16X1);
# 465 "/usr/include/channel_descriptor.h" 3
}
# 467 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindSignedNormalized16X2> ()
# 468 "/usr/include/channel_descriptor.h" 3
{
# 469 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(16, 16, 0, 0, cudaChannelFormatKindSignedNormalized16X2);
# 470 "/usr/include/channel_descriptor.h" 3
}
# 472 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindSignedNormalized16X4> ()
# 473 "/usr/include/channel_descriptor.h" 3
{
# 474 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(16, 16, 16, 16, cudaChannelFormatKindSignedNormalized16X4);
# 475 "/usr/include/channel_descriptor.h" 3
}
# 478 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedNormalized16X1> ()
# 479 "/usr/include/channel_descriptor.h" 3
{
# 480 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(16, 0, 0, 0, cudaChannelFormatKindUnsignedNormalized16X1);
# 481 "/usr/include/channel_descriptor.h" 3
}
# 483 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedNormalized16X2> ()
# 484 "/usr/include/channel_descriptor.h" 3
{
# 485 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(16, 16, 0, 0, cudaChannelFormatKindUnsignedNormalized16X2);
# 486 "/usr/include/channel_descriptor.h" 3
}
# 488 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedNormalized16X4> ()
# 489 "/usr/include/channel_descriptor.h" 3
{
# 490 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(16, 16, 16, 16, cudaChannelFormatKindUnsignedNormalized16X4);
# 491 "/usr/include/channel_descriptor.h" 3
}
# 494 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindNV12> ()
# 495 "/usr/include/channel_descriptor.h" 3
{
# 496 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 8, 0, cudaChannelFormatKindNV12);
# 497 "/usr/include/channel_descriptor.h" 3
}
# 500 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedBlockCompressed1> ()
# 501 "/usr/include/channel_descriptor.h" 3
{
# 502 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 8, 8, cudaChannelFormatKindUnsignedBlockCompressed1);
# 503 "/usr/include/channel_descriptor.h" 3
}
# 506 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedBlockCompressed1SRGB> ()
# 507 "/usr/include/channel_descriptor.h" 3
{
# 508 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 8, 8, cudaChannelFormatKindUnsignedBlockCompressed1SRGB);
# 509 "/usr/include/channel_descriptor.h" 3
}
# 512 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedBlockCompressed2> ()
# 513 "/usr/include/channel_descriptor.h" 3
{
# 514 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 8, 8, cudaChannelFormatKindUnsignedBlockCompressed2);
# 515 "/usr/include/channel_descriptor.h" 3
}
# 518 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedBlockCompressed2SRGB> ()
# 519 "/usr/include/channel_descriptor.h" 3
{
# 520 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 8, 8, cudaChannelFormatKindUnsignedBlockCompressed2SRGB);
# 521 "/usr/include/channel_descriptor.h" 3
}
# 524 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedBlockCompressed3> ()
# 525 "/usr/include/channel_descriptor.h" 3
{
# 526 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 8, 8, cudaChannelFormatKindUnsignedBlockCompressed3);
# 527 "/usr/include/channel_descriptor.h" 3
}
# 530 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedBlockCompressed3SRGB> ()
# 531 "/usr/include/channel_descriptor.h" 3
{
# 532 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 8, 8, cudaChannelFormatKindUnsignedBlockCompressed3SRGB);
# 533 "/usr/include/channel_descriptor.h" 3
}
# 536 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedBlockCompressed4> ()
# 537 "/usr/include/channel_descriptor.h" 3
{
# 538 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 0, 0, 0, cudaChannelFormatKindUnsignedBlockCompressed4);
# 539 "/usr/include/channel_descriptor.h" 3
}
# 542 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindSignedBlockCompressed4> ()
# 543 "/usr/include/channel_descriptor.h" 3
{
# 544 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 0, 0, 0, cudaChannelFormatKindSignedBlockCompressed4);
# 545 "/usr/include/channel_descriptor.h" 3
}
# 548 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedBlockCompressed5> ()
# 549 "/usr/include/channel_descriptor.h" 3
{
# 550 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 0, 0, cudaChannelFormatKindUnsignedBlockCompressed5);
# 551 "/usr/include/channel_descriptor.h" 3
}
# 554 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindSignedBlockCompressed5> ()
# 555 "/usr/include/channel_descriptor.h" 3
{
# 556 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 0, 0, cudaChannelFormatKindSignedBlockCompressed5);
# 557 "/usr/include/channel_descriptor.h" 3
}
# 560 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedBlockCompressed6H> ()
# 561 "/usr/include/channel_descriptor.h" 3
{
# 562 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(16, 16, 16, 0, cudaChannelFormatKindUnsignedBlockCompressed6H);
# 563 "/usr/include/channel_descriptor.h" 3
}
# 566 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindSignedBlockCompressed6H> ()
# 567 "/usr/include/channel_descriptor.h" 3
{
# 568 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(16, 16, 16, 0, cudaChannelFormatKindSignedBlockCompressed6H);
# 569 "/usr/include/channel_descriptor.h" 3
}
# 572 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedBlockCompressed7> ()
# 573 "/usr/include/channel_descriptor.h" 3
{
# 574 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 8, 8, cudaChannelFormatKindUnsignedBlockCompressed7);
# 575 "/usr/include/channel_descriptor.h" 3
}
# 578 "/usr/include/channel_descriptor.h" 3
template<> inline cudaChannelFormatDesc cudaCreateChannelDesc< cudaChannelFormatKindUnsignedBlockCompressed7SRGB> ()
# 579 "/usr/include/channel_descriptor.h" 3
{
# 580 "/usr/include/channel_descriptor.h" 3
return cudaCreateChannelDesc(8, 8, 8, 8, cudaChannelFormatKindUnsignedBlockCompressed7SRGB);
# 581 "/usr/include/channel_descriptor.h" 3
}
# 79 "/usr/include/driver_functions.h" 3
static inline cudaPitchedPtr make_cudaPitchedPtr(void *d, size_t p, size_t xsz, size_t ysz)
# 80 "/usr/include/driver_functions.h" 3
{
# 81 "/usr/include/driver_functions.h" 3
cudaPitchedPtr s;
# 83 "/usr/include/driver_functions.h" 3
(s.ptr) = d;
# 84 "/usr/include/driver_functions.h" 3
(s.pitch) = p;
# 85 "/usr/include/driver_functions.h" 3
(s.xsize) = xsz;
# 86 "/usr/include/driver_functions.h" 3
(s.ysize) = ysz;
# 88 "/usr/include/driver_functions.h" 3
return s;
# 89 "/usr/include/driver_functions.h" 3
}
# 106 "/usr/include/driver_functions.h" 3
static inline cudaPos make_cudaPos(size_t x, size_t y, size_t z)
# 107 "/usr/include/driver_functions.h" 3
{
# 108 "/usr/include/driver_functions.h" 3
cudaPos p;
# 110 "/usr/include/driver_functions.h" 3
(p.x) = x;
# 111 "/usr/include/driver_functions.h" 3
(p.y) = y;
# 112 "/usr/include/driver_functions.h" 3
(p.z) = z;
# 114 "/usr/include/driver_functions.h" 3
return p;
# 115 "/usr/include/driver_functions.h" 3
}
# 132 "/usr/include/driver_functions.h" 3
static inline cudaExtent make_cudaExtent(size_t w, size_t h, size_t d)
# 133 "/usr/include/driver_functions.h" 3
{
# 134 "/usr/include/driver_functions.h" 3
cudaExtent e;
# 136 "/usr/include/driver_functions.h" 3
(e.width) = w;
# 137 "/usr/include/driver_functions.h" 3
(e.height) = h;
# 138 "/usr/include/driver_functions.h" 3
(e.depth) = d;
# 140 "/usr/include/driver_functions.h" 3
return e;
# 141 "/usr/include/driver_functions.h" 3
}
# 73 "/usr/include/vector_functions.h" 3
static inline char1 make_char1(signed char x);
# 75 "/usr/include/vector_functions.h" 3
static inline uchar1 make_uchar1(unsigned char x);
# 77 "/usr/include/vector_functions.h" 3
static inline char2 make_char2(signed char x, signed char y);
# 79 "/usr/include/vector_functions.h" 3
static inline uchar2 make_uchar2(unsigned char x, unsigned char y);
# 81 "/usr/include/vector_functions.h" 3
static inline char3 make_char3(signed char x, signed char y, signed char z);
# 83 "/usr/include/vector_functions.h" 3
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z);
# 85 "/usr/include/vector_functions.h" 3
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w);
# 87 "/usr/include/vector_functions.h" 3
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w);
# 89 "/usr/include/vector_functions.h" 3
static inline short1 make_short1(short x);
# 91 "/usr/include/vector_functions.h" 3
static inline ushort1 make_ushort1(unsigned short x);
# 93 "/usr/include/vector_functions.h" 3
static inline short2 make_short2(short x, short y);
# 95 "/usr/include/vector_functions.h" 3
static inline ushort2 make_ushort2(unsigned short x, unsigned short y);
# 97 "/usr/include/vector_functions.h" 3
static inline short3 make_short3(short x, short y, short z);
# 99 "/usr/include/vector_functions.h" 3
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z);
# 101 "/usr/include/vector_functions.h" 3
static inline short4 make_short4(short x, short y, short z, short w);
# 103 "/usr/include/vector_functions.h" 3
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w);
# 105 "/usr/include/vector_functions.h" 3
static inline int1 make_int1(int x);
# 107 "/usr/include/vector_functions.h" 3
static inline uint1 make_uint1(unsigned x);
# 109 "/usr/include/vector_functions.h" 3
static inline int2 make_int2(int x, int y);
# 111 "/usr/include/vector_functions.h" 3
static inline uint2 make_uint2(unsigned x, unsigned y);
# 113 "/usr/include/vector_functions.h" 3
static inline int3 make_int3(int x, int y, int z);
# 115 "/usr/include/vector_functions.h" 3
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z);
# 117 "/usr/include/vector_functions.h" 3
static inline int4 make_int4(int x, int y, int z, int w);
# 119 "/usr/include/vector_functions.h" 3
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w);
# 121 "/usr/include/vector_functions.h" 3
static inline long1 make_long1(long x);
# 123 "/usr/include/vector_functions.h" 3
static inline ulong1 make_ulong1(unsigned long x);
# 125 "/usr/include/vector_functions.h" 3
static inline long2 make_long2(long x, long y);
# 127 "/usr/include/vector_functions.h" 3
static inline ulong2 make_ulong2(unsigned long x, unsigned long y);
# 129 "/usr/include/vector_functions.h" 3
static inline long3 make_long3(long x, long y, long z);
# 131 "/usr/include/vector_functions.h" 3
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z);
# 133 "/usr/include/vector_functions.h" 3
static inline long4 make_long4(long x, long y, long z, long w);
# 135 "/usr/include/vector_functions.h" 3
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w);
# 137 "/usr/include/vector_functions.h" 3
static inline float1 make_float1(float x);
# 139 "/usr/include/vector_functions.h" 3
static inline float2 make_float2(float x, float y);
# 141 "/usr/include/vector_functions.h" 3
static inline float3 make_float3(float x, float y, float z);
# 143 "/usr/include/vector_functions.h" 3
static inline float4 make_float4(float x, float y, float z, float w);
# 145 "/usr/include/vector_functions.h" 3
static inline longlong1 make_longlong1(long long x);
# 147 "/usr/include/vector_functions.h" 3
static inline ulonglong1 make_ulonglong1(unsigned long long x);
# 149 "/usr/include/vector_functions.h" 3
static inline longlong2 make_longlong2(long long x, long long y);
# 151 "/usr/include/vector_functions.h" 3
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y);
# 153 "/usr/include/vector_functions.h" 3
static inline longlong3 make_longlong3(long long x, long long y, long long z);
# 155 "/usr/include/vector_functions.h" 3
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z);
# 157 "/usr/include/vector_functions.h" 3
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w);
# 159 "/usr/include/vector_functions.h" 3
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w);
# 161 "/usr/include/vector_functions.h" 3
static inline double1 make_double1(double x);
# 163 "/usr/include/vector_functions.h" 3
static inline double2 make_double2(double x, double y);
# 165 "/usr/include/vector_functions.h" 3
static inline double3 make_double3(double x, double y, double z);
# 167 "/usr/include/vector_functions.h" 3
static inline double4 make_double4(double x, double y, double z, double w);
# 73 "/usr/include/vector_functions.hpp" 3
static inline char1 make_char1(signed char x)
# 74 "/usr/include/vector_functions.hpp" 3
{
# 75 "/usr/include/vector_functions.hpp" 3
char1 t; (t.x) = x; return t;
# 76 "/usr/include/vector_functions.hpp" 3
}
# 78 "/usr/include/vector_functions.hpp" 3
static inline uchar1 make_uchar1(unsigned char x)
# 79 "/usr/include/vector_functions.hpp" 3
{
# 80 "/usr/include/vector_functions.hpp" 3
uchar1 t; (t.x) = x; return t;
# 81 "/usr/include/vector_functions.hpp" 3
}
# 83 "/usr/include/vector_functions.hpp" 3
static inline char2 make_char2(signed char x, signed char y)
# 84 "/usr/include/vector_functions.hpp" 3
{
# 85 "/usr/include/vector_functions.hpp" 3
char2 t; (t.x) = x; (t.y) = y; return t;
# 86 "/usr/include/vector_functions.hpp" 3
}
# 88 "/usr/include/vector_functions.hpp" 3
static inline uchar2 make_uchar2(unsigned char x, unsigned char y)
# 89 "/usr/include/vector_functions.hpp" 3
{
# 90 "/usr/include/vector_functions.hpp" 3
uchar2 t; (t.x) = x; (t.y) = y; return t;
# 91 "/usr/include/vector_functions.hpp" 3
}
# 93 "/usr/include/vector_functions.hpp" 3
static inline char3 make_char3(signed char x, signed char y, signed char z)
# 94 "/usr/include/vector_functions.hpp" 3
{
# 95 "/usr/include/vector_functions.hpp" 3
char3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 96 "/usr/include/vector_functions.hpp" 3
}
# 98 "/usr/include/vector_functions.hpp" 3
static inline uchar3 make_uchar3(unsigned char x, unsigned char y, unsigned char z)
# 99 "/usr/include/vector_functions.hpp" 3
{
# 100 "/usr/include/vector_functions.hpp" 3
uchar3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 101 "/usr/include/vector_functions.hpp" 3
}
# 103 "/usr/include/vector_functions.hpp" 3
static inline char4 make_char4(signed char x, signed char y, signed char z, signed char w)
# 104 "/usr/include/vector_functions.hpp" 3
{
# 105 "/usr/include/vector_functions.hpp" 3
char4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 106 "/usr/include/vector_functions.hpp" 3
}
# 108 "/usr/include/vector_functions.hpp" 3
static inline uchar4 make_uchar4(unsigned char x, unsigned char y, unsigned char z, unsigned char w)
# 109 "/usr/include/vector_functions.hpp" 3
{
# 110 "/usr/include/vector_functions.hpp" 3
uchar4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 111 "/usr/include/vector_functions.hpp" 3
}
# 113 "/usr/include/vector_functions.hpp" 3
static inline short1 make_short1(short x)
# 114 "/usr/include/vector_functions.hpp" 3
{
# 115 "/usr/include/vector_functions.hpp" 3
short1 t; (t.x) = x; return t;
# 116 "/usr/include/vector_functions.hpp" 3
}
# 118 "/usr/include/vector_functions.hpp" 3
static inline ushort1 make_ushort1(unsigned short x)
# 119 "/usr/include/vector_functions.hpp" 3
{
# 120 "/usr/include/vector_functions.hpp" 3
ushort1 t; (t.x) = x; return t;
# 121 "/usr/include/vector_functions.hpp" 3
}
# 123 "/usr/include/vector_functions.hpp" 3
static inline short2 make_short2(short x, short y)
# 124 "/usr/include/vector_functions.hpp" 3
{
# 125 "/usr/include/vector_functions.hpp" 3
short2 t; (t.x) = x; (t.y) = y; return t;
# 126 "/usr/include/vector_functions.hpp" 3
}
# 128 "/usr/include/vector_functions.hpp" 3
static inline ushort2 make_ushort2(unsigned short x, unsigned short y)
# 129 "/usr/include/vector_functions.hpp" 3
{
# 130 "/usr/include/vector_functions.hpp" 3
ushort2 t; (t.x) = x; (t.y) = y; return t;
# 131 "/usr/include/vector_functions.hpp" 3
}
# 133 "/usr/include/vector_functions.hpp" 3
static inline short3 make_short3(short x, short y, short z)
# 134 "/usr/include/vector_functions.hpp" 3
{
# 135 "/usr/include/vector_functions.hpp" 3
short3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 136 "/usr/include/vector_functions.hpp" 3
}
# 138 "/usr/include/vector_functions.hpp" 3
static inline ushort3 make_ushort3(unsigned short x, unsigned short y, unsigned short z)
# 139 "/usr/include/vector_functions.hpp" 3
{
# 140 "/usr/include/vector_functions.hpp" 3
ushort3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 141 "/usr/include/vector_functions.hpp" 3
}
# 143 "/usr/include/vector_functions.hpp" 3
static inline short4 make_short4(short x, short y, short z, short w)
# 144 "/usr/include/vector_functions.hpp" 3
{
# 145 "/usr/include/vector_functions.hpp" 3
short4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 146 "/usr/include/vector_functions.hpp" 3
}
# 148 "/usr/include/vector_functions.hpp" 3
static inline ushort4 make_ushort4(unsigned short x, unsigned short y, unsigned short z, unsigned short w)
# 149 "/usr/include/vector_functions.hpp" 3
{
# 150 "/usr/include/vector_functions.hpp" 3
ushort4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 151 "/usr/include/vector_functions.hpp" 3
}
# 153 "/usr/include/vector_functions.hpp" 3
static inline int1 make_int1(int x)
# 154 "/usr/include/vector_functions.hpp" 3
{
# 155 "/usr/include/vector_functions.hpp" 3
int1 t; (t.x) = x; return t;
# 156 "/usr/include/vector_functions.hpp" 3
}
# 158 "/usr/include/vector_functions.hpp" 3
static inline uint1 make_uint1(unsigned x)
# 159 "/usr/include/vector_functions.hpp" 3
{
# 160 "/usr/include/vector_functions.hpp" 3
uint1 t; (t.x) = x; return t;
# 161 "/usr/include/vector_functions.hpp" 3
}
# 163 "/usr/include/vector_functions.hpp" 3
static inline int2 make_int2(int x, int y)
# 164 "/usr/include/vector_functions.hpp" 3
{
# 165 "/usr/include/vector_functions.hpp" 3
int2 t; (t.x) = x; (t.y) = y; return t;
# 166 "/usr/include/vector_functions.hpp" 3
}
# 168 "/usr/include/vector_functions.hpp" 3
static inline uint2 make_uint2(unsigned x, unsigned y)
# 169 "/usr/include/vector_functions.hpp" 3
{
# 170 "/usr/include/vector_functions.hpp" 3
uint2 t; (t.x) = x; (t.y) = y; return t;
# 171 "/usr/include/vector_functions.hpp" 3
}
# 173 "/usr/include/vector_functions.hpp" 3
static inline int3 make_int3(int x, int y, int z)
# 174 "/usr/include/vector_functions.hpp" 3
{
# 175 "/usr/include/vector_functions.hpp" 3
int3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 176 "/usr/include/vector_functions.hpp" 3
}
# 178 "/usr/include/vector_functions.hpp" 3
static inline uint3 make_uint3(unsigned x, unsigned y, unsigned z)
# 179 "/usr/include/vector_functions.hpp" 3
{
# 180 "/usr/include/vector_functions.hpp" 3
uint3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 181 "/usr/include/vector_functions.hpp" 3
}
# 183 "/usr/include/vector_functions.hpp" 3
static inline int4 make_int4(int x, int y, int z, int w)
# 184 "/usr/include/vector_functions.hpp" 3
{
# 185 "/usr/include/vector_functions.hpp" 3
int4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 186 "/usr/include/vector_functions.hpp" 3
}
# 188 "/usr/include/vector_functions.hpp" 3
static inline uint4 make_uint4(unsigned x, unsigned y, unsigned z, unsigned w)
# 189 "/usr/include/vector_functions.hpp" 3
{
# 190 "/usr/include/vector_functions.hpp" 3
uint4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 191 "/usr/include/vector_functions.hpp" 3
}
# 193 "/usr/include/vector_functions.hpp" 3
static inline long1 make_long1(long x)
# 194 "/usr/include/vector_functions.hpp" 3
{
# 195 "/usr/include/vector_functions.hpp" 3
long1 t; (t.x) = x; return t;
# 196 "/usr/include/vector_functions.hpp" 3
}
# 198 "/usr/include/vector_functions.hpp" 3
static inline ulong1 make_ulong1(unsigned long x)
# 199 "/usr/include/vector_functions.hpp" 3
{
# 200 "/usr/include/vector_functions.hpp" 3
ulong1 t; (t.x) = x; return t;
# 201 "/usr/include/vector_functions.hpp" 3
}
# 203 "/usr/include/vector_functions.hpp" 3
static inline long2 make_long2(long x, long y)
# 204 "/usr/include/vector_functions.hpp" 3
{
# 205 "/usr/include/vector_functions.hpp" 3
long2 t; (t.x) = x; (t.y) = y; return t;
# 206 "/usr/include/vector_functions.hpp" 3
}
# 208 "/usr/include/vector_functions.hpp" 3
static inline ulong2 make_ulong2(unsigned long x, unsigned long y)
# 209 "/usr/include/vector_functions.hpp" 3
{
# 210 "/usr/include/vector_functions.hpp" 3
ulong2 t; (t.x) = x; (t.y) = y; return t;
# 211 "/usr/include/vector_functions.hpp" 3
}
# 213 "/usr/include/vector_functions.hpp" 3
static inline long3 make_long3(long x, long y, long z)
# 214 "/usr/include/vector_functions.hpp" 3
{
# 215 "/usr/include/vector_functions.hpp" 3
long3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 216 "/usr/include/vector_functions.hpp" 3
}
# 218 "/usr/include/vector_functions.hpp" 3
static inline ulong3 make_ulong3(unsigned long x, unsigned long y, unsigned long z)
# 219 "/usr/include/vector_functions.hpp" 3
{
# 220 "/usr/include/vector_functions.hpp" 3
ulong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 221 "/usr/include/vector_functions.hpp" 3
}
# 223 "/usr/include/vector_functions.hpp" 3
static inline long4 make_long4(long x, long y, long z, long w)
# 224 "/usr/include/vector_functions.hpp" 3
{
# 225 "/usr/include/vector_functions.hpp" 3
long4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 226 "/usr/include/vector_functions.hpp" 3
}
# 228 "/usr/include/vector_functions.hpp" 3
static inline ulong4 make_ulong4(unsigned long x, unsigned long y, unsigned long z, unsigned long w)
# 229 "/usr/include/vector_functions.hpp" 3
{
# 230 "/usr/include/vector_functions.hpp" 3
ulong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 231 "/usr/include/vector_functions.hpp" 3
}
# 233 "/usr/include/vector_functions.hpp" 3
static inline float1 make_float1(float x)
# 234 "/usr/include/vector_functions.hpp" 3
{
# 235 "/usr/include/vector_functions.hpp" 3
float1 t; (t.x) = x; return t;
# 236 "/usr/include/vector_functions.hpp" 3
}
# 238 "/usr/include/vector_functions.hpp" 3
static inline float2 make_float2(float x, float y)
# 239 "/usr/include/vector_functions.hpp" 3
{
# 240 "/usr/include/vector_functions.hpp" 3
float2 t; (t.x) = x; (t.y) = y; return t;
# 241 "/usr/include/vector_functions.hpp" 3
}
# 243 "/usr/include/vector_functions.hpp" 3
static inline float3 make_float3(float x, float y, float z)
# 244 "/usr/include/vector_functions.hpp" 3
{
# 245 "/usr/include/vector_functions.hpp" 3
float3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 246 "/usr/include/vector_functions.hpp" 3
}
# 248 "/usr/include/vector_functions.hpp" 3
static inline float4 make_float4(float x, float y, float z, float w)
# 249 "/usr/include/vector_functions.hpp" 3
{
# 250 "/usr/include/vector_functions.hpp" 3
float4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 251 "/usr/include/vector_functions.hpp" 3
}
# 253 "/usr/include/vector_functions.hpp" 3
static inline longlong1 make_longlong1(long long x)
# 254 "/usr/include/vector_functions.hpp" 3
{
# 255 "/usr/include/vector_functions.hpp" 3
longlong1 t; (t.x) = x; return t;
# 256 "/usr/include/vector_functions.hpp" 3
}
# 258 "/usr/include/vector_functions.hpp" 3
static inline ulonglong1 make_ulonglong1(unsigned long long x)
# 259 "/usr/include/vector_functions.hpp" 3
{
# 260 "/usr/include/vector_functions.hpp" 3
ulonglong1 t; (t.x) = x; return t;
# 261 "/usr/include/vector_functions.hpp" 3
}
# 263 "/usr/include/vector_functions.hpp" 3
static inline longlong2 make_longlong2(long long x, long long y)
# 264 "/usr/include/vector_functions.hpp" 3
{
# 265 "/usr/include/vector_functions.hpp" 3
longlong2 t; (t.x) = x; (t.y) = y; return t;
# 266 "/usr/include/vector_functions.hpp" 3
}
# 268 "/usr/include/vector_functions.hpp" 3
static inline ulonglong2 make_ulonglong2(unsigned long long x, unsigned long long y)
# 269 "/usr/include/vector_functions.hpp" 3
{
# 270 "/usr/include/vector_functions.hpp" 3
ulonglong2 t; (t.x) = x; (t.y) = y; return t;
# 271 "/usr/include/vector_functions.hpp" 3
}
# 273 "/usr/include/vector_functions.hpp" 3
static inline longlong3 make_longlong3(long long x, long long y, long long z)
# 274 "/usr/include/vector_functions.hpp" 3
{
# 275 "/usr/include/vector_functions.hpp" 3
longlong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 276 "/usr/include/vector_functions.hpp" 3
}
# 278 "/usr/include/vector_functions.hpp" 3
static inline ulonglong3 make_ulonglong3(unsigned long long x, unsigned long long y, unsigned long long z)
# 279 "/usr/include/vector_functions.hpp" 3
{
# 280 "/usr/include/vector_functions.hpp" 3
ulonglong3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 281 "/usr/include/vector_functions.hpp" 3
}
# 283 "/usr/include/vector_functions.hpp" 3
static inline longlong4 make_longlong4(long long x, long long y, long long z, long long w)
# 284 "/usr/include/vector_functions.hpp" 3
{
# 285 "/usr/include/vector_functions.hpp" 3
longlong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 286 "/usr/include/vector_functions.hpp" 3
}
# 288 "/usr/include/vector_functions.hpp" 3
static inline ulonglong4 make_ulonglong4(unsigned long long x, unsigned long long y, unsigned long long z, unsigned long long w)
# 289 "/usr/include/vector_functions.hpp" 3
{
# 290 "/usr/include/vector_functions.hpp" 3
ulonglong4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 291 "/usr/include/vector_functions.hpp" 3
}
# 293 "/usr/include/vector_functions.hpp" 3
static inline double1 make_double1(double x)
# 294 "/usr/include/vector_functions.hpp" 3
{
# 295 "/usr/include/vector_functions.hpp" 3
double1 t; (t.x) = x; return t;
# 296 "/usr/include/vector_functions.hpp" 3
}
# 298 "/usr/include/vector_functions.hpp" 3
static inline double2 make_double2(double x, double y)
# 299 "/usr/include/vector_functions.hpp" 3
{
# 300 "/usr/include/vector_functions.hpp" 3
double2 t; (t.x) = x; (t.y) = y; return t;
# 301 "/usr/include/vector_functions.hpp" 3
}
# 303 "/usr/include/vector_functions.hpp" 3
static inline double3 make_double3(double x, double y, double z)
# 304 "/usr/include/vector_functions.hpp" 3
{
# 305 "/usr/include/vector_functions.hpp" 3
double3 t; (t.x) = x; (t.y) = y; (t.z) = z; return t;
# 306 "/usr/include/vector_functions.hpp" 3
}
# 308 "/usr/include/vector_functions.hpp" 3
static inline double4 make_double4(double x, double y, double z, double w)
# 309 "/usr/include/vector_functions.hpp" 3
{
# 310 "/usr/include/vector_functions.hpp" 3
double4 t; (t.x) = x; (t.y) = y; (t.z) = z; (t.w) = w; return t;
# 311 "/usr/include/vector_functions.hpp" 3
}
# 28 "/usr/include/string.h" 3
extern "C" {
# 43 "/usr/include/string.h" 3
extern void *memcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) noexcept(true)
# 44 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 47 "/usr/include/string.h" 3
extern void *memmove(void * __dest, const void * __src, size_t __n) noexcept(true)
# 48 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 54 "/usr/include/string.h" 3
extern void *memccpy(void *__restrict__ __dest, const void *__restrict__ __src, int __c, size_t __n) noexcept(true)
# 56 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__access__(__write_only__ , 1 , 4 )));
# 61 "/usr/include/string.h" 3
extern void *memset(void * __s, int __c, size_t __n) noexcept(true) __attribute((__nonnull__(1)));
# 64 "/usr/include/string.h" 3
extern int memcmp(const void * __s1, const void * __s2, size_t __n) noexcept(true)
# 65 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 80 "/usr/include/string.h" 3
extern int __memcmpeq(const void * __s1, const void * __s2, size_t __n) noexcept(true)
# 81 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 85 "/usr/include/string.h" 3
extern "C++" {
# 87 "/usr/include/string.h" 3
extern void *memchr(void * __s, int __c, size_t __n) noexcept(true) __asm__("memchr")
# 88 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 89 "/usr/include/string.h" 3
extern const void *memchr(const void * __s, int __c, size_t __n) noexcept(true) __asm__("memchr")
# 90 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 105 "/usr/include/string.h" 3
}
# 115 "/usr/include/string.h" 3
extern "C++" void *rawmemchr(void * __s, int __c) noexcept(true) __asm__("rawmemchr")
# 116 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 117 "/usr/include/string.h" 3
extern "C++" const void *rawmemchr(const void * __s, int __c) noexcept(true) __asm__("rawmemchr")
# 118 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 126 "/usr/include/string.h" 3
extern "C++" void *memrchr(void * __s, int __c, size_t __n) noexcept(true) __asm__("memrchr")
# 127 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)))
# 128 "/usr/include/string.h" 3
 __attribute((__access__(__read_only__ , 1 , 3 )));
# 129 "/usr/include/string.h" 3
extern "C++" const void *memrchr(const void * __s, int __c, size_t __n) noexcept(true) __asm__("memrchr")
# 130 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)))
# 131 "/usr/include/string.h" 3
 __attribute((__access__(__read_only__ , 1 , 3 )));
# 141 "/usr/include/string.h" 3
extern char *strcpy(char *__restrict__ __dest, const char *__restrict__ __src) noexcept(true)
# 142 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 144 "/usr/include/string.h" 3
extern char *strncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) noexcept(true)
# 146 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 149 "/usr/include/string.h" 3
extern char *strcat(char *__restrict__ __dest, const char *__restrict__ __src) noexcept(true)
# 150 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 152 "/usr/include/string.h" 3
extern char *strncat(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) noexcept(true)
# 153 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 156 "/usr/include/string.h" 3
extern int strcmp(const char * __s1, const char * __s2) noexcept(true)
# 157 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 159 "/usr/include/string.h" 3
extern int strncmp(const char * __s1, const char * __s2, size_t __n) noexcept(true)
# 160 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 163 "/usr/include/string.h" 3
extern int strcoll(const char * __s1, const char * __s2) noexcept(true)
# 164 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 166 "/usr/include/string.h" 3
extern size_t strxfrm(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) noexcept(true)
# 168 "/usr/include/string.h" 3
 __attribute((__nonnull__(2))) __attribute((__access__(__write_only__ , 1 , 3 )));
# 175 "/usr/include/string.h" 3
extern int strcoll_l(const char * __s1, const char * __s2, locale_t __l) noexcept(true)
# 176 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 179 "/usr/include/string.h" 3
extern size_t strxfrm_l(char * __dest, const char * __src, size_t __n, locale_t __l) noexcept(true)
# 180 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 4)))
# 181 "/usr/include/string.h" 3
 __attribute((__access__(__write_only__ , 1 , 3 )));
# 187 "/usr/include/string.h" 3
extern char *strdup(const char * __s) noexcept(true)
# 188 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 195 "/usr/include/string.h" 3
extern char *strndup(const char * __string, size_t __n) noexcept(true)
# 196 "/usr/include/string.h" 3
 __attribute((__malloc__)) __attribute((__nonnull__(1)));
# 224 "/usr/include/string.h" 3
extern "C++" {
# 226 "/usr/include/string.h" 3
extern char *strchr(char * __s, int __c) noexcept(true) __asm__("strchr")
# 227 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 228 "/usr/include/string.h" 3
extern const char *strchr(const char * __s, int __c) noexcept(true) __asm__("strchr")
# 229 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 244 "/usr/include/string.h" 3
}
# 251 "/usr/include/string.h" 3
extern "C++" {
# 253 "/usr/include/string.h" 3
extern char *strrchr(char * __s, int __c) noexcept(true) __asm__("strrchr")
# 254 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 255 "/usr/include/string.h" 3
extern const char *strrchr(const char * __s, int __c) noexcept(true) __asm__("strrchr")
# 256 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 271 "/usr/include/string.h" 3
}
# 281 "/usr/include/string.h" 3
extern "C++" char *strchrnul(char * __s, int __c) noexcept(true) __asm__("strchrnul")
# 282 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 283 "/usr/include/string.h" 3
extern "C++" const char *strchrnul(const char * __s, int __c) noexcept(true) __asm__("strchrnul")
# 284 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 293 "/usr/include/string.h" 3
extern size_t strcspn(const char * __s, const char * __reject) noexcept(true)
# 294 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 297 "/usr/include/string.h" 3
extern size_t strspn(const char * __s, const char * __accept) noexcept(true)
# 298 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 301 "/usr/include/string.h" 3
extern "C++" {
# 303 "/usr/include/string.h" 3
extern char *strpbrk(char * __s, const char * __accept) noexcept(true) __asm__("strpbrk")
# 304 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 305 "/usr/include/string.h" 3
extern const char *strpbrk(const char * __s, const char * __accept) noexcept(true) __asm__("strpbrk")
# 306 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 321 "/usr/include/string.h" 3
}
# 328 "/usr/include/string.h" 3
extern "C++" {
# 330 "/usr/include/string.h" 3
extern char *strstr(char * __haystack, const char * __needle) noexcept(true) __asm__("strstr")
# 331 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 332 "/usr/include/string.h" 3
extern const char *strstr(const char * __haystack, const char * __needle) noexcept(true) __asm__("strstr")
# 333 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 348 "/usr/include/string.h" 3
}
# 356 "/usr/include/string.h" 3
extern char *strtok(char *__restrict__ __s, const char *__restrict__ __delim) noexcept(true)
# 357 "/usr/include/string.h" 3
 __attribute((__nonnull__(2)));
# 361 "/usr/include/string.h" 3
extern char *__strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) noexcept(true)
# 364 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 366 "/usr/include/string.h" 3
extern char *strtok_r(char *__restrict__ __s, const char *__restrict__ __delim, char **__restrict__ __save_ptr) noexcept(true)
# 368 "/usr/include/string.h" 3
 __attribute((__nonnull__(2, 3)));
# 374 "/usr/include/string.h" 3
extern "C++" char *strcasestr(char * __haystack, const char * __needle) noexcept(true) __asm__("strcasestr")
# 375 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 376 "/usr/include/string.h" 3
extern "C++" const char *strcasestr(const char * __haystack, const char * __needle) noexcept(true) __asm__("strcasestr")
# 378 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 389 "/usr/include/string.h" 3
extern void *memmem(const void * __haystack, size_t __haystacklen, const void * __needle, size_t __needlelen) noexcept(true)
# 391 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 3)))
# 392 "/usr/include/string.h" 3
 __attribute((__access__(__read_only__ , 1 , 2 )))
# 393 "/usr/include/string.h" 3
 __attribute((__access__(__read_only__ , 3 , 4 )));
# 397 "/usr/include/string.h" 3
extern void *__mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) noexcept(true)
# 399 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 400 "/usr/include/string.h" 3
extern void *mempcpy(void *__restrict__ __dest, const void *__restrict__ __src, size_t __n) noexcept(true)
# 402 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 407 "/usr/include/string.h" 3
extern size_t strlen(const char * __s) noexcept(true)
# 408 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 413 "/usr/include/string.h" 3
extern size_t strnlen(const char * __string, size_t __maxlen) noexcept(true)
# 414 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 419 "/usr/include/string.h" 3
extern char *strerror(int __errnum) noexcept(true);
# 444 "/usr/include/string.h" 3
extern char *strerror_r(int __errnum, char * __buf, size_t __buflen) noexcept(true)
# 445 "/usr/include/string.h" 3
 __attribute((__nonnull__(2))) __attribute((__access__(__write_only__ , 2 , 3 )));
# 450 "/usr/include/string.h" 3
extern const char *strerrordesc_np(int __err) noexcept(true);
# 452 "/usr/include/string.h" 3
extern const char *strerrorname_np(int __err) noexcept(true);
# 458 "/usr/include/string.h" 3
extern char *strerror_l(int __errnum, locale_t __l) noexcept(true);
# 30 "/usr/include/strings.h" 3
extern "C" {
# 34 "/usr/include/strings.h" 3
extern int bcmp(const void * __s1, const void * __s2, size_t __n) noexcept(true)
# 35 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 38 "/usr/include/strings.h" 3
extern void bcopy(const void * __src, void * __dest, size_t __n) noexcept(true)
# 39 "/usr/include/strings.h" 3
 __attribute((__nonnull__(1, 2)));
# 42 "/usr/include/strings.h" 3
extern void bzero(void * __s, size_t __n) noexcept(true) __attribute((__nonnull__(1)));
# 46 "/usr/include/strings.h" 3
extern "C++" {
# 48 "/usr/include/strings.h" 3
extern char *index(char * __s, int __c) noexcept(true) __asm__("index")
# 49 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 50 "/usr/include/strings.h" 3
extern const char *index(const char * __s, int __c) noexcept(true) __asm__("index")
# 51 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 66 "/usr/include/strings.h" 3
}
# 74 "/usr/include/strings.h" 3
extern "C++" {
# 76 "/usr/include/strings.h" 3
extern char *rindex(char * __s, int __c) noexcept(true) __asm__("rindex")
# 77 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 78 "/usr/include/strings.h" 3
extern const char *rindex(const char * __s, int __c) noexcept(true) __asm__("rindex")
# 79 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1)));
# 94 "/usr/include/strings.h" 3
}
# 104 "/usr/include/strings.h" 3
extern int ffs(int __i) noexcept(true) __attribute((const));
# 110 "/usr/include/strings.h" 3
extern int ffsl(long __l) noexcept(true) __attribute((const));
# 111 "/usr/include/strings.h" 3
__extension__ extern int ffsll(long long __ll) noexcept(true)
# 112 "/usr/include/strings.h" 3
 __attribute((const));
# 116 "/usr/include/strings.h" 3
extern int strcasecmp(const char * __s1, const char * __s2) noexcept(true)
# 117 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 120 "/usr/include/strings.h" 3
extern int strncasecmp(const char * __s1, const char * __s2, size_t __n) noexcept(true)
# 121 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 128 "/usr/include/strings.h" 3
extern int strcasecmp_l(const char * __s1, const char * __s2, locale_t __loc) noexcept(true)
# 129 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 3)));
# 133 "/usr/include/strings.h" 3
extern int strncasecmp_l(const char * __s1, const char * __s2, size_t __n, locale_t __loc) noexcept(true)
# 135 "/usr/include/strings.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2, 4)));
# 138 "/usr/include/strings.h" 3
}
# 466 "/usr/include/string.h" 3
extern void explicit_bzero(void * __s, size_t __n) noexcept(true) __attribute((__nonnull__(1)))
# 467 "/usr/include/string.h" 3
 __attribute((__access__(__write_only__ , 1 , 2 )));
# 471 "/usr/include/string.h" 3
extern char *strsep(char **__restrict__ __stringp, const char *__restrict__ __delim) noexcept(true)
# 473 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 478 "/usr/include/string.h" 3
extern char *strsignal(int __sig) noexcept(true);
# 482 "/usr/include/string.h" 3
extern const char *sigabbrev_np(int __sig) noexcept(true);
# 485 "/usr/include/string.h" 3
extern const char *sigdescr_np(int __sig) noexcept(true);
# 489 "/usr/include/string.h" 3
extern char *__stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) noexcept(true)
# 490 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 491 "/usr/include/string.h" 3
extern char *stpcpy(char *__restrict__ __dest, const char *__restrict__ __src) noexcept(true)
# 492 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 496 "/usr/include/string.h" 3
extern char *__stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) noexcept(true)
# 498 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 499 "/usr/include/string.h" 3
extern char *stpncpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) noexcept(true)
# 501 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2)));
# 506 "/usr/include/string.h" 3
extern size_t strlcpy(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) noexcept(true)
# 508 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__access__(__write_only__ , 1 , 3 )));
# 512 "/usr/include/string.h" 3
extern size_t strlcat(char *__restrict__ __dest, const char *__restrict__ __src, size_t __n) noexcept(true)
# 514 "/usr/include/string.h" 3
 __attribute((__nonnull__(1, 2))) __attribute((__access__(__read_write__ , 1 , 3 )));
# 519 "/usr/include/string.h" 3
extern int strverscmp(const char * __s1, const char * __s2) noexcept(true)
# 520 "/usr/include/string.h" 3
 __attribute((__pure__)) __attribute((__nonnull__(1, 2)));
# 523 "/usr/include/string.h" 3
extern char *strfry(char * __string) noexcept(true) __attribute((__nonnull__(1)));
# 526 "/usr/include/string.h" 3
extern void *memfrob(void * __s, size_t __n) noexcept(true) __attribute((__nonnull__(1)))
# 527 "/usr/include/string.h" 3
 __attribute((__access__(__read_write__ , 1 , 2 )));
# 535 "/usr/include/string.h" 3
extern "C++" char *basename(char * __filename) noexcept(true) __asm__("basename")
# 536 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 537 "/usr/include/string.h" 3
extern "C++" const char *basename(const char * __filename) noexcept(true) __asm__("basename")
# 538 "/usr/include/string.h" 3
 __attribute((__nonnull__(1)));
# 552 "/usr/include/string.h" 3
}
# 26 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
struct timex {
# 58 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
unsigned modes;
# 59 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t offset;
# 60 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t freq;
# 61 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t maxerror;
# 62 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t esterror;
# 63 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int status;
# 64 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t constant;
# 65 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t precision;
# 66 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tolerance;
# 67 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
timeval time;
# 68 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t tick;
# 69 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t ppsfreq;
# 70 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitter;
# 71 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int shift;
# 72 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stabil;
# 73 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t jitcnt;
# 74 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t calcnt;
# 75 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t errcnt;
# 76 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
__syscall_slong_t stbcnt;
# 78 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int tai;
# 81 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 82 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32; int:32;
# 83 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
int:32; int:32; int:32;
# 85 "/usr/include/x86_64-linux-gnu/bits/timex.h" 3
};
# 75 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern "C" {
# 78 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
extern int clock_adjtime(__clockid_t __clock_id, timex * __utx) noexcept(true) __attribute((__nonnull__(2)));
# 90 "/usr/include/x86_64-linux-gnu/bits/time.h" 3
}
# 7 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
struct tm {
# 9 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_sec;
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_min;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_hour;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_mday;
# 13 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_mon;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_year;
# 15 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_wday;
# 16 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_yday;
# 17 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
int tm_isdst;
# 20 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
long tm_gmtoff;
# 21 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
const char *tm_zone;
# 26 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h" 3
};
# 8 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
struct itimerspec {
# 10 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
timespec it_interval;
# 11 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
timespec it_value;
# 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_itimerspec.h" 3
};
# 49 "/usr/include/time.h" 3
struct sigevent;
# 68 "/usr/include/time.h" 3
extern "C" {
# 72 "/usr/include/time.h" 3
extern clock_t clock() noexcept(true);
# 76 "/usr/include/time.h" 3
extern time_t time(time_t * __timer) noexcept(true);
# 79 "/usr/include/time.h" 3
extern double difftime(time_t __time1, time_t __time0) noexcept(true)
# 80 "/usr/include/time.h" 3
 __attribute((const));
# 83 "/usr/include/time.h" 3
extern time_t mktime(tm * __tp) noexcept(true);
# 100 "/usr/include/time.h" 3
extern size_t strftime(char *__restrict__ __s, size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp) noexcept(true)
# 103 "/usr/include/time.h" 3
 __attribute((__nonnull__(1, 3, 4)));
# 108 "/usr/include/time.h" 3
extern char *strptime(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp) noexcept(true);
# 117 "/usr/include/time.h" 3
extern size_t strftime_l(char *__restrict__ __s, size_t __maxsize, const char *__restrict__ __format, const tm *__restrict__ __tp, locale_t __loc) noexcept(true);
# 124 "/usr/include/time.h" 3
extern char *strptime_l(const char *__restrict__ __s, const char *__restrict__ __fmt, tm * __tp, locale_t __loc) noexcept(true);
# 133 "/usr/include/time.h" 3
extern tm *gmtime(const time_t * __timer) noexcept(true);
# 137 "/usr/include/time.h" 3
extern tm *localtime(const time_t * __timer) noexcept(true);
# 155 "/usr/include/time.h" 3
extern tm *gmtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) noexcept(true);
# 160 "/usr/include/time.h" 3
extern tm *localtime_r(const time_t *__restrict__ __timer, tm *__restrict__ __tp) noexcept(true);
# 180 "/usr/include/time.h" 3
extern char *asctime(const tm * __tp) noexcept(true);
# 184 "/usr/include/time.h" 3
extern char *ctime(const time_t * __timer) noexcept(true);
# 198 "/usr/include/time.h" 3
extern char *asctime_r(const tm *__restrict__ __tp, char *__restrict__ __buf) noexcept(true);
# 203 "/usr/include/time.h" 3
extern char *ctime_r(const time_t *__restrict__ __timer, char *__restrict__ __buf) noexcept(true);
# 218 "/usr/include/time.h" 3
extern char *__tzname[2];
# 219 "/usr/include/time.h" 3
extern int __daylight;
# 220 "/usr/include/time.h" 3
extern long __timezone;
# 225 "/usr/include/time.h" 3
extern char *tzname[2];
# 229 "/usr/include/time.h" 3
extern void tzset() noexcept(true);
# 233 "/usr/include/time.h" 3
extern int daylight;
# 234 "/usr/include/time.h" 3
extern long timezone;
# 247 "/usr/include/time.h" 3
extern time_t timegm(tm * __tp) noexcept(true);
# 264 "/usr/include/time.h" 3
extern time_t timelocal(tm * __tp) noexcept(true);
# 272 "/usr/include/time.h" 3
extern int dysize(int __year) noexcept(true) __attribute((const));
# 282 "/usr/include/time.h" 3
extern int nanosleep(const timespec * __requested_time, timespec * __remaining);
# 286 "/usr/include/time.h" 3
extern int clock_getres(clockid_t __clock_id, timespec * __res) noexcept(true);
# 289 "/usr/include/time.h" 3
extern int clock_gettime(clockid_t __clock_id, timespec * __tp) noexcept(true)
# 290 "/usr/include/time.h" 3
 __attribute((__nonnull__(2)));
# 293 "/usr/include/time.h" 3
extern int clock_settime(clockid_t __clock_id, const timespec * __tp) noexcept(true)
# 294 "/usr/include/time.h" 3
 __attribute((__nonnull__(2)));
# 324 "/usr/include/time.h" 3
extern int clock_nanosleep(clockid_t __clock_id, int __flags, const timespec * __req, timespec * __rem);
# 339 "/usr/include/time.h" 3
extern int clock_getcpuclockid(pid_t __pid, clockid_t * __clock_id) noexcept(true);
# 344 "/usr/include/time.h" 3
extern int timer_create(clockid_t __clock_id, sigevent *__restrict__ __evp, timer_t *__restrict__ __timerid) noexcept(true);
# 349 "/usr/include/time.h" 3
extern int timer_delete(timer_t __timerid) noexcept(true);
# 353 "/usr/include/time.h" 3
extern int timer_settime(timer_t __timerid, int __flags, const itimerspec *__restrict__ __value, itimerspec *__restrict__ __ovalue) noexcept(true);
# 358 "/usr/include/time.h" 3
extern int timer_gettime(timer_t __timerid, itimerspec * __value) noexcept(true);
# 377 "/usr/include/time.h" 3
extern int timer_getoverrun(timer_t __timerid) noexcept(true);
# 384 "/usr/include/time.h" 3
extern int timespec_get(timespec * __ts, int __base) noexcept(true)
# 385 "/usr/include/time.h" 3
 __attribute((__nonnull__(1)));
# 400 "/usr/include/time.h" 3
extern int timespec_getres(timespec * __ts, int __base) noexcept(true);
# 426 "/usr/include/time.h" 3
extern int getdate_err;
# 435 "/usr/include/time.h" 3
extern tm *getdate(const char * __string);
# 449 "/usr/include/time.h" 3
extern int getdate_r(const char *__restrict__ __string, tm *__restrict__ __resbufp);
# 453 "/usr/include/time.h" 3
}
# 88 "/usr/include/crt/common_functions.h" 3
extern "C" {
# 91 "/usr/include/crt/common_functions.h" 3
extern clock_t clock() noexcept(true);
# 96 "/usr/include/crt/common_functions.h" 3
extern void *memset(void *, int, size_t) noexcept(true);
# 97 "/usr/include/crt/common_functions.h" 3
extern void *memcpy(void *, const void *, size_t) noexcept(true);
# 99 "/usr/include/crt/common_functions.h" 3
}
# 121 "/usr/include/crt/math_functions.h" 3
extern "C" {
# 219 "/usr/include/crt/math_functions.h" 3
extern int abs(int a) noexcept(true);
# 227 "/usr/include/crt/math_functions.h" 3
extern long labs(long a) noexcept(true);
# 235 "/usr/include/crt/math_functions.h" 3
extern long long llabs(long long a) noexcept(true);
# 285 "/usr/include/crt/math_functions.h" 3
extern double fabs(double x) noexcept(true);
# 328 "/usr/include/crt/math_functions.h" 3
extern float fabsf(float x) noexcept(true);
# 338 "/usr/include/crt/math_functions.h" 3
extern inline int min(const int a, const int b);
# 345 "/usr/include/crt/math_functions.h" 3
extern inline unsigned umin(const unsigned a, const unsigned b);
# 352 "/usr/include/crt/math_functions.h" 3
extern inline long long llmin(const long long a, const long long b);
# 359 "/usr/include/crt/math_functions.h" 3
extern inline unsigned long long ullmin(const unsigned long long a, const unsigned long long b);
# 380 "/usr/include/crt/math_functions.h" 3
extern float fminf(float x, float y) noexcept(true);
# 400 "/usr/include/crt/math_functions.h" 3
extern double fmin(double x, double y) noexcept(true);
# 413 "/usr/include/crt/math_functions.h" 3
extern inline int max(const int a, const int b);
# 421 "/usr/include/crt/math_functions.h" 3
extern inline unsigned umax(const unsigned a, const unsigned b);
# 428 "/usr/include/crt/math_functions.h" 3
extern inline long long llmax(const long long a, const long long b);
# 435 "/usr/include/crt/math_functions.h" 3
extern inline unsigned long long ullmax(const unsigned long long a, const unsigned long long b);
# 456 "/usr/include/crt/math_functions.h" 3
extern float fmaxf(float x, float y) noexcept(true);
# 476 "/usr/include/crt/math_functions.h" 3
extern double fmax(double, double) noexcept(true);
# 520 "/usr/include/crt/math_functions.h" 3
extern double sin(double x) noexcept(true);
# 553 "/usr/include/crt/math_functions.h" 3
extern double cos(double x) noexcept(true);
# 572 "/usr/include/crt/math_functions.h" 3
extern void sincos(double x, double * sptr, double * cptr) noexcept(true);
# 588 "/usr/include/crt/math_functions.h" 3
extern void sincosf(float x, float * sptr, float * cptr) noexcept(true);
# 633 "/usr/include/crt/math_functions.h" 3
extern double tan(double x) noexcept(true);
# 702 "/usr/include/crt/math_functions.h" 3
extern double sqrt(double x) noexcept(true);
# 774 "/usr/include/crt/math_functions.h" 3
extern double rsqrt(double x);
# 844 "/usr/include/crt/math_functions.h" 3
extern float rsqrtf(float x);
# 900 "/usr/include/crt/math_functions.h" 3
extern double log2(double x) noexcept(true);
# 965 "/usr/include/crt/math_functions.h" 3
extern double exp2(double x) noexcept(true);
# 1030 "/usr/include/crt/math_functions.h" 3
extern float exp2f(float x) noexcept(true);
# 1097 "/usr/include/crt/math_functions.h" 3
extern double exp10(double x) noexcept(true);
# 1160 "/usr/include/crt/math_functions.h" 3
extern float exp10f(float x) noexcept(true);
# 1253 "/usr/include/crt/math_functions.h" 3
extern double expm1(double x) noexcept(true);
# 1345 "/usr/include/crt/math_functions.h" 3
extern float expm1f(float x) noexcept(true);
# 1401 "/usr/include/crt/math_functions.h" 3
extern float log2f(float x) noexcept(true);
# 1455 "/usr/include/crt/math_functions.h" 3
extern double log10(double x) noexcept(true);
# 1525 "/usr/include/crt/math_functions.h" 3
extern double log(double x) noexcept(true);
# 1621 "/usr/include/crt/math_functions.h" 3
extern double log1p(double x) noexcept(true);
# 1720 "/usr/include/crt/math_functions.h" 3
extern float log1pf(float x) noexcept(true);
# 1784 "/usr/include/crt/math_functions.h" 3
extern double floor(double x) noexcept(true);
# 1863 "/usr/include/crt/math_functions.h" 3
extern double exp(double x) noexcept(true);
# 1904 "/usr/include/crt/math_functions.h" 3
extern double cosh(double x) noexcept(true);
# 1954 "/usr/include/crt/math_functions.h" 3
extern double sinh(double x) noexcept(true);
# 2004 "/usr/include/crt/math_functions.h" 3
extern double tanh(double x) noexcept(true);
# 2059 "/usr/include/crt/math_functions.h" 3
extern double acosh(double x) noexcept(true);
# 2117 "/usr/include/crt/math_functions.h" 3
extern float acoshf(float x) noexcept(true);
# 2170 "/usr/include/crt/math_functions.h" 3
extern double asinh(double x) noexcept(true);
# 2223 "/usr/include/crt/math_functions.h" 3
extern float asinhf(float x) noexcept(true);
# 2277 "/usr/include/crt/math_functions.h" 3
extern double atanh(double x) noexcept(true);
# 2331 "/usr/include/crt/math_functions.h" 3
extern float atanhf(float x) noexcept(true);
# 2380 "/usr/include/crt/math_functions.h" 3
extern double ldexp(double x, int exp) noexcept(true);
# 2426 "/usr/include/crt/math_functions.h" 3
extern float ldexpf(float x, int exp) noexcept(true);
# 2478 "/usr/include/crt/math_functions.h" 3
extern double logb(double x) noexcept(true);
# 2533 "/usr/include/crt/math_functions.h" 3
extern float logbf(float x) noexcept(true);
# 2573 "/usr/include/crt/math_functions.h" 3
extern int ilogb(double x) noexcept(true);
# 2613 "/usr/include/crt/math_functions.h" 3
extern int ilogbf(float x) noexcept(true);
# 2689 "/usr/include/crt/math_functions.h" 3
extern double scalbn(double x, int n) noexcept(true);
# 2765 "/usr/include/crt/math_functions.h" 3
extern float scalbnf(float x, int n) noexcept(true);
# 2841 "/usr/include/crt/math_functions.h" 3
extern double scalbln(double x, long n) noexcept(true);
# 2917 "/usr/include/crt/math_functions.h" 3
extern float scalblnf(float x, long n) noexcept(true);
# 2994 "/usr/include/crt/math_functions.h" 3
extern double frexp(double x, int * nptr) noexcept(true);
# 3068 "/usr/include/crt/math_functions.h" 3
extern float frexpf(float x, int * nptr) noexcept(true);
# 3120 "/usr/include/crt/math_functions.h" 3
extern double round(double x) noexcept(true);
# 3175 "/usr/include/crt/math_functions.h" 3
extern float roundf(float x) noexcept(true);
# 3193 "/usr/include/crt/math_functions.h" 3
extern long lround(double x) noexcept(true);
# 3211 "/usr/include/crt/math_functions.h" 3
extern long lroundf(float x) noexcept(true);
# 3229 "/usr/include/crt/math_functions.h" 3
extern long long llround(double x) noexcept(true);
# 3247 "/usr/include/crt/math_functions.h" 3
extern long long llroundf(float x) noexcept(true);
# 3375 "/usr/include/crt/math_functions.h" 3
extern float rintf(float x) noexcept(true);
# 3392 "/usr/include/crt/math_functions.h" 3
extern long lrint(double x) noexcept(true);
# 3409 "/usr/include/crt/math_functions.h" 3
extern long lrintf(float x) noexcept(true);
# 3426 "/usr/include/crt/math_functions.h" 3
extern long long llrint(double x) noexcept(true);
# 3443 "/usr/include/crt/math_functions.h" 3
extern long long llrintf(float x) noexcept(true);
# 3496 "/usr/include/crt/math_functions.h" 3
extern double nearbyint(double x) noexcept(true);
# 3549 "/usr/include/crt/math_functions.h" 3
extern float nearbyintf(float x) noexcept(true);
# 3611 "/usr/include/crt/math_functions.h" 3
extern double ceil(double x) noexcept(true);
# 3661 "/usr/include/crt/math_functions.h" 3
extern double trunc(double x) noexcept(true);
# 3714 "/usr/include/crt/math_functions.h" 3
extern float truncf(float x) noexcept(true);
# 3740 "/usr/include/crt/math_functions.h" 3
extern double fdim(double x, double y) noexcept(true);
# 3766 "/usr/include/crt/math_functions.h" 3
extern float fdimf(float x, float y) noexcept(true);
# 4066 "/usr/include/crt/math_functions.h" 3
extern double atan2(double y, double x) noexcept(true);
# 4137 "/usr/include/crt/math_functions.h" 3
extern double atan(double x) noexcept(true);
# 4160 "/usr/include/crt/math_functions.h" 3
extern double acos(double x) noexcept(true);
# 4211 "/usr/include/crt/math_functions.h" 3
extern double asin(double x) noexcept(true);
# 4279 "/usr/include/crt/math_functions.h" 3
extern double hypot(double x, double y) noexcept(true);
# 4402 "/usr/include/crt/math_functions.h" 3
extern float hypotf(float x, float y) noexcept(true);
# 5188 "/usr/include/crt/math_functions.h" 3
extern double cbrt(double x) noexcept(true);
# 5274 "/usr/include/crt/math_functions.h" 3
extern float cbrtf(float x) noexcept(true);
# 5329 "/usr/include/crt/math_functions.h" 3
extern double rcbrt(double x);
# 5379 "/usr/include/crt/math_functions.h" 3
extern float rcbrtf(float x);
# 5439 "/usr/include/crt/math_functions.h" 3
extern double sinpi(double x);
# 5499 "/usr/include/crt/math_functions.h" 3
extern float sinpif(float x);
# 5551 "/usr/include/crt/math_functions.h" 3
extern double cospi(double x);
# 5603 "/usr/include/crt/math_functions.h" 3
extern float cospif(float x);
# 5633 "/usr/include/crt/math_functions.h" 3
extern void sincospi(double x, double * sptr, double * cptr);
# 5663 "/usr/include/crt/math_functions.h" 3
extern void sincospif(float x, float * sptr, float * cptr);
# 5996 "/usr/include/crt/math_functions.h" 3
extern double pow(double x, double y) noexcept(true);
# 6052 "/usr/include/crt/math_functions.h" 3
extern double modf(double x, double * iptr) noexcept(true);
# 6111 "/usr/include/crt/math_functions.h" 3
extern double fmod(double x, double y) noexcept(true);
# 6207 "/usr/include/crt/math_functions.h" 3
extern double remainder(double x, double y) noexcept(true);
# 6306 "/usr/include/crt/math_functions.h" 3
extern float remainderf(float x, float y) noexcept(true);
# 6378 "/usr/include/crt/math_functions.h" 3
extern double remquo(double x, double y, int * quo) noexcept(true);
# 6450 "/usr/include/crt/math_functions.h" 3
extern float remquof(float x, float y, int * quo) noexcept(true);
# 6491 "/usr/include/crt/math_functions.h" 3
extern double j0(double x) noexcept(true);
# 6533 "/usr/include/crt/math_functions.h" 3
extern float j0f(float x) noexcept(true);
# 6602 "/usr/include/crt/math_functions.h" 3
extern double j1(double x) noexcept(true);
# 6671 "/usr/include/crt/math_functions.h" 3
extern float j1f(float x) noexcept(true);
# 6714 "/usr/include/crt/math_functions.h" 3
extern double jn(int n, double x) noexcept(true);
# 6757 "/usr/include/crt/math_functions.h" 3
extern float jnf(int n, float x) noexcept(true);
# 6818 "/usr/include/crt/math_functions.h" 3
extern double y0(double x) noexcept(true);
# 6879 "/usr/include/crt/math_functions.h" 3
extern float y0f(float x) noexcept(true);
# 6940 "/usr/include/crt/math_functions.h" 3
extern double y1(double x) noexcept(true);
# 7001 "/usr/include/crt/math_functions.h" 3
extern float y1f(float x) noexcept(true);
# 7064 "/usr/include/crt/math_functions.h" 3
extern double yn(int n, double x) noexcept(true);
# 7127 "/usr/include/crt/math_functions.h" 3
extern float ynf(int n, float x) noexcept(true);
# 7316 "/usr/include/crt/math_functions.h" 3
extern double erf(double x) noexcept(true);
# 7398 "/usr/include/crt/math_functions.h" 3
extern float erff(float x) noexcept(true);
# 7470 "/usr/include/crt/math_functions.h" 3
extern double erfinv(double x);
# 7535 "/usr/include/crt/math_functions.h" 3
extern float erfinvf(float x);
# 7574 "/usr/include/crt/math_functions.h" 3
extern double erfc(double x) noexcept(true);
# 7612 "/usr/include/crt/math_functions.h" 3
extern float erfcf(float x) noexcept(true);
# 7729 "/usr/include/crt/math_functions.h" 3
extern double lgamma(double x) noexcept(true);
# 7791 "/usr/include/crt/math_functions.h" 3
extern double erfcinv(double x);
# 7846 "/usr/include/crt/math_functions.h" 3
extern float erfcinvf(float x);
# 7914 "/usr/include/crt/math_functions.h" 3
extern double normcdfinv(double x);
# 7982 "/usr/include/crt/math_functions.h" 3
extern float normcdfinvf(float x);
# 8025 "/usr/include/crt/math_functions.h" 3
extern double normcdf(double x);
# 8068 "/usr/include/crt/math_functions.h" 3
extern float normcdff(float x);
# 8132 "/usr/include/crt/math_functions.h" 3
extern double erfcx(double x);
# 8196 "/usr/include/crt/math_functions.h" 3
extern float erfcxf(float x);
# 8315 "/usr/include/crt/math_functions.h" 3
extern float lgammaf(float x) noexcept(true);
# 8413 "/usr/include/crt/math_functions.h" 3
extern double tgamma(double x) noexcept(true);
# 8511 "/usr/include/crt/math_functions.h" 3
extern float tgammaf(float x) noexcept(true);
# 8524 "/usr/include/crt/math_functions.h" 3
extern double copysign(double x, double y) noexcept(true);
# 8537 "/usr/include/crt/math_functions.h" 3
extern float copysignf(float x, float y) noexcept(true);
# 8556 "/usr/include/crt/math_functions.h" 3
extern double nextafter(double x, double y) noexcept(true);
# 8575 "/usr/include/crt/math_functions.h" 3
extern float nextafterf(float x, float y) noexcept(true);
# 8591 "/usr/include/crt/math_functions.h" 3
extern double nan(const char * tagp) noexcept(true);
# 8607 "/usr/include/crt/math_functions.h" 3
extern float nanf(const char * tagp) noexcept(true);
# 8614 "/usr/include/crt/math_functions.h" 3
extern int __isinff(float) noexcept(true);
# 8615 "/usr/include/crt/math_functions.h" 3
extern int __isnanf(float) noexcept(true);
# 8625 "/usr/include/crt/math_functions.h" 3
extern int __finite(double) noexcept(true);
# 8626 "/usr/include/crt/math_functions.h" 3
extern int __finitef(float) noexcept(true);
# 8627 "/usr/include/crt/math_functions.h" 3
extern int __signbit(double) noexcept(true);
# 8628 "/usr/include/crt/math_functions.h" 3
extern int __isnan(double) noexcept(true);
# 8629 "/usr/include/crt/math_functions.h" 3
extern int __isinf(double) noexcept(true);
# 8632 "/usr/include/crt/math_functions.h" 3
extern int __signbitf(float) noexcept(true);
# 8791 "/usr/include/crt/math_functions.h" 3
extern double fma(double x, double y, double z) noexcept(true);
# 8949 "/usr/include/crt/math_functions.h" 3
extern float fmaf(float x, float y, float z) noexcept(true);
# 8960 "/usr/include/crt/math_functions.h" 3
extern int __signbitl(long double) noexcept(true);
# 8966 "/usr/include/crt/math_functions.h" 3
extern int __finitel(long double) noexcept(true);
# 8967 "/usr/include/crt/math_functions.h" 3
extern int __isinfl(long double) noexcept(true);
# 8968 "/usr/include/crt/math_functions.h" 3
extern int __isnanl(long double) noexcept(true);
# 9018 "/usr/include/crt/math_functions.h" 3
extern float acosf(float x) noexcept(true);
# 9077 "/usr/include/crt/math_functions.h" 3
extern float asinf(float x) noexcept(true);
# 9157 "/usr/include/crt/math_functions.h" 3
extern float atanf(float x) noexcept(true);
# 9454 "/usr/include/crt/math_functions.h" 3
extern float atan2f(float y, float x) noexcept(true);
# 9488 "/usr/include/crt/math_functions.h" 3
extern float cosf(float x) noexcept(true);
# 9530 "/usr/include/crt/math_functions.h" 3
extern float sinf(float x) noexcept(true);
# 9572 "/usr/include/crt/math_functions.h" 3
extern float tanf(float x) noexcept(true);
# 9613 "/usr/include/crt/math_functions.h" 3
extern float coshf(float x) noexcept(true);
# 9663 "/usr/include/crt/math_functions.h" 3
extern float sinhf(float x) noexcept(true);
# 9713 "/usr/include/crt/math_functions.h" 3
extern float tanhf(float x) noexcept(true);
# 9765 "/usr/include/crt/math_functions.h" 3
extern float logf(float x) noexcept(true);
# 9845 "/usr/include/crt/math_functions.h" 3
extern float expf(float x) noexcept(true);
# 9897 "/usr/include/crt/math_functions.h" 3
extern float log10f(float x) noexcept(true);
# 9952 "/usr/include/crt/math_functions.h" 3
extern float modff(float x, float * iptr) noexcept(true);
# 10282 "/usr/include/crt/math_functions.h" 3
extern float powf(float x, float y) noexcept(true);
# 10351 "/usr/include/crt/math_functions.h" 3
extern float sqrtf(float x) noexcept(true);
# 10410 "/usr/include/crt/math_functions.h" 3
extern float ceilf(float x) noexcept(true);
# 10471 "/usr/include/crt/math_functions.h" 3
extern float floorf(float x) noexcept(true);
# 10529 "/usr/include/crt/math_functions.h" 3
extern float fmodf(float x, float y) noexcept(true);
# 10544 "/usr/include/crt/math_functions.h" 3
}
# 67 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
extern "C++" {
# 69 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 73 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __true_type { };
# 74 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __false_type { };
# 76 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< bool >
# 77 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __truth_type {
# 78 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __false_type __type; };
# 81 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __truth_type< true> {
# 82 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type; };
# 86 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Sp, class _Tp>
# 87 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __traitor {
# 89 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = ((bool)_Sp::__value) || ((bool)_Tp::__value)};
# 90 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef typename __truth_type< __value> ::__type __type;
# 91 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 94 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class , class >
# 95 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __are_same {
# 97 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value};
# 98 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 99 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 101 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 102 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __are_same< _Tp, _Tp> {
# 104 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 105 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 106 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 109 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 110 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_void {
# 112 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value};
# 113 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 114 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 117 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_void< void> {
# 119 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 120 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 121 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 126 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 127 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_integer {
# 129 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value};
# 130 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 131 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 138 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< bool> {
# 140 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 141 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 142 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 145 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char> {
# 147 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 148 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 149 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 152 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< signed char> {
# 154 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 155 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 156 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 159 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned char> {
# 161 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 162 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 163 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 167 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< wchar_t> {
# 169 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 170 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 171 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 185 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char16_t> {
# 187 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 188 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 189 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 192 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< char32_t> {
# 194 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 195 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 196 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 200 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< short> {
# 202 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 203 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 204 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 207 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned short> {
# 209 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 210 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 211 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 214 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< int> {
# 216 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 217 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 218 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 221 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned> {
# 223 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 224 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 225 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 228 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long> {
# 230 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 231 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 232 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 235 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long> {
# 237 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 238 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 239 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 242 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< long long> {
# 244 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 245 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 246 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 249 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< unsigned long long> {
# 251 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 252 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 253 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 272 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_integer< __int128> { enum { __value = 1}; typedef __true_type __type; }; template<> struct __is_integer< unsigned __int128> { enum { __value = 1}; typedef __true_type __type; };
# 289 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 290 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_floating {
# 292 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value};
# 293 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 294 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 298 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_floating< float> {
# 300 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 301 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 302 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 305 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_floating< double> {
# 307 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 308 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 309 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 312 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_floating< long double> {
# 314 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 315 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 316 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 321 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 322 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_pointer {
# 324 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value};
# 325 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 326 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 328 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 329 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_pointer< _Tp *> {
# 331 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 332 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 333 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 338 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 339 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_arithmetic : public __traitor< __is_integer< _Tp> , __is_floating< _Tp> > {
# 341 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 346 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 347 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_scalar : public __traitor< __is_arithmetic< _Tp> , __is_pointer< _Tp> > {
# 349 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 354 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 355 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_char {
# 357 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value};
# 358 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 359 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 362 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_char< char> {
# 364 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 365 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 366 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 370 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_char< wchar_t> {
# 372 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 373 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 374 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 377 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 378 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_byte {
# 380 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value};
# 381 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 382 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 385 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_byte< char> {
# 387 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 388 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 389 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 392 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_byte< signed char> {
# 394 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 395 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 396 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 399 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_byte< unsigned char> {
# 401 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 402 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 403 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 406 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum class byte: unsigned char;
# 409 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_byte< byte> {
# 411 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = 1};
# 412 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __true_type __type;
# 413 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 425 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class > struct iterator_traits;
# 428 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 429 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_nonvolatile_trivially_copyable {
# 431 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value = __is_trivially_copyable(_Tp)};
# 432 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 437 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 438 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_nonvolatile_trivially_copyable< volatile _Tp> {
# 440 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value};
# 441 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 444 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _OutputIter, class _InputIter>
# 445 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __memcpyable {
# 447 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value};
# 448 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 450 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 451 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __memcpyable< _Tp *, _Tp *> : public __is_nonvolatile_trivially_copyable< _Tp> {
# 453 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 455 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 456 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __memcpyable< _Tp *, const _Tp *> : public __is_nonvolatile_trivially_copyable< _Tp> {
# 458 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 465 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Iter1, class _Iter2>
# 466 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __memcmpable {
# 468 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value};
# 469 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 472 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 473 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __memcmpable< _Tp *, _Tp *> : public __is_nonvolatile_trivially_copyable< _Tp> {
# 475 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 477 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 478 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __memcmpable< const _Tp *, _Tp *> : public __is_nonvolatile_trivially_copyable< _Tp> {
# 480 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 482 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 483 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __memcmpable< _Tp *, const _Tp *> : public __is_nonvolatile_trivially_copyable< _Tp> {
# 485 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 493 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp, bool _TreatAsBytes = __is_byte< _Tp> ::__value>
# 500 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_memcmp_ordered {
# 502 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
static const bool __value = (((_Tp)(-1)) > ((_Tp)1));
# 503 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 505 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 506 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_memcmp_ordered< _Tp, false> {
# 508 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
static const bool __value = false;
# 509 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 512 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp, class _Up, bool = sizeof(_Tp) == sizeof(_Up)>
# 513 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_memcmp_ordered_with {
# 515 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
static const bool __value = (__is_memcmp_ordered< _Tp> ::__value && __is_memcmp_ordered< _Up> ::__value);
# 517 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 519 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp, class _Up>
# 520 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_memcmp_ordered_with< _Tp, _Up, false> {
# 522 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
static const bool __value = false;
# 523 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 535 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template<> struct __is_memcmp_ordered_with< byte, byte, true> {
# 536 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
static constexpr inline bool __value = true; };
# 538 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp, bool _SameSize>
# 539 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_memcmp_ordered_with< _Tp, byte, _SameSize> {
# 540 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
static constexpr inline bool __value = false; };
# 542 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Up, bool _SameSize>
# 543 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_memcmp_ordered_with< byte, _Up, _SameSize> {
# 544 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
static constexpr inline bool __value = false; };
# 550 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Tp>
# 551 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
struct __is_move_iterator {
# 553 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
enum { __value};
# 554 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
typedef __false_type __type;
# 555 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
};
# 559 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
template< class _Iterator> inline _Iterator
# 562 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
__miter_base(_Iterator __it)
# 563 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
{ return __it; }
# 566 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
}
# 567 "/usr/include/c++/12/bits/cpp_type_traits.h" 3
}
# 37 "/usr/include/c++/12/ext/type_traits.h" 3
extern "C++" {
# 39 "/usr/include/c++/12/ext/type_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/12/ext/type_traits.h" 3
template< bool , class >
# 45 "/usr/include/c++/12/ext/type_traits.h" 3
struct __enable_if {
# 46 "/usr/include/c++/12/ext/type_traits.h" 3
};
# 48 "/usr/include/c++/12/ext/type_traits.h" 3
template< class _Tp>
# 49 "/usr/include/c++/12/ext/type_traits.h" 3
struct __enable_if< true, _Tp> {
# 50 "/usr/include/c++/12/ext/type_traits.h" 3
typedef _Tp __type; };
# 54 "/usr/include/c++/12/ext/type_traits.h" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 55 "/usr/include/c++/12/ext/type_traits.h" 3
struct __conditional_type {
# 56 "/usr/include/c++/12/ext/type_traits.h" 3
typedef _Iftrue __type; };
# 58 "/usr/include/c++/12/ext/type_traits.h" 3
template< class _Iftrue, class _Iffalse>
# 59 "/usr/include/c++/12/ext/type_traits.h" 3
struct __conditional_type< false, _Iftrue, _Iffalse> {
# 60 "/usr/include/c++/12/ext/type_traits.h" 3
typedef _Iffalse __type; };
# 64 "/usr/include/c++/12/ext/type_traits.h" 3
template< class _Tp>
# 65 "/usr/include/c++/12/ext/type_traits.h" 3
struct __add_unsigned {
# 68 "/usr/include/c++/12/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 71 "/usr/include/c++/12/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 72 "/usr/include/c++/12/ext/type_traits.h" 3
};
# 75 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __add_unsigned< char> {
# 76 "/usr/include/c++/12/ext/type_traits.h" 3
typedef unsigned char __type; };
# 79 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __add_unsigned< signed char> {
# 80 "/usr/include/c++/12/ext/type_traits.h" 3
typedef unsigned char __type; };
# 83 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __add_unsigned< short> {
# 84 "/usr/include/c++/12/ext/type_traits.h" 3
typedef unsigned short __type; };
# 87 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __add_unsigned< int> {
# 88 "/usr/include/c++/12/ext/type_traits.h" 3
typedef unsigned __type; };
# 91 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __add_unsigned< long> {
# 92 "/usr/include/c++/12/ext/type_traits.h" 3
typedef unsigned long __type; };
# 95 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __add_unsigned< long long> {
# 96 "/usr/include/c++/12/ext/type_traits.h" 3
typedef unsigned long long __type; };
# 100 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __add_unsigned< bool> ;
# 103 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __add_unsigned< wchar_t> ;
# 107 "/usr/include/c++/12/ext/type_traits.h" 3
template< class _Tp>
# 108 "/usr/include/c++/12/ext/type_traits.h" 3
struct __remove_unsigned {
# 111 "/usr/include/c++/12/ext/type_traits.h" 3
private: typedef __enable_if< std::__is_integer< _Tp> ::__value, _Tp> __if_type;
# 114 "/usr/include/c++/12/ext/type_traits.h" 3
public: typedef typename __enable_if< std::__is_integer< _Tp> ::__value, _Tp> ::__type __type;
# 115 "/usr/include/c++/12/ext/type_traits.h" 3
};
# 118 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __remove_unsigned< char> {
# 119 "/usr/include/c++/12/ext/type_traits.h" 3
typedef signed char __type; };
# 122 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned char> {
# 123 "/usr/include/c++/12/ext/type_traits.h" 3
typedef signed char __type; };
# 126 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned short> {
# 127 "/usr/include/c++/12/ext/type_traits.h" 3
typedef short __type; };
# 130 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned> {
# 131 "/usr/include/c++/12/ext/type_traits.h" 3
typedef int __type; };
# 134 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long> {
# 135 "/usr/include/c++/12/ext/type_traits.h" 3
typedef long __type; };
# 138 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __remove_unsigned< unsigned long long> {
# 139 "/usr/include/c++/12/ext/type_traits.h" 3
typedef long long __type; };
# 143 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __remove_unsigned< bool> ;
# 146 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __remove_unsigned< wchar_t> ;
# 150 "/usr/include/c++/12/ext/type_traits.h" 3
template< class _Type> constexpr bool
# 153 "/usr/include/c++/12/ext/type_traits.h" 3
__is_null_pointer(_Type *__ptr)
# 154 "/usr/include/c++/12/ext/type_traits.h" 3
{ return __ptr == 0; }
# 156 "/usr/include/c++/12/ext/type_traits.h" 3
template< class _Type> constexpr bool
# 159 "/usr/include/c++/12/ext/type_traits.h" 3
__is_null_pointer(_Type)
# 160 "/usr/include/c++/12/ext/type_traits.h" 3
{ return false; }
# 164 "/usr/include/c++/12/ext/type_traits.h" 3
constexpr bool __is_null_pointer(std::nullptr_t)
# 165 "/usr/include/c++/12/ext/type_traits.h" 3
{ return true; }
# 170 "/usr/include/c++/12/ext/type_traits.h" 3
template< class _Tp, bool = std::template __is_integer< _Tp> ::__value>
# 171 "/usr/include/c++/12/ext/type_traits.h" 3
struct __promote {
# 172 "/usr/include/c++/12/ext/type_traits.h" 3
typedef double __type; };
# 177 "/usr/include/c++/12/ext/type_traits.h" 3
template< class _Tp>
# 178 "/usr/include/c++/12/ext/type_traits.h" 3
struct __promote< _Tp, false> {
# 179 "/usr/include/c++/12/ext/type_traits.h" 3
};
# 182 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __promote< long double> {
# 183 "/usr/include/c++/12/ext/type_traits.h" 3
typedef long double __type; };
# 186 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __promote< double> {
# 187 "/usr/include/c++/12/ext/type_traits.h" 3
typedef double __type; };
# 190 "/usr/include/c++/12/ext/type_traits.h" 3
template<> struct __promote< float> {
# 191 "/usr/include/c++/12/ext/type_traits.h" 3
typedef float __type; };
# 195 "/usr/include/c++/12/ext/type_traits.h" 3
template< class ..._Tp> using __promoted_t = __decltype(((((typename __promote< _Tp> ::__type)0) + ... )));
# 200 "/usr/include/c++/12/ext/type_traits.h" 3
template< class _Tp, class _Up> using __promote_2 = __promote< __promoted_t< _Tp, _Up> > ;
# 203 "/usr/include/c++/12/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp> using __promote_3 = __promote< __promoted_t< _Tp, _Up, _Vp> > ;
# 206 "/usr/include/c++/12/ext/type_traits.h" 3
template< class _Tp, class _Up, class _Vp, class _Wp> using __promote_4 = __promote< __promoted_t< _Tp, _Up, _Vp, _Wp> > ;
# 240 "/usr/include/c++/12/ext/type_traits.h" 3
}
# 241 "/usr/include/c++/12/ext/type_traits.h" 3
}
# 34 "/usr/include/math.h" 3
extern "C" {
# 163 "/usr/include/math.h" 3
typedef float float_t;
# 164 "/usr/include/math.h" 3
typedef double double_t;
# 252 "/usr/include/math.h" 3
enum {
# 253 "/usr/include/math.h" 3
FP_INT_UPWARD,
# 256 "/usr/include/math.h" 3
FP_INT_DOWNWARD,
# 259 "/usr/include/math.h" 3
FP_INT_TOWARDZERO,
# 262 "/usr/include/math.h" 3
FP_INT_TONEARESTFROMZERO,
# 265 "/usr/include/math.h" 3
FP_INT_TONEAREST
# 268 "/usr/include/math.h" 3
};
# 20 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __fpclassify(double __value) noexcept(true)
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __signbit(double __value) noexcept(true)
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 29 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isinf(double __value) noexcept(true)
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __finite(double __value) noexcept(true)
# 34 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 37 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isnan(double __value) noexcept(true)
# 38 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 41 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __iseqsig(double __x, double __y) noexcept(true);
# 44 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __issignaling(double __value) noexcept(true)
# 45 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double acos(double __x) noexcept(true); extern double __acos(double __x) noexcept(true);
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double asin(double __x) noexcept(true); extern double __asin(double __x) noexcept(true);
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atan(double __x) noexcept(true); extern double __atan(double __x) noexcept(true);
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atan2(double __y, double __x) noexcept(true); extern double __atan2(double __y, double __x) noexcept(true);
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cos(double __x) noexcept(true); extern double __cos(double __x) noexcept(true);
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sin(double __x) noexcept(true); extern double __sin(double __x) noexcept(true);
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tan(double __x) noexcept(true); extern double __tan(double __x) noexcept(true);
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cosh(double __x) noexcept(true); extern double __cosh(double __x) noexcept(true);
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sinh(double __x) noexcept(true); extern double __sinh(double __x) noexcept(true);
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tanh(double __x) noexcept(true); extern double __tanh(double __x) noexcept(true);
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincos(double __x, double * __sinx, double * __cosx) noexcept(true); extern void __sincos(double __x, double * __sinx, double * __cosx) noexcept(true);
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double acosh(double __x) noexcept(true); extern double __acosh(double __x) noexcept(true);
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double asinh(double __x) noexcept(true); extern double __asinh(double __x) noexcept(true);
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double atanh(double __x) noexcept(true); extern double __atanh(double __x) noexcept(true);
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp(double __x) noexcept(true); extern double __exp(double __x) noexcept(true);
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double frexp(double __x, int * __exponent) noexcept(true); extern double __frexp(double __x, int * __exponent) noexcept(true);
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double ldexp(double __x, int __exponent) noexcept(true); extern double __ldexp(double __x, int __exponent) noexcept(true);
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log(double __x) noexcept(true); extern double __log(double __x) noexcept(true);
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log10(double __x) noexcept(true); extern double __log10(double __x) noexcept(true);
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double modf(double __x, double * __iptr) noexcept(true); extern double __modf(double __x, double * __iptr) noexcept(true) __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp10(double __x) noexcept(true); extern double __exp10(double __x) noexcept(true);
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double expm1(double __x) noexcept(true); extern double __expm1(double __x) noexcept(true);
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log1p(double __x) noexcept(true); extern double __log1p(double __x) noexcept(true);
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double logb(double __x) noexcept(true); extern double __logb(double __x) noexcept(true);
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double exp2(double __x) noexcept(true); extern double __exp2(double __x) noexcept(true);
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double log2(double __x) noexcept(true); extern double __log2(double __x) noexcept(true);
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double pow(double __x, double __y) noexcept(true); extern double __pow(double __x, double __y) noexcept(true);
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double sqrt(double __x) noexcept(true); extern double __sqrt(double __x) noexcept(true);
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double hypot(double __x, double __y) noexcept(true); extern double __hypot(double __x, double __y) noexcept(true);
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double cbrt(double __x) noexcept(true); extern double __cbrt(double __x) noexcept(true);
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double ceil(double __x) noexcept(true) __attribute((const)); extern double __ceil(double __x) noexcept(true) __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fabs(double __x) noexcept(true) __attribute((const)); extern double __fabs(double __x) noexcept(true) __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double floor(double __x) noexcept(true) __attribute((const)); extern double __floor(double __x) noexcept(true) __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmod(double __x, double __y) noexcept(true); extern double __fmod(double __x, double __y) noexcept(true);
# 183 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finite(double __value) noexcept(true)
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double drem(double __x, double __y) noexcept(true); extern double __drem(double __x, double __y) noexcept(true);
# 191 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double significand(double __x) noexcept(true); extern double __significand(double __x) noexcept(true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double copysign(double __x, double __y) noexcept(true) __attribute((const)); extern double __copysign(double __x, double __y) noexcept(true) __attribute((const));
# 203 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nan(const char * __tagb) noexcept(true); extern double __nan(const char * __tagb) noexcept(true);
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double j0(double) noexcept(true); extern double __j0(double) noexcept(true);
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double j1(double) noexcept(true); extern double __j1(double) noexcept(true);
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double jn(int, double) noexcept(true); extern double __jn(int, double) noexcept(true);
# 223 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double y0(double) noexcept(true); extern double __y0(double) noexcept(true);
# 224 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double y1(double) noexcept(true); extern double __y1(double) noexcept(true);
# 225 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double yn(int, double) noexcept(true); extern double __yn(int, double) noexcept(true);
# 231 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double erf(double) noexcept(true); extern double __erf(double) noexcept(true);
# 232 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double erfc(double) noexcept(true); extern double __erfc(double) noexcept(true);
# 233 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double lgamma(double) noexcept(true); extern double __lgamma(double) noexcept(true);
# 238 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double tgamma(double) noexcept(true); extern double __tgamma(double) noexcept(true);
# 244 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double gamma(double) noexcept(true); extern double __gamma(double) noexcept(true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double lgamma_r(double, int * __signgamp) noexcept(true); extern double __lgamma_r(double, int * __signgamp) noexcept(true);
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double rint(double __x) noexcept(true); extern double __rint(double __x) noexcept(true);
# 262 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nextafter(double __x, double __y) noexcept(true); extern double __nextafter(double __x, double __y) noexcept(true);
# 264 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nexttoward(double __x, long double __y) noexcept(true); extern double __nexttoward(double __x, long double __y) noexcept(true);
# 269 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nextdown(double __x) noexcept(true); extern double __nextdown(double __x) noexcept(true);
# 271 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nextup(double __x) noexcept(true); extern double __nextup(double __x) noexcept(true);
# 275 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double remainder(double __x, double __y) noexcept(true); extern double __remainder(double __x, double __y) noexcept(true);
# 279 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalbn(double __x, int __n) noexcept(true); extern double __scalbn(double __x, int __n) noexcept(true);
# 283 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogb(double __x) noexcept(true); extern int __ilogb(double __x) noexcept(true);
# 288 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long llogb(double __x) noexcept(true); extern long __llogb(double __x) noexcept(true);
# 293 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalbln(double __x, long __n) noexcept(true); extern double __scalbln(double __x, long __n) noexcept(true);
# 297 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double nearbyint(double __x) noexcept(true); extern double __nearbyint(double __x) noexcept(true);
# 301 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double round(double __x) noexcept(true) __attribute((const)); extern double __round(double __x) noexcept(true) __attribute((const));
# 305 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double trunc(double __x) noexcept(true) __attribute((const)); extern double __trunc(double __x) noexcept(true) __attribute((const));
# 310 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double remquo(double __x, double __y, int * __quo) noexcept(true); extern double __remquo(double __x, double __y, int * __quo) noexcept(true);
# 317 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrint(double __x) noexcept(true); extern long __lrint(double __x) noexcept(true);
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrint(double __x) noexcept(true); extern long long __llrint(double __x) noexcept(true);
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lround(double __x) noexcept(true); extern long __lround(double __x) noexcept(true);
# 325 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llround(double __x) noexcept(true); extern long long __llround(double __x) noexcept(true);
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fdim(double __x, double __y) noexcept(true); extern double __fdim(double __x, double __y) noexcept(true);
# 333 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmax(double __x, double __y) noexcept(true) __attribute((const)); extern double __fmax(double __x, double __y) noexcept(true) __attribute((const));
# 336 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmin(double __x, double __y) noexcept(true) __attribute((const)); extern double __fmin(double __x, double __y) noexcept(true) __attribute((const));
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fma(double __x, double __y, double __z) noexcept(true); extern double __fma(double __x, double __y, double __z) noexcept(true);
# 345 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double roundeven(double __x) noexcept(true) __attribute((const)); extern double __roundeven(double __x) noexcept(true) __attribute((const));
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfp(double __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfp(double __x, int __round, unsigned __width) noexcept(true);
# 354 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfp(double __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfp(double __x, int __round, unsigned __width) noexcept(true);
# 360 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpx(double __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpx(double __x, int __round, unsigned __width) noexcept(true);
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpx(double __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpx(double __x, int __round, unsigned __width) noexcept(true);
# 370 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int canonicalize(double * __cx, const double * __x) noexcept(true);
# 377 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmaxmag(double __x, double __y) noexcept(true) __attribute((const)); extern double __fmaxmag(double __x, double __y) noexcept(true) __attribute((const));
# 380 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fminmag(double __x, double __y) noexcept(true) __attribute((const)); extern double __fminmag(double __x, double __y) noexcept(true) __attribute((const));
# 385 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmaximum(double __x, double __y) noexcept(true) __attribute((const)); extern double __fmaximum(double __x, double __y) noexcept(true) __attribute((const));
# 388 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fminimum(double __x, double __y) noexcept(true) __attribute((const)); extern double __fminimum(double __x, double __y) noexcept(true) __attribute((const));
# 391 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmaximum_num(double __x, double __y) noexcept(true) __attribute((const)); extern double __fmaximum_num(double __x, double __y) noexcept(true) __attribute((const));
# 394 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fminimum_num(double __x, double __y) noexcept(true) __attribute((const)); extern double __fminimum_num(double __x, double __y) noexcept(true) __attribute((const));
# 397 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmaximum_mag(double __x, double __y) noexcept(true) __attribute((const)); extern double __fmaximum_mag(double __x, double __y) noexcept(true) __attribute((const));
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fminimum_mag(double __x, double __y) noexcept(true) __attribute((const)); extern double __fminimum_mag(double __x, double __y) noexcept(true) __attribute((const));
# 403 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fmaximum_mag_num(double __x, double __y) noexcept(true) __attribute((const)); extern double __fmaximum_mag_num(double __x, double __y) noexcept(true) __attribute((const));
# 406 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double fminimum_mag_num(double __x, double __y) noexcept(true) __attribute((const)); extern double __fminimum_mag_num(double __x, double __y) noexcept(true) __attribute((const));
# 411 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalorder(const double * __x, const double * __y) noexcept(true)
# 413 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 416 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalordermag(const double * __x, const double * __y) noexcept(true)
# 418 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 421 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double getpayload(const double * __x) noexcept(true); extern double __getpayload(const double * __x) noexcept(true);
# 424 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayload(double * __x, double __payload) noexcept(true);
# 427 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadsig(double * __x, double __payload) noexcept(true);
# 435 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern double scalb(double __x, double __n) noexcept(true); extern double __scalb(double __x, double __n) noexcept(true);
# 20 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __fpclassifyf(float __value) noexcept(true)
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __signbitf(float __value) noexcept(true)
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 29 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isinff(float __value) noexcept(true)
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __finitef(float __value) noexcept(true)
# 34 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 37 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isnanf(float __value) noexcept(true)
# 38 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 41 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __iseqsigf(float __x, float __y) noexcept(true);
# 44 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __issignalingf(float __value) noexcept(true)
# 45 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float acosf(float __x) noexcept(true); extern float __acosf(float __x) noexcept(true);
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float asinf(float __x) noexcept(true); extern float __asinf(float __x) noexcept(true);
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atanf(float __x) noexcept(true); extern float __atanf(float __x) noexcept(true);
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atan2f(float __y, float __x) noexcept(true); extern float __atan2f(float __y, float __x) noexcept(true);
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float cosf(float __x) noexcept(true);
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sinf(float __x) noexcept(true);
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tanf(float __x) noexcept(true);
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float coshf(float __x) noexcept(true); extern float __coshf(float __x) noexcept(true);
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sinhf(float __x) noexcept(true); extern float __sinhf(float __x) noexcept(true);
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tanhf(float __x) noexcept(true); extern float __tanhf(float __x) noexcept(true);
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosf(float __x, float * __sinx, float * __cosx) noexcept(true);
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float acoshf(float __x) noexcept(true); extern float __acoshf(float __x) noexcept(true);
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float asinhf(float __x) noexcept(true); extern float __asinhf(float __x) noexcept(true);
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float atanhf(float __x) noexcept(true); extern float __atanhf(float __x) noexcept(true);
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float expf(float __x) noexcept(true);
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float frexpf(float __x, int * __exponent) noexcept(true); extern float __frexpf(float __x, int * __exponent) noexcept(true);
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ldexpf(float __x, int __exponent) noexcept(true); extern float __ldexpf(float __x, int __exponent) noexcept(true);
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float logf(float __x) noexcept(true);
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log10f(float __x) noexcept(true);
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float modff(float __x, float * __iptr) noexcept(true); extern float __modff(float __x, float * __iptr) noexcept(true) __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float exp10f(float __x) noexcept(true);
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float expm1f(float __x) noexcept(true); extern float __expm1f(float __x) noexcept(true);
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log1pf(float __x) noexcept(true); extern float __log1pf(float __x) noexcept(true);
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float logbf(float __x) noexcept(true); extern float __logbf(float __x) noexcept(true);
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float exp2f(float __x) noexcept(true); extern float __exp2f(float __x) noexcept(true);
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float log2f(float __x) noexcept(true);
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float powf(float __x, float __y) noexcept(true);
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float sqrtf(float __x) noexcept(true); extern float __sqrtf(float __x) noexcept(true);
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float hypotf(float __x, float __y) noexcept(true); extern float __hypotf(float __x, float __y) noexcept(true);
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float cbrtf(float __x) noexcept(true); extern float __cbrtf(float __x) noexcept(true);
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ceilf(float __x) noexcept(true) __attribute((const)); extern float __ceilf(float __x) noexcept(true) __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fabsf(float __x) noexcept(true) __attribute((const)); extern float __fabsf(float __x) noexcept(true) __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float floorf(float __x) noexcept(true) __attribute((const)); extern float __floorf(float __x) noexcept(true) __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmodf(float __x, float __y) noexcept(true); extern float __fmodf(float __x, float __y) noexcept(true);
# 177 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isinff(float __value) noexcept(true)
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 183 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finitef(float __value) noexcept(true)
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float dremf(float __x, float __y) noexcept(true); extern float __dremf(float __x, float __y) noexcept(true);
# 191 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float significandf(float __x) noexcept(true); extern float __significandf(float __x) noexcept(true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float copysignf(float __x, float __y) noexcept(true) __attribute((const)); extern float __copysignf(float __x, float __y) noexcept(true) __attribute((const));
# 203 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nanf(const char * __tagb) noexcept(true); extern float __nanf(const char * __tagb) noexcept(true);
# 213 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isnanf(float __value) noexcept(true)
# 214 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float j0f(float) noexcept(true); extern float __j0f(float) noexcept(true);
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float j1f(float) noexcept(true); extern float __j1f(float) noexcept(true);
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float jnf(int, float) noexcept(true); extern float __jnf(int, float) noexcept(true);
# 223 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float y0f(float) noexcept(true); extern float __y0f(float) noexcept(true);
# 224 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float y1f(float) noexcept(true); extern float __y1f(float) noexcept(true);
# 225 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float ynf(int, float) noexcept(true); extern float __ynf(int, float) noexcept(true);
# 231 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float erff(float) noexcept(true); extern float __erff(float) noexcept(true);
# 232 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float erfcf(float) noexcept(true); extern float __erfcf(float) noexcept(true);
# 233 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float lgammaf(float) noexcept(true); extern float __lgammaf(float) noexcept(true);
# 238 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float tgammaf(float) noexcept(true); extern float __tgammaf(float) noexcept(true);
# 244 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float gammaf(float) noexcept(true); extern float __gammaf(float) noexcept(true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float lgammaf_r(float, int * __signgamp) noexcept(true); extern float __lgammaf_r(float, int * __signgamp) noexcept(true);
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float rintf(float __x) noexcept(true); extern float __rintf(float __x) noexcept(true);
# 262 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nextafterf(float __x, float __y) noexcept(true); extern float __nextafterf(float __x, float __y) noexcept(true);
# 264 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nexttowardf(float __x, long double __y) noexcept(true); extern float __nexttowardf(float __x, long double __y) noexcept(true);
# 269 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nextdownf(float __x) noexcept(true); extern float __nextdownf(float __x) noexcept(true);
# 271 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nextupf(float __x) noexcept(true); extern float __nextupf(float __x) noexcept(true);
# 275 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float remainderf(float __x, float __y) noexcept(true); extern float __remainderf(float __x, float __y) noexcept(true);
# 279 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalbnf(float __x, int __n) noexcept(true); extern float __scalbnf(float __x, int __n) noexcept(true);
# 283 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbf(float __x) noexcept(true); extern int __ilogbf(float __x) noexcept(true);
# 288 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long llogbf(float __x) noexcept(true); extern long __llogbf(float __x) noexcept(true);
# 293 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalblnf(float __x, long __n) noexcept(true); extern float __scalblnf(float __x, long __n) noexcept(true);
# 297 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float nearbyintf(float __x) noexcept(true); extern float __nearbyintf(float __x) noexcept(true);
# 301 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float roundf(float __x) noexcept(true) __attribute((const)); extern float __roundf(float __x) noexcept(true) __attribute((const));
# 305 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float truncf(float __x) noexcept(true) __attribute((const)); extern float __truncf(float __x) noexcept(true) __attribute((const));
# 310 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float remquof(float __x, float __y, int * __quo) noexcept(true); extern float __remquof(float __x, float __y, int * __quo) noexcept(true);
# 317 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintf(float __x) noexcept(true); extern long __lrintf(float __x) noexcept(true);
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintf(float __x) noexcept(true); extern long long __llrintf(float __x) noexcept(true);
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundf(float __x) noexcept(true); extern long __lroundf(float __x) noexcept(true);
# 325 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundf(float __x) noexcept(true); extern long long __llroundf(float __x) noexcept(true);
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fdimf(float __x, float __y) noexcept(true); extern float __fdimf(float __x, float __y) noexcept(true);
# 333 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaxf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fmaxf(float __x, float __y) noexcept(true) __attribute((const));
# 336 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fminf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fminf(float __x, float __y) noexcept(true) __attribute((const));
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaf(float __x, float __y, float __z) noexcept(true); extern float __fmaf(float __x, float __y, float __z) noexcept(true);
# 345 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float roundevenf(float __x) noexcept(true) __attribute((const)); extern float __roundevenf(float __x) noexcept(true) __attribute((const));
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpf(float __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpf(float __x, int __round, unsigned __width) noexcept(true);
# 354 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpf(float __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpf(float __x, int __round, unsigned __width) noexcept(true);
# 360 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpxf(float __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpxf(float __x, int __round, unsigned __width) noexcept(true);
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpxf(float __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpxf(float __x, int __round, unsigned __width) noexcept(true);
# 370 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int canonicalizef(float * __cx, const float * __x) noexcept(true);
# 377 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaxmagf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fmaxmagf(float __x, float __y) noexcept(true) __attribute((const));
# 380 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fminmagf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fminmagf(float __x, float __y) noexcept(true) __attribute((const));
# 385 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaximumf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fmaximumf(float __x, float __y) noexcept(true) __attribute((const));
# 388 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fminimumf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fminimumf(float __x, float __y) noexcept(true) __attribute((const));
# 391 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaximum_numf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fmaximum_numf(float __x, float __y) noexcept(true) __attribute((const));
# 394 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fminimum_numf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fminimum_numf(float __x, float __y) noexcept(true) __attribute((const));
# 397 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaximum_magf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fmaximum_magf(float __x, float __y) noexcept(true) __attribute((const));
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fminimum_magf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fminimum_magf(float __x, float __y) noexcept(true) __attribute((const));
# 403 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fmaximum_mag_numf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fmaximum_mag_numf(float __x, float __y) noexcept(true) __attribute((const));
# 406 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float fminimum_mag_numf(float __x, float __y) noexcept(true) __attribute((const)); extern float __fminimum_mag_numf(float __x, float __y) noexcept(true) __attribute((const));
# 411 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalorderf(const float * __x, const float * __y) noexcept(true)
# 413 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 416 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalordermagf(const float * __x, const float * __y) noexcept(true)
# 418 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 421 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float getpayloadf(const float * __x) noexcept(true); extern float __getpayloadf(const float * __x) noexcept(true);
# 424 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadf(float * __x, float __payload) noexcept(true);
# 427 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadsigf(float * __x, float __payload) noexcept(true);
# 435 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern float scalbf(float __x, float __n) noexcept(true); extern float __scalbf(float __x, float __n) noexcept(true);
# 20 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __fpclassifyl(long double __value) noexcept(true)
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __signbitl(long double __value) noexcept(true)
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 29 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isinfl(long double __value) noexcept(true)
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __finitel(long double __value) noexcept(true)
# 34 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 37 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isnanl(long double __value) noexcept(true)
# 38 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 41 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __iseqsigl(long double __x, long double __y) noexcept(true);
# 44 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __issignalingl(long double __value) noexcept(true)
# 45 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double acosl(long double __x) noexcept(true); extern long double __acosl(long double __x) noexcept(true);
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double asinl(long double __x) noexcept(true); extern long double __asinl(long double __x) noexcept(true);
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atanl(long double __x) noexcept(true); extern long double __atanl(long double __x) noexcept(true);
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atan2l(long double __y, long double __x) noexcept(true); extern long double __atan2l(long double __y, long double __x) noexcept(true);
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double cosl(long double __x) noexcept(true); extern long double __cosl(long double __x) noexcept(true);
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sinl(long double __x) noexcept(true); extern long double __sinl(long double __x) noexcept(true);
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tanl(long double __x) noexcept(true); extern long double __tanl(long double __x) noexcept(true);
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double coshl(long double __x) noexcept(true); extern long double __coshl(long double __x) noexcept(true);
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sinhl(long double __x) noexcept(true); extern long double __sinhl(long double __x) noexcept(true);
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tanhl(long double __x) noexcept(true); extern long double __tanhl(long double __x) noexcept(true);
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosl(long double __x, long double * __sinx, long double * __cosx) noexcept(true); extern void __sincosl(long double __x, long double * __sinx, long double * __cosx) noexcept(true);
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double acoshl(long double __x) noexcept(true); extern long double __acoshl(long double __x) noexcept(true);
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double asinhl(long double __x) noexcept(true); extern long double __asinhl(long double __x) noexcept(true);
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double atanhl(long double __x) noexcept(true); extern long double __atanhl(long double __x) noexcept(true);
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double expl(long double __x) noexcept(true); extern long double __expl(long double __x) noexcept(true);
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double frexpl(long double __x, int * __exponent) noexcept(true); extern long double __frexpl(long double __x, int * __exponent) noexcept(true);
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ldexpl(long double __x, int __exponent) noexcept(true); extern long double __ldexpl(long double __x, int __exponent) noexcept(true);
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double logl(long double __x) noexcept(true); extern long double __logl(long double __x) noexcept(true);
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log10l(long double __x) noexcept(true); extern long double __log10l(long double __x) noexcept(true);
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double modfl(long double __x, long double * __iptr) noexcept(true); extern long double __modfl(long double __x, long double * __iptr) noexcept(true) __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double exp10l(long double __x) noexcept(true); extern long double __exp10l(long double __x) noexcept(true);
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double expm1l(long double __x) noexcept(true); extern long double __expm1l(long double __x) noexcept(true);
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log1pl(long double __x) noexcept(true); extern long double __log1pl(long double __x) noexcept(true);
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double logbl(long double __x) noexcept(true); extern long double __logbl(long double __x) noexcept(true);
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double exp2l(long double __x) noexcept(true); extern long double __exp2l(long double __x) noexcept(true);
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double log2l(long double __x) noexcept(true); extern long double __log2l(long double __x) noexcept(true);
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double powl(long double __x, long double __y) noexcept(true); extern long double __powl(long double __x, long double __y) noexcept(true);
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double sqrtl(long double __x) noexcept(true); extern long double __sqrtl(long double __x) noexcept(true);
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double hypotl(long double __x, long double __y) noexcept(true); extern long double __hypotl(long double __x, long double __y) noexcept(true);
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double cbrtl(long double __x) noexcept(true); extern long double __cbrtl(long double __x) noexcept(true);
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ceill(long double __x) noexcept(true) __attribute((const)); extern long double __ceill(long double __x) noexcept(true) __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fabsl(long double __x) noexcept(true) __attribute((const)); extern long double __fabsl(long double __x) noexcept(true) __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double floorl(long double __x) noexcept(true) __attribute((const)); extern long double __floorl(long double __x) noexcept(true) __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmodl(long double __x, long double __y) noexcept(true); extern long double __fmodl(long double __x, long double __y) noexcept(true);
# 177 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isinfl(long double __value) noexcept(true)
# 178 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 183 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int finitel(long double __value) noexcept(true)
# 184 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 187 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double dreml(long double __x, long double __y) noexcept(true); extern long double __dreml(long double __x, long double __y) noexcept(true);
# 191 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double significandl(long double __x) noexcept(true); extern long double __significandl(long double __x) noexcept(true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double copysignl(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __copysignl(long double __x, long double __y) noexcept(true) __attribute((const));
# 203 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nanl(const char * __tagb) noexcept(true); extern long double __nanl(const char * __tagb) noexcept(true);
# 213 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int isnanl(long double __value) noexcept(true)
# 214 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((const));
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double j0l(long double) noexcept(true); extern long double __j0l(long double) noexcept(true);
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double j1l(long double) noexcept(true); extern long double __j1l(long double) noexcept(true);
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double jnl(int, long double) noexcept(true); extern long double __jnl(int, long double) noexcept(true);
# 223 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double y0l(long double) noexcept(true); extern long double __y0l(long double) noexcept(true);
# 224 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double y1l(long double) noexcept(true); extern long double __y1l(long double) noexcept(true);
# 225 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double ynl(int, long double) noexcept(true); extern long double __ynl(int, long double) noexcept(true);
# 231 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double erfl(long double) noexcept(true); extern long double __erfl(long double) noexcept(true);
# 232 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double erfcl(long double) noexcept(true); extern long double __erfcl(long double) noexcept(true);
# 233 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double lgammal(long double) noexcept(true); extern long double __lgammal(long double) noexcept(true);
# 238 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double tgammal(long double) noexcept(true); extern long double __tgammal(long double) noexcept(true);
# 244 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double gammal(long double) noexcept(true); extern long double __gammal(long double) noexcept(true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double lgammal_r(long double, int * __signgamp) noexcept(true); extern long double __lgammal_r(long double, int * __signgamp) noexcept(true);
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double rintl(long double __x) noexcept(true); extern long double __rintl(long double __x) noexcept(true);
# 262 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nextafterl(long double __x, long double __y) noexcept(true); extern long double __nextafterl(long double __x, long double __y) noexcept(true);
# 264 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nexttowardl(long double __x, long double __y) noexcept(true); extern long double __nexttowardl(long double __x, long double __y) noexcept(true);
# 269 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nextdownl(long double __x) noexcept(true); extern long double __nextdownl(long double __x) noexcept(true);
# 271 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nextupl(long double __x) noexcept(true); extern long double __nextupl(long double __x) noexcept(true);
# 275 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double remainderl(long double __x, long double __y) noexcept(true); extern long double __remainderl(long double __x, long double __y) noexcept(true);
# 279 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalbnl(long double __x, int __n) noexcept(true); extern long double __scalbnl(long double __x, int __n) noexcept(true);
# 283 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbl(long double __x) noexcept(true); extern int __ilogbl(long double __x) noexcept(true);
# 288 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long llogbl(long double __x) noexcept(true); extern long __llogbl(long double __x) noexcept(true);
# 293 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalblnl(long double __x, long __n) noexcept(true); extern long double __scalblnl(long double __x, long __n) noexcept(true);
# 297 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double nearbyintl(long double __x) noexcept(true); extern long double __nearbyintl(long double __x) noexcept(true);
# 301 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double roundl(long double __x) noexcept(true) __attribute((const)); extern long double __roundl(long double __x) noexcept(true) __attribute((const));
# 305 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double truncl(long double __x) noexcept(true) __attribute((const)); extern long double __truncl(long double __x) noexcept(true) __attribute((const));
# 310 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double remquol(long double __x, long double __y, int * __quo) noexcept(true); extern long double __remquol(long double __x, long double __y, int * __quo) noexcept(true);
# 317 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintl(long double __x) noexcept(true); extern long __lrintl(long double __x) noexcept(true);
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintl(long double __x) noexcept(true); extern long long __llrintl(long double __x) noexcept(true);
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundl(long double __x) noexcept(true); extern long __lroundl(long double __x) noexcept(true);
# 325 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundl(long double __x) noexcept(true); extern long long __llroundl(long double __x) noexcept(true);
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fdiml(long double __x, long double __y) noexcept(true); extern long double __fdiml(long double __x, long double __y) noexcept(true);
# 333 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmaxl(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fmaxl(long double __x, long double __y) noexcept(true) __attribute((const));
# 336 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fminl(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fminl(long double __x, long double __y) noexcept(true) __attribute((const));
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmal(long double __x, long double __y, long double __z) noexcept(true); extern long double __fmal(long double __x, long double __y, long double __z) noexcept(true);
# 345 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double roundevenl(long double __x) noexcept(true) __attribute((const)); extern long double __roundevenl(long double __x) noexcept(true) __attribute((const));
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpl(long double __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpl(long double __x, int __round, unsigned __width) noexcept(true);
# 354 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpl(long double __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpl(long double __x, int __round, unsigned __width) noexcept(true);
# 360 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpxl(long double __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpxl(long double __x, int __round, unsigned __width) noexcept(true);
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpxl(long double __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpxl(long double __x, int __round, unsigned __width) noexcept(true);
# 370 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int canonicalizel(long double * __cx, const long double * __x) noexcept(true);
# 377 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmaxmagl(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fmaxmagl(long double __x, long double __y) noexcept(true) __attribute((const));
# 380 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fminmagl(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fminmagl(long double __x, long double __y) noexcept(true) __attribute((const));
# 385 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmaximuml(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fmaximuml(long double __x, long double __y) noexcept(true) __attribute((const));
# 388 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fminimuml(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fminimuml(long double __x, long double __y) noexcept(true) __attribute((const));
# 391 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmaximum_numl(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fmaximum_numl(long double __x, long double __y) noexcept(true) __attribute((const));
# 394 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fminimum_numl(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fminimum_numl(long double __x, long double __y) noexcept(true) __attribute((const));
# 397 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmaximum_magl(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fmaximum_magl(long double __x, long double __y) noexcept(true) __attribute((const));
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fminimum_magl(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fminimum_magl(long double __x, long double __y) noexcept(true) __attribute((const));
# 403 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fmaximum_mag_numl(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fmaximum_mag_numl(long double __x, long double __y) noexcept(true) __attribute((const));
# 406 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double fminimum_mag_numl(long double __x, long double __y) noexcept(true) __attribute((const)); extern long double __fminimum_mag_numl(long double __x, long double __y) noexcept(true) __attribute((const));
# 411 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalorderl(const long double * __x, const long double * __y) noexcept(true)
# 413 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 416 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalordermagl(const long double * __x, const long double * __y) noexcept(true)
# 418 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 421 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double getpayloadl(const long double * __x) noexcept(true); extern long double __getpayloadl(const long double * __x) noexcept(true);
# 424 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadl(long double * __x, long double __payload) noexcept(true);
# 427 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadsigl(long double * __x, long double __payload) noexcept(true);
# 435 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long double scalbl(long double __x, long double __n) noexcept(true); extern long double __scalbl(long double __x, long double __n) noexcept(true);
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 acosf32(_Float32 __x) noexcept(true); extern _Float32 __acosf32(_Float32 __x) noexcept(true);
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 asinf32(_Float32 __x) noexcept(true); extern _Float32 __asinf32(_Float32 __x) noexcept(true);
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 atanf32(_Float32 __x) noexcept(true); extern _Float32 __atanf32(_Float32 __x) noexcept(true);
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 atan2f32(_Float32 __y, _Float32 __x) noexcept(true); extern _Float32 __atan2f32(_Float32 __y, _Float32 __x) noexcept(true);
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 cosf32(_Float32 __x) noexcept(true); extern _Float32 __cosf32(_Float32 __x) noexcept(true);
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 sinf32(_Float32 __x) noexcept(true); extern _Float32 __sinf32(_Float32 __x) noexcept(true);
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 tanf32(_Float32 __x) noexcept(true); extern _Float32 __tanf32(_Float32 __x) noexcept(true);
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 coshf32(_Float32 __x) noexcept(true); extern _Float32 __coshf32(_Float32 __x) noexcept(true);
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 sinhf32(_Float32 __x) noexcept(true); extern _Float32 __sinhf32(_Float32 __x) noexcept(true);
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 tanhf32(_Float32 __x) noexcept(true); extern _Float32 __tanhf32(_Float32 __x) noexcept(true);
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosf32(_Float32 __x, _Float32 * __sinx, _Float32 * __cosx) noexcept(true); extern void __sincosf32(_Float32 __x, _Float32 * __sinx, _Float32 * __cosx) noexcept(true);
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 acoshf32(_Float32 __x) noexcept(true); extern _Float32 __acoshf32(_Float32 __x) noexcept(true);
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 asinhf32(_Float32 __x) noexcept(true); extern _Float32 __asinhf32(_Float32 __x) noexcept(true);
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 atanhf32(_Float32 __x) noexcept(true); extern _Float32 __atanhf32(_Float32 __x) noexcept(true);
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 expf32(_Float32 __x) noexcept(true); extern _Float32 __expf32(_Float32 __x) noexcept(true);
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 frexpf32(_Float32 __x, int * __exponent) noexcept(true); extern _Float32 __frexpf32(_Float32 __x, int * __exponent) noexcept(true);
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 ldexpf32(_Float32 __x, int __exponent) noexcept(true); extern _Float32 __ldexpf32(_Float32 __x, int __exponent) noexcept(true);
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 logf32(_Float32 __x) noexcept(true); extern _Float32 __logf32(_Float32 __x) noexcept(true);
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 log10f32(_Float32 __x) noexcept(true); extern _Float32 __log10f32(_Float32 __x) noexcept(true);
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 modff32(_Float32 __x, _Float32 * __iptr) noexcept(true); extern _Float32 __modff32(_Float32 __x, _Float32 * __iptr) noexcept(true) __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 exp10f32(_Float32 __x) noexcept(true); extern _Float32 __exp10f32(_Float32 __x) noexcept(true);
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 expm1f32(_Float32 __x) noexcept(true); extern _Float32 __expm1f32(_Float32 __x) noexcept(true);
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 log1pf32(_Float32 __x) noexcept(true); extern _Float32 __log1pf32(_Float32 __x) noexcept(true);
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 logbf32(_Float32 __x) noexcept(true); extern _Float32 __logbf32(_Float32 __x) noexcept(true);
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 exp2f32(_Float32 __x) noexcept(true); extern _Float32 __exp2f32(_Float32 __x) noexcept(true);
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 log2f32(_Float32 __x) noexcept(true); extern _Float32 __log2f32(_Float32 __x) noexcept(true);
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 powf32(_Float32 __x, _Float32 __y) noexcept(true); extern _Float32 __powf32(_Float32 __x, _Float32 __y) noexcept(true);
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 sqrtf32(_Float32 __x) noexcept(true); extern _Float32 __sqrtf32(_Float32 __x) noexcept(true);
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 hypotf32(_Float32 __x, _Float32 __y) noexcept(true); extern _Float32 __hypotf32(_Float32 __x, _Float32 __y) noexcept(true);
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 cbrtf32(_Float32 __x) noexcept(true); extern _Float32 __cbrtf32(_Float32 __x) noexcept(true);
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 ceilf32(_Float32 __x) noexcept(true) __attribute((const)); extern _Float32 __ceilf32(_Float32 __x) noexcept(true) __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fabsf32(_Float32 __x) noexcept(true) __attribute((const)); extern _Float32 __fabsf32(_Float32 __x) noexcept(true) __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 floorf32(_Float32 __x) noexcept(true) __attribute((const)); extern _Float32 __floorf32(_Float32 __x) noexcept(true) __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fmodf32(_Float32 __x, _Float32 __y) noexcept(true); extern _Float32 __fmodf32(_Float32 __x, _Float32 __y) noexcept(true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 copysignf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __copysignf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 203 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 nanf32(const char * __tagb) noexcept(true); extern _Float32 __nanf32(const char * __tagb) noexcept(true);
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 j0f32(_Float32) noexcept(true); extern _Float32 __j0f32(_Float32) noexcept(true);
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 j1f32(_Float32) noexcept(true); extern _Float32 __j1f32(_Float32) noexcept(true);
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 jnf32(int, _Float32) noexcept(true); extern _Float32 __jnf32(int, _Float32) noexcept(true);
# 223 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 y0f32(_Float32) noexcept(true); extern _Float32 __y0f32(_Float32) noexcept(true);
# 224 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 y1f32(_Float32) noexcept(true); extern _Float32 __y1f32(_Float32) noexcept(true);
# 225 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 ynf32(int, _Float32) noexcept(true); extern _Float32 __ynf32(int, _Float32) noexcept(true);
# 231 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 erff32(_Float32) noexcept(true); extern _Float32 __erff32(_Float32) noexcept(true);
# 232 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 erfcf32(_Float32) noexcept(true); extern _Float32 __erfcf32(_Float32) noexcept(true);
# 233 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 lgammaf32(_Float32) noexcept(true); extern _Float32 __lgammaf32(_Float32) noexcept(true);
# 238 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 tgammaf32(_Float32) noexcept(true); extern _Float32 __tgammaf32(_Float32) noexcept(true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 lgammaf32_r(_Float32, int * __signgamp) noexcept(true); extern _Float32 __lgammaf32_r(_Float32, int * __signgamp) noexcept(true);
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 rintf32(_Float32 __x) noexcept(true); extern _Float32 __rintf32(_Float32 __x) noexcept(true);
# 262 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 nextafterf32(_Float32 __x, _Float32 __y) noexcept(true); extern _Float32 __nextafterf32(_Float32 __x, _Float32 __y) noexcept(true);
# 269 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 nextdownf32(_Float32 __x) noexcept(true); extern _Float32 __nextdownf32(_Float32 __x) noexcept(true);
# 271 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 nextupf32(_Float32 __x) noexcept(true); extern _Float32 __nextupf32(_Float32 __x) noexcept(true);
# 275 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 remainderf32(_Float32 __x, _Float32 __y) noexcept(true); extern _Float32 __remainderf32(_Float32 __x, _Float32 __y) noexcept(true);
# 279 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 scalbnf32(_Float32 __x, int __n) noexcept(true); extern _Float32 __scalbnf32(_Float32 __x, int __n) noexcept(true);
# 283 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbf32(_Float32 __x) noexcept(true); extern int __ilogbf32(_Float32 __x) noexcept(true);
# 288 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long llogbf32(_Float32 __x) noexcept(true); extern long __llogbf32(_Float32 __x) noexcept(true);
# 293 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 scalblnf32(_Float32 __x, long __n) noexcept(true); extern _Float32 __scalblnf32(_Float32 __x, long __n) noexcept(true);
# 297 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 nearbyintf32(_Float32 __x) noexcept(true); extern _Float32 __nearbyintf32(_Float32 __x) noexcept(true);
# 301 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 roundf32(_Float32 __x) noexcept(true) __attribute((const)); extern _Float32 __roundf32(_Float32 __x) noexcept(true) __attribute((const));
# 305 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 truncf32(_Float32 __x) noexcept(true) __attribute((const)); extern _Float32 __truncf32(_Float32 __x) noexcept(true) __attribute((const));
# 310 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 remquof32(_Float32 __x, _Float32 __y, int * __quo) noexcept(true); extern _Float32 __remquof32(_Float32 __x, _Float32 __y, int * __quo) noexcept(true);
# 317 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintf32(_Float32 __x) noexcept(true); extern long __lrintf32(_Float32 __x) noexcept(true);
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintf32(_Float32 __x) noexcept(true); extern long long __llrintf32(_Float32 __x) noexcept(true);
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundf32(_Float32 __x) noexcept(true); extern long __lroundf32(_Float32 __x) noexcept(true);
# 325 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundf32(_Float32 __x) noexcept(true); extern long long __llroundf32(_Float32 __x) noexcept(true);
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fdimf32(_Float32 __x, _Float32 __y) noexcept(true); extern _Float32 __fdimf32(_Float32 __x, _Float32 __y) noexcept(true);
# 333 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fmaxf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fmaxf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 336 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fminf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fminf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fmaf32(_Float32 __x, _Float32 __y, _Float32 __z) noexcept(true); extern _Float32 __fmaf32(_Float32 __x, _Float32 __y, _Float32 __z) noexcept(true);
# 345 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 roundevenf32(_Float32 __x) noexcept(true) __attribute((const)); extern _Float32 __roundevenf32(_Float32 __x) noexcept(true) __attribute((const));
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpf32(_Float32 __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpf32(_Float32 __x, int __round, unsigned __width) noexcept(true);
# 354 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpf32(_Float32 __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpf32(_Float32 __x, int __round, unsigned __width) noexcept(true);
# 360 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpxf32(_Float32 __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpxf32(_Float32 __x, int __round, unsigned __width) noexcept(true);
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpxf32(_Float32 __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpxf32(_Float32 __x, int __round, unsigned __width) noexcept(true);
# 370 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int canonicalizef32(_Float32 * __cx, const _Float32 * __x) noexcept(true);
# 377 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fmaxmagf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fmaxmagf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 380 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fminmagf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fminmagf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 385 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fmaximumf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fmaximumf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 388 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fminimumf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fminimumf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 391 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fmaximum_numf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fmaximum_numf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 394 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fminimum_numf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fminimum_numf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 397 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fmaximum_magf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fmaximum_magf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fminimum_magf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fminimum_magf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 403 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fmaximum_mag_numf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fmaximum_mag_numf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 406 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 fminimum_mag_numf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const)); extern _Float32 __fminimum_mag_numf32(_Float32 __x, _Float32 __y) noexcept(true) __attribute((const));
# 411 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalorderf32(const _Float32 * __x, const _Float32 * __y) noexcept(true)
# 413 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 416 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalordermagf32(const _Float32 * __x, const _Float32 * __y) noexcept(true)
# 418 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 421 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32 getpayloadf32(const _Float32 * __x) noexcept(true); extern _Float32 __getpayloadf32(const _Float32 * __x) noexcept(true);
# 424 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadf32(_Float32 * __x, _Float32 __payload) noexcept(true);
# 427 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadsigf32(_Float32 * __x, _Float32 __payload) noexcept(true);
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 acosf64(_Float64 __x) noexcept(true); extern _Float64 __acosf64(_Float64 __x) noexcept(true);
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 asinf64(_Float64 __x) noexcept(true); extern _Float64 __asinf64(_Float64 __x) noexcept(true);
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 atanf64(_Float64 __x) noexcept(true); extern _Float64 __atanf64(_Float64 __x) noexcept(true);
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 atan2f64(_Float64 __y, _Float64 __x) noexcept(true); extern _Float64 __atan2f64(_Float64 __y, _Float64 __x) noexcept(true);
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 cosf64(_Float64 __x) noexcept(true); extern _Float64 __cosf64(_Float64 __x) noexcept(true);
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 sinf64(_Float64 __x) noexcept(true); extern _Float64 __sinf64(_Float64 __x) noexcept(true);
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 tanf64(_Float64 __x) noexcept(true); extern _Float64 __tanf64(_Float64 __x) noexcept(true);
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 coshf64(_Float64 __x) noexcept(true); extern _Float64 __coshf64(_Float64 __x) noexcept(true);
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 sinhf64(_Float64 __x) noexcept(true); extern _Float64 __sinhf64(_Float64 __x) noexcept(true);
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 tanhf64(_Float64 __x) noexcept(true); extern _Float64 __tanhf64(_Float64 __x) noexcept(true);
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosf64(_Float64 __x, _Float64 * __sinx, _Float64 * __cosx) noexcept(true); extern void __sincosf64(_Float64 __x, _Float64 * __sinx, _Float64 * __cosx) noexcept(true);
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 acoshf64(_Float64 __x) noexcept(true); extern _Float64 __acoshf64(_Float64 __x) noexcept(true);
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 asinhf64(_Float64 __x) noexcept(true); extern _Float64 __asinhf64(_Float64 __x) noexcept(true);
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 atanhf64(_Float64 __x) noexcept(true); extern _Float64 __atanhf64(_Float64 __x) noexcept(true);
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 expf64(_Float64 __x) noexcept(true); extern _Float64 __expf64(_Float64 __x) noexcept(true);
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 frexpf64(_Float64 __x, int * __exponent) noexcept(true); extern _Float64 __frexpf64(_Float64 __x, int * __exponent) noexcept(true);
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 ldexpf64(_Float64 __x, int __exponent) noexcept(true); extern _Float64 __ldexpf64(_Float64 __x, int __exponent) noexcept(true);
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 logf64(_Float64 __x) noexcept(true); extern _Float64 __logf64(_Float64 __x) noexcept(true);
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 log10f64(_Float64 __x) noexcept(true); extern _Float64 __log10f64(_Float64 __x) noexcept(true);
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 modff64(_Float64 __x, _Float64 * __iptr) noexcept(true); extern _Float64 __modff64(_Float64 __x, _Float64 * __iptr) noexcept(true) __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 exp10f64(_Float64 __x) noexcept(true); extern _Float64 __exp10f64(_Float64 __x) noexcept(true);
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 expm1f64(_Float64 __x) noexcept(true); extern _Float64 __expm1f64(_Float64 __x) noexcept(true);
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 log1pf64(_Float64 __x) noexcept(true); extern _Float64 __log1pf64(_Float64 __x) noexcept(true);
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 logbf64(_Float64 __x) noexcept(true); extern _Float64 __logbf64(_Float64 __x) noexcept(true);
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 exp2f64(_Float64 __x) noexcept(true); extern _Float64 __exp2f64(_Float64 __x) noexcept(true);
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 log2f64(_Float64 __x) noexcept(true); extern _Float64 __log2f64(_Float64 __x) noexcept(true);
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 powf64(_Float64 __x, _Float64 __y) noexcept(true); extern _Float64 __powf64(_Float64 __x, _Float64 __y) noexcept(true);
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 sqrtf64(_Float64 __x) noexcept(true); extern _Float64 __sqrtf64(_Float64 __x) noexcept(true);
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 hypotf64(_Float64 __x, _Float64 __y) noexcept(true); extern _Float64 __hypotf64(_Float64 __x, _Float64 __y) noexcept(true);
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 cbrtf64(_Float64 __x) noexcept(true); extern _Float64 __cbrtf64(_Float64 __x) noexcept(true);
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 ceilf64(_Float64 __x) noexcept(true) __attribute((const)); extern _Float64 __ceilf64(_Float64 __x) noexcept(true) __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fabsf64(_Float64 __x) noexcept(true) __attribute((const)); extern _Float64 __fabsf64(_Float64 __x) noexcept(true) __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 floorf64(_Float64 __x) noexcept(true) __attribute((const)); extern _Float64 __floorf64(_Float64 __x) noexcept(true) __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fmodf64(_Float64 __x, _Float64 __y) noexcept(true); extern _Float64 __fmodf64(_Float64 __x, _Float64 __y) noexcept(true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 copysignf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __copysignf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 203 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 nanf64(const char * __tagb) noexcept(true); extern _Float64 __nanf64(const char * __tagb) noexcept(true);
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 j0f64(_Float64) noexcept(true); extern _Float64 __j0f64(_Float64) noexcept(true);
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 j1f64(_Float64) noexcept(true); extern _Float64 __j1f64(_Float64) noexcept(true);
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 jnf64(int, _Float64) noexcept(true); extern _Float64 __jnf64(int, _Float64) noexcept(true);
# 223 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 y0f64(_Float64) noexcept(true); extern _Float64 __y0f64(_Float64) noexcept(true);
# 224 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 y1f64(_Float64) noexcept(true); extern _Float64 __y1f64(_Float64) noexcept(true);
# 225 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 ynf64(int, _Float64) noexcept(true); extern _Float64 __ynf64(int, _Float64) noexcept(true);
# 231 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 erff64(_Float64) noexcept(true); extern _Float64 __erff64(_Float64) noexcept(true);
# 232 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 erfcf64(_Float64) noexcept(true); extern _Float64 __erfcf64(_Float64) noexcept(true);
# 233 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 lgammaf64(_Float64) noexcept(true); extern _Float64 __lgammaf64(_Float64) noexcept(true);
# 238 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 tgammaf64(_Float64) noexcept(true); extern _Float64 __tgammaf64(_Float64) noexcept(true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 lgammaf64_r(_Float64, int * __signgamp) noexcept(true); extern _Float64 __lgammaf64_r(_Float64, int * __signgamp) noexcept(true);
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 rintf64(_Float64 __x) noexcept(true); extern _Float64 __rintf64(_Float64 __x) noexcept(true);
# 262 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 nextafterf64(_Float64 __x, _Float64 __y) noexcept(true); extern _Float64 __nextafterf64(_Float64 __x, _Float64 __y) noexcept(true);
# 269 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 nextdownf64(_Float64 __x) noexcept(true); extern _Float64 __nextdownf64(_Float64 __x) noexcept(true);
# 271 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 nextupf64(_Float64 __x) noexcept(true); extern _Float64 __nextupf64(_Float64 __x) noexcept(true);
# 275 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 remainderf64(_Float64 __x, _Float64 __y) noexcept(true); extern _Float64 __remainderf64(_Float64 __x, _Float64 __y) noexcept(true);
# 279 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 scalbnf64(_Float64 __x, int __n) noexcept(true); extern _Float64 __scalbnf64(_Float64 __x, int __n) noexcept(true);
# 283 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbf64(_Float64 __x) noexcept(true); extern int __ilogbf64(_Float64 __x) noexcept(true);
# 288 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long llogbf64(_Float64 __x) noexcept(true); extern long __llogbf64(_Float64 __x) noexcept(true);
# 293 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 scalblnf64(_Float64 __x, long __n) noexcept(true); extern _Float64 __scalblnf64(_Float64 __x, long __n) noexcept(true);
# 297 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 nearbyintf64(_Float64 __x) noexcept(true); extern _Float64 __nearbyintf64(_Float64 __x) noexcept(true);
# 301 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 roundf64(_Float64 __x) noexcept(true) __attribute((const)); extern _Float64 __roundf64(_Float64 __x) noexcept(true) __attribute((const));
# 305 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 truncf64(_Float64 __x) noexcept(true) __attribute((const)); extern _Float64 __truncf64(_Float64 __x) noexcept(true) __attribute((const));
# 310 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 remquof64(_Float64 __x, _Float64 __y, int * __quo) noexcept(true); extern _Float64 __remquof64(_Float64 __x, _Float64 __y, int * __quo) noexcept(true);
# 317 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintf64(_Float64 __x) noexcept(true); extern long __lrintf64(_Float64 __x) noexcept(true);
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintf64(_Float64 __x) noexcept(true); extern long long __llrintf64(_Float64 __x) noexcept(true);
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundf64(_Float64 __x) noexcept(true); extern long __lroundf64(_Float64 __x) noexcept(true);
# 325 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundf64(_Float64 __x) noexcept(true); extern long long __llroundf64(_Float64 __x) noexcept(true);
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fdimf64(_Float64 __x, _Float64 __y) noexcept(true); extern _Float64 __fdimf64(_Float64 __x, _Float64 __y) noexcept(true);
# 333 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fmaxf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fmaxf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 336 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fminf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fminf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fmaf64(_Float64 __x, _Float64 __y, _Float64 __z) noexcept(true); extern _Float64 __fmaf64(_Float64 __x, _Float64 __y, _Float64 __z) noexcept(true);
# 345 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 roundevenf64(_Float64 __x) noexcept(true) __attribute((const)); extern _Float64 __roundevenf64(_Float64 __x) noexcept(true) __attribute((const));
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpf64(_Float64 __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpf64(_Float64 __x, int __round, unsigned __width) noexcept(true);
# 354 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpf64(_Float64 __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpf64(_Float64 __x, int __round, unsigned __width) noexcept(true);
# 360 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpxf64(_Float64 __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpxf64(_Float64 __x, int __round, unsigned __width) noexcept(true);
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpxf64(_Float64 __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpxf64(_Float64 __x, int __round, unsigned __width) noexcept(true);
# 370 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int canonicalizef64(_Float64 * __cx, const _Float64 * __x) noexcept(true);
# 377 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fmaxmagf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fmaxmagf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 380 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fminmagf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fminmagf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 385 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fmaximumf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fmaximumf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 388 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fminimumf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fminimumf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 391 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fmaximum_numf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fmaximum_numf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 394 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fminimum_numf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fminimum_numf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 397 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fmaximum_magf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fmaximum_magf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fminimum_magf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fminimum_magf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 403 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fmaximum_mag_numf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fmaximum_mag_numf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 406 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 fminimum_mag_numf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const)); extern _Float64 __fminimum_mag_numf64(_Float64 __x, _Float64 __y) noexcept(true) __attribute((const));
# 411 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalorderf64(const _Float64 * __x, const _Float64 * __y) noexcept(true)
# 413 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 416 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalordermagf64(const _Float64 * __x, const _Float64 * __y) noexcept(true)
# 418 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 421 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64 getpayloadf64(const _Float64 * __x) noexcept(true); extern _Float64 __getpayloadf64(const _Float64 * __x) noexcept(true);
# 424 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadf64(_Float64 * __x, _Float64 __payload) noexcept(true);
# 427 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadsigf64(_Float64 * __x, _Float64 __payload) noexcept(true);
# 20 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __fpclassifyf128(_Float128 __value) noexcept(true)
# 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __signbitf128(_Float128 __value) noexcept(true)
# 25 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 29 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isinff128(_Float128 __value) noexcept(true)
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __finitef128(_Float128 __value) noexcept(true)
# 34 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 37 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __isnanf128(_Float128 __value) noexcept(true)
# 38 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 41 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __iseqsigf128(_Float128 __x, _Float128 __y) noexcept(true);
# 44 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
extern int __issignalingf128(_Float128 __value) noexcept(true)
# 45 "/usr/include/x86_64-linux-gnu/bits/mathcalls-helper-functions.h" 3
 __attribute((const));
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 acosf128(_Float128 __x) noexcept(true); extern _Float128 __acosf128(_Float128 __x) noexcept(true);
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 asinf128(_Float128 __x) noexcept(true); extern _Float128 __asinf128(_Float128 __x) noexcept(true);
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 atanf128(_Float128 __x) noexcept(true); extern _Float128 __atanf128(_Float128 __x) noexcept(true);
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 atan2f128(_Float128 __y, _Float128 __x) noexcept(true); extern _Float128 __atan2f128(_Float128 __y, _Float128 __x) noexcept(true);
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 cosf128(_Float128 __x) noexcept(true); extern _Float128 __cosf128(_Float128 __x) noexcept(true);
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 sinf128(_Float128 __x) noexcept(true); extern _Float128 __sinf128(_Float128 __x) noexcept(true);
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 tanf128(_Float128 __x) noexcept(true); extern _Float128 __tanf128(_Float128 __x) noexcept(true);
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 coshf128(_Float128 __x) noexcept(true); extern _Float128 __coshf128(_Float128 __x) noexcept(true);
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 sinhf128(_Float128 __x) noexcept(true); extern _Float128 __sinhf128(_Float128 __x) noexcept(true);
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 tanhf128(_Float128 __x) noexcept(true); extern _Float128 __tanhf128(_Float128 __x) noexcept(true);
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosf128(_Float128 __x, _Float128 * __sinx, _Float128 * __cosx) noexcept(true); extern void __sincosf128(_Float128 __x, _Float128 * __sinx, _Float128 * __cosx) noexcept(true);
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 acoshf128(_Float128 __x) noexcept(true); extern _Float128 __acoshf128(_Float128 __x) noexcept(true);
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 asinhf128(_Float128 __x) noexcept(true); extern _Float128 __asinhf128(_Float128 __x) noexcept(true);
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 atanhf128(_Float128 __x) noexcept(true); extern _Float128 __atanhf128(_Float128 __x) noexcept(true);
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 expf128(_Float128 __x) noexcept(true); extern _Float128 __expf128(_Float128 __x) noexcept(true);
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 frexpf128(_Float128 __x, int * __exponent) noexcept(true); extern _Float128 __frexpf128(_Float128 __x, int * __exponent) noexcept(true);
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 ldexpf128(_Float128 __x, int __exponent) noexcept(true); extern _Float128 __ldexpf128(_Float128 __x, int __exponent) noexcept(true);
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 logf128(_Float128 __x) noexcept(true); extern _Float128 __logf128(_Float128 __x) noexcept(true);
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 log10f128(_Float128 __x) noexcept(true); extern _Float128 __log10f128(_Float128 __x) noexcept(true);
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 modff128(_Float128 __x, _Float128 * __iptr) noexcept(true); extern _Float128 __modff128(_Float128 __x, _Float128 * __iptr) noexcept(true) __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 exp10f128(_Float128 __x) noexcept(true); extern _Float128 __exp10f128(_Float128 __x) noexcept(true);
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 expm1f128(_Float128 __x) noexcept(true); extern _Float128 __expm1f128(_Float128 __x) noexcept(true);
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 log1pf128(_Float128 __x) noexcept(true); extern _Float128 __log1pf128(_Float128 __x) noexcept(true);
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 logbf128(_Float128 __x) noexcept(true); extern _Float128 __logbf128(_Float128 __x) noexcept(true);
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 exp2f128(_Float128 __x) noexcept(true); extern _Float128 __exp2f128(_Float128 __x) noexcept(true);
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 log2f128(_Float128 __x) noexcept(true); extern _Float128 __log2f128(_Float128 __x) noexcept(true);
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 powf128(_Float128 __x, _Float128 __y) noexcept(true); extern _Float128 __powf128(_Float128 __x, _Float128 __y) noexcept(true);
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 sqrtf128(_Float128 __x) noexcept(true); extern _Float128 __sqrtf128(_Float128 __x) noexcept(true);
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 hypotf128(_Float128 __x, _Float128 __y) noexcept(true); extern _Float128 __hypotf128(_Float128 __x, _Float128 __y) noexcept(true);
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 cbrtf128(_Float128 __x) noexcept(true); extern _Float128 __cbrtf128(_Float128 __x) noexcept(true);
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 ceilf128(_Float128 __x) noexcept(true) __attribute((const)); extern _Float128 __ceilf128(_Float128 __x) noexcept(true) __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fabsf128(_Float128 __x) noexcept(true) __attribute((const)); extern _Float128 __fabsf128(_Float128 __x) noexcept(true) __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 floorf128(_Float128 __x) noexcept(true) __attribute((const)); extern _Float128 __floorf128(_Float128 __x) noexcept(true) __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fmodf128(_Float128 __x, _Float128 __y) noexcept(true); extern _Float128 __fmodf128(_Float128 __x, _Float128 __y) noexcept(true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 copysignf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __copysignf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 203 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 nanf128(const char * __tagb) noexcept(true); extern _Float128 __nanf128(const char * __tagb) noexcept(true);
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 j0f128(_Float128) noexcept(true); extern _Float128 __j0f128(_Float128) noexcept(true);
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 j1f128(_Float128) noexcept(true); extern _Float128 __j1f128(_Float128) noexcept(true);
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 jnf128(int, _Float128) noexcept(true); extern _Float128 __jnf128(int, _Float128) noexcept(true);
# 223 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 y0f128(_Float128) noexcept(true); extern _Float128 __y0f128(_Float128) noexcept(true);
# 224 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 y1f128(_Float128) noexcept(true); extern _Float128 __y1f128(_Float128) noexcept(true);
# 225 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 ynf128(int, _Float128) noexcept(true); extern _Float128 __ynf128(int, _Float128) noexcept(true);
# 231 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 erff128(_Float128) noexcept(true); extern _Float128 __erff128(_Float128) noexcept(true);
# 232 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 erfcf128(_Float128) noexcept(true); extern _Float128 __erfcf128(_Float128) noexcept(true);
# 233 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 lgammaf128(_Float128) noexcept(true); extern _Float128 __lgammaf128(_Float128) noexcept(true);
# 238 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 tgammaf128(_Float128) noexcept(true); extern _Float128 __tgammaf128(_Float128) noexcept(true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 lgammaf128_r(_Float128, int * __signgamp) noexcept(true); extern _Float128 __lgammaf128_r(_Float128, int * __signgamp) noexcept(true);
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 rintf128(_Float128 __x) noexcept(true); extern _Float128 __rintf128(_Float128 __x) noexcept(true);
# 262 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 nextafterf128(_Float128 __x, _Float128 __y) noexcept(true); extern _Float128 __nextafterf128(_Float128 __x, _Float128 __y) noexcept(true);
# 269 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 nextdownf128(_Float128 __x) noexcept(true); extern _Float128 __nextdownf128(_Float128 __x) noexcept(true);
# 271 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 nextupf128(_Float128 __x) noexcept(true); extern _Float128 __nextupf128(_Float128 __x) noexcept(true);
# 275 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 remainderf128(_Float128 __x, _Float128 __y) noexcept(true); extern _Float128 __remainderf128(_Float128 __x, _Float128 __y) noexcept(true);
# 279 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 scalbnf128(_Float128 __x, int __n) noexcept(true); extern _Float128 __scalbnf128(_Float128 __x, int __n) noexcept(true);
# 283 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbf128(_Float128 __x) noexcept(true); extern int __ilogbf128(_Float128 __x) noexcept(true);
# 288 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long llogbf128(_Float128 __x) noexcept(true); extern long __llogbf128(_Float128 __x) noexcept(true);
# 293 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 scalblnf128(_Float128 __x, long __n) noexcept(true); extern _Float128 __scalblnf128(_Float128 __x, long __n) noexcept(true);
# 297 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 nearbyintf128(_Float128 __x) noexcept(true); extern _Float128 __nearbyintf128(_Float128 __x) noexcept(true);
# 301 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 roundf128(_Float128 __x) noexcept(true) __attribute((const)); extern _Float128 __roundf128(_Float128 __x) noexcept(true) __attribute((const));
# 305 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 truncf128(_Float128 __x) noexcept(true) __attribute((const)); extern _Float128 __truncf128(_Float128 __x) noexcept(true) __attribute((const));
# 310 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 remquof128(_Float128 __x, _Float128 __y, int * __quo) noexcept(true); extern _Float128 __remquof128(_Float128 __x, _Float128 __y, int * __quo) noexcept(true);
# 317 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintf128(_Float128 __x) noexcept(true); extern long __lrintf128(_Float128 __x) noexcept(true);
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintf128(_Float128 __x) noexcept(true); extern long long __llrintf128(_Float128 __x) noexcept(true);
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundf128(_Float128 __x) noexcept(true); extern long __lroundf128(_Float128 __x) noexcept(true);
# 325 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundf128(_Float128 __x) noexcept(true); extern long long __llroundf128(_Float128 __x) noexcept(true);
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fdimf128(_Float128 __x, _Float128 __y) noexcept(true); extern _Float128 __fdimf128(_Float128 __x, _Float128 __y) noexcept(true);
# 333 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fmaxf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fmaxf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 336 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fminf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fminf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fmaf128(_Float128 __x, _Float128 __y, _Float128 __z) noexcept(true); extern _Float128 __fmaf128(_Float128 __x, _Float128 __y, _Float128 __z) noexcept(true);
# 345 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 roundevenf128(_Float128 __x) noexcept(true) __attribute((const)); extern _Float128 __roundevenf128(_Float128 __x) noexcept(true) __attribute((const));
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpf128(_Float128 __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpf128(_Float128 __x, int __round, unsigned __width) noexcept(true);
# 354 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpf128(_Float128 __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpf128(_Float128 __x, int __round, unsigned __width) noexcept(true);
# 360 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpxf128(_Float128 __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpxf128(_Float128 __x, int __round, unsigned __width) noexcept(true);
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpxf128(_Float128 __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpxf128(_Float128 __x, int __round, unsigned __width) noexcept(true);
# 370 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int canonicalizef128(_Float128 * __cx, const _Float128 * __x) noexcept(true);
# 377 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fmaxmagf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fmaxmagf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 380 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fminmagf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fminmagf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 385 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fmaximumf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fmaximumf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 388 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fminimumf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fminimumf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 391 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fmaximum_numf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fmaximum_numf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 394 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fminimum_numf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fminimum_numf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 397 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fmaximum_magf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fmaximum_magf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fminimum_magf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fminimum_magf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 403 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fmaximum_mag_numf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fmaximum_mag_numf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 406 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 fminimum_mag_numf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const)); extern _Float128 __fminimum_mag_numf128(_Float128 __x, _Float128 __y) noexcept(true) __attribute((const));
# 411 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalorderf128(const _Float128 * __x, const _Float128 * __y) noexcept(true)
# 413 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 416 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalordermagf128(const _Float128 * __x, const _Float128 * __y) noexcept(true)
# 418 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 421 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float128 getpayloadf128(const _Float128 * __x) noexcept(true); extern _Float128 __getpayloadf128(const _Float128 * __x) noexcept(true);
# 424 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadf128(_Float128 * __x, _Float128 __payload) noexcept(true);
# 427 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadsigf128(_Float128 * __x, _Float128 __payload) noexcept(true);
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x acosf32x(_Float32x __x) noexcept(true); extern _Float32x __acosf32x(_Float32x __x) noexcept(true);
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x asinf32x(_Float32x __x) noexcept(true); extern _Float32x __asinf32x(_Float32x __x) noexcept(true);
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x atanf32x(_Float32x __x) noexcept(true); extern _Float32x __atanf32x(_Float32x __x) noexcept(true);
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x atan2f32x(_Float32x __y, _Float32x __x) noexcept(true); extern _Float32x __atan2f32x(_Float32x __y, _Float32x __x) noexcept(true);
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x cosf32x(_Float32x __x) noexcept(true); extern _Float32x __cosf32x(_Float32x __x) noexcept(true);
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x sinf32x(_Float32x __x) noexcept(true); extern _Float32x __sinf32x(_Float32x __x) noexcept(true);
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x tanf32x(_Float32x __x) noexcept(true); extern _Float32x __tanf32x(_Float32x __x) noexcept(true);
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x coshf32x(_Float32x __x) noexcept(true); extern _Float32x __coshf32x(_Float32x __x) noexcept(true);
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x sinhf32x(_Float32x __x) noexcept(true); extern _Float32x __sinhf32x(_Float32x __x) noexcept(true);
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x tanhf32x(_Float32x __x) noexcept(true); extern _Float32x __tanhf32x(_Float32x __x) noexcept(true);
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosf32x(_Float32x __x, _Float32x * __sinx, _Float32x * __cosx) noexcept(true); extern void __sincosf32x(_Float32x __x, _Float32x * __sinx, _Float32x * __cosx) noexcept(true);
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x acoshf32x(_Float32x __x) noexcept(true); extern _Float32x __acoshf32x(_Float32x __x) noexcept(true);
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x asinhf32x(_Float32x __x) noexcept(true); extern _Float32x __asinhf32x(_Float32x __x) noexcept(true);
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x atanhf32x(_Float32x __x) noexcept(true); extern _Float32x __atanhf32x(_Float32x __x) noexcept(true);
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x expf32x(_Float32x __x) noexcept(true); extern _Float32x __expf32x(_Float32x __x) noexcept(true);
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x frexpf32x(_Float32x __x, int * __exponent) noexcept(true); extern _Float32x __frexpf32x(_Float32x __x, int * __exponent) noexcept(true);
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x ldexpf32x(_Float32x __x, int __exponent) noexcept(true); extern _Float32x __ldexpf32x(_Float32x __x, int __exponent) noexcept(true);
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x logf32x(_Float32x __x) noexcept(true); extern _Float32x __logf32x(_Float32x __x) noexcept(true);
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x log10f32x(_Float32x __x) noexcept(true); extern _Float32x __log10f32x(_Float32x __x) noexcept(true);
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x modff32x(_Float32x __x, _Float32x * __iptr) noexcept(true); extern _Float32x __modff32x(_Float32x __x, _Float32x * __iptr) noexcept(true) __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x exp10f32x(_Float32x __x) noexcept(true); extern _Float32x __exp10f32x(_Float32x __x) noexcept(true);
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x expm1f32x(_Float32x __x) noexcept(true); extern _Float32x __expm1f32x(_Float32x __x) noexcept(true);
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x log1pf32x(_Float32x __x) noexcept(true); extern _Float32x __log1pf32x(_Float32x __x) noexcept(true);
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x logbf32x(_Float32x __x) noexcept(true); extern _Float32x __logbf32x(_Float32x __x) noexcept(true);
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x exp2f32x(_Float32x __x) noexcept(true); extern _Float32x __exp2f32x(_Float32x __x) noexcept(true);
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x log2f32x(_Float32x __x) noexcept(true); extern _Float32x __log2f32x(_Float32x __x) noexcept(true);
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x powf32x(_Float32x __x, _Float32x __y) noexcept(true); extern _Float32x __powf32x(_Float32x __x, _Float32x __y) noexcept(true);
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x sqrtf32x(_Float32x __x) noexcept(true); extern _Float32x __sqrtf32x(_Float32x __x) noexcept(true);
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x hypotf32x(_Float32x __x, _Float32x __y) noexcept(true); extern _Float32x __hypotf32x(_Float32x __x, _Float32x __y) noexcept(true);
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x cbrtf32x(_Float32x __x) noexcept(true); extern _Float32x __cbrtf32x(_Float32x __x) noexcept(true);
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x ceilf32x(_Float32x __x) noexcept(true) __attribute((const)); extern _Float32x __ceilf32x(_Float32x __x) noexcept(true) __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fabsf32x(_Float32x __x) noexcept(true) __attribute((const)); extern _Float32x __fabsf32x(_Float32x __x) noexcept(true) __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x floorf32x(_Float32x __x) noexcept(true) __attribute((const)); extern _Float32x __floorf32x(_Float32x __x) noexcept(true) __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fmodf32x(_Float32x __x, _Float32x __y) noexcept(true); extern _Float32x __fmodf32x(_Float32x __x, _Float32x __y) noexcept(true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x copysignf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __copysignf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 203 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x nanf32x(const char * __tagb) noexcept(true); extern _Float32x __nanf32x(const char * __tagb) noexcept(true);
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x j0f32x(_Float32x) noexcept(true); extern _Float32x __j0f32x(_Float32x) noexcept(true);
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x j1f32x(_Float32x) noexcept(true); extern _Float32x __j1f32x(_Float32x) noexcept(true);
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x jnf32x(int, _Float32x) noexcept(true); extern _Float32x __jnf32x(int, _Float32x) noexcept(true);
# 223 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x y0f32x(_Float32x) noexcept(true); extern _Float32x __y0f32x(_Float32x) noexcept(true);
# 224 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x y1f32x(_Float32x) noexcept(true); extern _Float32x __y1f32x(_Float32x) noexcept(true);
# 225 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x ynf32x(int, _Float32x) noexcept(true); extern _Float32x __ynf32x(int, _Float32x) noexcept(true);
# 231 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x erff32x(_Float32x) noexcept(true); extern _Float32x __erff32x(_Float32x) noexcept(true);
# 232 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x erfcf32x(_Float32x) noexcept(true); extern _Float32x __erfcf32x(_Float32x) noexcept(true);
# 233 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x lgammaf32x(_Float32x) noexcept(true); extern _Float32x __lgammaf32x(_Float32x) noexcept(true);
# 238 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x tgammaf32x(_Float32x) noexcept(true); extern _Float32x __tgammaf32x(_Float32x) noexcept(true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x lgammaf32x_r(_Float32x, int * __signgamp) noexcept(true); extern _Float32x __lgammaf32x_r(_Float32x, int * __signgamp) noexcept(true);
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x rintf32x(_Float32x __x) noexcept(true); extern _Float32x __rintf32x(_Float32x __x) noexcept(true);
# 262 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x nextafterf32x(_Float32x __x, _Float32x __y) noexcept(true); extern _Float32x __nextafterf32x(_Float32x __x, _Float32x __y) noexcept(true);
# 269 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x nextdownf32x(_Float32x __x) noexcept(true); extern _Float32x __nextdownf32x(_Float32x __x) noexcept(true);
# 271 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x nextupf32x(_Float32x __x) noexcept(true); extern _Float32x __nextupf32x(_Float32x __x) noexcept(true);
# 275 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x remainderf32x(_Float32x __x, _Float32x __y) noexcept(true); extern _Float32x __remainderf32x(_Float32x __x, _Float32x __y) noexcept(true);
# 279 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x scalbnf32x(_Float32x __x, int __n) noexcept(true); extern _Float32x __scalbnf32x(_Float32x __x, int __n) noexcept(true);
# 283 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbf32x(_Float32x __x) noexcept(true); extern int __ilogbf32x(_Float32x __x) noexcept(true);
# 288 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long llogbf32x(_Float32x __x) noexcept(true); extern long __llogbf32x(_Float32x __x) noexcept(true);
# 293 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x scalblnf32x(_Float32x __x, long __n) noexcept(true); extern _Float32x __scalblnf32x(_Float32x __x, long __n) noexcept(true);
# 297 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x nearbyintf32x(_Float32x __x) noexcept(true); extern _Float32x __nearbyintf32x(_Float32x __x) noexcept(true);
# 301 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x roundf32x(_Float32x __x) noexcept(true) __attribute((const)); extern _Float32x __roundf32x(_Float32x __x) noexcept(true) __attribute((const));
# 305 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x truncf32x(_Float32x __x) noexcept(true) __attribute((const)); extern _Float32x __truncf32x(_Float32x __x) noexcept(true) __attribute((const));
# 310 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x remquof32x(_Float32x __x, _Float32x __y, int * __quo) noexcept(true); extern _Float32x __remquof32x(_Float32x __x, _Float32x __y, int * __quo) noexcept(true);
# 317 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintf32x(_Float32x __x) noexcept(true); extern long __lrintf32x(_Float32x __x) noexcept(true);
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintf32x(_Float32x __x) noexcept(true); extern long long __llrintf32x(_Float32x __x) noexcept(true);
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundf32x(_Float32x __x) noexcept(true); extern long __lroundf32x(_Float32x __x) noexcept(true);
# 325 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundf32x(_Float32x __x) noexcept(true); extern long long __llroundf32x(_Float32x __x) noexcept(true);
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fdimf32x(_Float32x __x, _Float32x __y) noexcept(true); extern _Float32x __fdimf32x(_Float32x __x, _Float32x __y) noexcept(true);
# 333 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fmaxf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fmaxf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 336 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fminf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fminf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fmaf32x(_Float32x __x, _Float32x __y, _Float32x __z) noexcept(true); extern _Float32x __fmaf32x(_Float32x __x, _Float32x __y, _Float32x __z) noexcept(true);
# 345 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x roundevenf32x(_Float32x __x) noexcept(true) __attribute((const)); extern _Float32x __roundevenf32x(_Float32x __x) noexcept(true) __attribute((const));
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpf32x(_Float32x __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpf32x(_Float32x __x, int __round, unsigned __width) noexcept(true);
# 354 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpf32x(_Float32x __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpf32x(_Float32x __x, int __round, unsigned __width) noexcept(true);
# 360 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpxf32x(_Float32x __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpxf32x(_Float32x __x, int __round, unsigned __width) noexcept(true);
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpxf32x(_Float32x __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpxf32x(_Float32x __x, int __round, unsigned __width) noexcept(true);
# 370 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int canonicalizef32x(_Float32x * __cx, const _Float32x * __x) noexcept(true);
# 377 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fmaxmagf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fmaxmagf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 380 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fminmagf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fminmagf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 385 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fmaximumf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fmaximumf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 388 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fminimumf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fminimumf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 391 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fmaximum_numf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fmaximum_numf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 394 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fminimum_numf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fminimum_numf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 397 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fmaximum_magf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fmaximum_magf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fminimum_magf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fminimum_magf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 403 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fmaximum_mag_numf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fmaximum_mag_numf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 406 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x fminimum_mag_numf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const)); extern _Float32x __fminimum_mag_numf32x(_Float32x __x, _Float32x __y) noexcept(true) __attribute((const));
# 411 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalorderf32x(const _Float32x * __x, const _Float32x * __y) noexcept(true)
# 413 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 416 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalordermagf32x(const _Float32x * __x, const _Float32x * __y) noexcept(true)
# 418 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 421 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float32x getpayloadf32x(const _Float32x * __x) noexcept(true); extern _Float32x __getpayloadf32x(const _Float32x * __x) noexcept(true);
# 424 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadf32x(_Float32x * __x, _Float32x __payload) noexcept(true);
# 427 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadsigf32x(_Float32x * __x, _Float32x __payload) noexcept(true);
# 53 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x acosf64x(_Float64x __x) noexcept(true); extern _Float64x __acosf64x(_Float64x __x) noexcept(true);
# 55 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x asinf64x(_Float64x __x) noexcept(true); extern _Float64x __asinf64x(_Float64x __x) noexcept(true);
# 57 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x atanf64x(_Float64x __x) noexcept(true); extern _Float64x __atanf64x(_Float64x __x) noexcept(true);
# 59 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x atan2f64x(_Float64x __y, _Float64x __x) noexcept(true); extern _Float64x __atan2f64x(_Float64x __y, _Float64x __x) noexcept(true);
# 62 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x cosf64x(_Float64x __x) noexcept(true); extern _Float64x __cosf64x(_Float64x __x) noexcept(true);
# 64 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x sinf64x(_Float64x __x) noexcept(true); extern _Float64x __sinf64x(_Float64x __x) noexcept(true);
# 66 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x tanf64x(_Float64x __x) noexcept(true); extern _Float64x __tanf64x(_Float64x __x) noexcept(true);
# 71 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x coshf64x(_Float64x __x) noexcept(true); extern _Float64x __coshf64x(_Float64x __x) noexcept(true);
# 73 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x sinhf64x(_Float64x __x) noexcept(true); extern _Float64x __sinhf64x(_Float64x __x) noexcept(true);
# 75 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x tanhf64x(_Float64x __x) noexcept(true); extern _Float64x __tanhf64x(_Float64x __x) noexcept(true);
# 79 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern void sincosf64x(_Float64x __x, _Float64x * __sinx, _Float64x * __cosx) noexcept(true); extern void __sincosf64x(_Float64x __x, _Float64x * __sinx, _Float64x * __cosx) noexcept(true);
# 85 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x acoshf64x(_Float64x __x) noexcept(true); extern _Float64x __acoshf64x(_Float64x __x) noexcept(true);
# 87 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x asinhf64x(_Float64x __x) noexcept(true); extern _Float64x __asinhf64x(_Float64x __x) noexcept(true);
# 89 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x atanhf64x(_Float64x __x) noexcept(true); extern _Float64x __atanhf64x(_Float64x __x) noexcept(true);
# 95 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x expf64x(_Float64x __x) noexcept(true); extern _Float64x __expf64x(_Float64x __x) noexcept(true);
# 98 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x frexpf64x(_Float64x __x, int * __exponent) noexcept(true); extern _Float64x __frexpf64x(_Float64x __x, int * __exponent) noexcept(true);
# 101 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x ldexpf64x(_Float64x __x, int __exponent) noexcept(true); extern _Float64x __ldexpf64x(_Float64x __x, int __exponent) noexcept(true);
# 104 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x logf64x(_Float64x __x) noexcept(true); extern _Float64x __logf64x(_Float64x __x) noexcept(true);
# 107 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x log10f64x(_Float64x __x) noexcept(true); extern _Float64x __log10f64x(_Float64x __x) noexcept(true);
# 110 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x modff64x(_Float64x __x, _Float64x * __iptr) noexcept(true); extern _Float64x __modff64x(_Float64x __x, _Float64x * __iptr) noexcept(true) __attribute((__nonnull__(2)));
# 114 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x exp10f64x(_Float64x __x) noexcept(true); extern _Float64x __exp10f64x(_Float64x __x) noexcept(true);
# 119 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x expm1f64x(_Float64x __x) noexcept(true); extern _Float64x __expm1f64x(_Float64x __x) noexcept(true);
# 122 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x log1pf64x(_Float64x __x) noexcept(true); extern _Float64x __log1pf64x(_Float64x __x) noexcept(true);
# 125 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x logbf64x(_Float64x __x) noexcept(true); extern _Float64x __logbf64x(_Float64x __x) noexcept(true);
# 130 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x exp2f64x(_Float64x __x) noexcept(true); extern _Float64x __exp2f64x(_Float64x __x) noexcept(true);
# 133 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x log2f64x(_Float64x __x) noexcept(true); extern _Float64x __log2f64x(_Float64x __x) noexcept(true);
# 140 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x powf64x(_Float64x __x, _Float64x __y) noexcept(true); extern _Float64x __powf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 143 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x sqrtf64x(_Float64x __x) noexcept(true); extern _Float64x __sqrtf64x(_Float64x __x) noexcept(true);
# 147 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x hypotf64x(_Float64x __x, _Float64x __y) noexcept(true); extern _Float64x __hypotf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 152 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x cbrtf64x(_Float64x __x) noexcept(true); extern _Float64x __cbrtf64x(_Float64x __x) noexcept(true);
# 159 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x ceilf64x(_Float64x __x) noexcept(true) __attribute((const)); extern _Float64x __ceilf64x(_Float64x __x) noexcept(true) __attribute((const));
# 162 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fabsf64x(_Float64x __x) noexcept(true) __attribute((const)); extern _Float64x __fabsf64x(_Float64x __x) noexcept(true) __attribute((const));
# 165 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x floorf64x(_Float64x __x) noexcept(true) __attribute((const)); extern _Float64x __floorf64x(_Float64x __x) noexcept(true) __attribute((const));
# 168 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fmodf64x(_Float64x __x, _Float64x __y) noexcept(true); extern _Float64x __fmodf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 198 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x copysignf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __copysignf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 203 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x nanf64x(const char * __tagb) noexcept(true); extern _Float64x __nanf64x(const char * __tagb) noexcept(true);
# 220 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x j0f64x(_Float64x) noexcept(true); extern _Float64x __j0f64x(_Float64x) noexcept(true);
# 221 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x j1f64x(_Float64x) noexcept(true); extern _Float64x __j1f64x(_Float64x) noexcept(true);
# 222 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x jnf64x(int, _Float64x) noexcept(true); extern _Float64x __jnf64x(int, _Float64x) noexcept(true);
# 223 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x y0f64x(_Float64x) noexcept(true); extern _Float64x __y0f64x(_Float64x) noexcept(true);
# 224 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x y1f64x(_Float64x) noexcept(true); extern _Float64x __y1f64x(_Float64x) noexcept(true);
# 225 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x ynf64x(int, _Float64x) noexcept(true); extern _Float64x __ynf64x(int, _Float64x) noexcept(true);
# 231 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x erff64x(_Float64x) noexcept(true); extern _Float64x __erff64x(_Float64x) noexcept(true);
# 232 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x erfcf64x(_Float64x) noexcept(true); extern _Float64x __erfcf64x(_Float64x) noexcept(true);
# 233 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x lgammaf64x(_Float64x) noexcept(true); extern _Float64x __lgammaf64x(_Float64x) noexcept(true);
# 238 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x tgammaf64x(_Float64x) noexcept(true); extern _Float64x __tgammaf64x(_Float64x) noexcept(true);
# 252 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x lgammaf64x_r(_Float64x, int * __signgamp) noexcept(true); extern _Float64x __lgammaf64x_r(_Float64x, int * __signgamp) noexcept(true);
# 259 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x rintf64x(_Float64x __x) noexcept(true); extern _Float64x __rintf64x(_Float64x __x) noexcept(true);
# 262 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x nextafterf64x(_Float64x __x, _Float64x __y) noexcept(true); extern _Float64x __nextafterf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 269 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x nextdownf64x(_Float64x __x) noexcept(true); extern _Float64x __nextdownf64x(_Float64x __x) noexcept(true);
# 271 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x nextupf64x(_Float64x __x) noexcept(true); extern _Float64x __nextupf64x(_Float64x __x) noexcept(true);
# 275 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x remainderf64x(_Float64x __x, _Float64x __y) noexcept(true); extern _Float64x __remainderf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 279 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x scalbnf64x(_Float64x __x, int __n) noexcept(true); extern _Float64x __scalbnf64x(_Float64x __x, int __n) noexcept(true);
# 283 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int ilogbf64x(_Float64x __x) noexcept(true); extern int __ilogbf64x(_Float64x __x) noexcept(true);
# 288 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long llogbf64x(_Float64x __x) noexcept(true); extern long __llogbf64x(_Float64x __x) noexcept(true);
# 293 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x scalblnf64x(_Float64x __x, long __n) noexcept(true); extern _Float64x __scalblnf64x(_Float64x __x, long __n) noexcept(true);
# 297 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x nearbyintf64x(_Float64x __x) noexcept(true); extern _Float64x __nearbyintf64x(_Float64x __x) noexcept(true);
# 301 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x roundf64x(_Float64x __x) noexcept(true) __attribute((const)); extern _Float64x __roundf64x(_Float64x __x) noexcept(true) __attribute((const));
# 305 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x truncf64x(_Float64x __x) noexcept(true) __attribute((const)); extern _Float64x __truncf64x(_Float64x __x) noexcept(true) __attribute((const));
# 310 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x remquof64x(_Float64x __x, _Float64x __y, int * __quo) noexcept(true); extern _Float64x __remquof64x(_Float64x __x, _Float64x __y, int * __quo) noexcept(true);
# 317 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lrintf64x(_Float64x __x) noexcept(true); extern long __lrintf64x(_Float64x __x) noexcept(true);
# 319 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llrintf64x(_Float64x __x) noexcept(true); extern long long __llrintf64x(_Float64x __x) noexcept(true);
# 323 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern long lroundf64x(_Float64x __x) noexcept(true); extern long __lroundf64x(_Float64x __x) noexcept(true);
# 325 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
__extension__ extern long long llroundf64x(_Float64x __x) noexcept(true); extern long long __llroundf64x(_Float64x __x) noexcept(true);
# 329 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fdimf64x(_Float64x __x, _Float64x __y) noexcept(true); extern _Float64x __fdimf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 333 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fmaxf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fmaxf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 336 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fminf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fminf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 340 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fmaf64x(_Float64x __x, _Float64x __y, _Float64x __z) noexcept(true); extern _Float64x __fmaf64x(_Float64x __x, _Float64x __y, _Float64x __z) noexcept(true);
# 345 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x roundevenf64x(_Float64x __x) noexcept(true) __attribute((const)); extern _Float64x __roundevenf64x(_Float64x __x) noexcept(true) __attribute((const));
# 349 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpf64x(_Float64x __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpf64x(_Float64x __x, int __round, unsigned __width) noexcept(true);
# 354 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpf64x(_Float64x __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpf64x(_Float64x __x, int __round, unsigned __width) noexcept(true);
# 360 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __intmax_t fromfpxf64x(_Float64x __x, int __round, unsigned __width) noexcept(true); extern __intmax_t __fromfpxf64x(_Float64x __x, int __round, unsigned __width) noexcept(true);
# 366 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern __uintmax_t ufromfpxf64x(_Float64x __x, int __round, unsigned __width) noexcept(true); extern __uintmax_t __ufromfpxf64x(_Float64x __x, int __round, unsigned __width) noexcept(true);
# 370 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int canonicalizef64x(_Float64x * __cx, const _Float64x * __x) noexcept(true);
# 377 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fmaxmagf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fmaxmagf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 380 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fminmagf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fminmagf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 385 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fmaximumf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fmaximumf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 388 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fminimumf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fminimumf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 391 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fmaximum_numf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fmaximum_numf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 394 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fminimum_numf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fminimum_numf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 397 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fmaximum_magf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fmaximum_magf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 400 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fminimum_magf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fminimum_magf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 403 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fmaximum_mag_numf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fmaximum_mag_numf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 406 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x fminimum_mag_numf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const)); extern _Float64x __fminimum_mag_numf64x(_Float64x __x, _Float64x __y) noexcept(true) __attribute((const));
# 411 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalorderf64x(const _Float64x * __x, const _Float64x * __y) noexcept(true)
# 413 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 416 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int totalordermagf64x(const _Float64x * __x, const _Float64x * __y) noexcept(true)
# 418 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
 __attribute((__pure__));
# 421 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern _Float64x getpayloadf64x(const _Float64x * __x) noexcept(true); extern _Float64x __getpayloadf64x(const _Float64x * __x) noexcept(true);
# 424 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadf64x(_Float64x * __x, _Float64x __payload) noexcept(true);
# 427 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h" 3
extern int setpayloadsigf64x(_Float64x * __x, _Float64x __payload) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float fadd(double __x, double __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float fdiv(double __x, double __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float ffma(double __x, double __y, double __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float fmul(double __x, double __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float fsqrt(double __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float fsub(double __x, double __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float faddl(long double __x, long double __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float fdivl(long double __x, long double __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float ffmal(long double __x, long double __y, long double __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float fmull(long double __x, long double __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float fsqrtl(long double __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern float fsubl(long double __x, long double __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern double daddl(long double __x, long double __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern double ddivl(long double __x, long double __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern double dfmal(long double __x, long double __y, long double __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern double dmull(long double __x, long double __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern double dsqrtl(long double __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern double dsubl(long double __x, long double __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32addf32x(_Float32x __x, _Float32x __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32divf32x(_Float32x __x, _Float32x __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32fmaf32x(_Float32x __x, _Float32x __y, _Float32x __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32mulf32x(_Float32x __x, _Float32x __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32sqrtf32x(_Float32x __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32subf32x(_Float32x __x, _Float32x __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32addf64(_Float64 __x, _Float64 __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32divf64(_Float64 __x, _Float64 __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32fmaf64(_Float64 __x, _Float64 __y, _Float64 __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32mulf64(_Float64 __x, _Float64 __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32sqrtf64(_Float64 __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32subf64(_Float64 __x, _Float64 __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32addf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32divf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32fmaf64x(_Float64x __x, _Float64x __y, _Float64x __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32mulf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32sqrtf64x(_Float64x __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32subf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32addf128(_Float128 __x, _Float128 __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32divf128(_Float128 __x, _Float128 __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32fmaf128(_Float128 __x, _Float128 __y, _Float128 __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32mulf128(_Float128 __x, _Float128 __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32sqrtf128(_Float128 __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32 f32subf128(_Float128 __x, _Float128 __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xaddf64(_Float64 __x, _Float64 __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xdivf64(_Float64 __x, _Float64 __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xfmaf64(_Float64 __x, _Float64 __y, _Float64 __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xmulf64(_Float64 __x, _Float64 __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xsqrtf64(_Float64 __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xsubf64(_Float64 __x, _Float64 __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xaddf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xdivf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xfmaf64x(_Float64x __x, _Float64x __y, _Float64x __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xmulf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xsqrtf64x(_Float64x __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xsubf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xaddf128(_Float128 __x, _Float128 __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xdivf128(_Float128 __x, _Float128 __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xfmaf128(_Float128 __x, _Float128 __y, _Float128 __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xmulf128(_Float128 __x, _Float128 __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xsqrtf128(_Float128 __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float32x f32xsubf128(_Float128 __x, _Float128 __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64addf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64divf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64fmaf64x(_Float64x __x, _Float64x __y, _Float64x __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64mulf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64sqrtf64x(_Float64x __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64subf64x(_Float64x __x, _Float64x __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64addf128(_Float128 __x, _Float128 __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64divf128(_Float128 __x, _Float128 __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64fmaf128(_Float128 __x, _Float128 __y, _Float128 __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64mulf128(_Float128 __x, _Float128 __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64sqrtf128(_Float128 __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64 f64subf128(_Float128 __x, _Float128 __y) noexcept(true);
# 24 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64x f64xaddf128(_Float128 __x, _Float128 __y) noexcept(true);
# 27 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64x f64xdivf128(_Float128 __x, _Float128 __y) noexcept(true);
# 30 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64x f64xfmaf128(_Float128 __x, _Float128 __y, _Float128 __z) noexcept(true);
# 33 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64x f64xmulf128(_Float128 __x, _Float128 __y) noexcept(true);
# 36 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64x f64xsqrtf128(_Float128 __x) noexcept(true);
# 39 "/usr/include/x86_64-linux-gnu/bits/mathcalls-narrow.h" 3
extern _Float64x f64xsubf128(_Float128 __x, _Float128 __y) noexcept(true);
# 854 "/usr/include/math.h" 3
extern int signgam;
# 935 "/usr/include/math.h" 3
enum {
# 936 "/usr/include/math.h" 3
FP_NAN,
# 939 "/usr/include/math.h" 3
FP_INFINITE,
# 942 "/usr/include/math.h" 3
FP_ZERO,
# 945 "/usr/include/math.h" 3
FP_SUBNORMAL,
# 948 "/usr/include/math.h" 3
FP_NORMAL
# 951 "/usr/include/math.h" 3
};
# 23 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
extern int __iscanonicall(long double __x) noexcept(true)
# 24 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
 __attribute((const));
# 46 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
extern "C++" {
# 47 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(float __val) { return (((void)((__typeof__(__val))__val)), 1); }
# 48 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(double __val) { return (((void)((__typeof__(__val))__val)), 1); }
# 49 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(long double __val) { return __iscanonicall(__val); }
# 51 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
inline int iscanonical(_Float128 __val) { return (((void)((__typeof__(__val))__val)), 1); }
# 53 "/usr/include/x86_64-linux-gnu/bits/iscanonical.h" 3
}
# 1067 "/usr/include/math.h" 3
extern "C++" {
# 1068 "/usr/include/math.h" 3
inline int issignaling(float __val) { return __issignalingf(__val); }
# 1069 "/usr/include/math.h" 3
inline int issignaling(double __val) { return __issignaling(__val); }
# 1071 "/usr/include/math.h" 3
inline int issignaling(long double __val)
# 1072 "/usr/include/math.h" 3
{
# 1076 "/usr/include/math.h" 3
return __issignalingl(__val);
# 1078 "/usr/include/math.h" 3
}
# 1082 "/usr/include/math.h" 3
inline int issignaling(_Float128 __val) { return __issignalingf128(__val); }
# 1084 "/usr/include/math.h" 3
}
# 1098 "/usr/include/math.h" 3
extern "C++" {
# 1129 "/usr/include/math.h" 3
template< class __T> inline bool
# 1130 "/usr/include/math.h" 3
iszero(__T __val)
# 1131 "/usr/include/math.h" 3
{
# 1132 "/usr/include/math.h" 3
return __val == 0;
# 1133 "/usr/include/math.h" 3
}
# 1135 "/usr/include/math.h" 3
}
# 1364 "/usr/include/math.h" 3
extern "C++" {
# 1365 "/usr/include/math.h" 3
template< class > struct __iseqsig_type;
# 1367 "/usr/include/math.h" 3
template<> struct __iseqsig_type< float> {
# 1369 "/usr/include/math.h" 3
static int __call(float __x, float __y) throw()
# 1370 "/usr/include/math.h" 3
{
# 1371 "/usr/include/math.h" 3
return __iseqsigf(__x, __y);
# 1372 "/usr/include/math.h" 3
}
# 1373 "/usr/include/math.h" 3
};
# 1375 "/usr/include/math.h" 3
template<> struct __iseqsig_type< double> {
# 1377 "/usr/include/math.h" 3
static int __call(double __x, double __y) throw()
# 1378 "/usr/include/math.h" 3
{
# 1379 "/usr/include/math.h" 3
return __iseqsig(__x, __y);
# 1380 "/usr/include/math.h" 3
}
# 1381 "/usr/include/math.h" 3
};
# 1383 "/usr/include/math.h" 3
template<> struct __iseqsig_type< long double> {
# 1385 "/usr/include/math.h" 3
static int __call(long double __x, long double __y) throw()
# 1386 "/usr/include/math.h" 3
{
# 1388 "/usr/include/math.h" 3
return __iseqsigl(__x, __y);
# 1392 "/usr/include/math.h" 3
}
# 1393 "/usr/include/math.h" 3
};
# 1418 "/usr/include/math.h" 3
template<> struct __iseqsig_type< __float128> {
# 1420 "/usr/include/math.h" 3
static int __call(_Float128 __x, _Float128 __y) throw()
# 1421 "/usr/include/math.h" 3
{
# 1423 "/usr/include/math.h" 3
return __iseqsigf128(__x, __y);
# 1427 "/usr/include/math.h" 3
}
# 1428 "/usr/include/math.h" 3
};
# 1455 "/usr/include/math.h" 3
template< class _T1, class _T2> inline int
# 1457 "/usr/include/math.h" 3
iseqsig(_T1 __x, _T2 __y) throw()
# 1458 "/usr/include/math.h" 3
{
# 1460 "/usr/include/math.h" 3
typedef __decltype(((__x + __y) + (0.0F))) _T3;
# 1464 "/usr/include/math.h" 3
return __iseqsig_type< __decltype(((__x + __y) + (0.0F)))> ::__call(__x, __y);
# 1465 "/usr/include/math.h" 3
}
# 1467 "/usr/include/math.h" 3
}
# 1472 "/usr/include/math.h" 3
}
# 77 "/usr/include/c++/12/cmath" 3
extern "C++" {
# 79 "/usr/include/c++/12/cmath" 3
namespace std __attribute((__visibility__("default"))) {
# 83 "/usr/include/c++/12/cmath" 3
using ::acos;
# 87 "/usr/include/c++/12/cmath" 3
constexpr float acos(float __x)
# 88 "/usr/include/c++/12/cmath" 3
{ return __builtin_acosf(__x); }
# 91 "/usr/include/c++/12/cmath" 3
constexpr long double acos(long double __x)
# 92 "/usr/include/c++/12/cmath" 3
{ return __builtin_acosl(__x); }
# 95 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 99 "/usr/include/c++/12/cmath" 3
acos(_Tp __x)
# 100 "/usr/include/c++/12/cmath" 3
{ return __builtin_acos(__x); }
# 102 "/usr/include/c++/12/cmath" 3
using ::asin;
# 106 "/usr/include/c++/12/cmath" 3
constexpr float asin(float __x)
# 107 "/usr/include/c++/12/cmath" 3
{ return __builtin_asinf(__x); }
# 110 "/usr/include/c++/12/cmath" 3
constexpr long double asin(long double __x)
# 111 "/usr/include/c++/12/cmath" 3
{ return __builtin_asinl(__x); }
# 114 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 118 "/usr/include/c++/12/cmath" 3
asin(_Tp __x)
# 119 "/usr/include/c++/12/cmath" 3
{ return __builtin_asin(__x); }
# 121 "/usr/include/c++/12/cmath" 3
using ::atan;
# 125 "/usr/include/c++/12/cmath" 3
constexpr float atan(float __x)
# 126 "/usr/include/c++/12/cmath" 3
{ return __builtin_atanf(__x); }
# 129 "/usr/include/c++/12/cmath" 3
constexpr long double atan(long double __x)
# 130 "/usr/include/c++/12/cmath" 3
{ return __builtin_atanl(__x); }
# 133 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 137 "/usr/include/c++/12/cmath" 3
atan(_Tp __x)
# 138 "/usr/include/c++/12/cmath" 3
{ return __builtin_atan(__x); }
# 140 "/usr/include/c++/12/cmath" 3
using ::atan2;
# 144 "/usr/include/c++/12/cmath" 3
constexpr float atan2(float __y, float __x)
# 145 "/usr/include/c++/12/cmath" 3
{ return __builtin_atan2f(__y, __x); }
# 148 "/usr/include/c++/12/cmath" 3
constexpr long double atan2(long double __y, long double __x)
# 149 "/usr/include/c++/12/cmath" 3
{ return __builtin_atan2l(__y, __x); }
# 152 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 155 "/usr/include/c++/12/cmath" 3
atan2(_Tp __y, _Up __x)
# 156 "/usr/include/c++/12/cmath" 3
{
# 157 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 158 "/usr/include/c++/12/cmath" 3
return atan2((__type)__y, (__type)__x);
# 159 "/usr/include/c++/12/cmath" 3
}
# 161 "/usr/include/c++/12/cmath" 3
using ::ceil;
# 165 "/usr/include/c++/12/cmath" 3
constexpr float ceil(float __x)
# 166 "/usr/include/c++/12/cmath" 3
{ return __builtin_ceilf(__x); }
# 169 "/usr/include/c++/12/cmath" 3
constexpr long double ceil(long double __x)
# 170 "/usr/include/c++/12/cmath" 3
{ return __builtin_ceill(__x); }
# 173 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 177 "/usr/include/c++/12/cmath" 3
ceil(_Tp __x)
# 178 "/usr/include/c++/12/cmath" 3
{ return __builtin_ceil(__x); }
# 180 "/usr/include/c++/12/cmath" 3
using ::cos;
# 184 "/usr/include/c++/12/cmath" 3
constexpr float cos(float __x)
# 185 "/usr/include/c++/12/cmath" 3
{ return __builtin_cosf(__x); }
# 188 "/usr/include/c++/12/cmath" 3
constexpr long double cos(long double __x)
# 189 "/usr/include/c++/12/cmath" 3
{ return __builtin_cosl(__x); }
# 192 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 196 "/usr/include/c++/12/cmath" 3
cos(_Tp __x)
# 197 "/usr/include/c++/12/cmath" 3
{ return __builtin_cos(__x); }
# 199 "/usr/include/c++/12/cmath" 3
using ::cosh;
# 203 "/usr/include/c++/12/cmath" 3
constexpr float cosh(float __x)
# 204 "/usr/include/c++/12/cmath" 3
{ return __builtin_coshf(__x); }
# 207 "/usr/include/c++/12/cmath" 3
constexpr long double cosh(long double __x)
# 208 "/usr/include/c++/12/cmath" 3
{ return __builtin_coshl(__x); }
# 211 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 215 "/usr/include/c++/12/cmath" 3
cosh(_Tp __x)
# 216 "/usr/include/c++/12/cmath" 3
{ return __builtin_cosh(__x); }
# 218 "/usr/include/c++/12/cmath" 3
using ::exp;
# 222 "/usr/include/c++/12/cmath" 3
constexpr float exp(float __x)
# 223 "/usr/include/c++/12/cmath" 3
{ return __builtin_expf(__x); }
# 226 "/usr/include/c++/12/cmath" 3
constexpr long double exp(long double __x)
# 227 "/usr/include/c++/12/cmath" 3
{ return __builtin_expl(__x); }
# 230 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 234 "/usr/include/c++/12/cmath" 3
exp(_Tp __x)
# 235 "/usr/include/c++/12/cmath" 3
{ return __builtin_exp(__x); }
# 237 "/usr/include/c++/12/cmath" 3
using ::fabs;
# 241 "/usr/include/c++/12/cmath" 3
constexpr float fabs(float __x)
# 242 "/usr/include/c++/12/cmath" 3
{ return __builtin_fabsf(__x); }
# 245 "/usr/include/c++/12/cmath" 3
constexpr long double fabs(long double __x)
# 246 "/usr/include/c++/12/cmath" 3
{ return __builtin_fabsl(__x); }
# 249 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 253 "/usr/include/c++/12/cmath" 3
fabs(_Tp __x)
# 254 "/usr/include/c++/12/cmath" 3
{ return __builtin_fabs(__x); }
# 256 "/usr/include/c++/12/cmath" 3
using ::floor;
# 260 "/usr/include/c++/12/cmath" 3
constexpr float floor(float __x)
# 261 "/usr/include/c++/12/cmath" 3
{ return __builtin_floorf(__x); }
# 264 "/usr/include/c++/12/cmath" 3
constexpr long double floor(long double __x)
# 265 "/usr/include/c++/12/cmath" 3
{ return __builtin_floorl(__x); }
# 268 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 272 "/usr/include/c++/12/cmath" 3
floor(_Tp __x)
# 273 "/usr/include/c++/12/cmath" 3
{ return __builtin_floor(__x); }
# 275 "/usr/include/c++/12/cmath" 3
using ::fmod;
# 279 "/usr/include/c++/12/cmath" 3
constexpr float fmod(float __x, float __y)
# 280 "/usr/include/c++/12/cmath" 3
{ return __builtin_fmodf(__x, __y); }
# 283 "/usr/include/c++/12/cmath" 3
constexpr long double fmod(long double __x, long double __y)
# 284 "/usr/include/c++/12/cmath" 3
{ return __builtin_fmodl(__x, __y); }
# 287 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 290 "/usr/include/c++/12/cmath" 3
fmod(_Tp __x, _Up __y)
# 291 "/usr/include/c++/12/cmath" 3
{
# 292 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 293 "/usr/include/c++/12/cmath" 3
return fmod((__type)__x, (__type)__y);
# 294 "/usr/include/c++/12/cmath" 3
}
# 296 "/usr/include/c++/12/cmath" 3
using ::frexp;
# 300 "/usr/include/c++/12/cmath" 3
inline float frexp(float __x, int *__exp)
# 301 "/usr/include/c++/12/cmath" 3
{ return __builtin_frexpf(__x, __exp); }
# 304 "/usr/include/c++/12/cmath" 3
inline long double frexp(long double __x, int *__exp)
# 305 "/usr/include/c++/12/cmath" 3
{ return __builtin_frexpl(__x, __exp); }
# 308 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 312 "/usr/include/c++/12/cmath" 3
frexp(_Tp __x, int *__exp)
# 313 "/usr/include/c++/12/cmath" 3
{ return __builtin_frexp(__x, __exp); }
# 315 "/usr/include/c++/12/cmath" 3
using ::ldexp;
# 319 "/usr/include/c++/12/cmath" 3
constexpr float ldexp(float __x, int __exp)
# 320 "/usr/include/c++/12/cmath" 3
{ return __builtin_ldexpf(__x, __exp); }
# 323 "/usr/include/c++/12/cmath" 3
constexpr long double ldexp(long double __x, int __exp)
# 324 "/usr/include/c++/12/cmath" 3
{ return __builtin_ldexpl(__x, __exp); }
# 327 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 331 "/usr/include/c++/12/cmath" 3
ldexp(_Tp __x, int __exp)
# 332 "/usr/include/c++/12/cmath" 3
{ return __builtin_ldexp(__x, __exp); }
# 334 "/usr/include/c++/12/cmath" 3
using ::log;
# 338 "/usr/include/c++/12/cmath" 3
constexpr float log(float __x)
# 339 "/usr/include/c++/12/cmath" 3
{ return __builtin_logf(__x); }
# 342 "/usr/include/c++/12/cmath" 3
constexpr long double log(long double __x)
# 343 "/usr/include/c++/12/cmath" 3
{ return __builtin_logl(__x); }
# 346 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 350 "/usr/include/c++/12/cmath" 3
log(_Tp __x)
# 351 "/usr/include/c++/12/cmath" 3
{ return __builtin_log(__x); }
# 353 "/usr/include/c++/12/cmath" 3
using ::log10;
# 357 "/usr/include/c++/12/cmath" 3
constexpr float log10(float __x)
# 358 "/usr/include/c++/12/cmath" 3
{ return __builtin_log10f(__x); }
# 361 "/usr/include/c++/12/cmath" 3
constexpr long double log10(long double __x)
# 362 "/usr/include/c++/12/cmath" 3
{ return __builtin_log10l(__x); }
# 365 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 369 "/usr/include/c++/12/cmath" 3
log10(_Tp __x)
# 370 "/usr/include/c++/12/cmath" 3
{ return __builtin_log10(__x); }
# 372 "/usr/include/c++/12/cmath" 3
using ::modf;
# 376 "/usr/include/c++/12/cmath" 3
inline float modf(float __x, float *__iptr)
# 377 "/usr/include/c++/12/cmath" 3
{ return __builtin_modff(__x, __iptr); }
# 380 "/usr/include/c++/12/cmath" 3
inline long double modf(long double __x, long double *__iptr)
# 381 "/usr/include/c++/12/cmath" 3
{ return __builtin_modfl(__x, __iptr); }
# 384 "/usr/include/c++/12/cmath" 3
using ::pow;
# 388 "/usr/include/c++/12/cmath" 3
constexpr float pow(float __x, float __y)
# 389 "/usr/include/c++/12/cmath" 3
{ return __builtin_powf(__x, __y); }
# 392 "/usr/include/c++/12/cmath" 3
constexpr long double pow(long double __x, long double __y)
# 393 "/usr/include/c++/12/cmath" 3
{ return __builtin_powl(__x, __y); }
# 412 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 415 "/usr/include/c++/12/cmath" 3
pow(_Tp __x, _Up __y)
# 416 "/usr/include/c++/12/cmath" 3
{
# 417 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 418 "/usr/include/c++/12/cmath" 3
return pow((__type)__x, (__type)__y);
# 419 "/usr/include/c++/12/cmath" 3
}
# 421 "/usr/include/c++/12/cmath" 3
using ::sin;
# 425 "/usr/include/c++/12/cmath" 3
constexpr float sin(float __x)
# 426 "/usr/include/c++/12/cmath" 3
{ return __builtin_sinf(__x); }
# 429 "/usr/include/c++/12/cmath" 3
constexpr long double sin(long double __x)
# 430 "/usr/include/c++/12/cmath" 3
{ return __builtin_sinl(__x); }
# 433 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 437 "/usr/include/c++/12/cmath" 3
sin(_Tp __x)
# 438 "/usr/include/c++/12/cmath" 3
{ return __builtin_sin(__x); }
# 440 "/usr/include/c++/12/cmath" 3
using ::sinh;
# 444 "/usr/include/c++/12/cmath" 3
constexpr float sinh(float __x)
# 445 "/usr/include/c++/12/cmath" 3
{ return __builtin_sinhf(__x); }
# 448 "/usr/include/c++/12/cmath" 3
constexpr long double sinh(long double __x)
# 449 "/usr/include/c++/12/cmath" 3
{ return __builtin_sinhl(__x); }
# 452 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 456 "/usr/include/c++/12/cmath" 3
sinh(_Tp __x)
# 457 "/usr/include/c++/12/cmath" 3
{ return __builtin_sinh(__x); }
# 459 "/usr/include/c++/12/cmath" 3
using ::sqrt;
# 463 "/usr/include/c++/12/cmath" 3
constexpr float sqrt(float __x)
# 464 "/usr/include/c++/12/cmath" 3
{ return __builtin_sqrtf(__x); }
# 467 "/usr/include/c++/12/cmath" 3
constexpr long double sqrt(long double __x)
# 468 "/usr/include/c++/12/cmath" 3
{ return __builtin_sqrtl(__x); }
# 471 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 475 "/usr/include/c++/12/cmath" 3
sqrt(_Tp __x)
# 476 "/usr/include/c++/12/cmath" 3
{ return __builtin_sqrt(__x); }
# 478 "/usr/include/c++/12/cmath" 3
using ::tan;
# 482 "/usr/include/c++/12/cmath" 3
constexpr float tan(float __x)
# 483 "/usr/include/c++/12/cmath" 3
{ return __builtin_tanf(__x); }
# 486 "/usr/include/c++/12/cmath" 3
constexpr long double tan(long double __x)
# 487 "/usr/include/c++/12/cmath" 3
{ return __builtin_tanl(__x); }
# 490 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 494 "/usr/include/c++/12/cmath" 3
tan(_Tp __x)
# 495 "/usr/include/c++/12/cmath" 3
{ return __builtin_tan(__x); }
# 497 "/usr/include/c++/12/cmath" 3
using ::tanh;
# 501 "/usr/include/c++/12/cmath" 3
constexpr float tanh(float __x)
# 502 "/usr/include/c++/12/cmath" 3
{ return __builtin_tanhf(__x); }
# 505 "/usr/include/c++/12/cmath" 3
constexpr long double tanh(long double __x)
# 506 "/usr/include/c++/12/cmath" 3
{ return __builtin_tanhl(__x); }
# 509 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 513 "/usr/include/c++/12/cmath" 3
tanh(_Tp __x)
# 514 "/usr/include/c++/12/cmath" 3
{ return __builtin_tanh(__x); }
# 537 "/usr/include/c++/12/cmath" 3
constexpr int fpclassify(float __x)
# 538 "/usr/include/c++/12/cmath" 3
{ return __builtin_fpclassify(0, 1, 4, 3, 2, __x);
# 539 "/usr/include/c++/12/cmath" 3
}
# 542 "/usr/include/c++/12/cmath" 3
constexpr int fpclassify(double __x)
# 543 "/usr/include/c++/12/cmath" 3
{ return __builtin_fpclassify(0, 1, 4, 3, 2, __x);
# 544 "/usr/include/c++/12/cmath" 3
}
# 547 "/usr/include/c++/12/cmath" 3
constexpr int fpclassify(long double __x)
# 548 "/usr/include/c++/12/cmath" 3
{ return __builtin_fpclassify(0, 1, 4, 3, 2, __x);
# 549 "/usr/include/c++/12/cmath" 3
}
# 553 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, int> ::__type
# 556 "/usr/include/c++/12/cmath" 3
fpclassify(_Tp __x)
# 557 "/usr/include/c++/12/cmath" 3
{ return (__x != 0) ? 4 : 2; }
# 562 "/usr/include/c++/12/cmath" 3
constexpr bool isfinite(float __x)
# 563 "/usr/include/c++/12/cmath" 3
{ return __builtin_isfinite(__x); }
# 566 "/usr/include/c++/12/cmath" 3
constexpr bool isfinite(double __x)
# 567 "/usr/include/c++/12/cmath" 3
{ return __builtin_isfinite(__x); }
# 570 "/usr/include/c++/12/cmath" 3
constexpr bool isfinite(long double __x)
# 571 "/usr/include/c++/12/cmath" 3
{ return __builtin_isfinite(__x); }
# 575 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 578 "/usr/include/c++/12/cmath" 3
isfinite(_Tp __x)
# 579 "/usr/include/c++/12/cmath" 3
{ return true; }
# 584 "/usr/include/c++/12/cmath" 3
constexpr bool isinf(float __x)
# 585 "/usr/include/c++/12/cmath" 3
{ return __builtin_isinf(__x); }
# 592 "/usr/include/c++/12/cmath" 3
constexpr bool isinf(double __x)
# 593 "/usr/include/c++/12/cmath" 3
{ return __builtin_isinf(__x); }
# 597 "/usr/include/c++/12/cmath" 3
constexpr bool isinf(long double __x)
# 598 "/usr/include/c++/12/cmath" 3
{ return __builtin_isinf(__x); }
# 602 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 605 "/usr/include/c++/12/cmath" 3
isinf(_Tp __x)
# 606 "/usr/include/c++/12/cmath" 3
{ return false; }
# 611 "/usr/include/c++/12/cmath" 3
constexpr bool isnan(float __x)
# 612 "/usr/include/c++/12/cmath" 3
{ return __builtin_isnan(__x); }
# 619 "/usr/include/c++/12/cmath" 3
constexpr bool isnan(double __x)
# 620 "/usr/include/c++/12/cmath" 3
{ return __builtin_isnan(__x); }
# 624 "/usr/include/c++/12/cmath" 3
constexpr bool isnan(long double __x)
# 625 "/usr/include/c++/12/cmath" 3
{ return __builtin_isnan(__x); }
# 629 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 632 "/usr/include/c++/12/cmath" 3
isnan(_Tp __x)
# 633 "/usr/include/c++/12/cmath" 3
{ return false; }
# 638 "/usr/include/c++/12/cmath" 3
constexpr bool isnormal(float __x)
# 639 "/usr/include/c++/12/cmath" 3
{ return __builtin_isnormal(__x); }
# 642 "/usr/include/c++/12/cmath" 3
constexpr bool isnormal(double __x)
# 643 "/usr/include/c++/12/cmath" 3
{ return __builtin_isnormal(__x); }
# 646 "/usr/include/c++/12/cmath" 3
constexpr bool isnormal(long double __x)
# 647 "/usr/include/c++/12/cmath" 3
{ return __builtin_isnormal(__x); }
# 651 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 654 "/usr/include/c++/12/cmath" 3
isnormal(_Tp __x)
# 655 "/usr/include/c++/12/cmath" 3
{ return (__x != 0) ? true : false; }
# 661 "/usr/include/c++/12/cmath" 3
constexpr bool signbit(float __x)
# 662 "/usr/include/c++/12/cmath" 3
{ return __builtin_signbit(__x); }
# 665 "/usr/include/c++/12/cmath" 3
constexpr bool signbit(double __x)
# 666 "/usr/include/c++/12/cmath" 3
{ return __builtin_signbit(__x); }
# 669 "/usr/include/c++/12/cmath" 3
constexpr bool signbit(long double __x)
# 670 "/usr/include/c++/12/cmath" 3
{ return __builtin_signbit(__x); }
# 674 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, bool> ::__type
# 677 "/usr/include/c++/12/cmath" 3
signbit(_Tp __x)
# 678 "/usr/include/c++/12/cmath" 3
{ return (__x < 0) ? true : false; }
# 683 "/usr/include/c++/12/cmath" 3
constexpr bool isgreater(float __x, float __y)
# 684 "/usr/include/c++/12/cmath" 3
{ return __builtin_isgreater(__x, __y); }
# 687 "/usr/include/c++/12/cmath" 3
constexpr bool isgreater(double __x, double __y)
# 688 "/usr/include/c++/12/cmath" 3
{ return __builtin_isgreater(__x, __y); }
# 691 "/usr/include/c++/12/cmath" 3
constexpr bool isgreater(long double __x, long double __y)
# 692 "/usr/include/c++/12/cmath" 3
{ return __builtin_isgreater(__x, __y); }
# 696 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 700 "/usr/include/c++/12/cmath" 3
isgreater(_Tp __x, _Up __y)
# 701 "/usr/include/c++/12/cmath" 3
{
# 702 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 703 "/usr/include/c++/12/cmath" 3
return __builtin_isgreater((__type)__x, (__type)__y);
# 704 "/usr/include/c++/12/cmath" 3
}
# 709 "/usr/include/c++/12/cmath" 3
constexpr bool isgreaterequal(float __x, float __y)
# 710 "/usr/include/c++/12/cmath" 3
{ return __builtin_isgreaterequal(__x, __y); }
# 713 "/usr/include/c++/12/cmath" 3
constexpr bool isgreaterequal(double __x, double __y)
# 714 "/usr/include/c++/12/cmath" 3
{ return __builtin_isgreaterequal(__x, __y); }
# 717 "/usr/include/c++/12/cmath" 3
constexpr bool isgreaterequal(long double __x, long double __y)
# 718 "/usr/include/c++/12/cmath" 3
{ return __builtin_isgreaterequal(__x, __y); }
# 722 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 726 "/usr/include/c++/12/cmath" 3
isgreaterequal(_Tp __x, _Up __y)
# 727 "/usr/include/c++/12/cmath" 3
{
# 728 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 729 "/usr/include/c++/12/cmath" 3
return __builtin_isgreaterequal((__type)__x, (__type)__y);
# 730 "/usr/include/c++/12/cmath" 3
}
# 735 "/usr/include/c++/12/cmath" 3
constexpr bool isless(float __x, float __y)
# 736 "/usr/include/c++/12/cmath" 3
{ return __builtin_isless(__x, __y); }
# 739 "/usr/include/c++/12/cmath" 3
constexpr bool isless(double __x, double __y)
# 740 "/usr/include/c++/12/cmath" 3
{ return __builtin_isless(__x, __y); }
# 743 "/usr/include/c++/12/cmath" 3
constexpr bool isless(long double __x, long double __y)
# 744 "/usr/include/c++/12/cmath" 3
{ return __builtin_isless(__x, __y); }
# 748 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 752 "/usr/include/c++/12/cmath" 3
isless(_Tp __x, _Up __y)
# 753 "/usr/include/c++/12/cmath" 3
{
# 754 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 755 "/usr/include/c++/12/cmath" 3
return __builtin_isless((__type)__x, (__type)__y);
# 756 "/usr/include/c++/12/cmath" 3
}
# 761 "/usr/include/c++/12/cmath" 3
constexpr bool islessequal(float __x, float __y)
# 762 "/usr/include/c++/12/cmath" 3
{ return __builtin_islessequal(__x, __y); }
# 765 "/usr/include/c++/12/cmath" 3
constexpr bool islessequal(double __x, double __y)
# 766 "/usr/include/c++/12/cmath" 3
{ return __builtin_islessequal(__x, __y); }
# 769 "/usr/include/c++/12/cmath" 3
constexpr bool islessequal(long double __x, long double __y)
# 770 "/usr/include/c++/12/cmath" 3
{ return __builtin_islessequal(__x, __y); }
# 774 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 778 "/usr/include/c++/12/cmath" 3
islessequal(_Tp __x, _Up __y)
# 779 "/usr/include/c++/12/cmath" 3
{
# 780 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 781 "/usr/include/c++/12/cmath" 3
return __builtin_islessequal((__type)__x, (__type)__y);
# 782 "/usr/include/c++/12/cmath" 3
}
# 787 "/usr/include/c++/12/cmath" 3
constexpr bool islessgreater(float __x, float __y)
# 788 "/usr/include/c++/12/cmath" 3
{ return __builtin_islessgreater(__x, __y); }
# 791 "/usr/include/c++/12/cmath" 3
constexpr bool islessgreater(double __x, double __y)
# 792 "/usr/include/c++/12/cmath" 3
{ return __builtin_islessgreater(__x, __y); }
# 795 "/usr/include/c++/12/cmath" 3
constexpr bool islessgreater(long double __x, long double __y)
# 796 "/usr/include/c++/12/cmath" 3
{ return __builtin_islessgreater(__x, __y); }
# 800 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 804 "/usr/include/c++/12/cmath" 3
islessgreater(_Tp __x, _Up __y)
# 805 "/usr/include/c++/12/cmath" 3
{
# 806 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 807 "/usr/include/c++/12/cmath" 3
return __builtin_islessgreater((__type)__x, (__type)__y);
# 808 "/usr/include/c++/12/cmath" 3
}
# 813 "/usr/include/c++/12/cmath" 3
constexpr bool isunordered(float __x, float __y)
# 814 "/usr/include/c++/12/cmath" 3
{ return __builtin_isunordered(__x, __y); }
# 817 "/usr/include/c++/12/cmath" 3
constexpr bool isunordered(double __x, double __y)
# 818 "/usr/include/c++/12/cmath" 3
{ return __builtin_isunordered(__x, __y); }
# 821 "/usr/include/c++/12/cmath" 3
constexpr bool isunordered(long double __x, long double __y)
# 822 "/usr/include/c++/12/cmath" 3
{ return __builtin_isunordered(__x, __y); }
# 826 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__enable_if< __is_arithmetic< _Tp> ::__value && __is_arithmetic< _Up> ::__value, bool> ::__type
# 830 "/usr/include/c++/12/cmath" 3
isunordered(_Tp __x, _Up __y)
# 831 "/usr/include/c++/12/cmath" 3
{
# 832 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 833 "/usr/include/c++/12/cmath" 3
return __builtin_isunordered((__type)__x, (__type)__y);
# 834 "/usr/include/c++/12/cmath" 3
}
# 1065 "/usr/include/c++/12/cmath" 3
using ::double_t;
# 1066 "/usr/include/c++/12/cmath" 3
using ::float_t;
# 1069 "/usr/include/c++/12/cmath" 3
using ::acosh;
# 1070 "/usr/include/c++/12/cmath" 3
using ::acoshf;
# 1071 "/usr/include/c++/12/cmath" 3
using ::acoshl;
# 1073 "/usr/include/c++/12/cmath" 3
using ::asinh;
# 1074 "/usr/include/c++/12/cmath" 3
using ::asinhf;
# 1075 "/usr/include/c++/12/cmath" 3
using ::asinhl;
# 1077 "/usr/include/c++/12/cmath" 3
using ::atanh;
# 1078 "/usr/include/c++/12/cmath" 3
using ::atanhf;
# 1079 "/usr/include/c++/12/cmath" 3
using ::atanhl;
# 1081 "/usr/include/c++/12/cmath" 3
using ::cbrt;
# 1082 "/usr/include/c++/12/cmath" 3
using ::cbrtf;
# 1083 "/usr/include/c++/12/cmath" 3
using ::cbrtl;
# 1085 "/usr/include/c++/12/cmath" 3
using ::copysign;
# 1086 "/usr/include/c++/12/cmath" 3
using ::copysignf;
# 1087 "/usr/include/c++/12/cmath" 3
using ::copysignl;
# 1089 "/usr/include/c++/12/cmath" 3
using ::erf;
# 1090 "/usr/include/c++/12/cmath" 3
using ::erff;
# 1091 "/usr/include/c++/12/cmath" 3
using ::erfl;
# 1093 "/usr/include/c++/12/cmath" 3
using ::erfc;
# 1094 "/usr/include/c++/12/cmath" 3
using ::erfcf;
# 1095 "/usr/include/c++/12/cmath" 3
using ::erfcl;
# 1097 "/usr/include/c++/12/cmath" 3
using ::exp2;
# 1098 "/usr/include/c++/12/cmath" 3
using ::exp2f;
# 1099 "/usr/include/c++/12/cmath" 3
using ::exp2l;
# 1101 "/usr/include/c++/12/cmath" 3
using ::expm1;
# 1102 "/usr/include/c++/12/cmath" 3
using ::expm1f;
# 1103 "/usr/include/c++/12/cmath" 3
using ::expm1l;
# 1105 "/usr/include/c++/12/cmath" 3
using ::fdim;
# 1106 "/usr/include/c++/12/cmath" 3
using ::fdimf;
# 1107 "/usr/include/c++/12/cmath" 3
using ::fdiml;
# 1109 "/usr/include/c++/12/cmath" 3
using ::fma;
# 1110 "/usr/include/c++/12/cmath" 3
using ::fmaf;
# 1111 "/usr/include/c++/12/cmath" 3
using ::fmal;
# 1113 "/usr/include/c++/12/cmath" 3
using ::fmax;
# 1114 "/usr/include/c++/12/cmath" 3
using ::fmaxf;
# 1115 "/usr/include/c++/12/cmath" 3
using ::fmaxl;
# 1117 "/usr/include/c++/12/cmath" 3
using ::fmin;
# 1118 "/usr/include/c++/12/cmath" 3
using ::fminf;
# 1119 "/usr/include/c++/12/cmath" 3
using ::fminl;
# 1121 "/usr/include/c++/12/cmath" 3
using ::hypot;
# 1122 "/usr/include/c++/12/cmath" 3
using ::hypotf;
# 1123 "/usr/include/c++/12/cmath" 3
using ::hypotl;
# 1125 "/usr/include/c++/12/cmath" 3
using ::ilogb;
# 1126 "/usr/include/c++/12/cmath" 3
using ::ilogbf;
# 1127 "/usr/include/c++/12/cmath" 3
using ::ilogbl;
# 1129 "/usr/include/c++/12/cmath" 3
using ::lgamma;
# 1130 "/usr/include/c++/12/cmath" 3
using ::lgammaf;
# 1131 "/usr/include/c++/12/cmath" 3
using ::lgammal;
# 1134 "/usr/include/c++/12/cmath" 3
using ::llrint;
# 1135 "/usr/include/c++/12/cmath" 3
using ::llrintf;
# 1136 "/usr/include/c++/12/cmath" 3
using ::llrintl;
# 1138 "/usr/include/c++/12/cmath" 3
using ::llround;
# 1139 "/usr/include/c++/12/cmath" 3
using ::llroundf;
# 1140 "/usr/include/c++/12/cmath" 3
using ::llroundl;
# 1143 "/usr/include/c++/12/cmath" 3
using ::log1p;
# 1144 "/usr/include/c++/12/cmath" 3
using ::log1pf;
# 1145 "/usr/include/c++/12/cmath" 3
using ::log1pl;
# 1147 "/usr/include/c++/12/cmath" 3
using ::log2;
# 1148 "/usr/include/c++/12/cmath" 3
using ::log2f;
# 1149 "/usr/include/c++/12/cmath" 3
using ::log2l;
# 1151 "/usr/include/c++/12/cmath" 3
using ::logb;
# 1152 "/usr/include/c++/12/cmath" 3
using ::logbf;
# 1153 "/usr/include/c++/12/cmath" 3
using ::logbl;
# 1155 "/usr/include/c++/12/cmath" 3
using ::lrint;
# 1156 "/usr/include/c++/12/cmath" 3
using ::lrintf;
# 1157 "/usr/include/c++/12/cmath" 3
using ::lrintl;
# 1159 "/usr/include/c++/12/cmath" 3
using ::lround;
# 1160 "/usr/include/c++/12/cmath" 3
using ::lroundf;
# 1161 "/usr/include/c++/12/cmath" 3
using ::lroundl;
# 1163 "/usr/include/c++/12/cmath" 3
using ::nan;
# 1164 "/usr/include/c++/12/cmath" 3
using ::nanf;
# 1165 "/usr/include/c++/12/cmath" 3
using ::nanl;
# 1167 "/usr/include/c++/12/cmath" 3
using ::nearbyint;
# 1168 "/usr/include/c++/12/cmath" 3
using ::nearbyintf;
# 1169 "/usr/include/c++/12/cmath" 3
using ::nearbyintl;
# 1171 "/usr/include/c++/12/cmath" 3
using ::nextafter;
# 1172 "/usr/include/c++/12/cmath" 3
using ::nextafterf;
# 1173 "/usr/include/c++/12/cmath" 3
using ::nextafterl;
# 1175 "/usr/include/c++/12/cmath" 3
using ::nexttoward;
# 1176 "/usr/include/c++/12/cmath" 3
using ::nexttowardf;
# 1177 "/usr/include/c++/12/cmath" 3
using ::nexttowardl;
# 1179 "/usr/include/c++/12/cmath" 3
using ::remainder;
# 1180 "/usr/include/c++/12/cmath" 3
using ::remainderf;
# 1181 "/usr/include/c++/12/cmath" 3
using ::remainderl;
# 1183 "/usr/include/c++/12/cmath" 3
using ::remquo;
# 1184 "/usr/include/c++/12/cmath" 3
using ::remquof;
# 1185 "/usr/include/c++/12/cmath" 3
using ::remquol;
# 1187 "/usr/include/c++/12/cmath" 3
using ::rint;
# 1188 "/usr/include/c++/12/cmath" 3
using ::rintf;
# 1189 "/usr/include/c++/12/cmath" 3
using ::rintl;
# 1191 "/usr/include/c++/12/cmath" 3
using ::round;
# 1192 "/usr/include/c++/12/cmath" 3
using ::roundf;
# 1193 "/usr/include/c++/12/cmath" 3
using ::roundl;
# 1195 "/usr/include/c++/12/cmath" 3
using ::scalbln;
# 1196 "/usr/include/c++/12/cmath" 3
using ::scalblnf;
# 1197 "/usr/include/c++/12/cmath" 3
using ::scalblnl;
# 1199 "/usr/include/c++/12/cmath" 3
using ::scalbn;
# 1200 "/usr/include/c++/12/cmath" 3
using ::scalbnf;
# 1201 "/usr/include/c++/12/cmath" 3
using ::scalbnl;
# 1203 "/usr/include/c++/12/cmath" 3
using ::tgamma;
# 1204 "/usr/include/c++/12/cmath" 3
using ::tgammaf;
# 1205 "/usr/include/c++/12/cmath" 3
using ::tgammal;
# 1207 "/usr/include/c++/12/cmath" 3
using ::trunc;
# 1208 "/usr/include/c++/12/cmath" 3
using ::truncf;
# 1209 "/usr/include/c++/12/cmath" 3
using ::truncl;
# 1214 "/usr/include/c++/12/cmath" 3
constexpr float acosh(float __x)
# 1215 "/usr/include/c++/12/cmath" 3
{ return __builtin_acoshf(__x); }
# 1218 "/usr/include/c++/12/cmath" 3
constexpr long double acosh(long double __x)
# 1219 "/usr/include/c++/12/cmath" 3
{ return __builtin_acoshl(__x); }
# 1223 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1226 "/usr/include/c++/12/cmath" 3
acosh(_Tp __x)
# 1227 "/usr/include/c++/12/cmath" 3
{ return __builtin_acosh(__x); }
# 1232 "/usr/include/c++/12/cmath" 3
constexpr float asinh(float __x)
# 1233 "/usr/include/c++/12/cmath" 3
{ return __builtin_asinhf(__x); }
# 1236 "/usr/include/c++/12/cmath" 3
constexpr long double asinh(long double __x)
# 1237 "/usr/include/c++/12/cmath" 3
{ return __builtin_asinhl(__x); }
# 1241 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1244 "/usr/include/c++/12/cmath" 3
asinh(_Tp __x)
# 1245 "/usr/include/c++/12/cmath" 3
{ return __builtin_asinh(__x); }
# 1250 "/usr/include/c++/12/cmath" 3
constexpr float atanh(float __x)
# 1251 "/usr/include/c++/12/cmath" 3
{ return __builtin_atanhf(__x); }
# 1254 "/usr/include/c++/12/cmath" 3
constexpr long double atanh(long double __x)
# 1255 "/usr/include/c++/12/cmath" 3
{ return __builtin_atanhl(__x); }
# 1259 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1262 "/usr/include/c++/12/cmath" 3
atanh(_Tp __x)
# 1263 "/usr/include/c++/12/cmath" 3
{ return __builtin_atanh(__x); }
# 1268 "/usr/include/c++/12/cmath" 3
constexpr float cbrt(float __x)
# 1269 "/usr/include/c++/12/cmath" 3
{ return __builtin_cbrtf(__x); }
# 1272 "/usr/include/c++/12/cmath" 3
constexpr long double cbrt(long double __x)
# 1273 "/usr/include/c++/12/cmath" 3
{ return __builtin_cbrtl(__x); }
# 1277 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1280 "/usr/include/c++/12/cmath" 3
cbrt(_Tp __x)
# 1281 "/usr/include/c++/12/cmath" 3
{ return __builtin_cbrt(__x); }
# 1286 "/usr/include/c++/12/cmath" 3
constexpr float copysign(float __x, float __y)
# 1287 "/usr/include/c++/12/cmath" 3
{ return __builtin_copysignf(__x, __y); }
# 1290 "/usr/include/c++/12/cmath" 3
constexpr long double copysign(long double __x, long double __y)
# 1291 "/usr/include/c++/12/cmath" 3
{ return __builtin_copysignl(__x, __y); }
# 1295 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1297 "/usr/include/c++/12/cmath" 3
copysign(_Tp __x, _Up __y)
# 1298 "/usr/include/c++/12/cmath" 3
{
# 1299 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1300 "/usr/include/c++/12/cmath" 3
return copysign((__type)__x, (__type)__y);
# 1301 "/usr/include/c++/12/cmath" 3
}
# 1306 "/usr/include/c++/12/cmath" 3
constexpr float erf(float __x)
# 1307 "/usr/include/c++/12/cmath" 3
{ return __builtin_erff(__x); }
# 1310 "/usr/include/c++/12/cmath" 3
constexpr long double erf(long double __x)
# 1311 "/usr/include/c++/12/cmath" 3
{ return __builtin_erfl(__x); }
# 1315 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1318 "/usr/include/c++/12/cmath" 3
erf(_Tp __x)
# 1319 "/usr/include/c++/12/cmath" 3
{ return __builtin_erf(__x); }
# 1324 "/usr/include/c++/12/cmath" 3
constexpr float erfc(float __x)
# 1325 "/usr/include/c++/12/cmath" 3
{ return __builtin_erfcf(__x); }
# 1328 "/usr/include/c++/12/cmath" 3
constexpr long double erfc(long double __x)
# 1329 "/usr/include/c++/12/cmath" 3
{ return __builtin_erfcl(__x); }
# 1333 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1336 "/usr/include/c++/12/cmath" 3
erfc(_Tp __x)
# 1337 "/usr/include/c++/12/cmath" 3
{ return __builtin_erfc(__x); }
# 1342 "/usr/include/c++/12/cmath" 3
constexpr float exp2(float __x)
# 1343 "/usr/include/c++/12/cmath" 3
{ return __builtin_exp2f(__x); }
# 1346 "/usr/include/c++/12/cmath" 3
constexpr long double exp2(long double __x)
# 1347 "/usr/include/c++/12/cmath" 3
{ return __builtin_exp2l(__x); }
# 1351 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1354 "/usr/include/c++/12/cmath" 3
exp2(_Tp __x)
# 1355 "/usr/include/c++/12/cmath" 3
{ return __builtin_exp2(__x); }
# 1360 "/usr/include/c++/12/cmath" 3
constexpr float expm1(float __x)
# 1361 "/usr/include/c++/12/cmath" 3
{ return __builtin_expm1f(__x); }
# 1364 "/usr/include/c++/12/cmath" 3
constexpr long double expm1(long double __x)
# 1365 "/usr/include/c++/12/cmath" 3
{ return __builtin_expm1l(__x); }
# 1369 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1372 "/usr/include/c++/12/cmath" 3
expm1(_Tp __x)
# 1373 "/usr/include/c++/12/cmath" 3
{ return __builtin_expm1(__x); }
# 1378 "/usr/include/c++/12/cmath" 3
constexpr float fdim(float __x, float __y)
# 1379 "/usr/include/c++/12/cmath" 3
{ return __builtin_fdimf(__x, __y); }
# 1382 "/usr/include/c++/12/cmath" 3
constexpr long double fdim(long double __x, long double __y)
# 1383 "/usr/include/c++/12/cmath" 3
{ return __builtin_fdiml(__x, __y); }
# 1387 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1389 "/usr/include/c++/12/cmath" 3
fdim(_Tp __x, _Up __y)
# 1390 "/usr/include/c++/12/cmath" 3
{
# 1391 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1392 "/usr/include/c++/12/cmath" 3
return fdim((__type)__x, (__type)__y);
# 1393 "/usr/include/c++/12/cmath" 3
}
# 1398 "/usr/include/c++/12/cmath" 3
constexpr float fma(float __x, float __y, float __z)
# 1399 "/usr/include/c++/12/cmath" 3
{ return __builtin_fmaf(__x, __y, __z); }
# 1402 "/usr/include/c++/12/cmath" 3
constexpr long double fma(long double __x, long double __y, long double __z)
# 1403 "/usr/include/c++/12/cmath" 3
{ return __builtin_fmal(__x, __y, __z); }
# 1407 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up, class _Vp> constexpr typename __gnu_cxx::__promote_3< _Tp, _Up, _Vp> ::__type
# 1409 "/usr/include/c++/12/cmath" 3
fma(_Tp __x, _Up __y, _Vp __z)
# 1410 "/usr/include/c++/12/cmath" 3
{
# 1411 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_3< _Tp, _Up, _Vp> ::__type __type;
# 1412 "/usr/include/c++/12/cmath" 3
return fma((__type)__x, (__type)__y, (__type)__z);
# 1413 "/usr/include/c++/12/cmath" 3
}
# 1418 "/usr/include/c++/12/cmath" 3
constexpr float fmax(float __x, float __y)
# 1419 "/usr/include/c++/12/cmath" 3
{ return __builtin_fmaxf(__x, __y); }
# 1422 "/usr/include/c++/12/cmath" 3
constexpr long double fmax(long double __x, long double __y)
# 1423 "/usr/include/c++/12/cmath" 3
{ return __builtin_fmaxl(__x, __y); }
# 1427 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1429 "/usr/include/c++/12/cmath" 3
fmax(_Tp __x, _Up __y)
# 1430 "/usr/include/c++/12/cmath" 3
{
# 1431 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1432 "/usr/include/c++/12/cmath" 3
return fmax((__type)__x, (__type)__y);
# 1433 "/usr/include/c++/12/cmath" 3
}
# 1438 "/usr/include/c++/12/cmath" 3
constexpr float fmin(float __x, float __y)
# 1439 "/usr/include/c++/12/cmath" 3
{ return __builtin_fminf(__x, __y); }
# 1442 "/usr/include/c++/12/cmath" 3
constexpr long double fmin(long double __x, long double __y)
# 1443 "/usr/include/c++/12/cmath" 3
{ return __builtin_fminl(__x, __y); }
# 1447 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1449 "/usr/include/c++/12/cmath" 3
fmin(_Tp __x, _Up __y)
# 1450 "/usr/include/c++/12/cmath" 3
{
# 1451 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1452 "/usr/include/c++/12/cmath" 3
return fmin((__type)__x, (__type)__y);
# 1453 "/usr/include/c++/12/cmath" 3
}
# 1458 "/usr/include/c++/12/cmath" 3
constexpr float hypot(float __x, float __y)
# 1459 "/usr/include/c++/12/cmath" 3
{ return __builtin_hypotf(__x, __y); }
# 1462 "/usr/include/c++/12/cmath" 3
constexpr long double hypot(long double __x, long double __y)
# 1463 "/usr/include/c++/12/cmath" 3
{ return __builtin_hypotl(__x, __y); }
# 1467 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1469 "/usr/include/c++/12/cmath" 3
hypot(_Tp __x, _Up __y)
# 1470 "/usr/include/c++/12/cmath" 3
{
# 1471 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1472 "/usr/include/c++/12/cmath" 3
return hypot((__type)__x, (__type)__y);
# 1473 "/usr/include/c++/12/cmath" 3
}
# 1478 "/usr/include/c++/12/cmath" 3
constexpr int ilogb(float __x)
# 1479 "/usr/include/c++/12/cmath" 3
{ return __builtin_ilogbf(__x); }
# 1482 "/usr/include/c++/12/cmath" 3
constexpr int ilogb(long double __x)
# 1483 "/usr/include/c++/12/cmath" 3
{ return __builtin_ilogbl(__x); }
# 1487 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, int> ::__type
# 1491 "/usr/include/c++/12/cmath" 3
ilogb(_Tp __x)
# 1492 "/usr/include/c++/12/cmath" 3
{ return __builtin_ilogb(__x); }
# 1497 "/usr/include/c++/12/cmath" 3
constexpr float lgamma(float __x)
# 1498 "/usr/include/c++/12/cmath" 3
{ return __builtin_lgammaf(__x); }
# 1501 "/usr/include/c++/12/cmath" 3
constexpr long double lgamma(long double __x)
# 1502 "/usr/include/c++/12/cmath" 3
{ return __builtin_lgammal(__x); }
# 1506 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1509 "/usr/include/c++/12/cmath" 3
lgamma(_Tp __x)
# 1510 "/usr/include/c++/12/cmath" 3
{ return __builtin_lgamma(__x); }
# 1515 "/usr/include/c++/12/cmath" 3
constexpr long long llrint(float __x)
# 1516 "/usr/include/c++/12/cmath" 3
{ return __builtin_llrintf(__x); }
# 1519 "/usr/include/c++/12/cmath" 3
constexpr long long llrint(long double __x)
# 1520 "/usr/include/c++/12/cmath" 3
{ return __builtin_llrintl(__x); }
# 1524 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long long> ::__type
# 1527 "/usr/include/c++/12/cmath" 3
llrint(_Tp __x)
# 1528 "/usr/include/c++/12/cmath" 3
{ return __builtin_llrint(__x); }
# 1533 "/usr/include/c++/12/cmath" 3
constexpr long long llround(float __x)
# 1534 "/usr/include/c++/12/cmath" 3
{ return __builtin_llroundf(__x); }
# 1537 "/usr/include/c++/12/cmath" 3
constexpr long long llround(long double __x)
# 1538 "/usr/include/c++/12/cmath" 3
{ return __builtin_llroundl(__x); }
# 1542 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long long> ::__type
# 1545 "/usr/include/c++/12/cmath" 3
llround(_Tp __x)
# 1546 "/usr/include/c++/12/cmath" 3
{ return __builtin_llround(__x); }
# 1551 "/usr/include/c++/12/cmath" 3
constexpr float log1p(float __x)
# 1552 "/usr/include/c++/12/cmath" 3
{ return __builtin_log1pf(__x); }
# 1555 "/usr/include/c++/12/cmath" 3
constexpr long double log1p(long double __x)
# 1556 "/usr/include/c++/12/cmath" 3
{ return __builtin_log1pl(__x); }
# 1560 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1563 "/usr/include/c++/12/cmath" 3
log1p(_Tp __x)
# 1564 "/usr/include/c++/12/cmath" 3
{ return __builtin_log1p(__x); }
# 1570 "/usr/include/c++/12/cmath" 3
constexpr float log2(float __x)
# 1571 "/usr/include/c++/12/cmath" 3
{ return __builtin_log2f(__x); }
# 1574 "/usr/include/c++/12/cmath" 3
constexpr long double log2(long double __x)
# 1575 "/usr/include/c++/12/cmath" 3
{ return __builtin_log2l(__x); }
# 1579 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1582 "/usr/include/c++/12/cmath" 3
log2(_Tp __x)
# 1583 "/usr/include/c++/12/cmath" 3
{ return __builtin_log2(__x); }
# 1588 "/usr/include/c++/12/cmath" 3
constexpr float logb(float __x)
# 1589 "/usr/include/c++/12/cmath" 3
{ return __builtin_logbf(__x); }
# 1592 "/usr/include/c++/12/cmath" 3
constexpr long double logb(long double __x)
# 1593 "/usr/include/c++/12/cmath" 3
{ return __builtin_logbl(__x); }
# 1597 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1600 "/usr/include/c++/12/cmath" 3
logb(_Tp __x)
# 1601 "/usr/include/c++/12/cmath" 3
{ return __builtin_logb(__x); }
# 1606 "/usr/include/c++/12/cmath" 3
constexpr long lrint(float __x)
# 1607 "/usr/include/c++/12/cmath" 3
{ return __builtin_lrintf(__x); }
# 1610 "/usr/include/c++/12/cmath" 3
constexpr long lrint(long double __x)
# 1611 "/usr/include/c++/12/cmath" 3
{ return __builtin_lrintl(__x); }
# 1615 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long> ::__type
# 1618 "/usr/include/c++/12/cmath" 3
lrint(_Tp __x)
# 1619 "/usr/include/c++/12/cmath" 3
{ return __builtin_lrint(__x); }
# 1624 "/usr/include/c++/12/cmath" 3
constexpr long lround(float __x)
# 1625 "/usr/include/c++/12/cmath" 3
{ return __builtin_lroundf(__x); }
# 1628 "/usr/include/c++/12/cmath" 3
constexpr long lround(long double __x)
# 1629 "/usr/include/c++/12/cmath" 3
{ return __builtin_lroundl(__x); }
# 1633 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, long> ::__type
# 1636 "/usr/include/c++/12/cmath" 3
lround(_Tp __x)
# 1637 "/usr/include/c++/12/cmath" 3
{ return __builtin_lround(__x); }
# 1642 "/usr/include/c++/12/cmath" 3
constexpr float nearbyint(float __x)
# 1643 "/usr/include/c++/12/cmath" 3
{ return __builtin_nearbyintf(__x); }
# 1646 "/usr/include/c++/12/cmath" 3
constexpr long double nearbyint(long double __x)
# 1647 "/usr/include/c++/12/cmath" 3
{ return __builtin_nearbyintl(__x); }
# 1651 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1654 "/usr/include/c++/12/cmath" 3
nearbyint(_Tp __x)
# 1655 "/usr/include/c++/12/cmath" 3
{ return __builtin_nearbyint(__x); }
# 1660 "/usr/include/c++/12/cmath" 3
constexpr float nextafter(float __x, float __y)
# 1661 "/usr/include/c++/12/cmath" 3
{ return __builtin_nextafterf(__x, __y); }
# 1664 "/usr/include/c++/12/cmath" 3
constexpr long double nextafter(long double __x, long double __y)
# 1665 "/usr/include/c++/12/cmath" 3
{ return __builtin_nextafterl(__x, __y); }
# 1669 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1671 "/usr/include/c++/12/cmath" 3
nextafter(_Tp __x, _Up __y)
# 1672 "/usr/include/c++/12/cmath" 3
{
# 1673 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1674 "/usr/include/c++/12/cmath" 3
return nextafter((__type)__x, (__type)__y);
# 1675 "/usr/include/c++/12/cmath" 3
}
# 1680 "/usr/include/c++/12/cmath" 3
constexpr float nexttoward(float __x, long double __y)
# 1681 "/usr/include/c++/12/cmath" 3
{ return __builtin_nexttowardf(__x, __y); }
# 1684 "/usr/include/c++/12/cmath" 3
constexpr long double nexttoward(long double __x, long double __y)
# 1685 "/usr/include/c++/12/cmath" 3
{ return __builtin_nexttowardl(__x, __y); }
# 1689 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1692 "/usr/include/c++/12/cmath" 3
nexttoward(_Tp __x, long double __y)
# 1693 "/usr/include/c++/12/cmath" 3
{ return __builtin_nexttoward(__x, __y); }
# 1698 "/usr/include/c++/12/cmath" 3
constexpr float remainder(float __x, float __y)
# 1699 "/usr/include/c++/12/cmath" 3
{ return __builtin_remainderf(__x, __y); }
# 1702 "/usr/include/c++/12/cmath" 3
constexpr long double remainder(long double __x, long double __y)
# 1703 "/usr/include/c++/12/cmath" 3
{ return __builtin_remainderl(__x, __y); }
# 1707 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1709 "/usr/include/c++/12/cmath" 3
remainder(_Tp __x, _Up __y)
# 1710 "/usr/include/c++/12/cmath" 3
{
# 1711 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1712 "/usr/include/c++/12/cmath" 3
return remainder((__type)__x, (__type)__y);
# 1713 "/usr/include/c++/12/cmath" 3
}
# 1718 "/usr/include/c++/12/cmath" 3
inline float remquo(float __x, float __y, int *__pquo)
# 1719 "/usr/include/c++/12/cmath" 3
{ return __builtin_remquof(__x, __y, __pquo); }
# 1722 "/usr/include/c++/12/cmath" 3
inline long double remquo(long double __x, long double __y, int *__pquo)
# 1723 "/usr/include/c++/12/cmath" 3
{ return __builtin_remquol(__x, __y, __pquo); }
# 1727 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up> inline typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type
# 1729 "/usr/include/c++/12/cmath" 3
remquo(_Tp __x, _Up __y, int *__pquo)
# 1730 "/usr/include/c++/12/cmath" 3
{
# 1731 "/usr/include/c++/12/cmath" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type __type;
# 1732 "/usr/include/c++/12/cmath" 3
return remquo((__type)__x, (__type)__y, __pquo);
# 1733 "/usr/include/c++/12/cmath" 3
}
# 1738 "/usr/include/c++/12/cmath" 3
constexpr float rint(float __x)
# 1739 "/usr/include/c++/12/cmath" 3
{ return __builtin_rintf(__x); }
# 1742 "/usr/include/c++/12/cmath" 3
constexpr long double rint(long double __x)
# 1743 "/usr/include/c++/12/cmath" 3
{ return __builtin_rintl(__x); }
# 1747 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1750 "/usr/include/c++/12/cmath" 3
rint(_Tp __x)
# 1751 "/usr/include/c++/12/cmath" 3
{ return __builtin_rint(__x); }
# 1756 "/usr/include/c++/12/cmath" 3
constexpr float round(float __x)
# 1757 "/usr/include/c++/12/cmath" 3
{ return __builtin_roundf(__x); }
# 1760 "/usr/include/c++/12/cmath" 3
constexpr long double round(long double __x)
# 1761 "/usr/include/c++/12/cmath" 3
{ return __builtin_roundl(__x); }
# 1765 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1768 "/usr/include/c++/12/cmath" 3
round(_Tp __x)
# 1769 "/usr/include/c++/12/cmath" 3
{ return __builtin_round(__x); }
# 1774 "/usr/include/c++/12/cmath" 3
constexpr float scalbln(float __x, long __ex)
# 1775 "/usr/include/c++/12/cmath" 3
{ return __builtin_scalblnf(__x, __ex); }
# 1778 "/usr/include/c++/12/cmath" 3
constexpr long double scalbln(long double __x, long __ex)
# 1779 "/usr/include/c++/12/cmath" 3
{ return __builtin_scalblnl(__x, __ex); }
# 1783 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1786 "/usr/include/c++/12/cmath" 3
scalbln(_Tp __x, long __ex)
# 1787 "/usr/include/c++/12/cmath" 3
{ return __builtin_scalbln(__x, __ex); }
# 1792 "/usr/include/c++/12/cmath" 3
constexpr float scalbn(float __x, int __ex)
# 1793 "/usr/include/c++/12/cmath" 3
{ return __builtin_scalbnf(__x, __ex); }
# 1796 "/usr/include/c++/12/cmath" 3
constexpr long double scalbn(long double __x, int __ex)
# 1797 "/usr/include/c++/12/cmath" 3
{ return __builtin_scalbnl(__x, __ex); }
# 1801 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1804 "/usr/include/c++/12/cmath" 3
scalbn(_Tp __x, int __ex)
# 1805 "/usr/include/c++/12/cmath" 3
{ return __builtin_scalbn(__x, __ex); }
# 1810 "/usr/include/c++/12/cmath" 3
constexpr float tgamma(float __x)
# 1811 "/usr/include/c++/12/cmath" 3
{ return __builtin_tgammaf(__x); }
# 1814 "/usr/include/c++/12/cmath" 3
constexpr long double tgamma(long double __x)
# 1815 "/usr/include/c++/12/cmath" 3
{ return __builtin_tgammal(__x); }
# 1819 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1822 "/usr/include/c++/12/cmath" 3
tgamma(_Tp __x)
# 1823 "/usr/include/c++/12/cmath" 3
{ return __builtin_tgamma(__x); }
# 1828 "/usr/include/c++/12/cmath" 3
constexpr float trunc(float __x)
# 1829 "/usr/include/c++/12/cmath" 3
{ return __builtin_truncf(__x); }
# 1832 "/usr/include/c++/12/cmath" 3
constexpr long double trunc(long double __x)
# 1833 "/usr/include/c++/12/cmath" 3
{ return __builtin_truncl(__x); }
# 1837 "/usr/include/c++/12/cmath" 3
template< class _Tp> constexpr typename __gnu_cxx::__enable_if< __is_integer< _Tp> ::__value, double> ::__type
# 1840 "/usr/include/c++/12/cmath" 3
trunc(_Tp __x)
# 1841 "/usr/include/c++/12/cmath" 3
{ return __builtin_trunc(__x); }
# 1852 "/usr/include/c++/12/cmath" 3
template< class _Tp> inline _Tp
# 1854 "/usr/include/c++/12/cmath" 3
__hypot3(_Tp __x, _Tp __y, _Tp __z)
# 1855 "/usr/include/c++/12/cmath" 3
{
# 1856 "/usr/include/c++/12/cmath" 3
__x = std::abs(__x);
# 1857 "/usr/include/c++/12/cmath" 3
__y = std::abs(__y);
# 1858 "/usr/include/c++/12/cmath" 3
__z = std::abs(__z);
# 1859 "/usr/include/c++/12/cmath" 3
if (_Tp __a = (__x < __y) ? (__y < __z) ? __z : __y : ((__x < __z) ? __z : __x)) {
# 1860 "/usr/include/c++/12/cmath" 3
return __a * std::sqrt((((__x / __a) * (__x / __a)) + ((__y / __a) * (__y / __a))) + ((__z / __a) * (__z / __a))); } else {
# 1864 "/usr/include/c++/12/cmath" 3
return {}; }
# 1865 "/usr/include/c++/12/cmath" 3
}
# 1868 "/usr/include/c++/12/cmath" 3
inline float hypot(float __x, float __y, float __z)
# 1869 "/usr/include/c++/12/cmath" 3
{ return std::__hypot3< float> (__x, __y, __z); }
# 1872 "/usr/include/c++/12/cmath" 3
inline double hypot(double __x, double __y, double __z)
# 1873 "/usr/include/c++/12/cmath" 3
{ return std::__hypot3< double> (__x, __y, __z); }
# 1876 "/usr/include/c++/12/cmath" 3
inline long double hypot(long double __x, long double __y, long double __z)
# 1877 "/usr/include/c++/12/cmath" 3
{ return std::__hypot3< long double> (__x, __y, __z); }
# 1879 "/usr/include/c++/12/cmath" 3
template< class _Tp, class _Up, class _Vp> __gnu_cxx::__promoted_t< _Tp, _Up, _Vp>
# 1881 "/usr/include/c++/12/cmath" 3
hypot(_Tp __x, _Up __y, _Vp __z)
# 1882 "/usr/include/c++/12/cmath" 3
{
# 1883 "/usr/include/c++/12/cmath" 3
using __type = __gnu_cxx::__promoted_t< _Tp, _Up, _Vp> ;
# 1884 "/usr/include/c++/12/cmath" 3
return std::__hypot3< __gnu_cxx::__promoted_t< _Tp, _Up, _Vp> > (__x, __y, __z);
# 1885 "/usr/include/c++/12/cmath" 3
}
# 1932 "/usr/include/c++/12/cmath" 3
}
# 33 "/usr/include/c++/12/bits/specfun.h" 3
#pragma GCC visibility push ( default )
# 42 "/usr/include/c++/12/bits/functexcept.h" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_bad_exception() __attribute((__noreturn__));
# 52 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_bad_alloc() __attribute((__noreturn__));
# 55 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_bad_array_new_length() __attribute((__noreturn__));
# 59 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_bad_cast() __attribute((__noreturn__));
# 62 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_bad_typeid() __attribute((__noreturn__));
# 66 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_logic_error(const char *) __attribute((__noreturn__));
# 69 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_domain_error(const char *) __attribute((__noreturn__));
# 72 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_invalid_argument(const char *) __attribute((__noreturn__));
# 75 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_length_error(const char *) __attribute((__noreturn__));
# 78 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_out_of_range(const char *) __attribute((__noreturn__));
# 81 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_out_of_range_fmt(const char *, ...) __attribute((__noreturn__))
# 82 "/usr/include/c++/12/bits/functexcept.h" 3
 __attribute((__format__(__gnu_printf__, 1, 2)));
# 85 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_runtime_error(const char *) __attribute((__noreturn__));
# 88 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_range_error(const char *) __attribute((__noreturn__));
# 91 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_overflow_error(const char *) __attribute((__noreturn__));
# 94 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_underflow_error(const char *) __attribute((__noreturn__));
# 98 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_ios_failure(const char *) __attribute((__noreturn__));
# 101 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_ios_failure(const char *, int) __attribute((__noreturn__));
# 105 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_system_error(int) __attribute((__noreturn__));
# 109 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_future_error(int) __attribute((__noreturn__));
# 113 "/usr/include/c++/12/bits/functexcept.h" 3
void __throw_bad_function_call() __attribute((__noreturn__));
# 116 "/usr/include/c++/12/bits/functexcept.h" 3
}
# 37 "/usr/include/c++/12/ext/numeric_traits.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 50 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Tp>
# 51 "/usr/include/c++/12/ext/numeric_traits.h" 3
struct __is_integer_nonstrict : public std::__is_integer< _Tp> {
# 54 "/usr/include/c++/12/ext/numeric_traits.h" 3
using std::__is_integer< _Tp> ::__value;
# 57 "/usr/include/c++/12/ext/numeric_traits.h" 3
enum { __width = (__value) ? sizeof(_Tp) * (8) : (0)};
# 58 "/usr/include/c++/12/ext/numeric_traits.h" 3
};
# 60 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Value>
# 61 "/usr/include/c++/12/ext/numeric_traits.h" 3
struct __numeric_traits_integer {
# 64 "/usr/include/c++/12/ext/numeric_traits.h" 3
static_assert((__is_integer_nonstrict< _Value> ::__value), "invalid specialization");
# 70 "/usr/include/c++/12/ext/numeric_traits.h" 3
static const bool __is_signed = (((_Value)(-1)) < 0);
# 71 "/usr/include/c++/12/ext/numeric_traits.h" 3
static const int __digits = (__is_integer_nonstrict< _Value> ::__width - __is_signed);
# 75 "/usr/include/c++/12/ext/numeric_traits.h" 3
static const _Value __max = (__is_signed ? (((((_Value)1) << (__digits - 1)) - 1) << 1) + 1 : (~((_Value)0)));
# 78 "/usr/include/c++/12/ext/numeric_traits.h" 3
static const _Value __min = (__is_signed ? (-__max) - 1 : ((_Value)0));
# 79 "/usr/include/c++/12/ext/numeric_traits.h" 3
};
# 81 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Value> const _Value __numeric_traits_integer< _Value> ::__min;
# 84 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Value> const _Value __numeric_traits_integer< _Value> ::__max;
# 87 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Value> const bool __numeric_traits_integer< _Value> ::__is_signed;
# 90 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Value> const int __numeric_traits_integer< _Value> ::__digits;
# 137 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Tp> using __int_traits = __numeric_traits_integer< _Tp> ;
# 157 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Value>
# 158 "/usr/include/c++/12/ext/numeric_traits.h" 3
struct __numeric_traits_floating {
# 161 "/usr/include/c++/12/ext/numeric_traits.h" 3
static const int __max_digits10 = ((2) + ((((std::template __are_same< _Value, float> ::__value) ? 24 : ((std::template __are_same< _Value, double> ::__value) ? 53 : 64)) * 643L) / (2136)));
# 164 "/usr/include/c++/12/ext/numeric_traits.h" 3
static const bool __is_signed = true;
# 165 "/usr/include/c++/12/ext/numeric_traits.h" 3
static const int __digits10 = ((std::template __are_same< _Value, float> ::__value) ? 6 : ((std::template __are_same< _Value, double> ::__value) ? 15 : 18));
# 166 "/usr/include/c++/12/ext/numeric_traits.h" 3
static const int __max_exponent10 = ((std::template __are_same< _Value, float> ::__value) ? 38 : ((std::template __are_same< _Value, double> ::__value) ? 308 : 4932));
# 167 "/usr/include/c++/12/ext/numeric_traits.h" 3
};
# 169 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Value> const int __numeric_traits_floating< _Value> ::__max_digits10;
# 172 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Value> const bool __numeric_traits_floating< _Value> ::__is_signed;
# 175 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Value> const int __numeric_traits_floating< _Value> ::__digits10;
# 178 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Value> const int __numeric_traits_floating< _Value> ::__max_exponent10;
# 186 "/usr/include/c++/12/ext/numeric_traits.h" 3
template< class _Value>
# 187 "/usr/include/c++/12/ext/numeric_traits.h" 3
struct __numeric_traits : public __numeric_traits_integer< _Value> {
# 189 "/usr/include/c++/12/ext/numeric_traits.h" 3
};
# 192 "/usr/include/c++/12/ext/numeric_traits.h" 3
template<> struct __numeric_traits< float> : public __numeric_traits_floating< float> {
# 194 "/usr/include/c++/12/ext/numeric_traits.h" 3
};
# 197 "/usr/include/c++/12/ext/numeric_traits.h" 3
template<> struct __numeric_traits< double> : public __numeric_traits_floating< double> {
# 199 "/usr/include/c++/12/ext/numeric_traits.h" 3
};
# 202 "/usr/include/c++/12/ext/numeric_traits.h" 3
template<> struct __numeric_traits< long double> : public __numeric_traits_floating< long double> {
# 204 "/usr/include/c++/12/ext/numeric_traits.h" 3
};
# 239 "/usr/include/c++/12/ext/numeric_traits.h" 3
}
# 40 "/usr/include/c++/12/type_traits" 3
namespace std __attribute((__visibility__("default"))) {
# 44 "/usr/include/c++/12/type_traits" 3
template< class _Tp> class reference_wrapper;
# 61 "/usr/include/c++/12/type_traits" 3
template< class _Tp, _Tp __v>
# 62 "/usr/include/c++/12/type_traits" 3
struct integral_constant {
# 64 "/usr/include/c++/12/type_traits" 3
static constexpr inline _Tp value = (__v);
# 65 "/usr/include/c++/12/type_traits" 3
typedef _Tp value_type;
# 66 "/usr/include/c++/12/type_traits" 3
typedef integral_constant type;
# 67 "/usr/include/c++/12/type_traits" 3
constexpr operator value_type() const noexcept { return value; }
# 72 "/usr/include/c++/12/type_traits" 3
constexpr value_type operator()() const noexcept { return value; }
# 74 "/usr/include/c++/12/type_traits" 3
};
# 82 "/usr/include/c++/12/type_traits" 3
using true_type = integral_constant< bool, true> ;
# 85 "/usr/include/c++/12/type_traits" 3
using false_type = integral_constant< bool, false> ;
# 89 "/usr/include/c++/12/type_traits" 3
template< bool __v> using __bool_constant = integral_constant< bool, __v> ;
# 97 "/usr/include/c++/12/type_traits" 3
template< bool __v> using bool_constant = integral_constant< bool, __v> ;
# 103 "/usr/include/c++/12/type_traits" 3
template< bool >
# 104 "/usr/include/c++/12/type_traits" 3
struct __conditional {
# 106 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class > using type = _Tp;
# 108 "/usr/include/c++/12/type_traits" 3
};
# 111 "/usr/include/c++/12/type_traits" 3
template<> struct __conditional< false> {
# 113 "/usr/include/c++/12/type_traits" 3
template< class , class _Up> using type = _Up;
# 115 "/usr/include/c++/12/type_traits" 3
};
# 118 "/usr/include/c++/12/type_traits" 3
template< bool _Cond, class _If, class _Else> using __conditional_t = typename __conditional< _Cond> ::template type< _If, _Else> ;
# 123 "/usr/include/c++/12/type_traits" 3
template< class _Type>
# 124 "/usr/include/c++/12/type_traits" 3
struct __type_identity {
# 125 "/usr/include/c++/12/type_traits" 3
using type = _Type; };
# 127 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using __type_identity_t = typename __type_identity< _Tp> ::type;
# 130 "/usr/include/c++/12/type_traits" 3
template< class ...> struct __or_;
# 134 "/usr/include/c++/12/type_traits" 3
template<> struct __or_< > : public false_type {
# 136 "/usr/include/c++/12/type_traits" 3
};
# 138 "/usr/include/c++/12/type_traits" 3
template< class _B1>
# 139 "/usr/include/c++/12/type_traits" 3
struct __or_< _B1> : public _B1 {
# 141 "/usr/include/c++/12/type_traits" 3
};
# 143 "/usr/include/c++/12/type_traits" 3
template< class _B1, class _B2>
# 144 "/usr/include/c++/12/type_traits" 3
struct __or_< _B1, _B2> : public __conditional_t< _B1::value, _B1, _B2> {
# 146 "/usr/include/c++/12/type_traits" 3
};
# 148 "/usr/include/c++/12/type_traits" 3
template< class _B1, class _B2, class _B3, class ..._Bn>
# 149 "/usr/include/c++/12/type_traits" 3
struct __or_< _B1, _B2, _B3, _Bn...> : public __conditional_t< _B1::value, _B1, std::__or_< _B2, _B3, _Bn...> > {
# 151 "/usr/include/c++/12/type_traits" 3
};
# 153 "/usr/include/c++/12/type_traits" 3
template< class ...> struct __and_;
# 157 "/usr/include/c++/12/type_traits" 3
template<> struct __and_< > : public true_type {
# 159 "/usr/include/c++/12/type_traits" 3
};
# 161 "/usr/include/c++/12/type_traits" 3
template< class _B1>
# 162 "/usr/include/c++/12/type_traits" 3
struct __and_< _B1> : public _B1 {
# 164 "/usr/include/c++/12/type_traits" 3
};
# 166 "/usr/include/c++/12/type_traits" 3
template< class _B1, class _B2>
# 167 "/usr/include/c++/12/type_traits" 3
struct __and_< _B1, _B2> : public __conditional_t< _B1::value, _B2, _B1> {
# 169 "/usr/include/c++/12/type_traits" 3
};
# 171 "/usr/include/c++/12/type_traits" 3
template< class _B1, class _B2, class _B3, class ..._Bn>
# 172 "/usr/include/c++/12/type_traits" 3
struct __and_< _B1, _B2, _B3, _Bn...> : public __conditional_t< _B1::value, std::__and_< _B2, _B3, _Bn...> , _B1> {
# 174 "/usr/include/c++/12/type_traits" 3
};
# 176 "/usr/include/c++/12/type_traits" 3
template< class _Pp>
# 177 "/usr/include/c++/12/type_traits" 3
struct __not_ : public __bool_constant< !((bool)_Pp::value)> {
# 179 "/usr/include/c++/12/type_traits" 3
};
# 185 "/usr/include/c++/12/type_traits" 3
template< class ..._Bn> constexpr bool
# 186 "/usr/include/c++/12/type_traits" 3
__or_v = (__or_< _Bn...> ::value);
# 187 "/usr/include/c++/12/type_traits" 3
template< class ..._Bn> constexpr bool
# 188 "/usr/include/c++/12/type_traits" 3
__and_v = (__and_< _Bn...> ::value);
# 193 "/usr/include/c++/12/type_traits" 3
template< class ..._Bn>
# 194 "/usr/include/c++/12/type_traits" 3
struct conjunction : public __and_< _Bn...> {
# 196 "/usr/include/c++/12/type_traits" 3
};
# 198 "/usr/include/c++/12/type_traits" 3
template< class ..._Bn>
# 199 "/usr/include/c++/12/type_traits" 3
struct disjunction : public __or_< _Bn...> {
# 201 "/usr/include/c++/12/type_traits" 3
};
# 203 "/usr/include/c++/12/type_traits" 3
template< class _Pp>
# 204 "/usr/include/c++/12/type_traits" 3
struct negation : public __not_< _Pp> {
# 206 "/usr/include/c++/12/type_traits" 3
};
# 211 "/usr/include/c++/12/type_traits" 3
template< class ..._Bn> constexpr bool
# 212 "/usr/include/c++/12/type_traits" 3
conjunction_v = (conjunction< _Bn...> ::value);
# 214 "/usr/include/c++/12/type_traits" 3
template< class ..._Bn> constexpr bool
# 215 "/usr/include/c++/12/type_traits" 3
disjunction_v = (disjunction< _Bn...> ::value);
# 217 "/usr/include/c++/12/type_traits" 3
template< class _Pp> constexpr bool
# 218 "/usr/include/c++/12/type_traits" 3
negation_v = (negation< _Pp> ::value);
# 224 "/usr/include/c++/12/type_traits" 3
template< class > struct is_reference;
# 226 "/usr/include/c++/12/type_traits" 3
template< class > struct is_function;
# 228 "/usr/include/c++/12/type_traits" 3
template< class > struct is_void;
# 230 "/usr/include/c++/12/type_traits" 3
template< class > struct remove_cv;
# 232 "/usr/include/c++/12/type_traits" 3
template< class > struct is_const;
# 236 "/usr/include/c++/12/type_traits" 3
template< class > struct __is_array_unknown_bounds;
# 242 "/usr/include/c++/12/type_traits" 3
template< class _Tp, size_t = sizeof(_Tp)> constexpr true_type
# 243 "/usr/include/c++/12/type_traits" 3
__is_complete_or_unbounded(__type_identity< _Tp> )
# 244 "/usr/include/c++/12/type_traits" 3
{ return {}; }
# 246 "/usr/include/c++/12/type_traits" 3
template< class _TypeIdentity, class
# 247 "/usr/include/c++/12/type_traits" 3
_NestedType = typename _TypeIdentity::type> constexpr typename __or_< is_reference< _NestedType> , is_function< _NestedType> , is_void< _NestedType> , __is_array_unknown_bounds< _NestedType> > ::type
# 253 "/usr/include/c++/12/type_traits" 3
__is_complete_or_unbounded(_TypeIdentity)
# 254 "/usr/include/c++/12/type_traits" 3
{ return {}; }
# 261 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 262 "/usr/include/c++/12/type_traits" 3
struct __success_type {
# 263 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 265 "/usr/include/c++/12/type_traits" 3
struct __failure_type {
# 266 "/usr/include/c++/12/type_traits" 3
};
# 269 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using __remove_cv_t = typename remove_cv< _Tp> ::type;
# 274 "/usr/include/c++/12/type_traits" 3
template< class >
# 275 "/usr/include/c++/12/type_traits" 3
struct __is_void_helper : public false_type {
# 276 "/usr/include/c++/12/type_traits" 3
};
# 279 "/usr/include/c++/12/type_traits" 3
template<> struct __is_void_helper< void> : public true_type {
# 280 "/usr/include/c++/12/type_traits" 3
};
# 284 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 285 "/usr/include/c++/12/type_traits" 3
struct is_void : public __is_void_helper< __remove_cv_t< _Tp> > ::type {
# 287 "/usr/include/c++/12/type_traits" 3
};
# 290 "/usr/include/c++/12/type_traits" 3
template< class >
# 291 "/usr/include/c++/12/type_traits" 3
struct __is_integral_helper : public false_type {
# 292 "/usr/include/c++/12/type_traits" 3
};
# 295 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< bool> : public true_type {
# 296 "/usr/include/c++/12/type_traits" 3
};
# 299 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< char> : public true_type {
# 300 "/usr/include/c++/12/type_traits" 3
};
# 303 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< signed char> : public true_type {
# 304 "/usr/include/c++/12/type_traits" 3
};
# 307 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< unsigned char> : public true_type {
# 308 "/usr/include/c++/12/type_traits" 3
};
# 314 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< wchar_t> : public true_type {
# 315 "/usr/include/c++/12/type_traits" 3
};
# 324 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< char16_t> : public true_type {
# 325 "/usr/include/c++/12/type_traits" 3
};
# 328 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< char32_t> : public true_type {
# 329 "/usr/include/c++/12/type_traits" 3
};
# 332 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< short> : public true_type {
# 333 "/usr/include/c++/12/type_traits" 3
};
# 336 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< unsigned short> : public true_type {
# 337 "/usr/include/c++/12/type_traits" 3
};
# 340 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< int> : public true_type {
# 341 "/usr/include/c++/12/type_traits" 3
};
# 344 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< unsigned> : public true_type {
# 345 "/usr/include/c++/12/type_traits" 3
};
# 348 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< long> : public true_type {
# 349 "/usr/include/c++/12/type_traits" 3
};
# 352 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< unsigned long> : public true_type {
# 353 "/usr/include/c++/12/type_traits" 3
};
# 356 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< long long> : public true_type {
# 357 "/usr/include/c++/12/type_traits" 3
};
# 360 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< unsigned long long> : public true_type {
# 361 "/usr/include/c++/12/type_traits" 3
};
# 368 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< __int128> : public true_type {
# 369 "/usr/include/c++/12/type_traits" 3
};
# 373 "/usr/include/c++/12/type_traits" 3
template<> struct __is_integral_helper< unsigned __int128> : public true_type {
# 374 "/usr/include/c++/12/type_traits" 3
};
# 412 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 413 "/usr/include/c++/12/type_traits" 3
struct is_integral : public __is_integral_helper< __remove_cv_t< _Tp> > ::type {
# 415 "/usr/include/c++/12/type_traits" 3
};
# 418 "/usr/include/c++/12/type_traits" 3
template< class >
# 419 "/usr/include/c++/12/type_traits" 3
struct __is_floating_point_helper : public false_type {
# 420 "/usr/include/c++/12/type_traits" 3
};
# 423 "/usr/include/c++/12/type_traits" 3
template<> struct __is_floating_point_helper< float> : public true_type {
# 424 "/usr/include/c++/12/type_traits" 3
};
# 427 "/usr/include/c++/12/type_traits" 3
template<> struct __is_floating_point_helper< double> : public true_type {
# 428 "/usr/include/c++/12/type_traits" 3
};
# 431 "/usr/include/c++/12/type_traits" 3
template<> struct __is_floating_point_helper< long double> : public true_type {
# 432 "/usr/include/c++/12/type_traits" 3
};
# 442 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 443 "/usr/include/c++/12/type_traits" 3
struct is_floating_point : public __is_floating_point_helper< __remove_cv_t< _Tp> > ::type {
# 445 "/usr/include/c++/12/type_traits" 3
};
# 448 "/usr/include/c++/12/type_traits" 3
template< class >
# 449 "/usr/include/c++/12/type_traits" 3
struct is_array : public false_type {
# 450 "/usr/include/c++/12/type_traits" 3
};
# 452 "/usr/include/c++/12/type_traits" 3
template< class _Tp, size_t _Size>
# 453 "/usr/include/c++/12/type_traits" 3
struct is_array< _Tp [_Size]> : public true_type {
# 454 "/usr/include/c++/12/type_traits" 3
};
# 456 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 457 "/usr/include/c++/12/type_traits" 3
struct is_array< _Tp []> : public true_type {
# 458 "/usr/include/c++/12/type_traits" 3
};
# 460 "/usr/include/c++/12/type_traits" 3
template< class >
# 461 "/usr/include/c++/12/type_traits" 3
struct __is_pointer_helper : public false_type {
# 462 "/usr/include/c++/12/type_traits" 3
};
# 464 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 465 "/usr/include/c++/12/type_traits" 3
struct __is_pointer_helper< _Tp *> : public true_type {
# 466 "/usr/include/c++/12/type_traits" 3
};
# 469 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 470 "/usr/include/c++/12/type_traits" 3
struct is_pointer : public __is_pointer_helper< __remove_cv_t< _Tp> > ::type {
# 472 "/usr/include/c++/12/type_traits" 3
};
# 475 "/usr/include/c++/12/type_traits" 3
template< class >
# 476 "/usr/include/c++/12/type_traits" 3
struct is_lvalue_reference : public false_type {
# 477 "/usr/include/c++/12/type_traits" 3
};
# 479 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 480 "/usr/include/c++/12/type_traits" 3
struct is_lvalue_reference< _Tp &> : public true_type {
# 481 "/usr/include/c++/12/type_traits" 3
};
# 484 "/usr/include/c++/12/type_traits" 3
template< class >
# 485 "/usr/include/c++/12/type_traits" 3
struct is_rvalue_reference : public false_type {
# 486 "/usr/include/c++/12/type_traits" 3
};
# 488 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 489 "/usr/include/c++/12/type_traits" 3
struct is_rvalue_reference< _Tp &&> : public true_type {
# 490 "/usr/include/c++/12/type_traits" 3
};
# 492 "/usr/include/c++/12/type_traits" 3
template< class >
# 493 "/usr/include/c++/12/type_traits" 3
struct __is_member_object_pointer_helper : public false_type {
# 494 "/usr/include/c++/12/type_traits" 3
};
# 496 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Cp>
# 497 "/usr/include/c++/12/type_traits" 3
struct __is_member_object_pointer_helper< _Tp (_Cp::*)> : public __not_< is_function< _Tp> > ::type {
# 498 "/usr/include/c++/12/type_traits" 3
};
# 501 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 502 "/usr/include/c++/12/type_traits" 3
struct is_member_object_pointer : public __is_member_object_pointer_helper< __remove_cv_t< _Tp> > ::type {
# 504 "/usr/include/c++/12/type_traits" 3
};
# 506 "/usr/include/c++/12/type_traits" 3
template< class >
# 507 "/usr/include/c++/12/type_traits" 3
struct __is_member_function_pointer_helper : public false_type {
# 508 "/usr/include/c++/12/type_traits" 3
};
# 510 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Cp>
# 511 "/usr/include/c++/12/type_traits" 3
struct __is_member_function_pointer_helper< _Tp (_Cp::*)> : public is_function< _Tp> ::type {
# 512 "/usr/include/c++/12/type_traits" 3
};
# 515 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 516 "/usr/include/c++/12/type_traits" 3
struct is_member_function_pointer : public __is_member_function_pointer_helper< __remove_cv_t< _Tp> > ::type {
# 518 "/usr/include/c++/12/type_traits" 3
};
# 521 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 522 "/usr/include/c++/12/type_traits" 3
struct is_enum : public integral_constant< bool, __is_enum(_Tp)> {
# 524 "/usr/include/c++/12/type_traits" 3
};
# 527 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 528 "/usr/include/c++/12/type_traits" 3
struct is_union : public integral_constant< bool, __is_union(_Tp)> {
# 530 "/usr/include/c++/12/type_traits" 3
};
# 533 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 534 "/usr/include/c++/12/type_traits" 3
struct is_class : public integral_constant< bool, __is_class(_Tp)> {
# 536 "/usr/include/c++/12/type_traits" 3
};
# 539 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 540 "/usr/include/c++/12/type_traits" 3
struct is_function : public __bool_constant< !is_const< const _Tp> ::value> {
# 541 "/usr/include/c++/12/type_traits" 3
};
# 543 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 544 "/usr/include/c++/12/type_traits" 3
struct is_function< _Tp &> : public false_type {
# 545 "/usr/include/c++/12/type_traits" 3
};
# 547 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 548 "/usr/include/c++/12/type_traits" 3
struct is_function< _Tp &&> : public false_type {
# 549 "/usr/include/c++/12/type_traits" 3
};
# 553 "/usr/include/c++/12/type_traits" 3
template< class >
# 554 "/usr/include/c++/12/type_traits" 3
struct __is_null_pointer_helper : public false_type {
# 555 "/usr/include/c++/12/type_traits" 3
};
# 558 "/usr/include/c++/12/type_traits" 3
template<> struct __is_null_pointer_helper< __decltype((nullptr))> : public true_type {
# 559 "/usr/include/c++/12/type_traits" 3
};
# 562 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 563 "/usr/include/c++/12/type_traits" 3
struct is_null_pointer : public __is_null_pointer_helper< __remove_cv_t< _Tp> > ::type {
# 565 "/usr/include/c++/12/type_traits" 3
};
# 569 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 570 "/usr/include/c++/12/type_traits" 3
struct __is_nullptr_t : public is_null_pointer< _Tp> {
# 572 "/usr/include/c++/12/type_traits" 3
} __attribute((__deprecated__("use \'std::is_null_pointer\' instead")));
# 577 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 578 "/usr/include/c++/12/type_traits" 3
struct is_reference : public __or_< is_lvalue_reference< _Tp> , is_rvalue_reference< _Tp> > ::type {
# 581 "/usr/include/c++/12/type_traits" 3
};
# 584 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 585 "/usr/include/c++/12/type_traits" 3
struct is_arithmetic : public __or_< is_integral< _Tp> , is_floating_point< _Tp> > ::type {
# 587 "/usr/include/c++/12/type_traits" 3
};
# 590 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 591 "/usr/include/c++/12/type_traits" 3
struct is_fundamental : public __or_< is_arithmetic< _Tp> , is_void< _Tp> , is_null_pointer< _Tp> > ::type {
# 594 "/usr/include/c++/12/type_traits" 3
};
# 597 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 598 "/usr/include/c++/12/type_traits" 3
struct is_object : public __not_< __or_< is_function< _Tp> , is_reference< _Tp> , is_void< _Tp> > > ::type {
# 601 "/usr/include/c++/12/type_traits" 3
};
# 603 "/usr/include/c++/12/type_traits" 3
template< class > struct is_member_pointer;
# 607 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 608 "/usr/include/c++/12/type_traits" 3
struct is_scalar : public __or_< is_arithmetic< _Tp> , is_enum< _Tp> , is_pointer< _Tp> , is_member_pointer< _Tp> , is_null_pointer< _Tp> > ::type {
# 611 "/usr/include/c++/12/type_traits" 3
};
# 614 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 615 "/usr/include/c++/12/type_traits" 3
struct is_compound : public __not_< is_fundamental< _Tp> > ::type {
# 616 "/usr/include/c++/12/type_traits" 3
};
# 619 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 620 "/usr/include/c++/12/type_traits" 3
struct __is_member_pointer_helper : public false_type {
# 621 "/usr/include/c++/12/type_traits" 3
};
# 623 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Cp>
# 624 "/usr/include/c++/12/type_traits" 3
struct __is_member_pointer_helper< _Tp (_Cp::*)> : public true_type {
# 625 "/usr/include/c++/12/type_traits" 3
};
# 629 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 630 "/usr/include/c++/12/type_traits" 3
struct is_member_pointer : public __is_member_pointer_helper< __remove_cv_t< _Tp> > ::type {
# 632 "/usr/include/c++/12/type_traits" 3
};
# 634 "/usr/include/c++/12/type_traits" 3
template< class , class > struct is_same;
# 638 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class ..._Types> using __is_one_of = __or_< is_same< _Tp, _Types> ...> ;
# 643 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using __is_signed_integer = __is_one_of< __remove_cv_t< _Tp> , signed char, signed short, signed int, signed long, signed long long, signed __int128> ;
# 663 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using __is_unsigned_integer = __is_one_of< __remove_cv_t< _Tp> , unsigned char, unsigned short, unsigned, unsigned long, unsigned long long, unsigned __int128> ;
# 682 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using __is_standard_integer = __or_< __is_signed_integer< _Tp> , __is_unsigned_integer< _Tp> > ;
# 687 "/usr/include/c++/12/type_traits" 3
template< class ...> using __void_t = void;
# 691 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class = void>
# 692 "/usr/include/c++/12/type_traits" 3
struct __is_referenceable : public false_type {
# 694 "/usr/include/c++/12/type_traits" 3
};
# 696 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 697 "/usr/include/c++/12/type_traits" 3
struct __is_referenceable< _Tp, __void_t< _Tp &> > : public true_type {
# 699 "/usr/include/c++/12/type_traits" 3
};
# 705 "/usr/include/c++/12/type_traits" 3
template< class >
# 706 "/usr/include/c++/12/type_traits" 3
struct is_const : public false_type {
# 707 "/usr/include/c++/12/type_traits" 3
};
# 709 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 710 "/usr/include/c++/12/type_traits" 3
struct is_const< const _Tp> : public true_type {
# 711 "/usr/include/c++/12/type_traits" 3
};
# 714 "/usr/include/c++/12/type_traits" 3
template< class >
# 715 "/usr/include/c++/12/type_traits" 3
struct is_volatile : public false_type {
# 716 "/usr/include/c++/12/type_traits" 3
};
# 718 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 719 "/usr/include/c++/12/type_traits" 3
struct is_volatile< volatile _Tp> : public true_type {
# 720 "/usr/include/c++/12/type_traits" 3
};
# 723 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 724 "/usr/include/c++/12/type_traits" 3
struct is_trivial : public integral_constant< bool, __is_trivial(_Tp)> {
# 727 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 729 "/usr/include/c++/12/type_traits" 3
};
# 732 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 733 "/usr/include/c++/12/type_traits" 3
struct is_trivially_copyable : public integral_constant< bool, __is_trivially_copyable(_Tp)> {
# 736 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 738 "/usr/include/c++/12/type_traits" 3
};
# 741 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 742 "/usr/include/c++/12/type_traits" 3
struct is_standard_layout : public integral_constant< bool, __is_standard_layout(_Tp)> {
# 745 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 747 "/usr/include/c++/12/type_traits" 3
};
# 754 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 757 "/usr/include/c++/12/type_traits" 3
struct is_pod : public integral_constant< bool, __is_pod(_Tp)> {
# 760 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 762 "/usr/include/c++/12/type_traits" 3
};
# 768 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 771 "/usr/include/c++/12/type_traits" 3
struct
# 770 "/usr/include/c++/12/type_traits" 3
 [[__deprecated__]] is_literal_type : public integral_constant< bool, __is_literal_type(_Tp)> {
# 774 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 776 "/usr/include/c++/12/type_traits" 3
};
# 779 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 780 "/usr/include/c++/12/type_traits" 3
struct is_empty : public integral_constant< bool, __is_empty(_Tp)> {
# 782 "/usr/include/c++/12/type_traits" 3
};
# 785 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 786 "/usr/include/c++/12/type_traits" 3
struct is_polymorphic : public integral_constant< bool, __is_polymorphic(_Tp)> {
# 788 "/usr/include/c++/12/type_traits" 3
};
# 794 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 795 "/usr/include/c++/12/type_traits" 3
struct is_final : public integral_constant< bool, __is_final(_Tp)> {
# 797 "/usr/include/c++/12/type_traits" 3
};
# 801 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 802 "/usr/include/c++/12/type_traits" 3
struct is_abstract : public integral_constant< bool, __is_abstract(_Tp)> {
# 804 "/usr/include/c++/12/type_traits" 3
};
# 807 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool
# 808 "/usr/include/c++/12/type_traits" 3
 = is_arithmetic< _Tp> ::value>
# 809 "/usr/include/c++/12/type_traits" 3
struct __is_signed_helper : public false_type {
# 810 "/usr/include/c++/12/type_traits" 3
};
# 812 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 813 "/usr/include/c++/12/type_traits" 3
struct __is_signed_helper< _Tp, true> : public integral_constant< bool, ((_Tp)(-1)) < ((_Tp)0)> {
# 815 "/usr/include/c++/12/type_traits" 3
};
# 819 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 820 "/usr/include/c++/12/type_traits" 3
struct is_signed : public __is_signed_helper< _Tp> ::type {
# 822 "/usr/include/c++/12/type_traits" 3
};
# 825 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 826 "/usr/include/c++/12/type_traits" 3
struct is_unsigned : public __and_< is_arithmetic< _Tp> , __not_< is_signed< _Tp> > > {
# 828 "/usr/include/c++/12/type_traits" 3
};
# 831 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up = _Tp &&> _Up __declval(int);
# 835 "/usr/include/c++/12/type_traits" 3
template< class _Tp> _Tp __declval(long);
# 840 "/usr/include/c++/12/type_traits" 3
template< class _Tp> auto declval() noexcept->__decltype((__declval< _Tp> (0)));
# 843 "/usr/include/c++/12/type_traits" 3
template< class , unsigned = 0U> struct extent;
# 846 "/usr/include/c++/12/type_traits" 3
template< class > struct remove_all_extents;
# 850 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 851 "/usr/include/c++/12/type_traits" 3
struct __is_array_known_bounds : public integral_constant< bool, (extent< _Tp> ::value > 0)> {
# 853 "/usr/include/c++/12/type_traits" 3
};
# 855 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 856 "/usr/include/c++/12/type_traits" 3
struct __is_array_unknown_bounds : public __and_< is_array< _Tp> , __not_< extent< _Tp> > > {
# 858 "/usr/include/c++/12/type_traits" 3
};
# 867 "/usr/include/c++/12/type_traits" 3
struct __do_is_destructible_impl {
# 869 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class = __decltype((declval< _Tp &> ().~_Tp()))> static true_type __test(int);
# 872 "/usr/include/c++/12/type_traits" 3
template< class > static false_type __test(...);
# 874 "/usr/include/c++/12/type_traits" 3
};
# 876 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 877 "/usr/include/c++/12/type_traits" 3
struct __is_destructible_impl : public __do_is_destructible_impl {
# 880 "/usr/include/c++/12/type_traits" 3
typedef __decltype((__test< _Tp> (0))) type;
# 881 "/usr/include/c++/12/type_traits" 3
};
# 883 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool
# 884 "/usr/include/c++/12/type_traits" 3
 = __or_< is_void< _Tp> , __is_array_unknown_bounds< _Tp> , is_function< _Tp> > ::value, bool
# 887 "/usr/include/c++/12/type_traits" 3
 = __or_< is_reference< _Tp> , is_scalar< _Tp> > ::value> struct __is_destructible_safe;
# 890 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 891 "/usr/include/c++/12/type_traits" 3
struct __is_destructible_safe< _Tp, false, false> : public __is_destructible_impl< typename remove_all_extents< _Tp> ::type> ::type {
# 894 "/usr/include/c++/12/type_traits" 3
};
# 896 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 897 "/usr/include/c++/12/type_traits" 3
struct __is_destructible_safe< _Tp, true, false> : public false_type {
# 898 "/usr/include/c++/12/type_traits" 3
};
# 900 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 901 "/usr/include/c++/12/type_traits" 3
struct __is_destructible_safe< _Tp, false, true> : public true_type {
# 902 "/usr/include/c++/12/type_traits" 3
};
# 906 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 907 "/usr/include/c++/12/type_traits" 3
struct is_destructible : public __is_destructible_safe< _Tp> ::type {
# 910 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 912 "/usr/include/c++/12/type_traits" 3
};
# 920 "/usr/include/c++/12/type_traits" 3
struct __do_is_nt_destructible_impl {
# 922 "/usr/include/c++/12/type_traits" 3
template< class _Tp> static __bool_constant< noexcept(declval< _Tp &> ().~_Tp())> __test(int);
# 926 "/usr/include/c++/12/type_traits" 3
template< class > static false_type __test(...);
# 928 "/usr/include/c++/12/type_traits" 3
};
# 930 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 931 "/usr/include/c++/12/type_traits" 3
struct __is_nt_destructible_impl : public __do_is_nt_destructible_impl {
# 934 "/usr/include/c++/12/type_traits" 3
typedef __decltype((__test< _Tp> (0))) type;
# 935 "/usr/include/c++/12/type_traits" 3
};
# 937 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool
# 938 "/usr/include/c++/12/type_traits" 3
 = __or_< is_void< _Tp> , __is_array_unknown_bounds< _Tp> , is_function< _Tp> > ::value, bool
# 941 "/usr/include/c++/12/type_traits" 3
 = __or_< is_reference< _Tp> , is_scalar< _Tp> > ::value> struct __is_nt_destructible_safe;
# 944 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 945 "/usr/include/c++/12/type_traits" 3
struct __is_nt_destructible_safe< _Tp, false, false> : public __is_nt_destructible_impl< typename remove_all_extents< _Tp> ::type> ::type {
# 948 "/usr/include/c++/12/type_traits" 3
};
# 950 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 951 "/usr/include/c++/12/type_traits" 3
struct __is_nt_destructible_safe< _Tp, true, false> : public false_type {
# 952 "/usr/include/c++/12/type_traits" 3
};
# 954 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 955 "/usr/include/c++/12/type_traits" 3
struct __is_nt_destructible_safe< _Tp, false, true> : public true_type {
# 956 "/usr/include/c++/12/type_traits" 3
};
# 960 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 961 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_destructible : public __is_nt_destructible_safe< _Tp> ::type {
# 964 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 966 "/usr/include/c++/12/type_traits" 3
};
# 969 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class ..._Args>
# 970 "/usr/include/c++/12/type_traits" 3
struct __is_constructible_impl : public __bool_constant< __is_constructible(_Tp, _Args...)> {
# 972 "/usr/include/c++/12/type_traits" 3
};
# 976 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class ..._Args>
# 977 "/usr/include/c++/12/type_traits" 3
struct is_constructible : public __is_constructible_impl< _Tp, _Args...> {
# 980 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 982 "/usr/include/c++/12/type_traits" 3
};
# 985 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 986 "/usr/include/c++/12/type_traits" 3
struct is_default_constructible : public __is_constructible_impl< _Tp> ::type {
# 989 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 991 "/usr/include/c++/12/type_traits" 3
};
# 994 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_copy_constructible_impl;
# 997 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 998 "/usr/include/c++/12/type_traits" 3
struct __is_copy_constructible_impl< _Tp, false> : public false_type {
# 999 "/usr/include/c++/12/type_traits" 3
};
# 1001 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1002 "/usr/include/c++/12/type_traits" 3
struct __is_copy_constructible_impl< _Tp, true> : public __is_constructible_impl< _Tp, const _Tp &> {
# 1004 "/usr/include/c++/12/type_traits" 3
};
# 1008 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1009 "/usr/include/c++/12/type_traits" 3
struct is_copy_constructible : public __is_copy_constructible_impl< _Tp> {
# 1012 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1014 "/usr/include/c++/12/type_traits" 3
};
# 1017 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_move_constructible_impl;
# 1020 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1021 "/usr/include/c++/12/type_traits" 3
struct __is_move_constructible_impl< _Tp, false> : public false_type {
# 1022 "/usr/include/c++/12/type_traits" 3
};
# 1024 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1025 "/usr/include/c++/12/type_traits" 3
struct __is_move_constructible_impl< _Tp, true> : public __is_constructible_impl< _Tp, _Tp &&> {
# 1027 "/usr/include/c++/12/type_traits" 3
};
# 1031 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1032 "/usr/include/c++/12/type_traits" 3
struct is_move_constructible : public __is_move_constructible_impl< _Tp> {
# 1035 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1037 "/usr/include/c++/12/type_traits" 3
};
# 1040 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class ..._Args> using __is_nothrow_constructible_impl = __bool_constant< __is_nothrow_constructible(_Tp, _Args...)> ;
# 1046 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class ..._Args>
# 1047 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_constructible : public __is_nothrow_constructible_impl< _Tp, _Args...> ::type {
# 1050 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1052 "/usr/include/c++/12/type_traits" 3
};
# 1055 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1056 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_default_constructible : public __bool_constant< __is_nothrow_constructible(_Tp)> {
# 1059 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1061 "/usr/include/c++/12/type_traits" 3
};
# 1064 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nothrow_copy_constructible_impl;
# 1067 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1068 "/usr/include/c++/12/type_traits" 3
struct __is_nothrow_copy_constructible_impl< _Tp, false> : public false_type {
# 1069 "/usr/include/c++/12/type_traits" 3
};
# 1071 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1072 "/usr/include/c++/12/type_traits" 3
struct __is_nothrow_copy_constructible_impl< _Tp, true> : public __is_nothrow_constructible_impl< _Tp, const _Tp &> {
# 1074 "/usr/include/c++/12/type_traits" 3
};
# 1078 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1079 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_copy_constructible : public __is_nothrow_copy_constructible_impl< _Tp> ::type {
# 1082 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1084 "/usr/include/c++/12/type_traits" 3
};
# 1087 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nothrow_move_constructible_impl;
# 1090 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1091 "/usr/include/c++/12/type_traits" 3
struct __is_nothrow_move_constructible_impl< _Tp, false> : public false_type {
# 1092 "/usr/include/c++/12/type_traits" 3
};
# 1094 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1095 "/usr/include/c++/12/type_traits" 3
struct __is_nothrow_move_constructible_impl< _Tp, true> : public __is_nothrow_constructible_impl< _Tp, _Tp &&> {
# 1097 "/usr/include/c++/12/type_traits" 3
};
# 1101 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1102 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_move_constructible : public __is_nothrow_move_constructible_impl< _Tp> ::type {
# 1105 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1107 "/usr/include/c++/12/type_traits" 3
};
# 1110 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up>
# 1111 "/usr/include/c++/12/type_traits" 3
struct is_assignable : public __bool_constant< __is_assignable(_Tp, _Up)> {
# 1114 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1116 "/usr/include/c++/12/type_traits" 3
};
# 1118 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_copy_assignable_impl;
# 1121 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1122 "/usr/include/c++/12/type_traits" 3
struct __is_copy_assignable_impl< _Tp, false> : public false_type {
# 1123 "/usr/include/c++/12/type_traits" 3
};
# 1125 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1126 "/usr/include/c++/12/type_traits" 3
struct __is_copy_assignable_impl< _Tp, true> : public __bool_constant< __is_assignable(_Tp &, const _Tp &)> {
# 1128 "/usr/include/c++/12/type_traits" 3
};
# 1131 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1132 "/usr/include/c++/12/type_traits" 3
struct is_copy_assignable : public __is_copy_assignable_impl< _Tp> ::type {
# 1135 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1137 "/usr/include/c++/12/type_traits" 3
};
# 1139 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_move_assignable_impl;
# 1142 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1143 "/usr/include/c++/12/type_traits" 3
struct __is_move_assignable_impl< _Tp, false> : public false_type {
# 1144 "/usr/include/c++/12/type_traits" 3
};
# 1146 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1147 "/usr/include/c++/12/type_traits" 3
struct __is_move_assignable_impl< _Tp, true> : public __bool_constant< __is_assignable(_Tp &, _Tp &&)> {
# 1149 "/usr/include/c++/12/type_traits" 3
};
# 1152 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1153 "/usr/include/c++/12/type_traits" 3
struct is_move_assignable : public __is_move_assignable_impl< _Tp> ::type {
# 1156 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1158 "/usr/include/c++/12/type_traits" 3
};
# 1160 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up> using __is_nothrow_assignable_impl = __bool_constant< __is_nothrow_assignable(_Tp, _Up)> ;
# 1165 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up>
# 1166 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_assignable : public __is_nothrow_assignable_impl< _Tp, _Up> {
# 1169 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1171 "/usr/include/c++/12/type_traits" 3
};
# 1173 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nt_copy_assignable_impl;
# 1176 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1177 "/usr/include/c++/12/type_traits" 3
struct __is_nt_copy_assignable_impl< _Tp, false> : public false_type {
# 1178 "/usr/include/c++/12/type_traits" 3
};
# 1180 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1181 "/usr/include/c++/12/type_traits" 3
struct __is_nt_copy_assignable_impl< _Tp, true> : public __is_nothrow_assignable_impl< _Tp &, const _Tp &> {
# 1183 "/usr/include/c++/12/type_traits" 3
};
# 1186 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1187 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_copy_assignable : public __is_nt_copy_assignable_impl< _Tp> {
# 1190 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1192 "/usr/include/c++/12/type_traits" 3
};
# 1194 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_nt_move_assignable_impl;
# 1197 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1198 "/usr/include/c++/12/type_traits" 3
struct __is_nt_move_assignable_impl< _Tp, false> : public false_type {
# 1199 "/usr/include/c++/12/type_traits" 3
};
# 1201 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1202 "/usr/include/c++/12/type_traits" 3
struct __is_nt_move_assignable_impl< _Tp, true> : public __is_nothrow_assignable_impl< _Tp &, _Tp &&> {
# 1204 "/usr/include/c++/12/type_traits" 3
};
# 1207 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1208 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_move_assignable : public __is_nt_move_assignable_impl< _Tp> {
# 1211 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1213 "/usr/include/c++/12/type_traits" 3
};
# 1216 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class ..._Args>
# 1217 "/usr/include/c++/12/type_traits" 3
struct is_trivially_constructible : public __bool_constant< __is_trivially_constructible(_Tp, _Args...)> {
# 1220 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1222 "/usr/include/c++/12/type_traits" 3
};
# 1225 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1226 "/usr/include/c++/12/type_traits" 3
struct is_trivially_default_constructible : public __bool_constant< __is_trivially_constructible(_Tp)> {
# 1229 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1231 "/usr/include/c++/12/type_traits" 3
};
# 1233 "/usr/include/c++/12/type_traits" 3
struct __do_is_implicitly_default_constructible_impl {
# 1235 "/usr/include/c++/12/type_traits" 3
template< class _Tp> static void __helper(const _Tp &);
# 1238 "/usr/include/c++/12/type_traits" 3
template< class _Tp> static true_type __test(const _Tp &, __decltype((__helper< const _Tp &> ({}))) * = 0);
# 1242 "/usr/include/c++/12/type_traits" 3
static false_type __test(...);
# 1243 "/usr/include/c++/12/type_traits" 3
};
# 1245 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1246 "/usr/include/c++/12/type_traits" 3
struct __is_implicitly_default_constructible_impl : public __do_is_implicitly_default_constructible_impl {
# 1249 "/usr/include/c++/12/type_traits" 3
typedef __decltype((__test(declval< _Tp> ()))) type;
# 1250 "/usr/include/c++/12/type_traits" 3
};
# 1252 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1253 "/usr/include/c++/12/type_traits" 3
struct __is_implicitly_default_constructible_safe : public __is_implicitly_default_constructible_impl< _Tp> ::type {
# 1255 "/usr/include/c++/12/type_traits" 3
};
# 1257 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1258 "/usr/include/c++/12/type_traits" 3
struct __is_implicitly_default_constructible : public __and_< __is_constructible_impl< _Tp> , __is_implicitly_default_constructible_safe< _Tp> > {
# 1261 "/usr/include/c++/12/type_traits" 3
};
# 1263 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_trivially_copy_constructible_impl;
# 1266 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1267 "/usr/include/c++/12/type_traits" 3
struct __is_trivially_copy_constructible_impl< _Tp, false> : public false_type {
# 1268 "/usr/include/c++/12/type_traits" 3
};
# 1270 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1271 "/usr/include/c++/12/type_traits" 3
struct __is_trivially_copy_constructible_impl< _Tp, true> : public __and_< __is_copy_constructible_impl< _Tp> , integral_constant< bool, __is_trivially_constructible(_Tp, const _Tp &)> > {
# 1275 "/usr/include/c++/12/type_traits" 3
};
# 1278 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1279 "/usr/include/c++/12/type_traits" 3
struct is_trivially_copy_constructible : public __is_trivially_copy_constructible_impl< _Tp> {
# 1282 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1284 "/usr/include/c++/12/type_traits" 3
};
# 1286 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_trivially_move_constructible_impl;
# 1289 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1290 "/usr/include/c++/12/type_traits" 3
struct __is_trivially_move_constructible_impl< _Tp, false> : public false_type {
# 1291 "/usr/include/c++/12/type_traits" 3
};
# 1293 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1294 "/usr/include/c++/12/type_traits" 3
struct __is_trivially_move_constructible_impl< _Tp, true> : public __and_< __is_move_constructible_impl< _Tp> , integral_constant< bool, __is_trivially_constructible(_Tp, _Tp &&)> > {
# 1298 "/usr/include/c++/12/type_traits" 3
};
# 1301 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1302 "/usr/include/c++/12/type_traits" 3
struct is_trivially_move_constructible : public __is_trivially_move_constructible_impl< _Tp> {
# 1305 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1307 "/usr/include/c++/12/type_traits" 3
};
# 1310 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up>
# 1311 "/usr/include/c++/12/type_traits" 3
struct is_trivially_assignable : public __bool_constant< __is_trivially_assignable(_Tp, _Up)> {
# 1314 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1316 "/usr/include/c++/12/type_traits" 3
};
# 1318 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_trivially_copy_assignable_impl;
# 1321 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1322 "/usr/include/c++/12/type_traits" 3
struct __is_trivially_copy_assignable_impl< _Tp, false> : public false_type {
# 1323 "/usr/include/c++/12/type_traits" 3
};
# 1325 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1326 "/usr/include/c++/12/type_traits" 3
struct __is_trivially_copy_assignable_impl< _Tp, true> : public __bool_constant< __is_trivially_assignable(_Tp &, const _Tp &)> {
# 1328 "/usr/include/c++/12/type_traits" 3
};
# 1331 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1332 "/usr/include/c++/12/type_traits" 3
struct is_trivially_copy_assignable : public __is_trivially_copy_assignable_impl< _Tp> {
# 1335 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1337 "/usr/include/c++/12/type_traits" 3
};
# 1339 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value> struct __is_trivially_move_assignable_impl;
# 1342 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1343 "/usr/include/c++/12/type_traits" 3
struct __is_trivially_move_assignable_impl< _Tp, false> : public false_type {
# 1344 "/usr/include/c++/12/type_traits" 3
};
# 1346 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1347 "/usr/include/c++/12/type_traits" 3
struct __is_trivially_move_assignable_impl< _Tp, true> : public __bool_constant< __is_trivially_assignable(_Tp &, _Tp &&)> {
# 1349 "/usr/include/c++/12/type_traits" 3
};
# 1352 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1353 "/usr/include/c++/12/type_traits" 3
struct is_trivially_move_assignable : public __is_trivially_move_assignable_impl< _Tp> {
# 1356 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1358 "/usr/include/c++/12/type_traits" 3
};
# 1361 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1362 "/usr/include/c++/12/type_traits" 3
struct is_trivially_destructible : public __and_< __is_destructible_safe< _Tp> , __bool_constant< __has_trivial_destructor(_Tp)> > {
# 1366 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1368 "/usr/include/c++/12/type_traits" 3
};
# 1372 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1373 "/usr/include/c++/12/type_traits" 3
struct has_virtual_destructor : public integral_constant< bool, __has_virtual_destructor(_Tp)> {
# 1376 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1378 "/usr/include/c++/12/type_traits" 3
};
# 1384 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1385 "/usr/include/c++/12/type_traits" 3
struct alignment_of : public integral_constant< unsigned long, __alignof__(_Tp)> {
# 1388 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 1390 "/usr/include/c++/12/type_traits" 3
};
# 1393 "/usr/include/c++/12/type_traits" 3
template< class >
# 1394 "/usr/include/c++/12/type_traits" 3
struct rank : public integral_constant< unsigned long, 0UL> {
# 1395 "/usr/include/c++/12/type_traits" 3
};
# 1397 "/usr/include/c++/12/type_traits" 3
template< class _Tp, size_t _Size>
# 1398 "/usr/include/c++/12/type_traits" 3
struct rank< _Tp [_Size]> : public integral_constant< unsigned long, 1 + std::rank< _Tp> ::value> {
# 1399 "/usr/include/c++/12/type_traits" 3
};
# 1401 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1402 "/usr/include/c++/12/type_traits" 3
struct rank< _Tp []> : public integral_constant< unsigned long, 1 + std::rank< _Tp> ::value> {
# 1403 "/usr/include/c++/12/type_traits" 3
};
# 1406 "/usr/include/c++/12/type_traits" 3
template< class , unsigned _Uint>
# 1407 "/usr/include/c++/12/type_traits" 3
struct extent : public integral_constant< unsigned long, 0UL> {
# 1408 "/usr/include/c++/12/type_traits" 3
};
# 1410 "/usr/include/c++/12/type_traits" 3
template< class _Tp, unsigned _Uint, size_t _Size>
# 1411 "/usr/include/c++/12/type_traits" 3
struct extent< _Tp [_Size], _Uint> : public integral_constant< unsigned long, (_Uint == (0)) ? _Size : std::extent< _Tp, _Uint - (1)> ::value> {
# 1415 "/usr/include/c++/12/type_traits" 3
};
# 1417 "/usr/include/c++/12/type_traits" 3
template< class _Tp, unsigned _Uint>
# 1418 "/usr/include/c++/12/type_traits" 3
struct extent< _Tp [], _Uint> : public integral_constant< unsigned long, (_Uint == (0)) ? 0 : std::extent< _Tp, _Uint - (1)> ::value> {
# 1422 "/usr/include/c++/12/type_traits" 3
};
# 1428 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up>
# 1429 "/usr/include/c++/12/type_traits" 3
struct is_same : public integral_constant< bool, __is_same(_Tp, _Up)> {
# 1435 "/usr/include/c++/12/type_traits" 3
};
# 1445 "/usr/include/c++/12/type_traits" 3
template< class _Base, class _Derived>
# 1446 "/usr/include/c++/12/type_traits" 3
struct is_base_of : public integral_constant< bool, __is_base_of(_Base, _Derived)> {
# 1448 "/usr/include/c++/12/type_traits" 3
};
# 1450 "/usr/include/c++/12/type_traits" 3
template< class _From, class _To, bool
# 1451 "/usr/include/c++/12/type_traits" 3
 = __or_< is_void< _From> , is_function< _To> , is_array< _To> > ::value>
# 1453 "/usr/include/c++/12/type_traits" 3
struct __is_convertible_helper {
# 1455 "/usr/include/c++/12/type_traits" 3
typedef typename is_void< _To> ::type type;
# 1456 "/usr/include/c++/12/type_traits" 3
};
# 1458 "/usr/include/c++/12/type_traits" 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wctor-dtor-privacy"
template< class _From, class _To>
# 1461 "/usr/include/c++/12/type_traits" 3
class __is_convertible_helper< _From, _To, false> {
# 1463 "/usr/include/c++/12/type_traits" 3
template< class _To1> static void __test_aux(_To1) noexcept;
# 1466 "/usr/include/c++/12/type_traits" 3
template< class _From1, class _To1, class
# 1467 "/usr/include/c++/12/type_traits" 3
 = __decltype((__test_aux< _To1> (std::declval< _From1> ())))> static true_type
# 1466 "/usr/include/c++/12/type_traits" 3
__test(int);
# 1471 "/usr/include/c++/12/type_traits" 3
template< class , class > static false_type __test(...);
# 1476 "/usr/include/c++/12/type_traits" 3
public: typedef __decltype((__test< _From, _To> (0))) type;
# 1477 "/usr/include/c++/12/type_traits" 3
};
#pragma GCC diagnostic pop
# 1481 "/usr/include/c++/12/type_traits" 3
template< class _From, class _To>
# 1482 "/usr/include/c++/12/type_traits" 3
struct is_convertible : public __is_convertible_helper< _From, _To> ::type {
# 1484 "/usr/include/c++/12/type_traits" 3
};
# 1487 "/usr/include/c++/12/type_traits" 3
template< class _ToElementType, class _FromElementType> using __is_array_convertible = is_convertible< _FromElementType (*)[], _ToElementType (*)[]> ;
# 1491 "/usr/include/c++/12/type_traits" 3
template< class _From, class _To, bool
# 1492 "/usr/include/c++/12/type_traits" 3
 = __or_< is_void< _From> , is_function< _To> , is_array< _To> > ::value>
# 1494 "/usr/include/c++/12/type_traits" 3
struct __is_nt_convertible_helper : public is_void< _To> {
# 1496 "/usr/include/c++/12/type_traits" 3
};
# 1498 "/usr/include/c++/12/type_traits" 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wctor-dtor-privacy"
template< class _From, class _To>
# 1501 "/usr/include/c++/12/type_traits" 3
class __is_nt_convertible_helper< _From, _To, false> {
# 1503 "/usr/include/c++/12/type_traits" 3
template< class _To1> static void __test_aux(_To1) noexcept;
# 1506 "/usr/include/c++/12/type_traits" 3
template< class _From1, class _To1> static __bool_constant< noexcept(__test_aux< _To1> (std::declval< _From1> ()))> __test(int);
# 1511 "/usr/include/c++/12/type_traits" 3
template< class , class > static false_type __test(...);
# 1516 "/usr/include/c++/12/type_traits" 3
public: using type = __decltype((__test< _From, _To> (0)));
# 1517 "/usr/include/c++/12/type_traits" 3
};
#pragma GCC diagnostic pop
# 1537 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1538 "/usr/include/c++/12/type_traits" 3
struct remove_const {
# 1539 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 1541 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1542 "/usr/include/c++/12/type_traits" 3
struct remove_const< const _Tp> {
# 1543 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 1546 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1547 "/usr/include/c++/12/type_traits" 3
struct remove_volatile {
# 1548 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 1550 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1551 "/usr/include/c++/12/type_traits" 3
struct remove_volatile< volatile _Tp> {
# 1552 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 1555 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1556 "/usr/include/c++/12/type_traits" 3
struct remove_cv {
# 1557 "/usr/include/c++/12/type_traits" 3
using type = _Tp; };
# 1559 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1560 "/usr/include/c++/12/type_traits" 3
struct remove_cv< const _Tp> {
# 1561 "/usr/include/c++/12/type_traits" 3
using type = _Tp; };
# 1563 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1564 "/usr/include/c++/12/type_traits" 3
struct remove_cv< volatile _Tp> {
# 1565 "/usr/include/c++/12/type_traits" 3
using type = _Tp; };
# 1567 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1568 "/usr/include/c++/12/type_traits" 3
struct remove_cv< const volatile _Tp> {
# 1569 "/usr/include/c++/12/type_traits" 3
using type = _Tp; };
# 1572 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1573 "/usr/include/c++/12/type_traits" 3
struct add_const {
# 1574 "/usr/include/c++/12/type_traits" 3
typedef const _Tp type; };
# 1577 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1578 "/usr/include/c++/12/type_traits" 3
struct add_volatile {
# 1579 "/usr/include/c++/12/type_traits" 3
typedef volatile _Tp type; };
# 1582 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1583 "/usr/include/c++/12/type_traits" 3
struct add_cv {
# 1586 "/usr/include/c++/12/type_traits" 3
typedef typename add_const< typename add_volatile< _Tp> ::type> ::type type;
# 1587 "/usr/include/c++/12/type_traits" 3
};
# 1594 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using remove_const_t = typename remove_const< _Tp> ::type;
# 1598 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using remove_volatile_t = typename remove_volatile< _Tp> ::type;
# 1602 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using remove_cv_t = typename remove_cv< _Tp> ::type;
# 1606 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using add_const_t = typename add_const< _Tp> ::type;
# 1610 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using add_volatile_t = typename add_volatile< _Tp> ::type;
# 1614 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using add_cv_t = typename add_cv< _Tp> ::type;
# 1621 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1622 "/usr/include/c++/12/type_traits" 3
struct remove_reference {
# 1623 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 1625 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1626 "/usr/include/c++/12/type_traits" 3
struct remove_reference< _Tp &> {
# 1627 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 1629 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1630 "/usr/include/c++/12/type_traits" 3
struct remove_reference< _Tp &&> {
# 1631 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 1633 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value>
# 1634 "/usr/include/c++/12/type_traits" 3
struct __add_lvalue_reference_helper {
# 1635 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 1637 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1638 "/usr/include/c++/12/type_traits" 3
struct __add_lvalue_reference_helper< _Tp, true> {
# 1639 "/usr/include/c++/12/type_traits" 3
typedef _Tp &type; };
# 1642 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1643 "/usr/include/c++/12/type_traits" 3
struct add_lvalue_reference : public __add_lvalue_reference_helper< _Tp> {
# 1645 "/usr/include/c++/12/type_traits" 3
};
# 1647 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __is_referenceable< _Tp> ::value>
# 1648 "/usr/include/c++/12/type_traits" 3
struct __add_rvalue_reference_helper {
# 1649 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 1651 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1652 "/usr/include/c++/12/type_traits" 3
struct __add_rvalue_reference_helper< _Tp, true> {
# 1653 "/usr/include/c++/12/type_traits" 3
typedef _Tp &&type; };
# 1656 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1657 "/usr/include/c++/12/type_traits" 3
struct add_rvalue_reference : public __add_rvalue_reference_helper< _Tp> {
# 1659 "/usr/include/c++/12/type_traits" 3
};
# 1663 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using remove_reference_t = typename remove_reference< _Tp> ::type;
# 1667 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using add_lvalue_reference_t = typename add_lvalue_reference< _Tp> ::type;
# 1671 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using add_rvalue_reference_t = typename add_rvalue_reference< _Tp> ::type;
# 1680 "/usr/include/c++/12/type_traits" 3
template< class _Unqualified, bool _IsConst, bool _IsVol> struct __cv_selector;
# 1683 "/usr/include/c++/12/type_traits" 3
template< class _Unqualified>
# 1684 "/usr/include/c++/12/type_traits" 3
struct __cv_selector< _Unqualified, false, false> {
# 1685 "/usr/include/c++/12/type_traits" 3
typedef _Unqualified __type; };
# 1687 "/usr/include/c++/12/type_traits" 3
template< class _Unqualified>
# 1688 "/usr/include/c++/12/type_traits" 3
struct __cv_selector< _Unqualified, false, true> {
# 1689 "/usr/include/c++/12/type_traits" 3
typedef volatile _Unqualified __type; };
# 1691 "/usr/include/c++/12/type_traits" 3
template< class _Unqualified>
# 1692 "/usr/include/c++/12/type_traits" 3
struct __cv_selector< _Unqualified, true, false> {
# 1693 "/usr/include/c++/12/type_traits" 3
typedef const _Unqualified __type; };
# 1695 "/usr/include/c++/12/type_traits" 3
template< class _Unqualified>
# 1696 "/usr/include/c++/12/type_traits" 3
struct __cv_selector< _Unqualified, true, true> {
# 1697 "/usr/include/c++/12/type_traits" 3
typedef const volatile _Unqualified __type; };
# 1699 "/usr/include/c++/12/type_traits" 3
template< class _Qualified, class _Unqualified, bool
# 1700 "/usr/include/c++/12/type_traits" 3
_IsConst = is_const< _Qualified> ::value, bool
# 1701 "/usr/include/c++/12/type_traits" 3
_IsVol = is_volatile< _Qualified> ::value>
# 1702 "/usr/include/c++/12/type_traits" 3
class __match_cv_qualifiers {
# 1704 "/usr/include/c++/12/type_traits" 3
typedef __cv_selector< _Unqualified, _IsConst, _IsVol> __match;
# 1707 "/usr/include/c++/12/type_traits" 3
public: typedef typename __cv_selector< _Unqualified, _IsConst, _IsVol> ::__type __type;
# 1708 "/usr/include/c++/12/type_traits" 3
};
# 1711 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1712 "/usr/include/c++/12/type_traits" 3
struct __make_unsigned {
# 1713 "/usr/include/c++/12/type_traits" 3
typedef _Tp __type; };
# 1716 "/usr/include/c++/12/type_traits" 3
template<> struct __make_unsigned< char> {
# 1717 "/usr/include/c++/12/type_traits" 3
typedef unsigned char __type; };
# 1720 "/usr/include/c++/12/type_traits" 3
template<> struct __make_unsigned< signed char> {
# 1721 "/usr/include/c++/12/type_traits" 3
typedef unsigned char __type; };
# 1724 "/usr/include/c++/12/type_traits" 3
template<> struct __make_unsigned< short> {
# 1725 "/usr/include/c++/12/type_traits" 3
typedef unsigned short __type; };
# 1728 "/usr/include/c++/12/type_traits" 3
template<> struct __make_unsigned< int> {
# 1729 "/usr/include/c++/12/type_traits" 3
typedef unsigned __type; };
# 1732 "/usr/include/c++/12/type_traits" 3
template<> struct __make_unsigned< long> {
# 1733 "/usr/include/c++/12/type_traits" 3
typedef unsigned long __type; };
# 1736 "/usr/include/c++/12/type_traits" 3
template<> struct __make_unsigned< long long> {
# 1737 "/usr/include/c++/12/type_traits" 3
typedef unsigned long long __type; };
# 1742 "/usr/include/c++/12/type_traits" 3
template<> struct __make_unsigned< __int128> {
# 1743 "/usr/include/c++/12/type_traits" 3
typedef unsigned __int128 __type; };
# 1765 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool
# 1766 "/usr/include/c++/12/type_traits" 3
_IsInt = is_integral< _Tp> ::value, bool
# 1767 "/usr/include/c++/12/type_traits" 3
_IsEnum = is_enum< _Tp> ::value> class __make_unsigned_selector;
# 1770 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1771 "/usr/include/c++/12/type_traits" 3
class __make_unsigned_selector< _Tp, true, false> {
# 1773 "/usr/include/c++/12/type_traits" 3
using __unsigned_type = typename __make_unsigned< __remove_cv_t< _Tp> > ::__type;
# 1777 "/usr/include/c++/12/type_traits" 3
public: using __type = typename __match_cv_qualifiers< _Tp, __unsigned_type> ::__type;
# 1779 "/usr/include/c++/12/type_traits" 3
};
# 1781 "/usr/include/c++/12/type_traits" 3
class __make_unsigned_selector_base {
# 1784 "/usr/include/c++/12/type_traits" 3
protected: template< class ...> struct _List { };
# 1786 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class ..._Up>
# 1787 "/usr/include/c++/12/type_traits" 3
struct _List< _Tp, _Up...> : public __make_unsigned_selector_base::_List< _Up...> {
# 1788 "/usr/include/c++/12/type_traits" 3
static constexpr inline std::size_t __size = sizeof(_Tp); };
# 1790 "/usr/include/c++/12/type_traits" 3
template< size_t _Sz, class _Tp, bool = _Sz <= _Tp::__size> struct __select;
# 1793 "/usr/include/c++/12/type_traits" 3
template< size_t _Sz, class _Uint, class ..._UInts>
# 1794 "/usr/include/c++/12/type_traits" 3
struct __select< _Sz, _List< _Uint, _UInts...> , true> {
# 1795 "/usr/include/c++/12/type_traits" 3
using __type = _Uint; };
# 1797 "/usr/include/c++/12/type_traits" 3
template< size_t _Sz, class _Uint, class ..._UInts>
# 1798 "/usr/include/c++/12/type_traits" 3
struct __select< _Sz, _List< _Uint, _UInts...> , false> : public __make_unsigned_selector_base::__select< _Sz, _List< _UInts...> > {
# 1800 "/usr/include/c++/12/type_traits" 3
};
# 1801 "/usr/include/c++/12/type_traits" 3
};
# 1804 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1805 "/usr/include/c++/12/type_traits" 3
class __make_unsigned_selector< _Tp, false, true> : private __make_unsigned_selector_base {
# 1809 "/usr/include/c++/12/type_traits" 3
using _UInts = _List< unsigned char, unsigned short, unsigned, unsigned long, unsigned long long> ;
# 1812 "/usr/include/c++/12/type_traits" 3
using __unsigned_type = typename __select< sizeof(_Tp), _List< unsigned char, unsigned short, unsigned, unsigned long, unsigned long long> > ::__type;
# 1815 "/usr/include/c++/12/type_traits" 3
public: using __type = typename __match_cv_qualifiers< _Tp, __unsigned_type> ::__type;
# 1817 "/usr/include/c++/12/type_traits" 3
};
# 1824 "/usr/include/c++/12/type_traits" 3
template<> struct __make_unsigned< wchar_t> {
# 1826 "/usr/include/c++/12/type_traits" 3
using __type = __make_unsigned_selector< wchar_t, false, true> ::__type;
# 1828 "/usr/include/c++/12/type_traits" 3
};
# 1840 "/usr/include/c++/12/type_traits" 3
template<> struct __make_unsigned< char16_t> {
# 1842 "/usr/include/c++/12/type_traits" 3
using __type = __make_unsigned_selector< char16_t, false, true> ::__type;
# 1844 "/usr/include/c++/12/type_traits" 3
};
# 1847 "/usr/include/c++/12/type_traits" 3
template<> struct __make_unsigned< char32_t> {
# 1849 "/usr/include/c++/12/type_traits" 3
using __type = __make_unsigned_selector< char32_t, false, true> ::__type;
# 1851 "/usr/include/c++/12/type_traits" 3
};
# 1858 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1859 "/usr/include/c++/12/type_traits" 3
struct make_unsigned {
# 1860 "/usr/include/c++/12/type_traits" 3
typedef typename __make_unsigned_selector< _Tp> ::__type type; };
# 1864 "/usr/include/c++/12/type_traits" 3
template<> struct make_unsigned< bool> ;
# 1869 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1870 "/usr/include/c++/12/type_traits" 3
struct __make_signed {
# 1871 "/usr/include/c++/12/type_traits" 3
typedef _Tp __type; };
# 1874 "/usr/include/c++/12/type_traits" 3
template<> struct __make_signed< char> {
# 1875 "/usr/include/c++/12/type_traits" 3
typedef signed char __type; };
# 1878 "/usr/include/c++/12/type_traits" 3
template<> struct __make_signed< unsigned char> {
# 1879 "/usr/include/c++/12/type_traits" 3
typedef signed char __type; };
# 1882 "/usr/include/c++/12/type_traits" 3
template<> struct __make_signed< unsigned short> {
# 1883 "/usr/include/c++/12/type_traits" 3
typedef signed short __type; };
# 1886 "/usr/include/c++/12/type_traits" 3
template<> struct __make_signed< unsigned> {
# 1887 "/usr/include/c++/12/type_traits" 3
typedef signed int __type; };
# 1890 "/usr/include/c++/12/type_traits" 3
template<> struct __make_signed< unsigned long> {
# 1891 "/usr/include/c++/12/type_traits" 3
typedef signed long __type; };
# 1894 "/usr/include/c++/12/type_traits" 3
template<> struct __make_signed< unsigned long long> {
# 1895 "/usr/include/c++/12/type_traits" 3
typedef signed long long __type; };
# 1900 "/usr/include/c++/12/type_traits" 3
template<> struct __make_signed< unsigned __int128> {
# 1901 "/usr/include/c++/12/type_traits" 3
typedef __int128 __type; };
# 1923 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool
# 1924 "/usr/include/c++/12/type_traits" 3
_IsInt = is_integral< _Tp> ::value, bool
# 1925 "/usr/include/c++/12/type_traits" 3
_IsEnum = is_enum< _Tp> ::value> class __make_signed_selector;
# 1928 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1929 "/usr/include/c++/12/type_traits" 3
class __make_signed_selector< _Tp, true, false> {
# 1931 "/usr/include/c++/12/type_traits" 3
using __signed_type = typename __make_signed< __remove_cv_t< _Tp> > ::__type;
# 1935 "/usr/include/c++/12/type_traits" 3
public: using __type = typename __match_cv_qualifiers< _Tp, __signed_type> ::__type;
# 1937 "/usr/include/c++/12/type_traits" 3
};
# 1940 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1941 "/usr/include/c++/12/type_traits" 3
class __make_signed_selector< _Tp, false, true> {
# 1943 "/usr/include/c++/12/type_traits" 3
typedef typename __make_unsigned_selector< _Tp> ::__type __unsigned_type;
# 1946 "/usr/include/c++/12/type_traits" 3
public: typedef typename std::__make_signed_selector< __unsigned_type> ::__type __type;
# 1947 "/usr/include/c++/12/type_traits" 3
};
# 1954 "/usr/include/c++/12/type_traits" 3
template<> struct __make_signed< wchar_t> {
# 1956 "/usr/include/c++/12/type_traits" 3
using __type = __make_signed_selector< wchar_t, false, true> ::__type;
# 1958 "/usr/include/c++/12/type_traits" 3
};
# 1970 "/usr/include/c++/12/type_traits" 3
template<> struct __make_signed< char16_t> {
# 1972 "/usr/include/c++/12/type_traits" 3
using __type = __make_signed_selector< char16_t, false, true> ::__type;
# 1974 "/usr/include/c++/12/type_traits" 3
};
# 1977 "/usr/include/c++/12/type_traits" 3
template<> struct __make_signed< char32_t> {
# 1979 "/usr/include/c++/12/type_traits" 3
using __type = __make_signed_selector< char32_t, false, true> ::__type;
# 1981 "/usr/include/c++/12/type_traits" 3
};
# 1988 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 1989 "/usr/include/c++/12/type_traits" 3
struct make_signed {
# 1990 "/usr/include/c++/12/type_traits" 3
typedef typename __make_signed_selector< _Tp> ::__type type; };
# 1994 "/usr/include/c++/12/type_traits" 3
template<> struct make_signed< bool> ;
# 1998 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using make_signed_t = typename make_signed< _Tp> ::type;
# 2002 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using make_unsigned_t = typename make_unsigned< _Tp> ::type;
# 2009 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2010 "/usr/include/c++/12/type_traits" 3
struct remove_extent {
# 2011 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 2013 "/usr/include/c++/12/type_traits" 3
template< class _Tp, size_t _Size>
# 2014 "/usr/include/c++/12/type_traits" 3
struct remove_extent< _Tp [_Size]> {
# 2015 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 2017 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2018 "/usr/include/c++/12/type_traits" 3
struct remove_extent< _Tp []> {
# 2019 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 2022 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2023 "/usr/include/c++/12/type_traits" 3
struct remove_all_extents {
# 2024 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 2026 "/usr/include/c++/12/type_traits" 3
template< class _Tp, size_t _Size>
# 2027 "/usr/include/c++/12/type_traits" 3
struct remove_all_extents< _Tp [_Size]> {
# 2028 "/usr/include/c++/12/type_traits" 3
typedef typename std::remove_all_extents< _Tp> ::type type; };
# 2030 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2031 "/usr/include/c++/12/type_traits" 3
struct remove_all_extents< _Tp []> {
# 2032 "/usr/include/c++/12/type_traits" 3
typedef typename std::remove_all_extents< _Tp> ::type type; };
# 2036 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using remove_extent_t = typename remove_extent< _Tp> ::type;
# 2040 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using remove_all_extents_t = typename remove_all_extents< _Tp> ::type;
# 2046 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class >
# 2047 "/usr/include/c++/12/type_traits" 3
struct __remove_pointer_helper {
# 2048 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 2050 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up>
# 2051 "/usr/include/c++/12/type_traits" 3
struct __remove_pointer_helper< _Tp, _Up *> {
# 2052 "/usr/include/c++/12/type_traits" 3
typedef _Up type; };
# 2055 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2056 "/usr/include/c++/12/type_traits" 3
struct remove_pointer : public __remove_pointer_helper< _Tp, __remove_cv_t< _Tp> > {
# 2058 "/usr/include/c++/12/type_traits" 3
};
# 2060 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = __or_< __is_referenceable< _Tp> , is_void< _Tp> > ::value>
# 2062 "/usr/include/c++/12/type_traits" 3
struct __add_pointer_helper {
# 2063 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 2065 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2066 "/usr/include/c++/12/type_traits" 3
struct __add_pointer_helper< _Tp, true> {
# 2067 "/usr/include/c++/12/type_traits" 3
typedef typename remove_reference< _Tp> ::type *type; };
# 2070 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2071 "/usr/include/c++/12/type_traits" 3
struct add_pointer : public __add_pointer_helper< _Tp> {
# 2073 "/usr/include/c++/12/type_traits" 3
};
# 2077 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using remove_pointer_t = typename remove_pointer< _Tp> ::type;
# 2081 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using add_pointer_t = typename add_pointer< _Tp> ::type;
# 2085 "/usr/include/c++/12/type_traits" 3
template< size_t _Len>
# 2086 "/usr/include/c++/12/type_traits" 3
struct __aligned_storage_msa {
# 2088 "/usr/include/c++/12/type_traits" 3
union __type {
# 2090 "/usr/include/c++/12/type_traits" 3
unsigned char __data[_Len];
# 2091 "/usr/include/c++/12/type_traits" 3
struct __attribute((__aligned__)) { } __align;
# 2092 "/usr/include/c++/12/type_traits" 3
};
# 2093 "/usr/include/c++/12/type_traits" 3
};
# 2105 "/usr/include/c++/12/type_traits" 3
template< size_t _Len, size_t _Align = __alignof__(typename __aligned_storage_msa< _Len> ::__type)>
# 2107 "/usr/include/c++/12/type_traits" 3
struct aligned_storage {
# 2109 "/usr/include/c++/12/type_traits" 3
union type {
# 2111 "/usr/include/c++/12/type_traits" 3
unsigned char __data[_Len];
# 2112 "/usr/include/c++/12/type_traits" 3
struct __attribute((__aligned__(_Align))) { } __align;
# 2113 "/usr/include/c++/12/type_traits" 3
};
# 2114 "/usr/include/c++/12/type_traits" 3
};
# 2116 "/usr/include/c++/12/type_traits" 3
template< class ..._Types>
# 2117 "/usr/include/c++/12/type_traits" 3
struct __strictest_alignment {
# 2119 "/usr/include/c++/12/type_traits" 3
static const size_t _S_alignment = (0);
# 2120 "/usr/include/c++/12/type_traits" 3
static const size_t _S_size = (0);
# 2121 "/usr/include/c++/12/type_traits" 3
};
# 2123 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class ..._Types>
# 2124 "/usr/include/c++/12/type_traits" 3
struct __strictest_alignment< _Tp, _Types...> {
# 2126 "/usr/include/c++/12/type_traits" 3
static const size_t _S_alignment = ((__alignof__(_Tp) > __strictest_alignment< _Types...> ::_S_alignment) ? __alignof__(_Tp) : __strictest_alignment< _Types...> ::_S_alignment);
# 2129 "/usr/include/c++/12/type_traits" 3
static const size_t _S_size = ((sizeof(_Tp) > __strictest_alignment< _Types...> ::_S_size) ? sizeof(_Tp) : __strictest_alignment< _Types...> ::_S_size);
# 2132 "/usr/include/c++/12/type_traits" 3
};
# 2144 "/usr/include/c++/12/type_traits" 3
template< size_t _Len, class ..._Types>
# 2145 "/usr/include/c++/12/type_traits" 3
struct aligned_union {
# 2148 "/usr/include/c++/12/type_traits" 3
static_assert((sizeof...(_Types) != (0)), "At least one type is required");
# 2150 "/usr/include/c++/12/type_traits" 3
private: using __strictest = __strictest_alignment< _Types...> ;
# 2151 "/usr/include/c++/12/type_traits" 3
static const size_t _S_len = ((_Len > __strictest::_S_size) ? _Len : __strictest::_S_size);
# 2155 "/usr/include/c++/12/type_traits" 3
public: static const size_t alignment_value = (__strictest::_S_alignment);
# 2157 "/usr/include/c++/12/type_traits" 3
typedef typename aligned_storage< _S_len, alignment_value> ::type type;
# 2158 "/usr/include/c++/12/type_traits" 3
};
# 2160 "/usr/include/c++/12/type_traits" 3
template< size_t _Len, class ..._Types> const size_t aligned_union< _Len, _Types...> ::alignment_value;
# 2167 "/usr/include/c++/12/type_traits" 3
template< class _Up, bool
# 2168 "/usr/include/c++/12/type_traits" 3
_IsArray = is_array< _Up> ::value, bool
# 2169 "/usr/include/c++/12/type_traits" 3
_IsFunction = is_function< _Up> ::value> struct __decay_selector;
# 2173 "/usr/include/c++/12/type_traits" 3
template< class _Up>
# 2174 "/usr/include/c++/12/type_traits" 3
struct __decay_selector< _Up, false, false> {
# 2175 "/usr/include/c++/12/type_traits" 3
typedef __remove_cv_t< _Up> __type; };
# 2177 "/usr/include/c++/12/type_traits" 3
template< class _Up>
# 2178 "/usr/include/c++/12/type_traits" 3
struct __decay_selector< _Up, true, false> {
# 2179 "/usr/include/c++/12/type_traits" 3
typedef typename remove_extent< _Up> ::type *__type; };
# 2181 "/usr/include/c++/12/type_traits" 3
template< class _Up>
# 2182 "/usr/include/c++/12/type_traits" 3
struct __decay_selector< _Up, false, true> {
# 2183 "/usr/include/c++/12/type_traits" 3
typedef typename add_pointer< _Up> ::type __type; };
# 2187 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2188 "/usr/include/c++/12/type_traits" 3
class decay {
# 2190 "/usr/include/c++/12/type_traits" 3
typedef typename remove_reference< _Tp> ::type __remove_type;
# 2193 "/usr/include/c++/12/type_traits" 3
public: typedef typename __decay_selector< __remove_type> ::__type type;
# 2194 "/usr/include/c++/12/type_traits" 3
};
# 2199 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2200 "/usr/include/c++/12/type_traits" 3
struct __strip_reference_wrapper {
# 2202 "/usr/include/c++/12/type_traits" 3
typedef _Tp __type;
# 2203 "/usr/include/c++/12/type_traits" 3
};
# 2205 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2206 "/usr/include/c++/12/type_traits" 3
struct __strip_reference_wrapper< reference_wrapper< _Tp> > {
# 2208 "/usr/include/c++/12/type_traits" 3
typedef _Tp &__type;
# 2209 "/usr/include/c++/12/type_traits" 3
};
# 2212 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using __decay_t = typename decay< _Tp> ::type;
# 2215 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using __decay_and_strip = __strip_reference_wrapper< __decay_t< _Tp> > ;
# 2221 "/usr/include/c++/12/type_traits" 3
template< bool , class _Tp = void>
# 2222 "/usr/include/c++/12/type_traits" 3
struct enable_if {
# 2223 "/usr/include/c++/12/type_traits" 3
};
# 2226 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2227 "/usr/include/c++/12/type_traits" 3
struct enable_if< true, _Tp> {
# 2228 "/usr/include/c++/12/type_traits" 3
typedef _Tp type; };
# 2233 "/usr/include/c++/12/type_traits" 3
template< bool _Cond, class _Tp = void> using __enable_if_t = typename enable_if< _Cond, _Tp> ::type;
# 2237 "/usr/include/c++/12/type_traits" 3
template< class ..._Cond> using _Require = __enable_if_t< __and_< _Cond...> ::value> ;
# 2241 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using __remove_cvref_t = typename remove_cv< typename remove_reference< _Tp> ::type> ::type;
# 2248 "/usr/include/c++/12/type_traits" 3
template< bool _Cond, class _Iftrue, class _Iffalse>
# 2249 "/usr/include/c++/12/type_traits" 3
struct conditional {
# 2250 "/usr/include/c++/12/type_traits" 3
typedef _Iftrue type; };
# 2253 "/usr/include/c++/12/type_traits" 3
template< class _Iftrue, class _Iffalse>
# 2254 "/usr/include/c++/12/type_traits" 3
struct conditional< false, _Iftrue, _Iffalse> {
# 2255 "/usr/include/c++/12/type_traits" 3
typedef _Iffalse type; };
# 2258 "/usr/include/c++/12/type_traits" 3
template< class ..._Tp> struct common_type;
# 2264 "/usr/include/c++/12/type_traits" 3
struct __do_common_type_impl {
# 2266 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up> using __cond_t = __decltype((true ? std::declval< _Tp> () : std::declval< _Up> ()));
# 2272 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up> static __success_type< __decay_t< __cond_t< _Tp, _Up> > > _S_test(int);
# 2284 "/usr/include/c++/12/type_traits" 3
template< class , class > static __failure_type _S_test_2(...);
# 2288 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up> static __decltype((_S_test_2< _Tp, _Up> (0))) _S_test(...);
# 2291 "/usr/include/c++/12/type_traits" 3
};
# 2295 "/usr/include/c++/12/type_traits" 3
template<> struct common_type< > {
# 2296 "/usr/include/c++/12/type_traits" 3
};
# 2299 "/usr/include/c++/12/type_traits" 3
template< class _Tp0>
# 2300 "/usr/include/c++/12/type_traits" 3
struct common_type< _Tp0> : public std::common_type< _Tp0, _Tp0> {
# 2302 "/usr/include/c++/12/type_traits" 3
};
# 2305 "/usr/include/c++/12/type_traits" 3
template< class _Tp1, class _Tp2, class
# 2306 "/usr/include/c++/12/type_traits" 3
_Dp1 = __decay_t< _Tp1> , class _Dp2 = __decay_t< _Tp2> >
# 2307 "/usr/include/c++/12/type_traits" 3
struct __common_type_impl {
# 2311 "/usr/include/c++/12/type_traits" 3
using type = common_type< _Dp1, _Dp2> ;
# 2312 "/usr/include/c++/12/type_traits" 3
};
# 2314 "/usr/include/c++/12/type_traits" 3
template< class _Tp1, class _Tp2>
# 2315 "/usr/include/c++/12/type_traits" 3
struct __common_type_impl< _Tp1, _Tp2, _Tp1, _Tp2> : private __do_common_type_impl {
# 2320 "/usr/include/c++/12/type_traits" 3
using type = __decltype((_S_test< _Tp1, _Tp2> (0)));
# 2321 "/usr/include/c++/12/type_traits" 3
};
# 2324 "/usr/include/c++/12/type_traits" 3
template< class _Tp1, class _Tp2>
# 2325 "/usr/include/c++/12/type_traits" 3
struct common_type< _Tp1, _Tp2> : public __common_type_impl< _Tp1, _Tp2> ::type {
# 2327 "/usr/include/c++/12/type_traits" 3
};
# 2329 "/usr/include/c++/12/type_traits" 3
template< class ...>
# 2330 "/usr/include/c++/12/type_traits" 3
struct __common_type_pack {
# 2331 "/usr/include/c++/12/type_traits" 3
};
# 2333 "/usr/include/c++/12/type_traits" 3
template< class , class , class = void> struct __common_type_fold;
# 2337 "/usr/include/c++/12/type_traits" 3
template< class _Tp1, class _Tp2, class ..._Rp>
# 2338 "/usr/include/c++/12/type_traits" 3
struct common_type< _Tp1, _Tp2, _Rp...> : public __common_type_fold< std::common_type< _Tp1, _Tp2> , __common_type_pack< _Rp...> > {
# 2341 "/usr/include/c++/12/type_traits" 3
};
# 2346 "/usr/include/c++/12/type_traits" 3
template< class _CTp, class ..._Rp>
# 2347 "/usr/include/c++/12/type_traits" 3
struct __common_type_fold< _CTp, __common_type_pack< _Rp...> , __void_t< typename _CTp::type> > : public common_type< typename _CTp::type, _Rp...> {
# 2350 "/usr/include/c++/12/type_traits" 3
};
# 2353 "/usr/include/c++/12/type_traits" 3
template< class _CTp, class _Rp>
# 2354 "/usr/include/c++/12/type_traits" 3
struct __common_type_fold< _CTp, _Rp, void> {
# 2355 "/usr/include/c++/12/type_traits" 3
};
# 2357 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = is_enum< _Tp> ::value>
# 2358 "/usr/include/c++/12/type_traits" 3
struct __underlying_type_impl {
# 2360 "/usr/include/c++/12/type_traits" 3
using type = __underlying_type(_Tp);
# 2361 "/usr/include/c++/12/type_traits" 3
};
# 2363 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2364 "/usr/include/c++/12/type_traits" 3
struct __underlying_type_impl< _Tp, false> {
# 2365 "/usr/include/c++/12/type_traits" 3
};
# 2369 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2370 "/usr/include/c++/12/type_traits" 3
struct underlying_type : public __underlying_type_impl< _Tp> {
# 2372 "/usr/include/c++/12/type_traits" 3
};
# 2375 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2376 "/usr/include/c++/12/type_traits" 3
struct __declval_protector {
# 2378 "/usr/include/c++/12/type_traits" 3
static const bool __stop = false;
# 2379 "/usr/include/c++/12/type_traits" 3
};
# 2386 "/usr/include/c++/12/type_traits" 3
template< class _Tp> auto
# 2387 "/usr/include/c++/12/type_traits" 3
declval() noexcept->__decltype((__declval< _Tp> (0)))
# 2388 "/usr/include/c++/12/type_traits" 3
{
# 2389 "/usr/include/c++/12/type_traits" 3
static_assert((__declval_protector< _Tp> ::__stop), "declval() must not be used!");
# 2391 "/usr/include/c++/12/type_traits" 3
return __declval< _Tp> (0);
# 2392 "/usr/include/c++/12/type_traits" 3
}
# 2395 "/usr/include/c++/12/type_traits" 3
template< class _Signature> struct result_of;
# 2403 "/usr/include/c++/12/type_traits" 3
struct __invoke_memfun_ref { };
# 2404 "/usr/include/c++/12/type_traits" 3
struct __invoke_memfun_deref { };
# 2405 "/usr/include/c++/12/type_traits" 3
struct __invoke_memobj_ref { };
# 2406 "/usr/include/c++/12/type_traits" 3
struct __invoke_memobj_deref { };
# 2407 "/usr/include/c++/12/type_traits" 3
struct __invoke_other { };
# 2410 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Tag>
# 2411 "/usr/include/c++/12/type_traits" 3
struct __result_of_success : public __success_type< _Tp> {
# 2412 "/usr/include/c++/12/type_traits" 3
using __invoke_type = _Tag; };
# 2415 "/usr/include/c++/12/type_traits" 3
struct __result_of_memfun_ref_impl {
# 2417 "/usr/include/c++/12/type_traits" 3
template< class _Fp, class _Tp1, class ..._Args> static __result_of_success< __decltype(((std::declval< _Tp1> ().*std::declval< _Fp> ())(std::declval< _Args> ()...))), __invoke_memfun_ref> _S_test(int);
# 2422 "/usr/include/c++/12/type_traits" 3
template< class ...> static __failure_type _S_test(...);
# 2424 "/usr/include/c++/12/type_traits" 3
};
# 2426 "/usr/include/c++/12/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args>
# 2427 "/usr/include/c++/12/type_traits" 3
struct __result_of_memfun_ref : private __result_of_memfun_ref_impl {
# 2430 "/usr/include/c++/12/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg, _Args...> (0))) type;
# 2431 "/usr/include/c++/12/type_traits" 3
};
# 2434 "/usr/include/c++/12/type_traits" 3
struct __result_of_memfun_deref_impl {
# 2436 "/usr/include/c++/12/type_traits" 3
template< class _Fp, class _Tp1, class ..._Args> static __result_of_success< __decltype((((*std::declval< _Tp1> ()).*std::declval< _Fp> ())(std::declval< _Args> ()...))), __invoke_memfun_deref> _S_test(int);
# 2441 "/usr/include/c++/12/type_traits" 3
template< class ...> static __failure_type _S_test(...);
# 2443 "/usr/include/c++/12/type_traits" 3
};
# 2445 "/usr/include/c++/12/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args>
# 2446 "/usr/include/c++/12/type_traits" 3
struct __result_of_memfun_deref : private __result_of_memfun_deref_impl {
# 2449 "/usr/include/c++/12/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg, _Args...> (0))) type;
# 2450 "/usr/include/c++/12/type_traits" 3
};
# 2453 "/usr/include/c++/12/type_traits" 3
struct __result_of_memobj_ref_impl {
# 2455 "/usr/include/c++/12/type_traits" 3
template< class _Fp, class _Tp1> static __result_of_success< __decltype((std::declval< _Tp1> ().*std::declval< _Fp> ())), __invoke_memobj_ref> _S_test(int);
# 2460 "/usr/include/c++/12/type_traits" 3
template< class , class > static __failure_type _S_test(...);
# 2462 "/usr/include/c++/12/type_traits" 3
};
# 2464 "/usr/include/c++/12/type_traits" 3
template< class _MemPtr, class _Arg>
# 2465 "/usr/include/c++/12/type_traits" 3
struct __result_of_memobj_ref : private __result_of_memobj_ref_impl {
# 2468 "/usr/include/c++/12/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg> (0))) type;
# 2469 "/usr/include/c++/12/type_traits" 3
};
# 2472 "/usr/include/c++/12/type_traits" 3
struct __result_of_memobj_deref_impl {
# 2474 "/usr/include/c++/12/type_traits" 3
template< class _Fp, class _Tp1> static __result_of_success< __decltype(((*std::declval< _Tp1> ()).*std::declval< _Fp> ())), __invoke_memobj_deref> _S_test(int);
# 2479 "/usr/include/c++/12/type_traits" 3
template< class , class > static __failure_type _S_test(...);
# 2481 "/usr/include/c++/12/type_traits" 3
};
# 2483 "/usr/include/c++/12/type_traits" 3
template< class _MemPtr, class _Arg>
# 2484 "/usr/include/c++/12/type_traits" 3
struct __result_of_memobj_deref : private __result_of_memobj_deref_impl {
# 2487 "/usr/include/c++/12/type_traits" 3
typedef __decltype((_S_test< _MemPtr, _Arg> (0))) type;
# 2488 "/usr/include/c++/12/type_traits" 3
};
# 2490 "/usr/include/c++/12/type_traits" 3
template< class _MemPtr, class _Arg> struct __result_of_memobj;
# 2493 "/usr/include/c++/12/type_traits" 3
template< class _Res, class _Class, class _Arg>
# 2494 "/usr/include/c++/12/type_traits" 3
struct __result_of_memobj< _Res (_Class::*), _Arg> {
# 2496 "/usr/include/c++/12/type_traits" 3
typedef __remove_cvref_t< _Arg> _Argval;
# 2497 "/usr/include/c++/12/type_traits" 3
typedef _Res (_Class::*_MemPtr);
# 2502 "/usr/include/c++/12/type_traits" 3
typedef typename __conditional_t< __or_< is_same< _Argval, _Class> , is_base_of< _Class, _Argval> > ::value, __result_of_memobj_ref< _MemPtr, _Arg> , __result_of_memobj_deref< _MemPtr, _Arg> > ::type type;
# 2503 "/usr/include/c++/12/type_traits" 3
};
# 2505 "/usr/include/c++/12/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args> struct __result_of_memfun;
# 2508 "/usr/include/c++/12/type_traits" 3
template< class _Res, class _Class, class _Arg, class ..._Args>
# 2509 "/usr/include/c++/12/type_traits" 3
struct __result_of_memfun< _Res (_Class::*), _Arg, _Args...> {
# 2511 "/usr/include/c++/12/type_traits" 3
typedef typename remove_reference< _Arg> ::type _Argval;
# 2512 "/usr/include/c++/12/type_traits" 3
typedef _Res (_Class::*_MemPtr);
# 2516 "/usr/include/c++/12/type_traits" 3
typedef typename __conditional_t< is_base_of< _Class, _Argval> ::value, __result_of_memfun_ref< _MemPtr, _Arg, _Args...> , __result_of_memfun_deref< _MemPtr, _Arg, _Args...> > ::type type;
# 2517 "/usr/include/c++/12/type_traits" 3
};
# 2524 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up = __remove_cvref_t< _Tp> >
# 2525 "/usr/include/c++/12/type_traits" 3
struct __inv_unwrap {
# 2527 "/usr/include/c++/12/type_traits" 3
using type = _Tp;
# 2528 "/usr/include/c++/12/type_traits" 3
};
# 2530 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up>
# 2531 "/usr/include/c++/12/type_traits" 3
struct __inv_unwrap< _Tp, reference_wrapper< _Up> > {
# 2533 "/usr/include/c++/12/type_traits" 3
using type = _Up &;
# 2534 "/usr/include/c++/12/type_traits" 3
};
# 2536 "/usr/include/c++/12/type_traits" 3
template< bool , bool , class _Functor, class ..._ArgTypes>
# 2537 "/usr/include/c++/12/type_traits" 3
struct __result_of_impl {
# 2539 "/usr/include/c++/12/type_traits" 3
typedef __failure_type type;
# 2540 "/usr/include/c++/12/type_traits" 3
};
# 2542 "/usr/include/c++/12/type_traits" 3
template< class _MemPtr, class _Arg>
# 2543 "/usr/include/c++/12/type_traits" 3
struct __result_of_impl< true, false, _MemPtr, _Arg> : public __result_of_memobj< __decay_t< _MemPtr> , typename __inv_unwrap< _Arg> ::type> {
# 2546 "/usr/include/c++/12/type_traits" 3
};
# 2548 "/usr/include/c++/12/type_traits" 3
template< class _MemPtr, class _Arg, class ..._Args>
# 2549 "/usr/include/c++/12/type_traits" 3
struct __result_of_impl< false, true, _MemPtr, _Arg, _Args...> : public __result_of_memfun< __decay_t< _MemPtr> , typename __inv_unwrap< _Arg> ::type, _Args...> {
# 2552 "/usr/include/c++/12/type_traits" 3
};
# 2555 "/usr/include/c++/12/type_traits" 3
struct __result_of_other_impl {
# 2557 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class ..._Args> static __result_of_success< __decltype((std::declval< _Fn> ()(std::declval< _Args> ()...))), __invoke_other> _S_test(int);
# 2562 "/usr/include/c++/12/type_traits" 3
template< class ...> static __failure_type _S_test(...);
# 2564 "/usr/include/c++/12/type_traits" 3
};
# 2566 "/usr/include/c++/12/type_traits" 3
template< class _Functor, class ..._ArgTypes>
# 2567 "/usr/include/c++/12/type_traits" 3
struct __result_of_impl< false, false, _Functor, _ArgTypes...> : private __result_of_other_impl {
# 2570 "/usr/include/c++/12/type_traits" 3
typedef __decltype((_S_test< _Functor, _ArgTypes...> (0))) type;
# 2571 "/usr/include/c++/12/type_traits" 3
};
# 2574 "/usr/include/c++/12/type_traits" 3
template< class _Functor, class ..._ArgTypes>
# 2575 "/usr/include/c++/12/type_traits" 3
struct __invoke_result : public __result_of_impl< is_member_object_pointer< typename remove_reference< _Functor> ::type> ::value, is_member_function_pointer< typename remove_reference< _Functor> ::type> ::value, _Functor, _ArgTypes...> ::type {
# 2585 "/usr/include/c++/12/type_traits" 3
};
# 2588 "/usr/include/c++/12/type_traits" 3
template< class _Functor, class ..._ArgTypes>
# 2589 "/usr/include/c++/12/type_traits" 3
struct result_of< _Functor (_ArgTypes ...)> : public __invoke_result< _Functor, _ArgTypes...> {
# 2591 "/usr/include/c++/12/type_traits" 3
} __attribute((__deprecated__("use \'std::invoke_result\' instead")));
# 2595 "/usr/include/c++/12/type_traits" 3
template< size_t _Len, size_t _Align = __alignof__(typename __aligned_storage_msa< _Len> ::__type)> using aligned_storage_t = typename aligned_storage< _Len, _Align> ::type;
# 2599 "/usr/include/c++/12/type_traits" 3
template< size_t _Len, class ..._Types> using aligned_union_t = typename aligned_union< _Len, _Types...> ::type;
# 2603 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using decay_t = typename decay< _Tp> ::type;
# 2607 "/usr/include/c++/12/type_traits" 3
template< bool _Cond, class _Tp = void> using enable_if_t = typename enable_if< _Cond, _Tp> ::type;
# 2611 "/usr/include/c++/12/type_traits" 3
template< bool _Cond, class _Iftrue, class _Iffalse> using conditional_t = typename conditional< _Cond, _Iftrue, _Iffalse> ::type;
# 2615 "/usr/include/c++/12/type_traits" 3
template< class ..._Tp> using common_type_t = typename common_type< _Tp...> ::type;
# 2619 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using underlying_type_t = typename underlying_type< _Tp> ::type;
# 2623 "/usr/include/c++/12/type_traits" 3
template< class _Tp> using result_of_t = typename result_of< _Tp> ::type;
# 2630 "/usr/include/c++/12/type_traits" 3
template< class ...> using void_t = void;
# 2657 "/usr/include/c++/12/type_traits" 3
template< class _Default, class _AlwaysVoid,
# 2658 "/usr/include/c++/12/type_traits" 3
template< class ...> class _Op, class ..._Args>
# 2659 "/usr/include/c++/12/type_traits" 3
struct __detector {
# 2661 "/usr/include/c++/12/type_traits" 3
using type = _Default;
# 2662 "/usr/include/c++/12/type_traits" 3
using __is_detected = false_type;
# 2663 "/usr/include/c++/12/type_traits" 3
};
# 2666 "/usr/include/c++/12/type_traits" 3
template< class _Default, template< class ...> class _Op, class ...
# 2667 "/usr/include/c++/12/type_traits" 3
_Args>
# 2668 "/usr/include/c++/12/type_traits" 3
struct __detector< _Default, __void_t< _Op< _Args...> > , _Op, _Args...> {
# 2670 "/usr/include/c++/12/type_traits" 3
using type = _Op< _Args...> ;
# 2671 "/usr/include/c++/12/type_traits" 3
using __is_detected = true_type;
# 2672 "/usr/include/c++/12/type_traits" 3
};
# 2674 "/usr/include/c++/12/type_traits" 3
template< class _Default, template< class ...> class _Op, class ...
# 2675 "/usr/include/c++/12/type_traits" 3
_Args> using __detected_or = __detector< _Default, void, _Op, _Args...> ;
# 2680 "/usr/include/c++/12/type_traits" 3
template< class _Default, template< class ...> class _Op, class ...
# 2681 "/usr/include/c++/12/type_traits" 3
_Args> using __detected_or_t = typename __detected_or< _Default, _Op, _Args...> ::type;
# 2699 "/usr/include/c++/12/type_traits" 3
template< class _Tp> struct __is_swappable;
# 2702 "/usr/include/c++/12/type_traits" 3
template< class _Tp> struct __is_nothrow_swappable;
# 2705 "/usr/include/c++/12/type_traits" 3
template< class >
# 2706 "/usr/include/c++/12/type_traits" 3
struct __is_tuple_like_impl : public false_type {
# 2707 "/usr/include/c++/12/type_traits" 3
};
# 2710 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2711 "/usr/include/c++/12/type_traits" 3
struct __is_tuple_like : public __is_tuple_like_impl< __remove_cvref_t< _Tp> > ::type {
# 2713 "/usr/include/c++/12/type_traits" 3
};
# 2716 "/usr/include/c++/12/type_traits" 3
template< class _Tp> inline _Require< __not_< __is_tuple_like< _Tp> > , is_move_constructible< _Tp> , is_move_assignable< _Tp> > swap(_Tp &, _Tp &) noexcept(__and_< is_nothrow_move_constructible< _Tp> , is_nothrow_move_assignable< _Tp> > ::value);
# 2726 "/usr/include/c++/12/type_traits" 3
template< class _Tp, size_t _Nm> inline __enable_if_t< __is_swappable< _Tp> ::value> swap(_Tp (& __a)[_Nm], _Tp (& __b)[_Nm]) noexcept(__is_nothrow_swappable< _Tp> ::value);
# 2734 "/usr/include/c++/12/type_traits" 3
namespace __swappable_details {
# 2735 "/usr/include/c++/12/type_traits" 3
using std::swap;
# 2737 "/usr/include/c++/12/type_traits" 3
struct __do_is_swappable_impl {
# 2739 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class
# 2740 "/usr/include/c++/12/type_traits" 3
 = __decltype((swap(std::declval< _Tp &> (), std::declval< _Tp &> ())))> static true_type
# 2739 "/usr/include/c++/12/type_traits" 3
__test(int);
# 2743 "/usr/include/c++/12/type_traits" 3
template< class > static false_type __test(...);
# 2745 "/usr/include/c++/12/type_traits" 3
};
# 2747 "/usr/include/c++/12/type_traits" 3
struct __do_is_nothrow_swappable_impl {
# 2749 "/usr/include/c++/12/type_traits" 3
template< class _Tp> static __bool_constant< noexcept(swap(std::declval< _Tp &> (), std::declval< _Tp &> ()))> __test(int);
# 2754 "/usr/include/c++/12/type_traits" 3
template< class > static false_type __test(...);
# 2756 "/usr/include/c++/12/type_traits" 3
};
# 2758 "/usr/include/c++/12/type_traits" 3
}
# 2760 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2761 "/usr/include/c++/12/type_traits" 3
struct __is_swappable_impl : public __swappable_details::__do_is_swappable_impl {
# 2764 "/usr/include/c++/12/type_traits" 3
typedef __decltype((__test< _Tp> (0))) type;
# 2765 "/usr/include/c++/12/type_traits" 3
};
# 2767 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2768 "/usr/include/c++/12/type_traits" 3
struct __is_nothrow_swappable_impl : public __swappable_details::__do_is_nothrow_swappable_impl {
# 2771 "/usr/include/c++/12/type_traits" 3
typedef __decltype((__test< _Tp> (0))) type;
# 2772 "/usr/include/c++/12/type_traits" 3
};
# 2774 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2775 "/usr/include/c++/12/type_traits" 3
struct __is_swappable : public __is_swappable_impl< _Tp> ::type {
# 2777 "/usr/include/c++/12/type_traits" 3
};
# 2779 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2780 "/usr/include/c++/12/type_traits" 3
struct __is_nothrow_swappable : public __is_nothrow_swappable_impl< _Tp> ::type {
# 2782 "/usr/include/c++/12/type_traits" 3
};
# 2790 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2791 "/usr/include/c++/12/type_traits" 3
struct is_swappable : public __is_swappable_impl< _Tp> ::type {
# 2794 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 2796 "/usr/include/c++/12/type_traits" 3
};
# 2799 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2800 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_swappable : public __is_nothrow_swappable_impl< _Tp> ::type {
# 2803 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 2805 "/usr/include/c++/12/type_traits" 3
};
# 2809 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 2810 "/usr/include/c++/12/type_traits" 3
is_swappable_v = (is_swappable< _Tp> ::value);
# 2814 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 2815 "/usr/include/c++/12/type_traits" 3
is_nothrow_swappable_v = (is_nothrow_swappable< _Tp> ::value);
# 2820 "/usr/include/c++/12/type_traits" 3
namespace __swappable_with_details {
# 2821 "/usr/include/c++/12/type_traits" 3
using std::swap;
# 2823 "/usr/include/c++/12/type_traits" 3
struct __do_is_swappable_with_impl {
# 2825 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up, class
# 2826 "/usr/include/c++/12/type_traits" 3
 = __decltype((swap(std::declval< _Tp> (), std::declval< _Up> ()))), class
# 2828 "/usr/include/c++/12/type_traits" 3
 = __decltype((swap(std::declval< _Up> (), std::declval< _Tp> ())))> static true_type
# 2825 "/usr/include/c++/12/type_traits" 3
__test(int);
# 2831 "/usr/include/c++/12/type_traits" 3
template< class , class > static false_type __test(...);
# 2833 "/usr/include/c++/12/type_traits" 3
};
# 2835 "/usr/include/c++/12/type_traits" 3
struct __do_is_nothrow_swappable_with_impl {
# 2837 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up> static __bool_constant< noexcept(swap(std::declval< _Tp> (), std::declval< _Up> ())) && noexcept(swap(std::declval< _Up> (), std::declval< _Tp> ()))> __test(int);
# 2844 "/usr/include/c++/12/type_traits" 3
template< class , class > static false_type __test(...);
# 2846 "/usr/include/c++/12/type_traits" 3
};
# 2848 "/usr/include/c++/12/type_traits" 3
}
# 2850 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up>
# 2851 "/usr/include/c++/12/type_traits" 3
struct __is_swappable_with_impl : public __swappable_with_details::__do_is_swappable_with_impl {
# 2854 "/usr/include/c++/12/type_traits" 3
typedef __decltype((__test< _Tp, _Up> (0))) type;
# 2855 "/usr/include/c++/12/type_traits" 3
};
# 2858 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2859 "/usr/include/c++/12/type_traits" 3
struct __is_swappable_with_impl< _Tp &, _Tp &> : public __swappable_details::__do_is_swappable_impl {
# 2862 "/usr/include/c++/12/type_traits" 3
typedef __decltype((__test< _Tp &> (0))) type;
# 2863 "/usr/include/c++/12/type_traits" 3
};
# 2865 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up>
# 2866 "/usr/include/c++/12/type_traits" 3
struct __is_nothrow_swappable_with_impl : public __swappable_with_details::__do_is_nothrow_swappable_with_impl {
# 2869 "/usr/include/c++/12/type_traits" 3
typedef __decltype((__test< _Tp, _Up> (0))) type;
# 2870 "/usr/include/c++/12/type_traits" 3
};
# 2873 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 2874 "/usr/include/c++/12/type_traits" 3
struct __is_nothrow_swappable_with_impl< _Tp &, _Tp &> : public __swappable_details::__do_is_nothrow_swappable_impl {
# 2877 "/usr/include/c++/12/type_traits" 3
typedef __decltype((__test< _Tp &> (0))) type;
# 2878 "/usr/include/c++/12/type_traits" 3
};
# 2882 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up>
# 2883 "/usr/include/c++/12/type_traits" 3
struct is_swappable_with : public __is_swappable_with_impl< _Tp, _Up> ::type {
# 2886 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "first template argument must be a complete class or an unbounded array");
# 2888 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Up> {})), "second template argument must be a complete class or an unbounded array");
# 2890 "/usr/include/c++/12/type_traits" 3
};
# 2893 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up>
# 2894 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_swappable_with : public __is_nothrow_swappable_with_impl< _Tp, _Up> ::type {
# 2897 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "first template argument must be a complete class or an unbounded array");
# 2899 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Up> {})), "second template argument must be a complete class or an unbounded array");
# 2901 "/usr/include/c++/12/type_traits" 3
};
# 2905 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up> constexpr bool
# 2906 "/usr/include/c++/12/type_traits" 3
is_swappable_with_v = (is_swappable_with< _Tp, _Up> ::value);
# 2910 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up> constexpr bool
# 2911 "/usr/include/c++/12/type_traits" 3
is_nothrow_swappable_with_v = (is_nothrow_swappable_with< _Tp, _Up> ::value);
# 2922 "/usr/include/c++/12/type_traits" 3
template< class _Result, class _Ret, bool
# 2923 "/usr/include/c++/12/type_traits" 3
 = is_void< _Ret> ::value, class = void>
# 2924 "/usr/include/c++/12/type_traits" 3
struct __is_invocable_impl : public false_type {
# 2927 "/usr/include/c++/12/type_traits" 3
using __nothrow_type = false_type;
# 2928 "/usr/include/c++/12/type_traits" 3
};
# 2931 "/usr/include/c++/12/type_traits" 3
template< class _Result, class _Ret>
# 2932 "/usr/include/c++/12/type_traits" 3
struct __is_invocable_impl< _Result, _Ret, true, __void_t< typename _Result::type> > : public true_type {
# 2937 "/usr/include/c++/12/type_traits" 3
using __nothrow_type = true_type;
# 2938 "/usr/include/c++/12/type_traits" 3
};
# 2940 "/usr/include/c++/12/type_traits" 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wctor-dtor-privacy"
# 2943 "/usr/include/c++/12/type_traits" 3
template< class _Result, class _Ret>
# 2944 "/usr/include/c++/12/type_traits" 3
struct __is_invocable_impl< _Result, _Ret, false, __void_t< typename _Result::type> > {
# 2952 "/usr/include/c++/12/type_traits" 3
private: static typename _Result::type _S_get() noexcept;
# 2954 "/usr/include/c++/12/type_traits" 3
template< class _Tp> static void _S_conv(_Tp) noexcept;
# 2958 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool _Check_Noex = false, class
# 2959 "/usr/include/c++/12/type_traits" 3
 = __decltype((_S_conv< _Tp> ((_S_get)()))), bool
# 2960 "/usr/include/c++/12/type_traits" 3
_Noex = noexcept(_S_conv< _Tp> ((_S_get)()))> static __bool_constant< _Check_Noex ? _Noex : true>
# 2958 "/usr/include/c++/12/type_traits" 3
_S_test(int);
# 2964 "/usr/include/c++/12/type_traits" 3
template< class _Tp, bool = false> static false_type _S_test(...);
# 2970 "/usr/include/c++/12/type_traits" 3
public: using type = __decltype((_S_test< _Ret> (1)));
# 2973 "/usr/include/c++/12/type_traits" 3
using __nothrow_type = __decltype((_S_test< _Ret, true> (1)));
# 2974 "/usr/include/c++/12/type_traits" 3
};
#pragma GCC diagnostic pop
# 2977 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class ..._ArgTypes>
# 2978 "/usr/include/c++/12/type_traits" 3
struct __is_invocable : public __is_invocable_impl< __invoke_result< _Fn, _ArgTypes...> , void> ::type {
# 2980 "/usr/include/c++/12/type_traits" 3
};
# 2982 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class _Tp, class ..._Args> constexpr bool
# 2983 "/usr/include/c++/12/type_traits" 3
__call_is_nt(__invoke_memfun_ref)
# 2984 "/usr/include/c++/12/type_traits" 3
{
# 2985 "/usr/include/c++/12/type_traits" 3
using _Up = typename __inv_unwrap< _Tp> ::type;
# 2986 "/usr/include/c++/12/type_traits" 3
return noexcept((std::declval< typename __inv_unwrap< _Tp> ::type> ().*std::declval< _Fn> ())(std::declval< _Args> ()...));
# 2988 "/usr/include/c++/12/type_traits" 3
}
# 2990 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class _Tp, class ..._Args> constexpr bool
# 2991 "/usr/include/c++/12/type_traits" 3
__call_is_nt(__invoke_memfun_deref)
# 2992 "/usr/include/c++/12/type_traits" 3
{
# 2993 "/usr/include/c++/12/type_traits" 3
return noexcept(((*std::declval< _Tp> ()).*std::declval< _Fn> ())(std::declval< _Args> ()...));
# 2995 "/usr/include/c++/12/type_traits" 3
}
# 2997 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class _Tp> constexpr bool
# 2998 "/usr/include/c++/12/type_traits" 3
__call_is_nt(__invoke_memobj_ref)
# 2999 "/usr/include/c++/12/type_traits" 3
{
# 3000 "/usr/include/c++/12/type_traits" 3
using _Up = typename __inv_unwrap< _Tp> ::type;
# 3001 "/usr/include/c++/12/type_traits" 3
return noexcept((std::declval< typename __inv_unwrap< _Tp> ::type> ().*std::declval< _Fn> ()));
# 3002 "/usr/include/c++/12/type_traits" 3
}
# 3004 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class _Tp> constexpr bool
# 3005 "/usr/include/c++/12/type_traits" 3
__call_is_nt(__invoke_memobj_deref)
# 3006 "/usr/include/c++/12/type_traits" 3
{
# 3007 "/usr/include/c++/12/type_traits" 3
return noexcept(((*std::declval< _Tp> ()).*std::declval< _Fn> ()));
# 3008 "/usr/include/c++/12/type_traits" 3
}
# 3010 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class ..._Args> constexpr bool
# 3011 "/usr/include/c++/12/type_traits" 3
__call_is_nt(__invoke_other)
# 3012 "/usr/include/c++/12/type_traits" 3
{
# 3013 "/usr/include/c++/12/type_traits" 3
return noexcept(std::declval< _Fn> ()(std::declval< _Args> ()...));
# 3014 "/usr/include/c++/12/type_traits" 3
}
# 3016 "/usr/include/c++/12/type_traits" 3
template< class _Result, class _Fn, class ..._Args>
# 3017 "/usr/include/c++/12/type_traits" 3
struct __call_is_nothrow : public __bool_constant< std::__call_is_nt< _Fn, _Args...> (typename _Result::__invoke_type{})> {
# 3021 "/usr/include/c++/12/type_traits" 3
};
# 3023 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class ..._Args> using __call_is_nothrow_ = __call_is_nothrow< __invoke_result< _Fn, _Args...> , _Fn, _Args...> ;
# 3028 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class ..._Args>
# 3029 "/usr/include/c++/12/type_traits" 3
struct __is_nothrow_invocable : public __and_< __is_invocable< _Fn, _Args...> , __call_is_nothrow_< _Fn, _Args...> > ::type {
# 3032 "/usr/include/c++/12/type_traits" 3
};
# 3034 "/usr/include/c++/12/type_traits" 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wctor-dtor-privacy"
struct __nonesuchbase { };
# 3037 "/usr/include/c++/12/type_traits" 3
struct __nonesuch : private __nonesuchbase {
# 3038 "/usr/include/c++/12/type_traits" 3
~__nonesuch() = delete;
# 3039 "/usr/include/c++/12/type_traits" 3
__nonesuch(const __nonesuch &) = delete;
# 3040 "/usr/include/c++/12/type_traits" 3
void operator=(const __nonesuch &) = delete;
# 3041 "/usr/include/c++/12/type_traits" 3
};
#pragma GCC diagnostic pop
# 3049 "/usr/include/c++/12/type_traits" 3
template< class _Functor, class ..._ArgTypes>
# 3050 "/usr/include/c++/12/type_traits" 3
struct invoke_result : public __invoke_result< _Functor, _ArgTypes...> {
# 3053 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Functor> {})), "_Functor must be a complete class or an unbounded array");
# 3055 "/usr/include/c++/12/type_traits" 3
static_assert(((std::__is_complete_or_unbounded(__type_identity< _ArgTypes> {}) && ... )), "each argument type must be a complete class or an unbounded array");
# 3058 "/usr/include/c++/12/type_traits" 3
};
# 3061 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class ..._Args> using invoke_result_t = typename invoke_result< _Fn, _Args...> ::type;
# 3065 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class ..._ArgTypes>
# 3066 "/usr/include/c++/12/type_traits" 3
struct is_invocable : public __is_invocable_impl< __invoke_result< _Fn, _ArgTypes...> , void> ::type {
# 3069 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Fn> {})), "_Fn must be a complete class or an unbounded array");
# 3071 "/usr/include/c++/12/type_traits" 3
static_assert(((std::__is_complete_or_unbounded(__type_identity< _ArgTypes> {}) && ... )), "each argument type must be a complete class or an unbounded array");
# 3074 "/usr/include/c++/12/type_traits" 3
};
# 3077 "/usr/include/c++/12/type_traits" 3
template< class _Ret, class _Fn, class ..._ArgTypes>
# 3078 "/usr/include/c++/12/type_traits" 3
struct is_invocable_r : public __is_invocable_impl< __invoke_result< _Fn, _ArgTypes...> , _Ret> ::type {
# 3081 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Fn> {})), "_Fn must be a complete class or an unbounded array");
# 3083 "/usr/include/c++/12/type_traits" 3
static_assert(((std::__is_complete_or_unbounded(__type_identity< _ArgTypes> {}) && ... )), "each argument type must be a complete class or an unbounded array");
# 3086 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Ret> {})), "_Ret must be a complete class or an unbounded array");
# 3088 "/usr/include/c++/12/type_traits" 3
};
# 3091 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class ..._ArgTypes>
# 3092 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_invocable : public __and_< __is_invocable_impl< __invoke_result< _Fn, _ArgTypes...> , void> , __call_is_nothrow_< _Fn, _ArgTypes...> > ::type {
# 3096 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Fn> {})), "_Fn must be a complete class or an unbounded array");
# 3098 "/usr/include/c++/12/type_traits" 3
static_assert(((std::__is_complete_or_unbounded(__type_identity< _ArgTypes> {}) && ... )), "each argument type must be a complete class or an unbounded array");
# 3101 "/usr/include/c++/12/type_traits" 3
};
# 3104 "/usr/include/c++/12/type_traits" 3
template< class _Result, class _Ret> using __is_nt_invocable_impl = typename __is_invocable_impl< _Result, _Ret> ::__nothrow_type;
# 3110 "/usr/include/c++/12/type_traits" 3
template< class _Ret, class _Fn, class ..._ArgTypes>
# 3111 "/usr/include/c++/12/type_traits" 3
struct is_nothrow_invocable_r : public __and_< __is_nt_invocable_impl< __invoke_result< _Fn, _ArgTypes...> , _Ret> , __call_is_nothrow_< _Fn, _ArgTypes...> > ::type {
# 3115 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Fn> {})), "_Fn must be a complete class or an unbounded array");
# 3117 "/usr/include/c++/12/type_traits" 3
static_assert(((std::__is_complete_or_unbounded(__type_identity< _ArgTypes> {}) && ... )), "each argument type must be a complete class or an unbounded array");
# 3120 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Ret> {})), "_Ret must be a complete class or an unbounded array");
# 3122 "/usr/include/c++/12/type_traits" 3
};
# 3141 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3142 "/usr/include/c++/12/type_traits" 3
is_void_v = (is_void< _Tp> ::value);
# 3143 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3144 "/usr/include/c++/12/type_traits" 3
is_null_pointer_v = (is_null_pointer< _Tp> ::value);
# 3145 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3146 "/usr/include/c++/12/type_traits" 3
is_integral_v = (is_integral< _Tp> ::value);
# 3147 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3148 "/usr/include/c++/12/type_traits" 3
is_floating_point_v = (is_floating_point< _Tp> ::value);
# 3149 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3150 "/usr/include/c++/12/type_traits" 3
is_array_v = (is_array< _Tp> ::value);
# 3151 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3152 "/usr/include/c++/12/type_traits" 3
is_pointer_v = (is_pointer< _Tp> ::value);
# 3153 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3154 "/usr/include/c++/12/type_traits" 3
is_lvalue_reference_v = (is_lvalue_reference< _Tp> ::value);
# 3156 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3157 "/usr/include/c++/12/type_traits" 3
is_rvalue_reference_v = (is_rvalue_reference< _Tp> ::value);
# 3159 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3160 "/usr/include/c++/12/type_traits" 3
is_member_object_pointer_v = (is_member_object_pointer< _Tp> ::value);
# 3162 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3163 "/usr/include/c++/12/type_traits" 3
is_member_function_pointer_v = (is_member_function_pointer< _Tp> ::value);
# 3165 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3166 "/usr/include/c++/12/type_traits" 3
is_enum_v = (is_enum< _Tp> ::value);
# 3167 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3168 "/usr/include/c++/12/type_traits" 3
is_union_v = (is_union< _Tp> ::value);
# 3169 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3170 "/usr/include/c++/12/type_traits" 3
is_class_v = (is_class< _Tp> ::value);
# 3171 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3172 "/usr/include/c++/12/type_traits" 3
is_function_v = (is_function< _Tp> ::value);
# 3173 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3174 "/usr/include/c++/12/type_traits" 3
is_reference_v = (is_reference< _Tp> ::value);
# 3175 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3176 "/usr/include/c++/12/type_traits" 3
is_arithmetic_v = (is_arithmetic< _Tp> ::value);
# 3177 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3178 "/usr/include/c++/12/type_traits" 3
is_fundamental_v = (is_fundamental< _Tp> ::value);
# 3179 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3180 "/usr/include/c++/12/type_traits" 3
is_object_v = (is_object< _Tp> ::value);
# 3181 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3182 "/usr/include/c++/12/type_traits" 3
is_scalar_v = (is_scalar< _Tp> ::value);
# 3183 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3184 "/usr/include/c++/12/type_traits" 3
is_compound_v = (is_compound< _Tp> ::value);
# 3185 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3186 "/usr/include/c++/12/type_traits" 3
is_member_pointer_v = (is_member_pointer< _Tp> ::value);
# 3187 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3188 "/usr/include/c++/12/type_traits" 3
is_const_v = (is_const< _Tp> ::value);
# 3189 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3190 "/usr/include/c++/12/type_traits" 3
is_volatile_v = (is_volatile< _Tp> ::value);
# 3191 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3192 "/usr/include/c++/12/type_traits" 3
is_trivial_v = (is_trivial< _Tp> ::value);
# 3193 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3194 "/usr/include/c++/12/type_traits" 3
is_trivially_copyable_v = (is_trivially_copyable< _Tp> ::value);
# 3196 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3197 "/usr/include/c++/12/type_traits" 3
is_standard_layout_v = (is_standard_layout< _Tp> ::value);
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
template< class _Tp> constexpr bool
# 3202 "/usr/include/c++/12/type_traits" 3
is_pod_v = (is_pod< _Tp> ::value);
# 3203 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 3204 "/usr/include/c++/12/type_traits" 3
[[__deprecated__]] constexpr bool
# 3205 "/usr/include/c++/12/type_traits" 3
is_literal_type_v = (is_literal_type< _Tp> ::value);
#pragma GCC diagnostic pop
template< class _Tp> constexpr bool
# 3208 "/usr/include/c++/12/type_traits" 3
is_empty_v = (is_empty< _Tp> ::value);
# 3209 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3210 "/usr/include/c++/12/type_traits" 3
is_polymorphic_v = (is_polymorphic< _Tp> ::value);
# 3211 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3212 "/usr/include/c++/12/type_traits" 3
is_abstract_v = (is_abstract< _Tp> ::value);
# 3213 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3214 "/usr/include/c++/12/type_traits" 3
is_final_v = (is_final< _Tp> ::value);
# 3215 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3216 "/usr/include/c++/12/type_traits" 3
is_signed_v = (is_signed< _Tp> ::value);
# 3217 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3218 "/usr/include/c++/12/type_traits" 3
is_unsigned_v = (is_unsigned< _Tp> ::value);
# 3219 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class ..._Args> constexpr bool
# 3220 "/usr/include/c++/12/type_traits" 3
is_constructible_v = (is_constructible< _Tp, _Args...> ::value);
# 3222 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3223 "/usr/include/c++/12/type_traits" 3
is_default_constructible_v = (is_default_constructible< _Tp> ::value);
# 3225 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3226 "/usr/include/c++/12/type_traits" 3
is_copy_constructible_v = (is_copy_constructible< _Tp> ::value);
# 3228 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3229 "/usr/include/c++/12/type_traits" 3
is_move_constructible_v = (is_move_constructible< _Tp> ::value);
# 3231 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up> constexpr bool
# 3232 "/usr/include/c++/12/type_traits" 3
is_assignable_v = (is_assignable< _Tp, _Up> ::value);
# 3233 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3234 "/usr/include/c++/12/type_traits" 3
is_copy_assignable_v = (is_copy_assignable< _Tp> ::value);
# 3235 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3236 "/usr/include/c++/12/type_traits" 3
is_move_assignable_v = (is_move_assignable< _Tp> ::value);
# 3237 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3238 "/usr/include/c++/12/type_traits" 3
is_destructible_v = (is_destructible< _Tp> ::value);
# 3239 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class ..._Args> constexpr bool
# 3240 "/usr/include/c++/12/type_traits" 3
is_trivially_constructible_v = (is_trivially_constructible< _Tp, _Args...> ::value);
# 3242 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3243 "/usr/include/c++/12/type_traits" 3
is_trivially_default_constructible_v = (is_trivially_default_constructible< _Tp> ::value);
# 3245 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3246 "/usr/include/c++/12/type_traits" 3
is_trivially_copy_constructible_v = (is_trivially_copy_constructible< _Tp> ::value);
# 3248 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3249 "/usr/include/c++/12/type_traits" 3
is_trivially_move_constructible_v = (is_trivially_move_constructible< _Tp> ::value);
# 3251 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up> constexpr bool
# 3252 "/usr/include/c++/12/type_traits" 3
is_trivially_assignable_v = (is_trivially_assignable< _Tp, _Up> ::value);
# 3254 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3255 "/usr/include/c++/12/type_traits" 3
is_trivially_copy_assignable_v = (is_trivially_copy_assignable< _Tp> ::value);
# 3257 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3258 "/usr/include/c++/12/type_traits" 3
is_trivially_move_assignable_v = (is_trivially_move_assignable< _Tp> ::value);
# 3260 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3261 "/usr/include/c++/12/type_traits" 3
is_trivially_destructible_v = (is_trivially_destructible< _Tp> ::value);
# 3263 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class ..._Args> constexpr bool
# 3264 "/usr/include/c++/12/type_traits" 3
is_nothrow_constructible_v = (is_nothrow_constructible< _Tp, _Args...> ::value);
# 3266 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3267 "/usr/include/c++/12/type_traits" 3
is_nothrow_default_constructible_v = (is_nothrow_default_constructible< _Tp> ::value);
# 3269 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3270 "/usr/include/c++/12/type_traits" 3
is_nothrow_copy_constructible_v = (is_nothrow_copy_constructible< _Tp> ::value);
# 3272 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3273 "/usr/include/c++/12/type_traits" 3
is_nothrow_move_constructible_v = (is_nothrow_move_constructible< _Tp> ::value);
# 3275 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up> constexpr bool
# 3276 "/usr/include/c++/12/type_traits" 3
is_nothrow_assignable_v = (is_nothrow_assignable< _Tp, _Up> ::value);
# 3278 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3279 "/usr/include/c++/12/type_traits" 3
is_nothrow_copy_assignable_v = (is_nothrow_copy_assignable< _Tp> ::value);
# 3281 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3282 "/usr/include/c++/12/type_traits" 3
is_nothrow_move_assignable_v = (is_nothrow_move_assignable< _Tp> ::value);
# 3284 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3285 "/usr/include/c++/12/type_traits" 3
is_nothrow_destructible_v = (is_nothrow_destructible< _Tp> ::value);
# 3287 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3288 "/usr/include/c++/12/type_traits" 3
has_virtual_destructor_v = (has_virtual_destructor< _Tp> ::value);
# 3290 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr size_t
# 3291 "/usr/include/c++/12/type_traits" 3
alignment_of_v = (alignment_of< _Tp> ::value);
# 3292 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr size_t
# 3293 "/usr/include/c++/12/type_traits" 3
rank_v = (rank< _Tp> ::value);
# 3294 "/usr/include/c++/12/type_traits" 3
template< class _Tp, unsigned _Idx = 0U> constexpr size_t
# 3295 "/usr/include/c++/12/type_traits" 3
extent_v = (extent< _Tp, _Idx> ::value);
# 3297 "/usr/include/c++/12/type_traits" 3
template< class _Tp, class _Up> constexpr bool
# 3298 "/usr/include/c++/12/type_traits" 3
is_same_v = __is_same(_Tp, _Up);
# 3303 "/usr/include/c++/12/type_traits" 3
template< class _Base, class _Derived> constexpr bool
# 3304 "/usr/include/c++/12/type_traits" 3
is_base_of_v = (is_base_of< _Base, _Derived> ::value);
# 3305 "/usr/include/c++/12/type_traits" 3
template< class _From, class _To> constexpr bool
# 3306 "/usr/include/c++/12/type_traits" 3
is_convertible_v = (is_convertible< _From, _To> ::value);
# 3307 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class ..._Args> constexpr bool
# 3308 "/usr/include/c++/12/type_traits" 3
is_invocable_v = (is_invocable< _Fn, _Args...> ::value);
# 3309 "/usr/include/c++/12/type_traits" 3
template< class _Fn, class ..._Args> constexpr bool
# 3310 "/usr/include/c++/12/type_traits" 3
is_nothrow_invocable_v = (is_nothrow_invocable< _Fn, _Args...> ::value);
# 3312 "/usr/include/c++/12/type_traits" 3
template< class _Ret, class _Fn, class ..._Args> constexpr bool
# 3313 "/usr/include/c++/12/type_traits" 3
is_invocable_r_v = (is_invocable_r< _Ret, _Fn, _Args...> ::value);
# 3315 "/usr/include/c++/12/type_traits" 3
template< class _Ret, class _Fn, class ..._Args> constexpr bool
# 3316 "/usr/include/c++/12/type_traits" 3
is_nothrow_invocable_r_v = (is_nothrow_invocable_r< _Ret, _Fn, _Args...> ::value);
# 3324 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 3325 "/usr/include/c++/12/type_traits" 3
struct has_unique_object_representations : public bool_constant< __has_unique_object_representations(remove_cv_t< remove_all_extents_t< _Tp> > )> {
# 3330 "/usr/include/c++/12/type_traits" 3
static_assert((std::__is_complete_or_unbounded(__type_identity< _Tp> {})), "template argument must be a complete class or an unbounded array");
# 3332 "/usr/include/c++/12/type_traits" 3
};
# 3335 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3336 "/usr/include/c++/12/type_traits" 3
has_unique_object_representations_v = (has_unique_object_representations< _Tp> ::value);
# 3344 "/usr/include/c++/12/type_traits" 3
template< class _Tp>
# 3345 "/usr/include/c++/12/type_traits" 3
struct is_aggregate : public bool_constant< __is_aggregate(remove_cv_t< _Tp> )> {
# 3347 "/usr/include/c++/12/type_traits" 3
};
# 3350 "/usr/include/c++/12/type_traits" 3
template< class _Tp> constexpr bool
# 3351 "/usr/include/c++/12/type_traits" 3
is_aggregate_v = (is_aggregate< _Tp> ::value);
# 3726 "/usr/include/c++/12/type_traits" 3
}
# 38 "/usr/include/c++/12/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 47 "/usr/include/c++/12/bits/move.h" 3
template< class _Tp> constexpr _Tp *
# 49 "/usr/include/c++/12/bits/move.h" 3
__addressof(_Tp &__r) noexcept
# 50 "/usr/include/c++/12/bits/move.h" 3
{ return __builtin_addressof(__r); }
# 55 "/usr/include/c++/12/bits/move.h" 3
}
# 59 "/usr/include/c++/12/bits/move.h" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/12/bits/move.h" 3
template< class _Tp>
# 75 "/usr/include/c++/12/bits/move.h" 3
[[__nodiscard__]] constexpr _Tp &&
# 77 "/usr/include/c++/12/bits/move.h" 3
forward(typename remove_reference< _Tp> ::type &__t) noexcept
# 78 "/usr/include/c++/12/bits/move.h" 3
{ return static_cast< _Tp &&>(__t); }
# 86 "/usr/include/c++/12/bits/move.h" 3
template< class _Tp>
# 87 "/usr/include/c++/12/bits/move.h" 3
[[__nodiscard__]] constexpr _Tp &&
# 89 "/usr/include/c++/12/bits/move.h" 3
forward(typename remove_reference< _Tp> ::type &&__t) noexcept
# 90 "/usr/include/c++/12/bits/move.h" 3
{
# 91 "/usr/include/c++/12/bits/move.h" 3
static_assert((!std::template is_lvalue_reference< _Tp> ::value), "std::forward must not be used to convert an rvalue to an lvalue");
# 93 "/usr/include/c++/12/bits/move.h" 3
return static_cast< _Tp &&>(__t);
# 94 "/usr/include/c++/12/bits/move.h" 3
}
# 101 "/usr/include/c++/12/bits/move.h" 3
template< class _Tp>
# 102 "/usr/include/c++/12/bits/move.h" 3
[[__nodiscard__]] constexpr typename remove_reference< _Tp> ::type &&
# 104 "/usr/include/c++/12/bits/move.h" 3
move(_Tp &&__t) noexcept
# 105 "/usr/include/c++/12/bits/move.h" 3
{ return static_cast< typename remove_reference< _Tp> ::type &&>(__t); }
# 108 "/usr/include/c++/12/bits/move.h" 3
template< class _Tp>
# 109 "/usr/include/c++/12/bits/move.h" 3
struct __move_if_noexcept_cond : public __and_< __not_< is_nothrow_move_constructible< _Tp> > , is_copy_constructible< _Tp> > ::type {
# 111 "/usr/include/c++/12/bits/move.h" 3
};
# 121 "/usr/include/c++/12/bits/move.h" 3
template< class _Tp>
# 122 "/usr/include/c++/12/bits/move.h" 3
[[__nodiscard__]] constexpr __conditional_t< __move_if_noexcept_cond< _Tp> ::value, const _Tp &, _Tp &&>
# 125 "/usr/include/c++/12/bits/move.h" 3
move_if_noexcept(_Tp &__x) noexcept
# 126 "/usr/include/c++/12/bits/move.h" 3
{ return std::move(__x); }
# 142 "/usr/include/c++/12/bits/move.h" 3
template< class _Tp>
# 143 "/usr/include/c++/12/bits/move.h" 3
[[__nodiscard__]] constexpr _Tp *
# 145 "/usr/include/c++/12/bits/move.h" 3
addressof(_Tp &__r) noexcept
# 146 "/usr/include/c++/12/bits/move.h" 3
{ return std::__addressof(__r); }
# 150 "/usr/include/c++/12/bits/move.h" 3
template < typename _Tp >
    const _Tp * addressof ( const _Tp && ) = delete;
# 154 "/usr/include/c++/12/bits/move.h" 3
template< class _Tp, class _Up = _Tp> inline _Tp
# 157 "/usr/include/c++/12/bits/move.h" 3
__exchange(_Tp &__obj, _Up &&__new_val)
# 158 "/usr/include/c++/12/bits/move.h" 3
{
# 159 "/usr/include/c++/12/bits/move.h" 3
_Tp __old_val = std::move(__obj);
# 160 "/usr/include/c++/12/bits/move.h" 3
__obj = std::forward< _Up> (__new_val);
# 161 "/usr/include/c++/12/bits/move.h" 3
return __old_val;
# 162 "/usr/include/c++/12/bits/move.h" 3
}
# 186 "/usr/include/c++/12/bits/move.h" 3
template< class _Tp> inline typename enable_if< __and_< __not_< __is_tuple_like< _Tp> > , is_move_constructible< _Tp> , is_move_assignable< _Tp> > ::value> ::type
# 196 "/usr/include/c++/12/bits/move.h" 3
swap(_Tp &__a, _Tp &__b) noexcept(__and_< is_nothrow_move_constructible< _Tp> , is_nothrow_move_assignable< _Tp> > ::value)
# 199 "/usr/include/c++/12/bits/move.h" 3
{
# 204 "/usr/include/c++/12/bits/move.h" 3
_Tp __tmp = std::move(__a);
# 205 "/usr/include/c++/12/bits/move.h" 3
__a = std::move(__b);
# 206 "/usr/include/c++/12/bits/move.h" 3
__b = std::move(__tmp);
# 207 "/usr/include/c++/12/bits/move.h" 3
}
# 212 "/usr/include/c++/12/bits/move.h" 3
template< class _Tp, size_t _Nm> inline typename enable_if< __is_swappable< _Tp> ::value> ::type
# 220 "/usr/include/c++/12/bits/move.h" 3
swap(_Tp (&__a)[_Nm], _Tp (&__b)[_Nm]) noexcept(__is_nothrow_swappable< _Tp> ::value)
# 222 "/usr/include/c++/12/bits/move.h" 3
{
# 223 "/usr/include/c++/12/bits/move.h" 3
for (size_t __n = (0); __n < _Nm; ++__n) {
# 224 "/usr/include/c++/12/bits/move.h" 3
swap(__a[__n], __b[__n]); }
# 225 "/usr/include/c++/12/bits/move.h" 3
}
# 229 "/usr/include/c++/12/bits/move.h" 3
}
# 43 "/usr/include/c++/12/bits/utility.h" 3
namespace std __attribute((__visibility__("default"))) {
# 48 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp> struct tuple_size;
# 55 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp, class
# 56 "/usr/include/c++/12/bits/utility.h" 3
_Up = typename remove_cv< _Tp> ::type, class
# 57 "/usr/include/c++/12/bits/utility.h" 3
 = typename enable_if< is_same< _Tp, _Up> ::value> ::type, size_t
# 58 "/usr/include/c++/12/bits/utility.h" 3
 = tuple_size< _Tp> ::value> using __enable_if_has_tuple_size = _Tp;
# 61 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp>
# 62 "/usr/include/c++/12/bits/utility.h" 3
struct tuple_size< const __enable_if_has_tuple_size< _Tp> > : public std::tuple_size< _Tp> {
# 63 "/usr/include/c++/12/bits/utility.h" 3
};
# 65 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp>
# 66 "/usr/include/c++/12/bits/utility.h" 3
struct tuple_size< volatile __enable_if_has_tuple_size< _Tp> > : public std::tuple_size< _Tp> {
# 67 "/usr/include/c++/12/bits/utility.h" 3
};
# 69 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp>
# 70 "/usr/include/c++/12/bits/utility.h" 3
struct tuple_size< const volatile __enable_if_has_tuple_size< _Tp> > : public std::tuple_size< _Tp> {
# 71 "/usr/include/c++/12/bits/utility.h" 3
};
# 74 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp> constexpr size_t
# 75 "/usr/include/c++/12/bits/utility.h" 3
tuple_size_v = (tuple_size< _Tp> ::value);
# 79 "/usr/include/c++/12/bits/utility.h" 3
template< size_t __i, class _Tp> struct tuple_element;
# 83 "/usr/include/c++/12/bits/utility.h" 3
template< size_t __i, class _Tp> using __tuple_element_t = typename tuple_element< __i, _Tp> ::type;
# 86 "/usr/include/c++/12/bits/utility.h" 3
template< size_t __i, class _Tp>
# 87 "/usr/include/c++/12/bits/utility.h" 3
struct tuple_element< __i, const _Tp> {
# 89 "/usr/include/c++/12/bits/utility.h" 3
typedef typename add_const< __tuple_element_t< __i, _Tp> > ::type type;
# 90 "/usr/include/c++/12/bits/utility.h" 3
};
# 92 "/usr/include/c++/12/bits/utility.h" 3
template< size_t __i, class _Tp>
# 93 "/usr/include/c++/12/bits/utility.h" 3
struct tuple_element< __i, volatile _Tp> {
# 95 "/usr/include/c++/12/bits/utility.h" 3
typedef typename add_volatile< __tuple_element_t< __i, _Tp> > ::type type;
# 96 "/usr/include/c++/12/bits/utility.h" 3
};
# 98 "/usr/include/c++/12/bits/utility.h" 3
template< size_t __i, class _Tp>
# 99 "/usr/include/c++/12/bits/utility.h" 3
struct tuple_element< __i, const volatile _Tp> {
# 101 "/usr/include/c++/12/bits/utility.h" 3
typedef typename add_cv< __tuple_element_t< __i, _Tp> > ::type type;
# 102 "/usr/include/c++/12/bits/utility.h" 3
};
# 108 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp, class ..._Types> constexpr size_t
# 110 "/usr/include/c++/12/bits/utility.h" 3
__find_uniq_type_in_pack()
# 111 "/usr/include/c++/12/bits/utility.h" 3
{
# 112 "/usr/include/c++/12/bits/utility.h" 3
constexpr size_t __sz = sizeof...(_Types);
# 113 "/usr/include/c++/12/bits/utility.h" 3
constexpr bool __found[__sz] = {__is_same(_Tp, _Types)...};
# 114 "/usr/include/c++/12/bits/utility.h" 3
size_t __n = __sz;
# 115 "/usr/include/c++/12/bits/utility.h" 3
for (size_t __i = (0); __i < __sz; ++__i)
# 116 "/usr/include/c++/12/bits/utility.h" 3
{
# 117 "/usr/include/c++/12/bits/utility.h" 3
if (__found[__i])
# 118 "/usr/include/c++/12/bits/utility.h" 3
{
# 119 "/usr/include/c++/12/bits/utility.h" 3
if (__n < __sz) {
# 120 "/usr/include/c++/12/bits/utility.h" 3
return __sz; }
# 121 "/usr/include/c++/12/bits/utility.h" 3
__n = __i;
# 122 "/usr/include/c++/12/bits/utility.h" 3
}
# 123 "/usr/include/c++/12/bits/utility.h" 3
}
# 124 "/usr/include/c++/12/bits/utility.h" 3
return __n;
# 125 "/usr/include/c++/12/bits/utility.h" 3
}
# 134 "/usr/include/c++/12/bits/utility.h" 3
template< size_t __i, class _Tp> using tuple_element_t = typename tuple_element< __i, _Tp> ::type;
# 140 "/usr/include/c++/12/bits/utility.h" 3
template< size_t ..._Indexes> struct _Index_tuple { };
# 143 "/usr/include/c++/12/bits/utility.h" 3
template< size_t _Num>
# 144 "/usr/include/c++/12/bits/utility.h" 3
struct _Build_index_tuple {
# 154 "/usr/include/c++/12/bits/utility.h" 3
using __type = _Index_tuple< __integer_pack(_Num)...> ;
# 156 "/usr/include/c++/12/bits/utility.h" 3
};
# 163 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp, _Tp ..._Idx>
# 164 "/usr/include/c++/12/bits/utility.h" 3
struct integer_sequence {
# 169 "/usr/include/c++/12/bits/utility.h" 3
typedef _Tp value_type;
# 170 "/usr/include/c++/12/bits/utility.h" 3
static constexpr size_t size() noexcept { return sizeof...(_Idx); }
# 171 "/usr/include/c++/12/bits/utility.h" 3
};
# 174 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp, _Tp _Num> using make_integer_sequence = integer_sequence< _Tp, __integer_pack((_Tp)_Num)...> ;
# 183 "/usr/include/c++/12/bits/utility.h" 3
template< size_t ..._Idx> using index_sequence = integer_sequence< unsigned long, _Idx...> ;
# 187 "/usr/include/c++/12/bits/utility.h" 3
template< size_t _Num> using make_index_sequence = make_integer_sequence< unsigned long, _Num> ;
# 191 "/usr/include/c++/12/bits/utility.h" 3
template< class ..._Types> using index_sequence_for = make_index_sequence< sizeof...(_Types)> ;
# 196 "/usr/include/c++/12/bits/utility.h" 3
struct in_place_t {
# 197 "/usr/include/c++/12/bits/utility.h" 3
explicit in_place_t() = default;
# 198 "/usr/include/c++/12/bits/utility.h" 3
};
# 200 "/usr/include/c++/12/bits/utility.h" 3
constexpr inline in_place_t in_place{};
# 202 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp> struct in_place_type_t {
# 204 "/usr/include/c++/12/bits/utility.h" 3
explicit in_place_type_t() = default;
# 205 "/usr/include/c++/12/bits/utility.h" 3
};
# 207 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp> constexpr in_place_type_t< _Tp>
# 208 "/usr/include/c++/12/bits/utility.h" 3
in_place_type{};
# 210 "/usr/include/c++/12/bits/utility.h" 3
template< size_t _Idx> struct in_place_index_t {
# 212 "/usr/include/c++/12/bits/utility.h" 3
explicit in_place_index_t() = default;
# 213 "/usr/include/c++/12/bits/utility.h" 3
};
# 215 "/usr/include/c++/12/bits/utility.h" 3
template< size_t _Idx> constexpr in_place_index_t< _Idx>
# 216 "/usr/include/c++/12/bits/utility.h" 3
in_place_index{};
# 218 "/usr/include/c++/12/bits/utility.h" 3
template< class > constexpr bool
# 219 "/usr/include/c++/12/bits/utility.h" 3
__is_in_place_type_v = false;
# 221 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp> constexpr bool
# 222 "/usr/include/c++/12/bits/utility.h" 3
__is_in_place_type_v< in_place_type_t< _Tp> > = true;
# 224 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp> using __is_in_place_type = bool_constant< __is_in_place_type_v< _Tp> > ;
# 230 "/usr/include/c++/12/bits/utility.h" 3
template< size_t _Np, class ..._Types>
# 231 "/usr/include/c++/12/bits/utility.h" 3
struct _Nth_type {
# 232 "/usr/include/c++/12/bits/utility.h" 3
};
# 234 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp0, class ..._Rest>
# 235 "/usr/include/c++/12/bits/utility.h" 3
struct _Nth_type< 0, _Tp0, _Rest...> {
# 236 "/usr/include/c++/12/bits/utility.h" 3
using type = _Tp0; };
# 238 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp0, class _Tp1, class ..._Rest>
# 239 "/usr/include/c++/12/bits/utility.h" 3
struct _Nth_type< 1, _Tp0, _Tp1, _Rest...> {
# 240 "/usr/include/c++/12/bits/utility.h" 3
using type = _Tp1; };
# 242 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp0, class _Tp1, class _Tp2, class ..._Rest>
# 243 "/usr/include/c++/12/bits/utility.h" 3
struct _Nth_type< 2, _Tp0, _Tp1, _Tp2, _Rest...> {
# 244 "/usr/include/c++/12/bits/utility.h" 3
using type = _Tp2; };
# 246 "/usr/include/c++/12/bits/utility.h" 3
template< size_t _Np, class _Tp0, class _Tp1, class _Tp2, class ...
# 247 "/usr/include/c++/12/bits/utility.h" 3
_Rest>
# 251 "/usr/include/c++/12/bits/utility.h" 3
struct _Nth_type< _Np, _Tp0, _Tp1, _Tp2, _Rest...> : public std::_Nth_type< _Np - (3), _Rest...> {
# 253 "/usr/include/c++/12/bits/utility.h" 3
};
# 256 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp0, class _Tp1, class ..._Rest>
# 257 "/usr/include/c++/12/bits/utility.h" 3
struct _Nth_type< 0, _Tp0, _Tp1, _Rest...> {
# 258 "/usr/include/c++/12/bits/utility.h" 3
using type = _Tp0; };
# 260 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp0, class _Tp1, class _Tp2, class ..._Rest>
# 261 "/usr/include/c++/12/bits/utility.h" 3
struct _Nth_type< 0, _Tp0, _Tp1, _Tp2, _Rest...> {
# 262 "/usr/include/c++/12/bits/utility.h" 3
using type = _Tp0; };
# 264 "/usr/include/c++/12/bits/utility.h" 3
template< class _Tp0, class _Tp1, class _Tp2, class ..._Rest>
# 265 "/usr/include/c++/12/bits/utility.h" 3
struct _Nth_type< 1, _Tp0, _Tp1, _Tp2, _Rest...> {
# 266 "/usr/include/c++/12/bits/utility.h" 3
using type = _Tp1; };
# 270 "/usr/include/c++/12/bits/utility.h" 3
}
# 69 "/usr/include/c++/12/bits/stl_pair.h" 3
namespace std __attribute((__visibility__("default"))) {
# 80 "/usr/include/c++/12/bits/stl_pair.h" 3
struct piecewise_construct_t { explicit piecewise_construct_t() = default;};
# 83 "/usr/include/c++/12/bits/stl_pair.h" 3
constexpr inline piecewise_construct_t piecewise_construct = piecewise_construct_t();
# 89 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class ...> class tuple;
# 92 "/usr/include/c++/12/bits/stl_pair.h" 3
template< size_t ...> struct _Index_tuple;
# 101 "/usr/include/c++/12/bits/stl_pair.h" 3
template< bool , class _T1, class _T2>
# 102 "/usr/include/c++/12/bits/stl_pair.h" 3
struct _PCC {
# 104 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> static constexpr bool
# 105 "/usr/include/c++/12/bits/stl_pair.h" 3
_ConstructiblePair()
# 106 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 107 "/usr/include/c++/12/bits/stl_pair.h" 3
return __and_< is_constructible< _T1, const _U1 &> , is_constructible< _T2, const _U2 &> > ::value;
# 109 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 111 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> static constexpr bool
# 112 "/usr/include/c++/12/bits/stl_pair.h" 3
_ImplicitlyConvertiblePair()
# 113 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 114 "/usr/include/c++/12/bits/stl_pair.h" 3
return __and_< is_convertible< const _U1 &, _T1> , is_convertible< const _U2 &, _T2> > ::value;
# 116 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 118 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> static constexpr bool
# 119 "/usr/include/c++/12/bits/stl_pair.h" 3
_MoveConstructiblePair()
# 120 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 121 "/usr/include/c++/12/bits/stl_pair.h" 3
return __and_< is_constructible< _T1, _U1 &&> , is_constructible< _T2, _U2 &&> > ::value;
# 123 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 125 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> static constexpr bool
# 126 "/usr/include/c++/12/bits/stl_pair.h" 3
_ImplicitlyMoveConvertiblePair()
# 127 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 128 "/usr/include/c++/12/bits/stl_pair.h" 3
return __and_< is_convertible< _U1 &&, _T1> , is_convertible< _U2 &&, _T2> > ::value;
# 130 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 131 "/usr/include/c++/12/bits/stl_pair.h" 3
};
# 133 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2>
# 134 "/usr/include/c++/12/bits/stl_pair.h" 3
struct _PCC< false, _T1, _T2> {
# 136 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> static constexpr bool
# 137 "/usr/include/c++/12/bits/stl_pair.h" 3
_ConstructiblePair()
# 138 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 139 "/usr/include/c++/12/bits/stl_pair.h" 3
return false;
# 140 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 142 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> static constexpr bool
# 143 "/usr/include/c++/12/bits/stl_pair.h" 3
_ImplicitlyConvertiblePair()
# 144 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 145 "/usr/include/c++/12/bits/stl_pair.h" 3
return false;
# 146 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 148 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> static constexpr bool
# 149 "/usr/include/c++/12/bits/stl_pair.h" 3
_MoveConstructiblePair()
# 150 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 151 "/usr/include/c++/12/bits/stl_pair.h" 3
return false;
# 152 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 154 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> static constexpr bool
# 155 "/usr/include/c++/12/bits/stl_pair.h" 3
_ImplicitlyMoveConvertiblePair()
# 156 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 157 "/usr/include/c++/12/bits/stl_pair.h" 3
return false;
# 158 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 159 "/usr/include/c++/12/bits/stl_pair.h" 3
};
# 163 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> class __pair_base {
# 166 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2> friend struct pair;
# 167 "/usr/include/c++/12/bits/stl_pair.h" 3
__pair_base() = default;
# 168 "/usr/include/c++/12/bits/stl_pair.h" 3
~__pair_base() = default;
# 169 "/usr/include/c++/12/bits/stl_pair.h" 3
__pair_base(const __pair_base &) = default;
# 170 "/usr/include/c++/12/bits/stl_pair.h" 3
__pair_base &operator=(const __pair_base &) = delete;
# 172 "/usr/include/c++/12/bits/stl_pair.h" 3
};
# 186 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2>
# 187 "/usr/include/c++/12/bits/stl_pair.h" 3
struct pair : public __pair_base< _T1, _T2> {
# 190 "/usr/include/c++/12/bits/stl_pair.h" 3
typedef _T1 first_type;
# 191 "/usr/include/c++/12/bits/stl_pair.h" 3
typedef _T2 second_type;
# 193 "/usr/include/c++/12/bits/stl_pair.h" 3
_T1 first;
# 194 "/usr/include/c++/12/bits/stl_pair.h" 3
_T2 second;
# 197 "/usr/include/c++/12/bits/stl_pair.h" 3
constexpr pair(const pair &) = default;
# 198 "/usr/include/c++/12/bits/stl_pair.h" 3
constexpr pair(pair &&) = default;
# 200 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class ..._Args1, class ..._Args2> pair(std::piecewise_construct_t, tuple< _Args1...> , tuple< _Args2...> );
# 206 "/usr/include/c++/12/bits/stl_pair.h" 3
void swap(pair &__p) noexcept(__and_< __is_nothrow_swappable< _T1> , __is_nothrow_swappable< _T2> > ::value)
# 209 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 210 "/usr/include/c++/12/bits/stl_pair.h" 3
using std::swap;
# 211 "/usr/include/c++/12/bits/stl_pair.h" 3
swap(first, __p.first);
# 212 "/usr/include/c++/12/bits/stl_pair.h" 3
swap(second, __p.second);
# 213 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 216 "/usr/include/c++/12/bits/stl_pair.h" 3
private: template< class ..._Args1, std::size_t ..._Indexes1, class ...
# 217 "/usr/include/c++/12/bits/stl_pair.h" 3
_Args2, std::size_t ..._Indexes2>
# 216 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(tuple< _Args1...> &, tuple< _Args2...> &, _Index_tuple< _Indexes1...> , _Index_tuple< _Indexes2...> );
# 386 "/usr/include/c++/12/bits/stl_pair.h" 3
public:
# 380 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1 = _T1, class
# 381 "/usr/include/c++/12/bits/stl_pair.h" 3
_U2 = _T2, typename enable_if< __and_< __is_implicitly_default_constructible< _U1> , __is_implicitly_default_constructible< _U2> > ::value, bool> ::type
# 385 "/usr/include/c++/12/bits/stl_pair.h" 3
 = true> constexpr
# 386 "/usr/include/c++/12/bits/stl_pair.h" 3
pair() : first(), second()
# 387 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 389 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1 = _T1, class
# 390 "/usr/include/c++/12/bits/stl_pair.h" 3
_U2 = _T2, typename enable_if< __and_< is_default_constructible< _U1> , is_default_constructible< _U2> , __not_< __and_< __is_implicitly_default_constructible< _U1> , __is_implicitly_default_constructible< _U2> > > > ::value, bool> ::type
# 397 "/usr/include/c++/12/bits/stl_pair.h" 3
 = false> constexpr explicit
# 398 "/usr/include/c++/12/bits/stl_pair.h" 3
pair() : first(), second()
# 399 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 403 "/usr/include/c++/12/bits/stl_pair.h" 3
using _PCCP = _PCC< true, _T1, _T2> ;
# 407 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1 = _T1, class _U2 = _T2, typename enable_if< _PCC< true, _T1, _T2> ::template _ConstructiblePair< _U1, _U2> () && _PCC< true, _T1, _T2> ::template _ImplicitlyConvertiblePair< _U1, _U2> (), bool> ::type
# 412 "/usr/include/c++/12/bits/stl_pair.h" 3
 = true> constexpr
# 413 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(const _T1 &__a, const _T2 &__b) : first(__a), second(__b)
# 414 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 417 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1 = _T1, class _U2 = _T2, typename enable_if< _PCC< true, _T1, _T2> ::template _ConstructiblePair< _U1, _U2> () && (!_PCC< true, _T1, _T2> ::template _ImplicitlyConvertiblePair< _U1, _U2> ()), bool> ::type
# 422 "/usr/include/c++/12/bits/stl_pair.h" 3
 = false> constexpr explicit
# 423 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(const _T1 &__a, const _T2 &__b) : first(__a), second(__b)
# 424 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 428 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> using _PCCFP = _PCC< (!is_same< _T1, _U1> ::value) || (!is_same< _T2, _U2> ::value), _T1, _T2> ;
# 434 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2, typename enable_if< _PCC< (!is_same< _T1, _U1> ::value) || (!is_same< _T2, _U2> ::value), _T1, _T2> ::template _ConstructiblePair< _U1, _U2> () && _PCC< (!is_same< _T1, _U1> ::value) || (!is_same< _T2, _U2> ::value), _T1, _T2> ::template _ImplicitlyConvertiblePair< _U1, _U2> (), bool> ::type
# 439 "/usr/include/c++/12/bits/stl_pair.h" 3
 = true> constexpr
# 440 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(const std::pair< _U1, _U2> &__p) : first((__p.first)), second((__p.second))
# 441 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 443 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2, typename enable_if< _PCC< (!is_same< _T1, _U1> ::value) || (!is_same< _T2, _U2> ::value), _T1, _T2> ::template _ConstructiblePair< _U1, _U2> () && (!_PCC< (!is_same< _T1, _U1> ::value) || (!is_same< _T2, _U2> ::value), _T1, _T2> ::template _ImplicitlyConvertiblePair< _U1, _U2> ()), bool> ::type
# 448 "/usr/include/c++/12/bits/stl_pair.h" 3
 = false> constexpr explicit
# 449 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(const std::pair< _U1, _U2> &__p) : first((__p.first)), second((__p.second))
# 450 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 466 "/usr/include/c++/12/bits/stl_pair.h" 3
private: struct __zero_as_null_pointer_constant {
# 468 "/usr/include/c++/12/bits/stl_pair.h" 3
__zero_as_null_pointer_constant(int (__zero_as_null_pointer_constant::*))
# 469 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 470 "/usr/include/c++/12/bits/stl_pair.h" 3
template < typename _Tp,
   typename = __enable_if_t < is_null_pointer < _Tp > :: value > >
 __zero_as_null_pointer_constant ( _Tp ) = delete;
# 473 "/usr/include/c++/12/bits/stl_pair.h" 3
};
# 489 "/usr/include/c++/12/bits/stl_pair.h" 3
public:
# 480 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, std::__enable_if_t< __and_< __not_< is_reference< _U1> > , is_pointer< _T2> , is_constructible< _T1, _U1> , __not_< is_constructible< _T1, const _U1 &> > , is_convertible< _U1, _T1> > ::value, bool>
# 486 "/usr/include/c++/12/bits/stl_pair.h" 3
 = true>
# 487 "/usr/include/c++/12/bits/stl_pair.h" 3
__attribute((__deprecated__("use \'nullptr\' instead of \'0\' to initialize std::pair of move-only type and pointer"))) constexpr
# 489 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(_U1 &&__x, __zero_as_null_pointer_constant, ...) : first(std::forward< _U1> (__x)), second(nullptr)
# 490 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 492 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, std::__enable_if_t< __and_< __not_< is_reference< _U1> > , is_pointer< _T2> , is_constructible< _T1, _U1> , __not_< is_constructible< _T1, const _U1 &> > , __not_< is_convertible< _U1, _T1> > > ::value, bool>
# 498 "/usr/include/c++/12/bits/stl_pair.h" 3
 = false>
# 499 "/usr/include/c++/12/bits/stl_pair.h" 3
__attribute((__deprecated__("use \'nullptr\' instead of \'0\' to initialize std::pair of move-only type and pointer"))) constexpr explicit
# 501 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(_U1 &&__x, __zero_as_null_pointer_constant, ...) : first(std::forward< _U1> (__x)), second(nullptr)
# 502 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 504 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U2, std::__enable_if_t< __and_< is_pointer< _T1> , __not_< is_reference< _U2> > , is_constructible< _T2, _U2> , __not_< is_constructible< _T2, const _U2 &> > , is_convertible< _U2, _T2> > ::value, bool>
# 510 "/usr/include/c++/12/bits/stl_pair.h" 3
 = true>
# 511 "/usr/include/c++/12/bits/stl_pair.h" 3
__attribute((__deprecated__("use \'nullptr\' instead of \'0\' to initialize std::pair of move-only type and pointer"))) constexpr
# 513 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(__zero_as_null_pointer_constant, _U2 &&__y, ...) : first(nullptr), second(std::forward< _U2> (__y))
# 514 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 516 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U2, std::__enable_if_t< __and_< is_pointer< _T1> , __not_< is_reference< _U2> > , is_constructible< _T2, _U2> , __not_< is_constructible< _T2, const _U2 &> > , __not_< is_convertible< _U2, _T2> > > ::value, bool>
# 522 "/usr/include/c++/12/bits/stl_pair.h" 3
 = false>
# 523 "/usr/include/c++/12/bits/stl_pair.h" 3
__attribute((__deprecated__("use \'nullptr\' instead of \'0\' to initialize std::pair of move-only type and pointer"))) constexpr explicit
# 525 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(__zero_as_null_pointer_constant, _U2 &&__y, ...) : first(nullptr), second(std::forward< _U2> (__y))
# 526 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 530 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2, typename enable_if< _PCC< true, _T1, _T2> ::template _MoveConstructiblePair< _U1, _U2> () && _PCC< true, _T1, _T2> ::template _ImplicitlyMoveConvertiblePair< _U1, _U2> (), bool> ::type
# 535 "/usr/include/c++/12/bits/stl_pair.h" 3
 = true> constexpr
# 536 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(_U1 &&__x, _U2 &&__y) : first(std::forward< _U1> (__x)), second(std::forward< _U2> (__y))
# 537 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 539 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2, typename enable_if< _PCC< true, _T1, _T2> ::template _MoveConstructiblePair< _U1, _U2> () && (!_PCC< true, _T1, _T2> ::template _ImplicitlyMoveConvertiblePair< _U1, _U2> ()), bool> ::type
# 544 "/usr/include/c++/12/bits/stl_pair.h" 3
 = false> constexpr explicit
# 545 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(_U1 &&__x, _U2 &&__y) : first(std::forward< _U1> (__x)), second(std::forward< _U2> (__y))
# 546 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 549 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2, typename enable_if< _PCC< (!is_same< _T1, _U1> ::value) || (!is_same< _T2, _U2> ::value), _T1, _T2> ::template _MoveConstructiblePair< _U1, _U2> () && _PCC< (!is_same< _T1, _U1> ::value) || (!is_same< _T2, _U2> ::value), _T1, _T2> ::template _ImplicitlyMoveConvertiblePair< _U1, _U2> (), bool> ::type
# 554 "/usr/include/c++/12/bits/stl_pair.h" 3
 = true> constexpr
# 555 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(std::pair< _U1, _U2> &&__p) : first(std::forward< _U1> ((__p.first))), second(std::forward< _U2> ((__p.second)))
# 557 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 559 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2, typename enable_if< _PCC< (!is_same< _T1, _U1> ::value) || (!is_same< _T2, _U2> ::value), _T1, _T2> ::template _MoveConstructiblePair< _U1, _U2> () && (!_PCC< (!is_same< _T1, _U1> ::value) || (!is_same< _T2, _U2> ::value), _T1, _T2> ::template _ImplicitlyMoveConvertiblePair< _U1, _U2> ()), bool> ::type
# 564 "/usr/include/c++/12/bits/stl_pair.h" 3
 = false> constexpr explicit
# 565 "/usr/include/c++/12/bits/stl_pair.h" 3
pair(std::pair< _U1, _U2> &&__p) : first(std::forward< _U1> ((__p.first))), second(std::forward< _U2> ((__p.second)))
# 567 "/usr/include/c++/12/bits/stl_pair.h" 3
{ }
# 570 "/usr/include/c++/12/bits/stl_pair.h" 3
pair &operator=(std::__conditional_t< __and_< is_copy_assignable< _T1> , is_copy_assignable< _T2> > ::value, const pair &, const std::__nonesuch &>
# 572 "/usr/include/c++/12/bits/stl_pair.h" 3
__p)
# 573 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 574 "/usr/include/c++/12/bits/stl_pair.h" 3
(first) = (__p.first);
# 575 "/usr/include/c++/12/bits/stl_pair.h" 3
(second) = (__p.second);
# 576 "/usr/include/c++/12/bits/stl_pair.h" 3
return *this;
# 577 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 580 "/usr/include/c++/12/bits/stl_pair.h" 3
pair &operator=(std::__conditional_t< __and_< is_move_assignable< _T1> , is_move_assignable< _T2> > ::value, pair &&, std::__nonesuch &&>
# 582 "/usr/include/c++/12/bits/stl_pair.h" 3
__p) noexcept(__and_< is_nothrow_move_assignable< _T1> , is_nothrow_move_assignable< _T2> > ::value)
# 585 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 586 "/usr/include/c++/12/bits/stl_pair.h" 3
(first) = std::forward< first_type> ((__p.first));
# 587 "/usr/include/c++/12/bits/stl_pair.h" 3
(second) = std::forward< second_type> ((__p.second));
# 588 "/usr/include/c++/12/bits/stl_pair.h" 3
return *this;
# 589 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 591 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> typename enable_if< __and_< is_assignable< _T1 &, const _U1 &> , is_assignable< _T2 &, const _U2 &> > ::value, pair &> ::type
# 595 "/usr/include/c++/12/bits/stl_pair.h" 3
operator=(const std::pair< _U1, _U2> &__p)
# 596 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 597 "/usr/include/c++/12/bits/stl_pair.h" 3
(first) = (__p.first);
# 598 "/usr/include/c++/12/bits/stl_pair.h" 3
(second) = (__p.second);
# 599 "/usr/include/c++/12/bits/stl_pair.h" 3
return *this;
# 600 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 602 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _U1, class _U2> typename enable_if< __and_< is_assignable< _T1 &, _U1 &&> , is_assignable< _T2 &, _U2 &&> > ::value, pair &> ::type
# 606 "/usr/include/c++/12/bits/stl_pair.h" 3
operator=(std::pair< _U1, _U2> &&__p)
# 607 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 608 "/usr/include/c++/12/bits/stl_pair.h" 3
(first) = std::forward< _U1> ((__p.first));
# 609 "/usr/include/c++/12/bits/stl_pair.h" 3
(second) = std::forward< _U2> ((__p.second));
# 610 "/usr/include/c++/12/bits/stl_pair.h" 3
return *this;
# 611 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 631 "/usr/include/c++/12/bits/stl_pair.h" 3
};
# 636 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2> pair(_T1, _T2)->pair< _T1, _T2> ;
# 640 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 642 "/usr/include/c++/12/bits/stl_pair.h" 3
operator==(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 643 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return ((__x.first) == (__y.first)) && ((__x.second) == (__y.second)); }
# 663 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 665 "/usr/include/c++/12/bits/stl_pair.h" 3
operator<(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 666 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return ((__x.first) < (__y.first)) || ((!((__y.first) < (__x.first))) && ((__x.second) < (__y.second)));
# 667 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 670 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 672 "/usr/include/c++/12/bits/stl_pair.h" 3
operator!=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 673 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return !(__x == __y); }
# 676 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 678 "/usr/include/c++/12/bits/stl_pair.h" 3
operator>(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 679 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __y < __x; }
# 682 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 684 "/usr/include/c++/12/bits/stl_pair.h" 3
operator<=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 685 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return !(__y < __x); }
# 688 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr bool
# 690 "/usr/include/c++/12/bits/stl_pair.h" 3
operator>=(const pair< _T1, _T2> &__x, const pair< _T1, _T2> &__y)
# 691 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return !(__x < __y); }
# 700 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2> inline typename enable_if< __and_< __is_swappable< _T1> , __is_swappable< _T2> > ::value> ::type
# 709 "/usr/include/c++/12/bits/stl_pair.h" 3
swap(pair< _T1, _T2> &__x, pair< _T1, _T2> &__y) noexcept(noexcept(__x.swap(__y)))
# 711 "/usr/include/c++/12/bits/stl_pair.h" 3
{ __x.swap(__y); }
# 714 "/usr/include/c++/12/bits/stl_pair.h" 3
template < typename _T1, typename _T2 >
    typename enable_if < ! __and_ < __is_swappable < _T1 >,
          __is_swappable < _T2 > > :: value > :: type
    swap ( pair < _T1, _T2 > &, pair < _T1, _T2 > & ) = delete;
# 740 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2> constexpr pair< typename __decay_and_strip< _T1> ::__type, typename __decay_and_strip< _T2> ::__type>
# 743 "/usr/include/c++/12/bits/stl_pair.h" 3
make_pair(_T1 &&__x, _T2 &&__y)
# 744 "/usr/include/c++/12/bits/stl_pair.h" 3
{
# 745 "/usr/include/c++/12/bits/stl_pair.h" 3
typedef typename __decay_and_strip< _T1> ::__type __ds_type1;
# 746 "/usr/include/c++/12/bits/stl_pair.h" 3
typedef typename __decay_and_strip< _T2> ::__type __ds_type2;
# 747 "/usr/include/c++/12/bits/stl_pair.h" 3
typedef pair< typename __decay_and_strip< _T1> ::__type, typename __decay_and_strip< _T2> ::__type> __pair_type;
# 748 "/usr/include/c++/12/bits/stl_pair.h" 3
return __pair_type(std::forward< _T1> (__x), std::forward< _T2> (__y));
# 749 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 763 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _T1, class _T2>
# 764 "/usr/include/c++/12/bits/stl_pair.h" 3
struct __is_tuple_like_impl< pair< _T1, _T2> > : public true_type {
# 765 "/usr/include/c++/12/bits/stl_pair.h" 3
};
# 769 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2>
# 770 "/usr/include/c++/12/bits/stl_pair.h" 3
struct tuple_size< pair< _Tp1, _Tp2> > : public integral_constant< unsigned long, 2UL> {
# 771 "/usr/include/c++/12/bits/stl_pair.h" 3
};
# 774 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2>
# 775 "/usr/include/c++/12/bits/stl_pair.h" 3
struct tuple_element< 0, pair< _Tp1, _Tp2> > {
# 776 "/usr/include/c++/12/bits/stl_pair.h" 3
typedef _Tp1 type; };
# 779 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2>
# 780 "/usr/include/c++/12/bits/stl_pair.h" 3
struct tuple_element< 1, pair< _Tp1, _Tp2> > {
# 781 "/usr/include/c++/12/bits/stl_pair.h" 3
typedef _Tp2 type; };
# 784 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2> constexpr size_t
# 785 "/usr/include/c++/12/bits/stl_pair.h" 3
tuple_size_v< pair< _Tp1, _Tp2> > = (2);
# 787 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2> constexpr size_t
# 788 "/usr/include/c++/12/bits/stl_pair.h" 3
tuple_size_v< const pair< _Tp1, _Tp2> > = (2);
# 790 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp> constexpr bool
# 791 "/usr/include/c++/12/bits/stl_pair.h" 3
__is_pair = false;
# 793 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp, class _Up> constexpr bool
# 794 "/usr/include/c++/12/bits/stl_pair.h" 3
__is_pair< pair< _Tp, _Up> > = true;
# 796 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp, class _Up> constexpr bool
# 797 "/usr/include/c++/12/bits/stl_pair.h" 3
__is_pair< const pair< _Tp, _Up> > = true;
# 801 "/usr/include/c++/12/bits/stl_pair.h" 3
template< size_t _Int> struct __pair_get;
# 805 "/usr/include/c++/12/bits/stl_pair.h" 3
template<> struct __pair_get< 0UL> {
# 807 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2> static constexpr _Tp1 &
# 809 "/usr/include/c++/12/bits/stl_pair.h" 3
__get(pair< _Tp1, _Tp2> &__pair) noexcept
# 810 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __pair.first; }
# 812 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2> static constexpr _Tp1 &&
# 814 "/usr/include/c++/12/bits/stl_pair.h" 3
__move_get(pair< _Tp1, _Tp2> &&__pair) noexcept
# 815 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return std::forward< _Tp1> ((__pair.first)); }
# 817 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2> static constexpr const _Tp1 &
# 819 "/usr/include/c++/12/bits/stl_pair.h" 3
__const_get(const pair< _Tp1, _Tp2> &__pair) noexcept
# 820 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __pair.first; }
# 822 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2> static constexpr const _Tp1 &&
# 824 "/usr/include/c++/12/bits/stl_pair.h" 3
__const_move_get(const pair< _Tp1, _Tp2> &&__pair) noexcept
# 825 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return std::forward< const _Tp1> ((__pair.first)); }
# 826 "/usr/include/c++/12/bits/stl_pair.h" 3
};
# 829 "/usr/include/c++/12/bits/stl_pair.h" 3
template<> struct __pair_get< 1UL> {
# 831 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2> static constexpr _Tp2 &
# 833 "/usr/include/c++/12/bits/stl_pair.h" 3
__get(pair< _Tp1, _Tp2> &__pair) noexcept
# 834 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __pair.second; }
# 836 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2> static constexpr _Tp2 &&
# 838 "/usr/include/c++/12/bits/stl_pair.h" 3
__move_get(pair< _Tp1, _Tp2> &&__pair) noexcept
# 839 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return std::forward< _Tp2> ((__pair.second)); }
# 841 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2> static constexpr const _Tp2 &
# 843 "/usr/include/c++/12/bits/stl_pair.h" 3
__const_get(const pair< _Tp1, _Tp2> &__pair) noexcept
# 844 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __pair.second; }
# 846 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp1, class _Tp2> static constexpr const _Tp2 &&
# 848 "/usr/include/c++/12/bits/stl_pair.h" 3
__const_move_get(const pair< _Tp1, _Tp2> &&__pair) noexcept
# 849 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return std::forward< const _Tp2> ((__pair.second)); }
# 850 "/usr/include/c++/12/bits/stl_pair.h" 3
};
# 857 "/usr/include/c++/12/bits/stl_pair.h" 3
template< size_t _Int, class _Tp1, class _Tp2> constexpr typename tuple_element< _Int, pair< _Tp1, _Tp2> > ::type &
# 859 "/usr/include/c++/12/bits/stl_pair.h" 3
get(pair< _Tp1, _Tp2> &__in) noexcept
# 860 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __pair_get< _Int> ::__get(__in); }
# 862 "/usr/include/c++/12/bits/stl_pair.h" 3
template< size_t _Int, class _Tp1, class _Tp2> constexpr typename tuple_element< _Int, pair< _Tp1, _Tp2> > ::type &&
# 864 "/usr/include/c++/12/bits/stl_pair.h" 3
get(pair< _Tp1, _Tp2> &&__in) noexcept
# 865 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __pair_get< _Int> ::__move_get(std::move(__in)); }
# 867 "/usr/include/c++/12/bits/stl_pair.h" 3
template< size_t _Int, class _Tp1, class _Tp2> constexpr const typename tuple_element< _Int, pair< _Tp1, _Tp2> > ::type &
# 869 "/usr/include/c++/12/bits/stl_pair.h" 3
get(const pair< _Tp1, _Tp2> &__in) noexcept
# 870 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __pair_get< _Int> ::__const_get(__in); }
# 872 "/usr/include/c++/12/bits/stl_pair.h" 3
template< size_t _Int, class _Tp1, class _Tp2> constexpr const typename tuple_element< _Int, pair< _Tp1, _Tp2> > ::type &&
# 874 "/usr/include/c++/12/bits/stl_pair.h" 3
get(const pair< _Tp1, _Tp2> &&__in) noexcept
# 875 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __pair_get< _Int> ::__const_move_get(std::move(__in)); }
# 881 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp, class _Up> constexpr _Tp &
# 883 "/usr/include/c++/12/bits/stl_pair.h" 3
get(pair< _Tp, _Up> &__p) noexcept
# 884 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __p.first; }
# 886 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp, class _Up> constexpr const _Tp &
# 888 "/usr/include/c++/12/bits/stl_pair.h" 3
get(const pair< _Tp, _Up> &__p) noexcept
# 889 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __p.first; }
# 891 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp, class _Up> constexpr _Tp &&
# 893 "/usr/include/c++/12/bits/stl_pair.h" 3
get(pair< _Tp, _Up> &&__p) noexcept
# 894 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return std::move((__p.first)); }
# 896 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp, class _Up> constexpr const _Tp &&
# 898 "/usr/include/c++/12/bits/stl_pair.h" 3
get(const pair< _Tp, _Up> &&__p) noexcept
# 899 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return std::move((__p.first)); }
# 901 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp, class _Up> constexpr _Tp &
# 903 "/usr/include/c++/12/bits/stl_pair.h" 3
get(pair< _Up, _Tp> &__p) noexcept
# 904 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __p.second; }
# 906 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp, class _Up> constexpr const _Tp &
# 908 "/usr/include/c++/12/bits/stl_pair.h" 3
get(const pair< _Up, _Tp> &__p) noexcept
# 909 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return __p.second; }
# 911 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp, class _Up> constexpr _Tp &&
# 913 "/usr/include/c++/12/bits/stl_pair.h" 3
get(pair< _Up, _Tp> &&__p) noexcept
# 914 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return std::move((__p.second)); }
# 916 "/usr/include/c++/12/bits/stl_pair.h" 3
template< class _Tp, class _Up> constexpr const _Tp &&
# 918 "/usr/include/c++/12/bits/stl_pair.h" 3
get(const pair< _Up, _Tp> &&__p) noexcept
# 919 "/usr/include/c++/12/bits/stl_pair.h" 3
{ return std::move((__p.second)); }
# 926 "/usr/include/c++/12/bits/stl_pair.h" 3
}
# 74 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
namespace std __attribute((__visibility__("default"))) {
# 93 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct input_iterator_tag { };
# 96 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct output_iterator_tag { };
# 99 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct forward_iterator_tag : public input_iterator_tag { };
# 103 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct bidirectional_iterator_tag : public forward_iterator_tag { };
# 107 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct random_access_iterator_tag : public bidirectional_iterator_tag { };
# 125 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
template< class _Category, class _Tp, class _Distance = ptrdiff_t, class
# 126 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
_Pointer = _Tp *, class _Reference = _Tp &>
# 127 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct [[__deprecated__]] iterator {
# 130 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef _Category iterator_category;
# 132 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 134 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef _Distance difference_type;
# 136 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef _Pointer pointer;
# 138 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef _Reference reference;
# 139 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
};
# 149 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
template< class _Iterator> struct iterator_traits;
# 155 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
template< class _Iterator, class = __void_t< > >
# 156 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct __iterator_traits { };
# 160 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 161 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct __iterator_traits< _Iterator, __void_t< typename _Iterator::iterator_category, typename _Iterator::value_type, typename _Iterator::difference_type, typename _Iterator::pointer, typename _Iterator::reference> > {
# 168 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::iterator_category iterator_category;
# 169 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::value_type value_type;
# 170 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::difference_type difference_type;
# 171 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::pointer pointer;
# 172 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef typename _Iterator::reference reference;
# 173 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
};
# 176 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
template< class _Iterator>
# 177 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct iterator_traits : public __iterator_traits< _Iterator> {
# 178 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
};
# 209 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 210 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct iterator_traits< _Tp *> {
# 212 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 213 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 214 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 215 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef _Tp *pointer;
# 216 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef _Tp &reference;
# 217 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
};
# 220 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
template< class _Tp>
# 221 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct iterator_traits< const _Tp *> {
# 223 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef random_access_iterator_tag iterator_category;
# 224 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef _Tp value_type;
# 225 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef ptrdiff_t difference_type;
# 226 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef const _Tp *pointer;
# 227 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef const _Tp &reference;
# 228 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
};
# 235 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
template< class _Iter> constexpr typename iterator_traits< _Iter> ::iterator_category
# 238 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
__iterator_category(const _Iter &)
# 239 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
{ return typename iterator_traits< _Iter> ::iterator_category(); }
# 244 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
template< class _Iter> using __iterator_category_t = typename iterator_traits< _Iter> ::iterator_category;
# 248 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
template< class _InIter> using _RequireInputIter = __enable_if_t< is_convertible< __iterator_category_t< _InIter> , input_iterator_tag> ::value> ;
# 253 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
template< class _It, class
# 254 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
_Cat = __iterator_category_t< _It> >
# 255 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
struct __is_random_access_iter : public is_base_of< random_access_iterator_tag, _Cat> {
# 258 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
typedef is_base_of< std::random_access_iterator_tag, _Cat> _Base;
# 259 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
enum { __value = is_base_of< std::random_access_iterator_tag, _Cat> ::value};
# 260 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
};
# 269 "/usr/include/c++/12/bits/stl_iterator_base_types.h" 3
}
# 68 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
namespace std __attribute((__visibility__("default"))) {
# 74 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class > struct _List_iterator;
# 75 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class > struct _List_const_iterator;
# 78 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator> constexpr typename iterator_traits< _InputIterator> ::difference_type
# 81 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
__distance(_InputIterator __first, _InputIterator __last, input_iterator_tag)
# 83 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
{
# 87 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
typename iterator_traits< _InputIterator> ::difference_type __n = (0);
# 88 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
while (__first != __last)
# 89 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
{
# 90 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
++__first;
# 91 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
++__n;
# 92 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
}
# 93 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
return __n;
# 94 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
}
# 96 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class _RandomAccessIterator> constexpr typename iterator_traits< _RandomAccessIterator> ::difference_type
# 99 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
__distance(_RandomAccessIterator __first, _RandomAccessIterator __last, random_access_iterator_tag)
# 101 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
{
# 105 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
return __last - __first;
# 106 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
}
# 110 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class _Tp> ptrdiff_t __distance(_List_iterator< _Tp> , _List_iterator< _Tp> , input_iterator_tag);
# 116 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class _Tp> ptrdiff_t __distance(_List_const_iterator< _Tp> , _List_const_iterator< _Tp> , input_iterator_tag);
# 125 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template < typename _OutputIterator >
    void
    __distance ( _OutputIterator, _OutputIterator, output_iterator_tag ) = delete;
# 143 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator>
# 144 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
[[__nodiscard__]] constexpr typename iterator_traits< _InputIterator> ::difference_type
# 147 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
distance(_InputIterator __first, _InputIterator __last)
# 148 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
{
# 150 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
return std::__distance(__first, __last, std::__iterator_category(__first));
# 152 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
}
# 154 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator, class _Distance> constexpr void
# 156 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
__advance(_InputIterator &__i, _Distance __n, input_iterator_tag)
# 157 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
{
# 160 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
do { if (std::__is_constant_evaluated() && (!((bool)(__n >= 0)))) { __builtin_unreachable(); } } while (false);
# 161 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
while (__n--) {
# 162 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
++__i; }
# 163 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
}
# 165 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class _BidirectionalIterator, class _Distance> constexpr void
# 167 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
__advance(_BidirectionalIterator &__i, _Distance __n, bidirectional_iterator_tag)
# 169 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
{
# 173 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
if (__n > 0) {
# 174 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
while (__n--) {
# 175 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
++__i; } } else {
# 177 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
while (__n++) {
# 178 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
--__i; } }
# 179 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
}
# 181 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class _RandomAccessIterator, class _Distance> constexpr void
# 183 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
__advance(_RandomAccessIterator &__i, _Distance __n, random_access_iterator_tag)
# 185 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
{
# 189 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
if (__builtin_constant_p(__n) && (__n == 1)) {
# 190 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
++__i; } else {
# 191 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
if (__builtin_constant_p(__n) && (__n == (-1))) {
# 192 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
--__i; } else {
# 194 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
__i += __n; } }
# 195 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
}
# 199 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template < typename _OutputIterator, typename _Distance >
    void
    __advance ( _OutputIterator &, _Distance, output_iterator_tag ) = delete;
# 216 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator, class _Distance> constexpr void
# 218 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
advance(_InputIterator &__i, _Distance __n)
# 219 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
{
# 221 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
typename iterator_traits< _InputIterator> ::difference_type __d = __n;
# 222 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
std::__advance(__i, __d, std::__iterator_category(__i));
# 223 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
}
# 227 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class _InputIterator>
# 228 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
[[__nodiscard__]] constexpr _InputIterator
# 230 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
next(_InputIterator __x, typename iterator_traits< _InputIterator> ::difference_type
# 231 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
__n = 1)
# 232 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
{
# 235 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
std::advance(__x, __n);
# 236 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
return __x;
# 237 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
}
# 239 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
template< class _BidirectionalIterator>
# 240 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
[[__nodiscard__]] constexpr _BidirectionalIterator
# 242 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
prev(_BidirectionalIterator __x, typename iterator_traits< _BidirectionalIterator> ::difference_type
# 243 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
__n = 1)
# 244 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
{
# 248 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
std::advance(__x, -__n);
# 249 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
return __x;
# 250 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
}
# 255 "/usr/include/c++/12/bits/stl_iterator_base_funcs.h" 3
}
# 46 "/usr/include/c++/12/bits/ptr_traits.h" 3
namespace std __attribute((__visibility__("default"))) {
# 52 "/usr/include/c++/12/bits/ptr_traits.h" 3
class __undefined;
# 56 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Tp>
# 57 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct __get_first_arg {
# 58 "/usr/include/c++/12/bits/ptr_traits.h" 3
using type = __undefined; };
# 60 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< template< class , class ...> class _SomeTemplate, class _Tp, class ...
# 61 "/usr/include/c++/12/bits/ptr_traits.h" 3
_Types>
# 62 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct __get_first_arg< _SomeTemplate< _Tp, _Types...> > {
# 63 "/usr/include/c++/12/bits/ptr_traits.h" 3
using type = _Tp; };
# 67 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Tp, class _Up>
# 68 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct __replace_first_arg {
# 69 "/usr/include/c++/12/bits/ptr_traits.h" 3
};
# 71 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< template< class , class ...> class _SomeTemplate, class _Up, class
# 72 "/usr/include/c++/12/bits/ptr_traits.h" 3
_Tp, class ..._Types>
# 73 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct __replace_first_arg< _SomeTemplate< _Tp, _Types...> , _Up> {
# 74 "/usr/include/c++/12/bits/ptr_traits.h" 3
using type = _SomeTemplate< _Up, _Types...> ; };
# 77 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Ptr, class = void>
# 78 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct __ptr_traits_elem : public __get_first_arg< _Ptr> {
# 79 "/usr/include/c++/12/bits/ptr_traits.h" 3
};
# 87 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Ptr>
# 88 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct __ptr_traits_elem< _Ptr, __void_t< typename _Ptr::element_type> > {
# 89 "/usr/include/c++/12/bits/ptr_traits.h" 3
using type = typename _Ptr::element_type; };
# 92 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Ptr> using __ptr_traits_elem_t = typename __ptr_traits_elem< _Ptr> ::type;
# 98 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Ptr, class _Elt, bool = is_void< _Elt> ::value>
# 99 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct __ptr_traits_ptr_to {
# 101 "/usr/include/c++/12/bits/ptr_traits.h" 3
using pointer = _Ptr;
# 102 "/usr/include/c++/12/bits/ptr_traits.h" 3
using element_type = _Elt;
# 111 "/usr/include/c++/12/bits/ptr_traits.h" 3
static pointer pointer_to(element_type &__r)
# 117 "/usr/include/c++/12/bits/ptr_traits.h" 3
{ return pointer::pointer_to(__r); }
# 118 "/usr/include/c++/12/bits/ptr_traits.h" 3
};
# 121 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Ptr, class _Elt>
# 122 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct __ptr_traits_ptr_to< _Ptr, _Elt, true> {
# 123 "/usr/include/c++/12/bits/ptr_traits.h" 3
};
# 126 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Tp>
# 127 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct __ptr_traits_ptr_to< _Tp *, _Tp, false> {
# 129 "/usr/include/c++/12/bits/ptr_traits.h" 3
using pointer = _Tp *;
# 130 "/usr/include/c++/12/bits/ptr_traits.h" 3
using element_type = _Tp;
# 138 "/usr/include/c++/12/bits/ptr_traits.h" 3
static pointer pointer_to(element_type &__r) noexcept
# 139 "/usr/include/c++/12/bits/ptr_traits.h" 3
{ return std::addressof(__r); }
# 140 "/usr/include/c++/12/bits/ptr_traits.h" 3
};
# 142 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Ptr, class _Elt>
# 143 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct __ptr_traits_impl : public __ptr_traits_ptr_to< _Ptr, _Elt> {
# 147 "/usr/include/c++/12/bits/ptr_traits.h" 3
private:
# 146 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Tp> using __diff_t = typename _Tp::difference_type;
# 149 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Tp, class _Up> using __rebind = __type_identity< typename _Tp::template rebind< _Up> > ;
# 154 "/usr/include/c++/12/bits/ptr_traits.h" 3
public: using pointer = _Ptr;
# 157 "/usr/include/c++/12/bits/ptr_traits.h" 3
using element_type = _Elt;
# 160 "/usr/include/c++/12/bits/ptr_traits.h" 3
using difference_type = std::__detected_or_t< std::ptrdiff_t, __diff_t, _Ptr> ;
# 163 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Up> using rebind = typename std::__detected_or_t< __replace_first_arg< _Ptr, _Up> , __rebind, _Ptr, _Up> ::type;
# 166 "/usr/include/c++/12/bits/ptr_traits.h" 3
};
# 170 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Ptr>
# 171 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct __ptr_traits_impl< _Ptr, __undefined> {
# 172 "/usr/include/c++/12/bits/ptr_traits.h" 3
};
# 180 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Ptr>
# 181 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct pointer_traits : public __ptr_traits_impl< _Ptr, __ptr_traits_elem_t< _Ptr> > {
# 182 "/usr/include/c++/12/bits/ptr_traits.h" 3
};
# 190 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Tp>
# 191 "/usr/include/c++/12/bits/ptr_traits.h" 3
struct pointer_traits< _Tp *> : public __ptr_traits_ptr_to< _Tp *, _Tp> {
# 194 "/usr/include/c++/12/bits/ptr_traits.h" 3
typedef _Tp *pointer;
# 196 "/usr/include/c++/12/bits/ptr_traits.h" 3
typedef _Tp element_type;
# 198 "/usr/include/c++/12/bits/ptr_traits.h" 3
typedef std::ptrdiff_t difference_type;
# 200 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Up> using rebind = _Up *;
# 201 "/usr/include/c++/12/bits/ptr_traits.h" 3
};
# 204 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Ptr, class _Tp> using __ptr_rebind = typename pointer_traits< _Ptr> ::template rebind< _Tp> ;
# 207 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Tp> constexpr _Tp *
# 209 "/usr/include/c++/12/bits/ptr_traits.h" 3
__to_address(_Tp *__ptr) noexcept
# 210 "/usr/include/c++/12/bits/ptr_traits.h" 3
{
# 211 "/usr/include/c++/12/bits/ptr_traits.h" 3
static_assert((!std::template is_function< _Tp> ::value), "not a function pointer");
# 212 "/usr/include/c++/12/bits/ptr_traits.h" 3
return __ptr;
# 213 "/usr/include/c++/12/bits/ptr_traits.h" 3
}
# 216 "/usr/include/c++/12/bits/ptr_traits.h" 3
template< class _Ptr> constexpr typename pointer_traits< _Ptr> ::element_type *
# 218 "/usr/include/c++/12/bits/ptr_traits.h" 3
__to_address(const _Ptr &__ptr)
# 219 "/usr/include/c++/12/bits/ptr_traits.h" 3
{ return std::__to_address(__ptr.operator->()); }
# 264 "/usr/include/c++/12/bits/ptr_traits.h" 3
}
# 88 "/usr/include/c++/12/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 109 "/usr/include/c++/12/bits/stl_iterator.h" 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wdeprecated-declarations"
# 131 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 132 "/usr/include/c++/12/bits/stl_iterator.h" 3
class reverse_iterator : public iterator< typename iterator_traits< _Iterator> ::iterator_category, typename iterator_traits< _Iterator> ::value_type, typename iterator_traits< _Iterator> ::difference_type, typename iterator_traits< _Iterator> ::pointer, typename iterator_traits< _Iterator> ::reference> {
# 139 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iter> friend class reverse_iterator;
# 151 "/usr/include/c++/12/bits/stl_iterator.h" 3
protected: _Iterator current;
# 153 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef iterator_traits< _Iterator> __traits_type;
# 156 "/usr/include/c++/12/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 157 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::pointer pointer;
# 159 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::difference_type difference_type;
# 160 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::reference reference;
# 182 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr reverse_iterator() noexcept(noexcept((_Iterator()))) : current()
# 185 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 191 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr explicit reverse_iterator(iterator_type __x) noexcept(noexcept(((_Iterator)__x))) : current(__x)
# 194 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 200 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr reverse_iterator(const reverse_iterator &__x) noexcept(noexcept(((_Iterator)(__x.current)))) : current(__x.current)
# 203 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 206 "/usr/include/c++/12/bits/stl_iterator.h" 3
reverse_iterator &operator=(const reverse_iterator &) = default;
# 213 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iter> constexpr
# 218 "/usr/include/c++/12/bits/stl_iterator.h" 3
reverse_iterator(const reverse_iterator< _Iter> &__x) noexcept(noexcept(((_Iterator)(__x.current)))) : current((__x.current))
# 221 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 224 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iter> constexpr reverse_iterator &
# 231 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator=(const reverse_iterator< _Iter> &__x) noexcept(noexcept(((current) = (__x.current))))
# 233 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 234 "/usr/include/c++/12/bits/stl_iterator.h" 3
(current) = (__x.current);
# 235 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 236 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 242 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr iterator_type
# 244 "/usr/include/c++/12/bits/stl_iterator.h" 3
base() const noexcept(noexcept(((_Iterator)(current))))
# 246 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return current; }
# 258 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr reference
# 260 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator*() const
# 261 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 262 "/usr/include/c++/12/bits/stl_iterator.h" 3
_Iterator __tmp = current;
# 263 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *(--__tmp);
# 264 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 271 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr pointer
# 273 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator->() const
# 278 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 281 "/usr/include/c++/12/bits/stl_iterator.h" 3
_Iterator __tmp = current;
# 282 "/usr/include/c++/12/bits/stl_iterator.h" 3
--__tmp;
# 283 "/usr/include/c++/12/bits/stl_iterator.h" 3
return _S_to_pointer(__tmp);
# 284 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 292 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr reverse_iterator &operator++()
# 293 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 294 "/usr/include/c++/12/bits/stl_iterator.h" 3
--(current);
# 295 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 296 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 304 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr reverse_iterator operator++(int)
# 305 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 306 "/usr/include/c++/12/bits/stl_iterator.h" 3
reverse_iterator __tmp = *this;
# 307 "/usr/include/c++/12/bits/stl_iterator.h" 3
--(current);
# 308 "/usr/include/c++/12/bits/stl_iterator.h" 3
return __tmp;
# 309 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 317 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr reverse_iterator &operator--()
# 318 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 319 "/usr/include/c++/12/bits/stl_iterator.h" 3
++(current);
# 320 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 321 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 329 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr reverse_iterator operator--(int)
# 330 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 331 "/usr/include/c++/12/bits/stl_iterator.h" 3
reverse_iterator __tmp = *this;
# 332 "/usr/include/c++/12/bits/stl_iterator.h" 3
++(current);
# 333 "/usr/include/c++/12/bits/stl_iterator.h" 3
return __tmp;
# 334 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 341 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr reverse_iterator
# 343 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator+(difference_type __n) const
# 344 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((reverse_iterator)((current) - __n)); }
# 353 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr reverse_iterator &operator+=(difference_type __n)
# 354 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 355 "/usr/include/c++/12/bits/stl_iterator.h" 3
(current) -= __n;
# 356 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 357 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 364 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr reverse_iterator
# 366 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator-(difference_type __n) const
# 367 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((reverse_iterator)((current) + __n)); }
# 376 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr reverse_iterator &operator-=(difference_type __n)
# 377 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 378 "/usr/include/c++/12/bits/stl_iterator.h" 3
(current) += __n;
# 379 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 380 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 387 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr reference
# 389 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator[](difference_type __n) const
# 390 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return *((*this) + __n); }
# 421 "/usr/include/c++/12/bits/stl_iterator.h" 3
private:
# 419 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Tp> static constexpr _Tp *
# 421 "/usr/include/c++/12/bits/stl_iterator.h" 3
_S_to_pointer(_Tp *__p)
# 422 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __p; }
# 424 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Tp> static constexpr pointer
# 426 "/usr/include/c++/12/bits/stl_iterator.h" 3
_S_to_pointer(_Tp __t)
# 427 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __t.operator->(); }
# 428 "/usr/include/c++/12/bits/stl_iterator.h" 3
};
# 441 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 442 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 444 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator==(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 445 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 446 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() == __y.base(); }
# 448 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 449 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 451 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 452 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 453 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __y.base() < __x.base(); }
# 455 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 456 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 458 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator!=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 459 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 460 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 462 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 463 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 465 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 466 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 467 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __y < __x; }
# 469 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 470 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 472 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 473 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 474 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 476 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 477 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 479 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>=(const reverse_iterator< _Iterator> &__x, const reverse_iterator< _Iterator> &
# 480 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 481 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 486 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 487 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 489 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator==(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 490 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 491 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() == __y.base(); }
# 493 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 494 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 496 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 497 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 498 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() > __y.base(); }
# 500 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 501 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 503 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator!=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 504 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 505 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() != __y.base(); }
# 507 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 508 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 510 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 511 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 512 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() < __y.base(); }
# 514 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR> constexpr bool
# 516 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 517 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 518 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() >= __y.base(); }
# 520 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 521 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 523 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>=(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 524 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 525 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() <= __y.base(); }
# 618 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 619 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr auto
# 621 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator-(const reverse_iterator< _IteratorL> &__x, const reverse_iterator< _IteratorR> &
# 622 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)->__decltype((__y.base() - __x.base()))
# 624 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __y.base() - __x.base(); }
# 627 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 628 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr reverse_iterator< _Iterator>
# 630 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator+(typename reverse_iterator< _Iterator> ::difference_type __n, const reverse_iterator< _Iterator> &
# 631 "/usr/include/c++/12/bits/stl_iterator.h" 3
__x)
# 632 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((reverse_iterator< _Iterator> )(__x.base() - __n)); }
# 636 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator> constexpr reverse_iterator< _Iterator>
# 638 "/usr/include/c++/12/bits/stl_iterator.h" 3
__make_reverse_iterator(_Iterator __i)
# 639 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((reverse_iterator< _Iterator> )(__i)); }
# 647 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 648 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr reverse_iterator< _Iterator>
# 650 "/usr/include/c++/12/bits/stl_iterator.h" 3
make_reverse_iterator(_Iterator __i)
# 651 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((reverse_iterator< _Iterator> )(__i)); }
# 662 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator> auto
# 665 "/usr/include/c++/12/bits/stl_iterator.h" 3
__niter_base(reverse_iterator< _Iterator> __it)->__decltype((__make_reverse_iterator(__niter_base(__it.base()))))
# 667 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __make_reverse_iterator(__niter_base(__it.base())); }
# 669 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 670 "/usr/include/c++/12/bits/stl_iterator.h" 3
struct __is_move_iterator< reverse_iterator< _Iterator> > : public std::__is_move_iterator< _Iterator> {
# 672 "/usr/include/c++/12/bits/stl_iterator.h" 3
};
# 674 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator> auto
# 677 "/usr/include/c++/12/bits/stl_iterator.h" 3
__miter_base(reverse_iterator< _Iterator> __it)->__decltype((__make_reverse_iterator(__miter_base(__it.base()))))
# 679 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __make_reverse_iterator(__miter_base(__it.base())); }
# 693 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Container>
# 694 "/usr/include/c++/12/bits/stl_iterator.h" 3
class back_insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 698 "/usr/include/c++/12/bits/stl_iterator.h" 3
protected: _Container *container;
# 702 "/usr/include/c++/12/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 709 "/usr/include/c++/12/bits/stl_iterator.h" 3
explicit back_insert_iterator(_Container &__x) : container(std::__addressof(__x))
# 710 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 733 "/usr/include/c++/12/bits/stl_iterator.h" 3
back_insert_iterator &operator=(const typename _Container::value_type &__value)
# 734 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 735 "/usr/include/c++/12/bits/stl_iterator.h" 3
(container)->push_back(__value);
# 736 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 737 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 741 "/usr/include/c++/12/bits/stl_iterator.h" 3
back_insert_iterator &operator=(typename _Container::value_type &&__value)
# 742 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 743 "/usr/include/c++/12/bits/stl_iterator.h" 3
(container)->push_back(std::move(__value));
# 744 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 745 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 749 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] back_insert_iterator &
# 751 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator*()
# 752 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return *this; }
# 757 "/usr/include/c++/12/bits/stl_iterator.h" 3
back_insert_iterator &operator++()
# 758 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return *this; }
# 763 "/usr/include/c++/12/bits/stl_iterator.h" 3
back_insert_iterator operator++(int)
# 764 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return *this; }
# 765 "/usr/include/c++/12/bits/stl_iterator.h" 3
};
# 778 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Container>
# 779 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline back_insert_iterator< _Container>
# 781 "/usr/include/c++/12/bits/stl_iterator.h" 3
back_inserter(_Container &__x)
# 782 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((back_insert_iterator< _Container> )(__x)); }
# 794 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Container>
# 795 "/usr/include/c++/12/bits/stl_iterator.h" 3
class front_insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 799 "/usr/include/c++/12/bits/stl_iterator.h" 3
protected: _Container *container;
# 803 "/usr/include/c++/12/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 810 "/usr/include/c++/12/bits/stl_iterator.h" 3
explicit front_insert_iterator(_Container &__x) : container(std::__addressof(__x))
# 811 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 834 "/usr/include/c++/12/bits/stl_iterator.h" 3
front_insert_iterator &operator=(const typename _Container::value_type &__value)
# 835 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 836 "/usr/include/c++/12/bits/stl_iterator.h" 3
(container)->push_front(__value);
# 837 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 838 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 842 "/usr/include/c++/12/bits/stl_iterator.h" 3
front_insert_iterator &operator=(typename _Container::value_type &&__value)
# 843 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 844 "/usr/include/c++/12/bits/stl_iterator.h" 3
(container)->push_front(std::move(__value));
# 845 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 846 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 850 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] front_insert_iterator &
# 852 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator*()
# 853 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return *this; }
# 858 "/usr/include/c++/12/bits/stl_iterator.h" 3
front_insert_iterator &operator++()
# 859 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return *this; }
# 864 "/usr/include/c++/12/bits/stl_iterator.h" 3
front_insert_iterator operator++(int)
# 865 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return *this; }
# 866 "/usr/include/c++/12/bits/stl_iterator.h" 3
};
# 879 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Container>
# 880 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline front_insert_iterator< _Container>
# 882 "/usr/include/c++/12/bits/stl_iterator.h" 3
front_inserter(_Container &__x)
# 883 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((front_insert_iterator< _Container> )(__x)); }
# 899 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Container>
# 900 "/usr/include/c++/12/bits/stl_iterator.h" 3
class insert_iterator : public iterator< output_iterator_tag, void, void, void, void> {
# 906 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename _Container::iterator _Iter;
# 909 "/usr/include/c++/12/bits/stl_iterator.h" 3
protected: _Container *container;
# 910 "/usr/include/c++/12/bits/stl_iterator.h" 3
_Iter iter;
# 914 "/usr/include/c++/12/bits/stl_iterator.h" 3
public: typedef _Container container_type;
# 925 "/usr/include/c++/12/bits/stl_iterator.h" 3
insert_iterator(_Container &__x, _Iter __i) : container(std::__addressof(__x)), iter(__i)
# 926 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 962 "/usr/include/c++/12/bits/stl_iterator.h" 3
insert_iterator &operator=(const typename _Container::value_type &__value)
# 963 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 964 "/usr/include/c++/12/bits/stl_iterator.h" 3
(iter) = (container)->insert(iter, __value);
# 965 "/usr/include/c++/12/bits/stl_iterator.h" 3
++(iter);
# 966 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 967 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 971 "/usr/include/c++/12/bits/stl_iterator.h" 3
insert_iterator &operator=(typename _Container::value_type &&__value)
# 972 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 973 "/usr/include/c++/12/bits/stl_iterator.h" 3
(iter) = (container)->insert(iter, std::move(__value));
# 974 "/usr/include/c++/12/bits/stl_iterator.h" 3
++(iter);
# 975 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 976 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 980 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] insert_iterator &
# 982 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator*()
# 983 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return *this; }
# 988 "/usr/include/c++/12/bits/stl_iterator.h" 3
insert_iterator &operator++()
# 989 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return *this; }
# 994 "/usr/include/c++/12/bits/stl_iterator.h" 3
insert_iterator &operator++(int)
# 995 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return *this; }
# 996 "/usr/include/c++/12/bits/stl_iterator.h" 3
};
# 998 "/usr/include/c++/12/bits/stl_iterator.h" 3
#pragma GCC diagnostic pop
# 1019 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Container>
# 1020 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline insert_iterator< _Container>
# 1022 "/usr/include/c++/12/bits/stl_iterator.h" 3
inserter(_Container &__x, typename _Container::iterator __i)
# 1023 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return insert_iterator< _Container> (__x, __i); }
# 1029 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1031 "/usr/include/c++/12/bits/stl_iterator.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 1042 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 1043 "/usr/include/c++/12/bits/stl_iterator.h" 3
class __normal_iterator {
# 1046 "/usr/include/c++/12/bits/stl_iterator.h" 3
protected: _Iterator _M_current;
# 1048 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef std::iterator_traits< _Iterator> __traits_type;
# 1051 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iter> using __convertible_from = std::__enable_if_t< std::is_convertible< _Iter, _Iterator> ::value> ;
# 1057 "/usr/include/c++/12/bits/stl_iterator.h" 3
public: typedef _Iterator iterator_type;
# 1058 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::iterator_category iterator_category;
# 1059 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::value_type value_type;
# 1060 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::difference_type difference_type;
# 1061 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::reference reference;
# 1062 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename std::iterator_traits< _Iterator> ::pointer pointer;
# 1068 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr __normal_iterator() noexcept : _M_current(_Iterator())
# 1069 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 1072 "/usr/include/c++/12/bits/stl_iterator.h" 3
explicit __normal_iterator(const _Iterator &__i) noexcept : _M_current(__i)
# 1073 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 1077 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iter, class = __convertible_from< _Iter> >
# 1079 "/usr/include/c++/12/bits/stl_iterator.h" 3
__normal_iterator(const __normal_iterator< _Iter, _Container> &__i) noexcept : _M_current(__i.base())
# 1090 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 1095 "/usr/include/c++/12/bits/stl_iterator.h" 3
reference operator*() const noexcept
# 1096 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return *(_M_current); }
# 1100 "/usr/include/c++/12/bits/stl_iterator.h" 3
pointer operator->() const noexcept
# 1101 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return _M_current; }
# 1105 "/usr/include/c++/12/bits/stl_iterator.h" 3
__normal_iterator &operator++() noexcept
# 1106 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 1107 "/usr/include/c++/12/bits/stl_iterator.h" 3
++(_M_current);
# 1108 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 1109 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1113 "/usr/include/c++/12/bits/stl_iterator.h" 3
__normal_iterator operator++(int) noexcept
# 1114 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current)++)); }
# 1119 "/usr/include/c++/12/bits/stl_iterator.h" 3
__normal_iterator &operator--() noexcept
# 1120 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 1121 "/usr/include/c++/12/bits/stl_iterator.h" 3
--(_M_current);
# 1122 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 1123 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1127 "/usr/include/c++/12/bits/stl_iterator.h" 3
__normal_iterator operator--(int) noexcept
# 1128 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current)--)); }
# 1133 "/usr/include/c++/12/bits/stl_iterator.h" 3
reference operator[](difference_type __n) const noexcept
# 1134 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return (_M_current)[__n]; }
# 1138 "/usr/include/c++/12/bits/stl_iterator.h" 3
__normal_iterator &operator+=(difference_type __n) noexcept
# 1139 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ (_M_current) += __n; return *this; }
# 1143 "/usr/include/c++/12/bits/stl_iterator.h" 3
__normal_iterator operator+(difference_type __n) const noexcept
# 1144 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current) + __n)); }
# 1148 "/usr/include/c++/12/bits/stl_iterator.h" 3
__normal_iterator &operator-=(difference_type __n) noexcept
# 1149 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ (_M_current) -= __n; return *this; }
# 1153 "/usr/include/c++/12/bits/stl_iterator.h" 3
__normal_iterator operator-(difference_type __n) const noexcept
# 1154 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((__normal_iterator)((_M_current) - __n)); }
# 1158 "/usr/include/c++/12/bits/stl_iterator.h" 3
const _Iterator &base() const noexcept
# 1159 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return _M_current; }
# 1160 "/usr/include/c++/12/bits/stl_iterator.h" 3
};
# 1210 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container>
# 1211 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1213 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator==(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 1214 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1216 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() == __rhs.base(); }
# 1218 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 1219 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1221 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator==(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 1222 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1224 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() == __rhs.base(); }
# 1226 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container>
# 1227 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1229 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator!=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 1230 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1232 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() != __rhs.base(); }
# 1234 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 1235 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1237 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator!=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 1238 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1240 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() != __rhs.base(); }
# 1243 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container>
# 1244 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1246 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 1247 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1249 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() < __rhs.base(); }
# 1251 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 1252 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1254 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 1255 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1257 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() < __rhs.base(); }
# 1259 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container>
# 1260 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1262 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 1263 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1265 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() > __rhs.base(); }
# 1267 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 1268 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1270 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 1271 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1273 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() > __rhs.base(); }
# 1275 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container>
# 1276 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1278 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 1279 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1281 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() <= __rhs.base(); }
# 1283 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 1284 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1286 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 1287 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1289 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() <= __rhs.base(); }
# 1291 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container>
# 1292 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1294 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>=(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 1295 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1297 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() >= __rhs.base(); }
# 1299 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 1300 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline bool
# 1302 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>=(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 1303 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1305 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() >= __rhs.base(); }
# 1312 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR, class _Container>
# 1315 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline auto
# 1317 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator-(const __normal_iterator< _IteratorL, _Container> &__lhs, const __normal_iterator< _IteratorR, _Container> &
# 1318 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept->__decltype((__lhs.base() - __rhs.base()))
# 1325 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() - __rhs.base(); }
# 1327 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 1328 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline typename __normal_iterator< _Iterator, _Container> ::difference_type
# 1330 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator-(const __normal_iterator< _Iterator, _Container> &__lhs, const __normal_iterator< _Iterator, _Container> &
# 1331 "/usr/include/c++/12/bits/stl_iterator.h" 3
__rhs) noexcept
# 1333 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __lhs.base() - __rhs.base(); }
# 1335 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _Container>
# 1336 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] inline __normal_iterator< _Iterator, _Container>
# 1338 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator+(typename __normal_iterator< _Iterator, _Container> ::difference_type
# 1339 "/usr/include/c++/12/bits/stl_iterator.h" 3
__n, const __normal_iterator< _Iterator, _Container> &__i) noexcept
# 1341 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((__normal_iterator< _Iterator, _Container> )(__i.base() + __n)); }
# 1344 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1346 "/usr/include/c++/12/bits/stl_iterator.h" 3
namespace std __attribute((__visibility__("default"))) {
# 1350 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> _Iterator
# 1353 "/usr/include/c++/12/bits/stl_iterator.h" 3
__niter_base(__gnu_cxx::__normal_iterator< _Iterator, _Container> __it) noexcept(std::template is_nothrow_copy_constructible< _Iterator> ::value)
# 1355 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __it.base(); }
# 1362 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _Container> constexpr auto
# 1364 "/usr/include/c++/12/bits/stl_iterator.h" 3
__to_address(const __gnu_cxx::__normal_iterator< _Iterator, _Container> &
# 1365 "/usr/include/c++/12/bits/stl_iterator.h" 3
__it) noexcept->__decltype((std::__to_address(__it.base())))
# 1367 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return std::__to_address(__it.base()); }
# 1417 "/usr/include/c++/12/bits/stl_iterator.h" 3
namespace __detail {
# 1433 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1444 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 1445 "/usr/include/c++/12/bits/stl_iterator.h" 3
class move_iterator {
# 1450 "/usr/include/c++/12/bits/stl_iterator.h" 3
_Iterator _M_current;
# 1452 "/usr/include/c++/12/bits/stl_iterator.h" 3
using __traits_type = iterator_traits< _Iterator> ;
# 1454 "/usr/include/c++/12/bits/stl_iterator.h" 3
using __base_ref = typename iterator_traits< _Iterator> ::reference;
# 1457 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iter2> friend class move_iterator;
# 1484 "/usr/include/c++/12/bits/stl_iterator.h" 3
public: using iterator_type = _Iterator;
# 1497 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::iterator_category iterator_category;
# 1498 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::value_type value_type;
# 1499 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef typename iterator_traits< _Iterator> ::difference_type difference_type;
# 1501 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef _Iterator pointer;
# 1504 "/usr/include/c++/12/bits/stl_iterator.h" 3
using reference = __conditional_t< is_reference< __base_ref> ::value, typename remove_reference< __base_ref> ::type &&, __base_ref> ;
# 1511 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr move_iterator() : _M_current()
# 1512 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 1515 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr explicit move_iterator(iterator_type __i) : _M_current(std::move(__i))
# 1516 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 1518 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iter> constexpr
# 1523 "/usr/include/c++/12/bits/stl_iterator.h" 3
move_iterator(const move_iterator< _Iter> &__i) : _M_current((__i._M_current))
# 1524 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ }
# 1526 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iter> constexpr move_iterator &
# 1532 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator=(const move_iterator< _Iter> &__i)
# 1533 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 1534 "/usr/include/c++/12/bits/stl_iterator.h" 3
(_M_current) = (__i._M_current);
# 1535 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 1536 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1539 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr iterator_type
# 1541 "/usr/include/c++/12/bits/stl_iterator.h" 3
base() const
# 1542 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return _M_current; }
# 1555 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr reference
# 1557 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator*() const
# 1561 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return static_cast< reference>(*(_M_current)); }
# 1564 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr pointer
# 1566 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator->() const
# 1567 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return _M_current; }
# 1570 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr move_iterator &operator++()
# 1571 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 1572 "/usr/include/c++/12/bits/stl_iterator.h" 3
++(_M_current);
# 1573 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 1574 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1577 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr move_iterator operator++(int)
# 1578 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 1579 "/usr/include/c++/12/bits/stl_iterator.h" 3
move_iterator __tmp = *this;
# 1580 "/usr/include/c++/12/bits/stl_iterator.h" 3
++(_M_current);
# 1581 "/usr/include/c++/12/bits/stl_iterator.h" 3
return __tmp;
# 1582 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1591 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr move_iterator &operator--()
# 1592 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 1593 "/usr/include/c++/12/bits/stl_iterator.h" 3
--(_M_current);
# 1594 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 1595 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1598 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr move_iterator operator--(int)
# 1599 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 1600 "/usr/include/c++/12/bits/stl_iterator.h" 3
move_iterator __tmp = *this;
# 1601 "/usr/include/c++/12/bits/stl_iterator.h" 3
--(_M_current);
# 1602 "/usr/include/c++/12/bits/stl_iterator.h" 3
return __tmp;
# 1603 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1605 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr move_iterator
# 1607 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator+(difference_type __n) const
# 1608 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((move_iterator)((_M_current) + __n)); }
# 1611 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr move_iterator &operator+=(difference_type __n)
# 1612 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 1613 "/usr/include/c++/12/bits/stl_iterator.h" 3
(_M_current) += __n;
# 1614 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 1615 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1617 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr move_iterator
# 1619 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator-(difference_type __n) const
# 1620 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((move_iterator)((_M_current) - __n)); }
# 1623 "/usr/include/c++/12/bits/stl_iterator.h" 3
constexpr move_iterator &operator-=(difference_type __n)
# 1624 "/usr/include/c++/12/bits/stl_iterator.h" 3
{
# 1625 "/usr/include/c++/12/bits/stl_iterator.h" 3
(_M_current) -= __n;
# 1626 "/usr/include/c++/12/bits/stl_iterator.h" 3
return *this;
# 1627 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 1629 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr reference
# 1631 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator[](difference_type __n) const
# 1635 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return std::move((_M_current)[__n]); }
# 1669 "/usr/include/c++/12/bits/stl_iterator.h" 3
};
# 1671 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 1672 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1674 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator==(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1675 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1679 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() == __y.base(); }
# 1690 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 1691 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1693 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator!=(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1694 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1695 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 1698 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 1699 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1701 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1702 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1706 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() < __y.base(); }
# 1708 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 1709 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1711 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<=(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1712 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1716 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 1718 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 1719 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1721 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1722 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1726 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __y < __x; }
# 1728 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 1729 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1731 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>=(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1732 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1736 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 1741 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 1742 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1744 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator==(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1745 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1746 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() == __y.base(); }
# 1756 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 1757 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1759 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator!=(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1760 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1761 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return !(__x == __y); }
# 1763 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 1764 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1766 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1767 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1768 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() < __y.base(); }
# 1770 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 1771 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1773 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator<=(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1774 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1775 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return !(__y < __x); }
# 1777 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 1778 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1780 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1781 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1782 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __y < __x; }
# 1784 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 1785 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr bool
# 1787 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator>=(const move_iterator< _Iterator> &__x, const move_iterator< _Iterator> &
# 1788 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)
# 1789 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return !(__x < __y); }
# 1793 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _IteratorL, class _IteratorR>
# 1794 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr auto
# 1796 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator-(const move_iterator< _IteratorL> &__x, const move_iterator< _IteratorR> &
# 1797 "/usr/include/c++/12/bits/stl_iterator.h" 3
__y)->__decltype((__x.base() - __y.base()))
# 1799 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x.base() - __y.base(); }
# 1801 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 1802 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr move_iterator< _Iterator>
# 1804 "/usr/include/c++/12/bits/stl_iterator.h" 3
operator+(typename move_iterator< _Iterator> ::difference_type __n, const move_iterator< _Iterator> &
# 1805 "/usr/include/c++/12/bits/stl_iterator.h" 3
__x)
# 1806 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __x + __n; }
# 1808 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 1809 "/usr/include/c++/12/bits/stl_iterator.h" 3
[[__nodiscard__]] constexpr move_iterator< _Iterator>
# 1811 "/usr/include/c++/12/bits/stl_iterator.h" 3
make_move_iterator(_Iterator __i)
# 1812 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return ((move_iterator< _Iterator> )(std::move(__i))); }
# 1814 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator, class _ReturnType = __conditional_t< __move_if_noexcept_cond< typename iterator_traits< _Iterator> ::value_type> ::value, _Iterator, move_iterator< _Iterator> > > constexpr _ReturnType
# 1819 "/usr/include/c++/12/bits/stl_iterator.h" 3
__make_move_if_noexcept_iterator(_Iterator __i)
# 1820 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return (_ReturnType)__i; }
# 1824 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Tp, class _ReturnType = __conditional_t< __move_if_noexcept_cond< _Tp> ::value, const _Tp *, move_iterator< _Tp *> > > constexpr _ReturnType
# 1828 "/usr/include/c++/12/bits/stl_iterator.h" 3
__make_move_if_noexcept_iterator(_Tp *__i)
# 1829 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return (_ReturnType)__i; }
# 2570 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator> auto
# 2573 "/usr/include/c++/12/bits/stl_iterator.h" 3
__niter_base(move_iterator< _Iterator> __it)->__decltype((make_move_iterator(__niter_base(__it.base()))))
# 2575 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return make_move_iterator(__niter_base(__it.base())); }
# 2577 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator>
# 2578 "/usr/include/c++/12/bits/stl_iterator.h" 3
struct __is_move_iterator< move_iterator< _Iterator> > {
# 2580 "/usr/include/c++/12/bits/stl_iterator.h" 3
enum { __value = 1};
# 2581 "/usr/include/c++/12/bits/stl_iterator.h" 3
typedef __true_type __type;
# 2582 "/usr/include/c++/12/bits/stl_iterator.h" 3
};
# 2584 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _Iterator> auto
# 2587 "/usr/include/c++/12/bits/stl_iterator.h" 3
__miter_base(move_iterator< _Iterator> __it)->__decltype((__miter_base(__it.base())))
# 2589 "/usr/include/c++/12/bits/stl_iterator.h" 3
{ return __miter_base(__it.base()); }
# 2602 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _InputIterator> using __iter_key_t = remove_const_t< typename iterator_traits< _InputIterator> ::value_type::first_type> ;
# 2606 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _InputIterator> using __iter_val_t = typename iterator_traits< _InputIterator> ::value_type::second_type;
# 2610 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _T1, class _T2> struct pair;
# 2613 "/usr/include/c++/12/bits/stl_iterator.h" 3
template< class _InputIterator> using __iter_to_alloc_t = pair< add_const_t< __iter_key_t< _InputIterator> > , __iter_val_t< _InputIterator> > ;
# 2620 "/usr/include/c++/12/bits/stl_iterator.h" 3
}
# 48 "/usr/include/c++/12/debug/debug.h" 3
namespace std {
# 50 "/usr/include/c++/12/debug/debug.h" 3
namespace __debug { }
# 51 "/usr/include/c++/12/debug/debug.h" 3
}
# 56 "/usr/include/c++/12/debug/debug.h" 3
namespace __gnu_debug {
# 58 "/usr/include/c++/12/debug/debug.h" 3
using namespace std::__debug;
# 60 "/usr/include/c++/12/debug/debug.h" 3
template< class _Ite, class _Seq, class _Cat> struct _Safe_iterator;
# 62 "/usr/include/c++/12/debug/debug.h" 3
}
# 35 "/usr/include/c++/12/bits/predefined_ops.h" 3
namespace __gnu_cxx {
# 37 "/usr/include/c++/12/bits/predefined_ops.h" 3
namespace __ops {
# 39 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_less_iter {
# 41 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> constexpr bool
# 44 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2) const
# 45 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (*__it1) < (*__it2); }
# 46 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 50 "/usr/include/c++/12/bits/predefined_ops.h" 3
constexpr _Iter_less_iter __iter_less_iter()
# 51 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return _Iter_less_iter(); }
# 53 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_less_val {
# 56 "/usr/include/c++/12/bits/predefined_ops.h" 3
constexpr _Iter_less_val() = default;
# 63 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Iter_less_val(_Iter_less_iter) { }
# 65 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 68 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val) const
# 69 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (*__it) < __val; }
# 70 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 74 "/usr/include/c++/12/bits/predefined_ops.h" 3
inline _Iter_less_val __iter_less_val()
# 75 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return _Iter_less_val(); }
# 79 "/usr/include/c++/12/bits/predefined_ops.h" 3
inline _Iter_less_val __iter_comp_val(_Iter_less_iter)
# 80 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return _Iter_less_val(); }
# 82 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Val_less_iter {
# 85 "/usr/include/c++/12/bits/predefined_ops.h" 3
constexpr _Val_less_iter() = default;
# 92 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Val_less_iter(_Iter_less_iter) { }
# 94 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Value, class _Iterator> bool
# 97 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Value &__val, _Iterator __it) const
# 98 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return __val < (*__it); }
# 99 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 103 "/usr/include/c++/12/bits/predefined_ops.h" 3
inline _Val_less_iter __val_less_iter()
# 104 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return _Val_less_iter(); }
# 108 "/usr/include/c++/12/bits/predefined_ops.h" 3
inline _Val_less_iter __val_comp_iter(_Iter_less_iter)
# 109 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return _Val_less_iter(); }
# 111 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_equal_to_iter {
# 113 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> bool
# 116 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2) const
# 117 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (*__it1) == (*__it2); }
# 118 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 122 "/usr/include/c++/12/bits/predefined_ops.h" 3
inline _Iter_equal_to_iter __iter_equal_to_iter()
# 123 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return _Iter_equal_to_iter(); }
# 125 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_equal_to_val {
# 127 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 130 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val) const
# 131 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (*__it) == __val; }
# 132 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 136 "/usr/include/c++/12/bits/predefined_ops.h" 3
inline _Iter_equal_to_val __iter_equal_to_val()
# 137 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return _Iter_equal_to_val(); }
# 141 "/usr/include/c++/12/bits/predefined_ops.h" 3
inline _Iter_equal_to_val __iter_comp_val(_Iter_equal_to_iter)
# 142 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return _Iter_equal_to_val(); }
# 144 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare>
# 145 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_comp_iter {
# 147 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Compare _M_comp;
# 150 "/usr/include/c++/12/bits/predefined_ops.h" 3
constexpr explicit _Iter_comp_iter(_Compare __comp) : _M_comp(std::move(__comp))
# 152 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 154 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator1, class _Iterator2> constexpr bool
# 157 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator1 __it1, _Iterator2 __it2)
# 158 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it1, *__it2); }
# 159 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 161 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare> constexpr _Iter_comp_iter< _Compare>
# 164 "/usr/include/c++/12/bits/predefined_ops.h" 3
__iter_comp_iter(_Compare __comp)
# 165 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return ((_Iter_comp_iter< _Compare> )(std::move(__comp))); }
# 167 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare>
# 168 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_comp_val {
# 170 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Compare _M_comp;
# 174 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Iter_comp_val(_Compare __comp) : _M_comp(std::move(__comp))
# 176 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 180 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Iter_comp_val(const _Iter_comp_iter< _Compare> &__comp) : _M_comp((__comp._M_comp))
# 182 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 187 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Iter_comp_val(_Iter_comp_iter< _Compare> &&__comp) : _M_comp(std::move((__comp._M_comp)))
# 189 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 192 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator, class _Value> bool
# 195 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator __it, _Value &__val)
# 196 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it, __val); }
# 197 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 199 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare> inline _Iter_comp_val< _Compare>
# 202 "/usr/include/c++/12/bits/predefined_ops.h" 3
__iter_comp_val(_Compare __comp)
# 203 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return ((_Iter_comp_val< _Compare> )(std::move(__comp))); }
# 205 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare> inline _Iter_comp_val< _Compare>
# 208 "/usr/include/c++/12/bits/predefined_ops.h" 3
__iter_comp_val(_Iter_comp_iter< _Compare> __comp)
# 209 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return ((_Iter_comp_val< _Compare> )(std::move(__comp))); }
# 211 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare>
# 212 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Val_comp_iter {
# 214 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Compare _M_comp;
# 218 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Val_comp_iter(_Compare __comp) : _M_comp(std::move(__comp))
# 220 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 224 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Val_comp_iter(const _Iter_comp_iter< _Compare> &__comp) : _M_comp((__comp._M_comp))
# 226 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 231 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Val_comp_iter(_Iter_comp_iter< _Compare> &&__comp) : _M_comp(std::move((__comp._M_comp)))
# 233 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 236 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Value, class _Iterator> bool
# 239 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Value &__val, _Iterator __it)
# 240 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(__val, *__it); }
# 241 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 243 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare> inline _Val_comp_iter< _Compare>
# 246 "/usr/include/c++/12/bits/predefined_ops.h" 3
__val_comp_iter(_Compare __comp)
# 247 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return ((_Val_comp_iter< _Compare> )(std::move(__comp))); }
# 249 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare> inline _Val_comp_iter< _Compare>
# 252 "/usr/include/c++/12/bits/predefined_ops.h" 3
__val_comp_iter(_Iter_comp_iter< _Compare> __comp)
# 253 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return ((_Val_comp_iter< _Compare> )(std::move(__comp))); }
# 255 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Value>
# 256 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_equals_val {
# 258 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Value &_M_value;
# 262 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Iter_equals_val(_Value &__value) : _M_value(__value)
# 264 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 266 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 269 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 270 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (*__it) == (_M_value); }
# 271 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 273 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Value> inline _Iter_equals_val< _Value>
# 276 "/usr/include/c++/12/bits/predefined_ops.h" 3
__iter_equals_val(_Value &__val)
# 277 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return ((_Iter_equals_val< _Value> )(__val)); }
# 279 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator1>
# 280 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_equals_iter {
# 282 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Iterator1 _M_it1;
# 286 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Iter_equals_iter(_Iterator1 __it1) : _M_it1(__it1)
# 288 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 290 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator2> bool
# 293 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator2 __it2)
# 294 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (*__it2) == (*(_M_it1)); }
# 295 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 297 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator> inline _Iter_equals_iter< _Iterator>
# 300 "/usr/include/c++/12/bits/predefined_ops.h" 3
__iter_comp_iter(_Iter_equal_to_iter, _Iterator __it)
# 301 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return ((_Iter_equals_iter< _Iterator> )(__it)); }
# 303 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Predicate>
# 304 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_pred {
# 306 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Predicate _M_pred;
# 310 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Iter_pred(_Predicate __pred) : _M_pred(std::move(__pred))
# 312 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 314 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 317 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 318 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (bool)(_M_pred)(*__it); }
# 319 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 321 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Predicate> inline _Iter_pred< _Predicate>
# 324 "/usr/include/c++/12/bits/predefined_ops.h" 3
__pred_iter(_Predicate __pred)
# 325 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return ((_Iter_pred< _Predicate> )(std::move(__pred))); }
# 327 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare, class _Value>
# 328 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_comp_to_val {
# 330 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Compare _M_comp;
# 331 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Value &_M_value;
# 334 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Iter_comp_to_val(_Compare __comp, _Value &__value) : _M_comp(std::move(__comp)), _M_value(__value)
# 336 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 338 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 341 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 342 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it, _M_value); }
# 343 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 345 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare, class _Value> _Iter_comp_to_val< _Compare, _Value>
# 348 "/usr/include/c++/12/bits/predefined_ops.h" 3
__iter_comp_val(_Compare __comp, _Value &__val)
# 349 "/usr/include/c++/12/bits/predefined_ops.h" 3
{
# 350 "/usr/include/c++/12/bits/predefined_ops.h" 3
return _Iter_comp_to_val< _Compare, _Value> (std::move(__comp), __val);
# 351 "/usr/include/c++/12/bits/predefined_ops.h" 3
}
# 353 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare, class _Iterator1>
# 354 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_comp_to_iter {
# 356 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Compare _M_comp;
# 357 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Iterator1 _M_it1;
# 360 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Iter_comp_to_iter(_Compare __comp, _Iterator1 __it1) : _M_comp(std::move(__comp)), _M_it1(__it1)
# 362 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 364 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator2> bool
# 367 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator2 __it2)
# 368 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return (bool)(_M_comp)(*__it2, *(_M_it1)); }
# 369 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 371 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Compare, class _Iterator> inline _Iter_comp_to_iter< _Compare, _Iterator>
# 374 "/usr/include/c++/12/bits/predefined_ops.h" 3
__iter_comp_iter(_Iter_comp_iter< _Compare> __comp, _Iterator __it)
# 375 "/usr/include/c++/12/bits/predefined_ops.h" 3
{
# 376 "/usr/include/c++/12/bits/predefined_ops.h" 3
return _Iter_comp_to_iter< _Compare, _Iterator> (std::move((__comp._M_comp)), __it);
# 378 "/usr/include/c++/12/bits/predefined_ops.h" 3
}
# 380 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Predicate>
# 381 "/usr/include/c++/12/bits/predefined_ops.h" 3
struct _Iter_negate {
# 383 "/usr/include/c++/12/bits/predefined_ops.h" 3
_Predicate _M_pred;
# 387 "/usr/include/c++/12/bits/predefined_ops.h" 3
explicit _Iter_negate(_Predicate __pred) : _M_pred(std::move(__pred))
# 389 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ }
# 391 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Iterator> bool
# 394 "/usr/include/c++/12/bits/predefined_ops.h" 3
operator()(_Iterator __it)
# 395 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return !((bool)(_M_pred)(*__it)); }
# 396 "/usr/include/c++/12/bits/predefined_ops.h" 3
};
# 398 "/usr/include/c++/12/bits/predefined_ops.h" 3
template< class _Predicate> inline _Iter_negate< _Predicate>
# 401 "/usr/include/c++/12/bits/predefined_ops.h" 3
__negate(_Iter_pred< _Predicate> __pred)
# 402 "/usr/include/c++/12/bits/predefined_ops.h" 3
{ return ((_Iter_negate< _Predicate> )(std::move((__pred._M_pred)))); }
# 404 "/usr/include/c++/12/bits/predefined_ops.h" 3
}
# 405 "/usr/include/c++/12/bits/predefined_ops.h" 3
}
# 79 "/usr/include/c++/12/bits/stl_algobase.h" 3
namespace std __attribute((__visibility__("default"))) {
# 87 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _Up> constexpr int
# 90 "/usr/include/c++/12/bits/stl_algobase.h" 3
__memcmp(const _Tp *__first1, const _Up *__first2, size_t __num)
# 91 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 93 "/usr/include/c++/12/bits/stl_algobase.h" 3
static_assert((sizeof(_Tp) == sizeof(_Up)), "can be compared with memcmp");
# 105 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __builtin_memcmp(__first1, __first2, sizeof(_Tp) * __num);
# 106 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 149 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> inline void
# 152 "/usr/include/c++/12/bits/stl_algobase.h" 3
iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
# 153 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 182 "/usr/include/c++/12/bits/stl_algobase.h" 3
swap(*__a, *__b);
# 184 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 198 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> _ForwardIterator2
# 201 "/usr/include/c++/12/bits/stl_algobase.h" 3
swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 202 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2)
# 203 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 209 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 211 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), ((void)(++__first2))) {
# 212 "/usr/include/c++/12/bits/stl_algobase.h" 3
std::iter_swap(__first1, __first2); }
# 213 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first2;
# 214 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 227 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp> constexpr const _Tp &
# 230 "/usr/include/c++/12/bits/stl_algobase.h" 3
min(const _Tp &__a, const _Tp &__b)
# 231 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 235 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__b < __a) {
# 236 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __b; }
# 237 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __a;
# 238 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 251 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp> constexpr const _Tp &
# 254 "/usr/include/c++/12/bits/stl_algobase.h" 3
max(const _Tp &__a, const _Tp &__b)
# 255 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 259 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__a < __b) {
# 260 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __b; }
# 261 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __a;
# 262 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 275 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _Compare> constexpr const _Tp &
# 278 "/usr/include/c++/12/bits/stl_algobase.h" 3
min(const _Tp &__a, const _Tp &__b, _Compare __comp)
# 279 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 281 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__comp(__b, __a)) {
# 282 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __b; }
# 283 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __a;
# 284 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 297 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _Compare> constexpr const _Tp &
# 300 "/usr/include/c++/12/bits/stl_algobase.h" 3
max(const _Tp &__a, const _Tp &__b, _Compare __comp)
# 301 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 303 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__comp(__a, __b)) {
# 304 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __b; }
# 305 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __a;
# 306 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 310 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Iterator> inline _Iterator
# 313 "/usr/include/c++/12/bits/stl_algobase.h" 3
__niter_base(_Iterator __it) noexcept(std::template is_nothrow_copy_constructible< _Iterator> ::value)
# 315 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return __it; }
# 317 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Ite, class _Seq> _Ite __niter_base(const __gnu_debug::_Safe_iterator< _Ite, _Seq, random_access_iterator_tag> &);
# 325 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _From, class _To> inline _From
# 328 "/usr/include/c++/12/bits/stl_algobase.h" 3
__niter_wrap(_From __from, _To __res)
# 329 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return __from + (__res - std::__niter_base(__from)); }
# 332 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Iterator> inline _Iterator
# 335 "/usr/include/c++/12/bits/stl_algobase.h" 3
__niter_wrap(const _Iterator &, _Iterator __res)
# 336 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return __res; }
# 344 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, bool _IsSimple, class _Category>
# 345 "/usr/include/c++/12/bits/stl_algobase.h" 3
struct __copy_move {
# 347 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 350 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 351 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 352 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __first != __last; (++__result), ((void)(++__first))) {
# 353 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*__result) = (*__first); }
# 354 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result;
# 355 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 356 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 359 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Category>
# 360 "/usr/include/c++/12/bits/stl_algobase.h" 3
struct __copy_move< true, false, _Category> {
# 362 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 365 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 366 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 367 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __first != __last; (++__result), ((void)(++__first))) {
# 368 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*__result) = std::move(*__first); }
# 369 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result;
# 370 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 371 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 375 "/usr/include/c++/12/bits/stl_algobase.h" 3
template<> struct __copy_move< false, false, random_access_iterator_tag> {
# 377 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 380 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 381 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 382 "/usr/include/c++/12/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::difference_type _Distance;
# 383 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (_Distance __n = __last - __first; __n > 0; --__n)
# 384 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 385 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*__result) = (*__first);
# 386 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first;
# 387 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__result;
# 388 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 389 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result;
# 390 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 392 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _Up> static void
# 394 "/usr/include/c++/12/bits/stl_algobase.h" 3
__assign_one(_Tp *__to, _Up *__from)
# 395 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ (*__to) = (*__from); }
# 396 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 400 "/usr/include/c++/12/bits/stl_algobase.h" 3
template<> struct __copy_move< true, false, random_access_iterator_tag> {
# 402 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II, class _OI> static _OI
# 405 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_m(_II __first, _II __last, _OI __result)
# 406 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 407 "/usr/include/c++/12/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::difference_type _Distance;
# 408 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (_Distance __n = __last - __first; __n > 0; --__n)
# 409 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 410 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*__result) = std::move(*__first);
# 411 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first;
# 412 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__result;
# 413 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 414 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result;
# 415 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 417 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _Up> static void
# 419 "/usr/include/c++/12/bits/stl_algobase.h" 3
__assign_one(_Tp *__to, _Up *__from)
# 420 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ (*__to) = std::move(*__from); }
# 421 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 424 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove>
# 425 "/usr/include/c++/12/bits/stl_algobase.h" 3
struct __copy_move< _IsMove, true, random_access_iterator_tag> {
# 427 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _Up> static _Up *
# 430 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_m(_Tp *__first, _Tp *__last, _Up *__result)
# 431 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 432 "/usr/include/c++/12/bits/stl_algobase.h" 3
const ptrdiff_t _Num = __last - __first;
# 433 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__builtin_expect(_Num > (1), true)) {
# 434 "/usr/include/c++/12/bits/stl_algobase.h" 3
__builtin_memmove(__result, __first, sizeof(_Tp) * _Num); } else {
# 435 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (_Num == (1)) {
# 436 "/usr/include/c++/12/bits/stl_algobase.h" 3
std::template __copy_move< _IsMove, false, random_access_iterator_tag> ::__assign_one(__result, __first); } }
# 438 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result + _Num;
# 439 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 440 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 444 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _Ref, class _Ptr> struct _Deque_iterator;
# 447 "/usr/include/c++/12/bits/stl_algobase.h" 3
struct _Bit_iterator;
# 453 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _CharT> struct char_traits;
# 456 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class istreambuf_iterator;
# 459 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _CharT, class _Traits> class ostreambuf_iterator;
# 462 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(_CharT *, _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 468 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, ostreambuf_iterator< _CharT, char_traits< _CharT> > > ::__type __copy_move_a2(const _CharT *, const _CharT *, ostreambuf_iterator< _CharT, char_traits< _CharT> > );
# 474 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _CharT *> ::__type __copy_move_a2(istreambuf_iterator< _CharT, char_traits< _CharT> > , istreambuf_iterator< _CharT, char_traits< _CharT> > , _CharT *);
# 480 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _CharT> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _Deque_iterator< _CharT, _CharT &, _CharT *> > ::__type __copy_move_a2(istreambuf_iterator< _CharT, char_traits< _CharT> > , istreambuf_iterator< _CharT, char_traits< _CharT> > , _Deque_iterator< _CharT, _CharT &, _CharT *> );
# 489 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 492 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_a2(_II __first, _II __last, _OI __result)
# 493 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 494 "/usr/include/c++/12/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II> ::iterator_category _Category;
# 500 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::template __copy_move< _IsMove, __memcpyable< _OI, _II> ::__value, typename iterator_traits< _II> ::iterator_category> ::__copy_m(__first, __last, __result);
# 502 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 504 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class
# 505 "/usr/include/c++/12/bits/stl_algobase.h" 3
_Tp, class _Ref, class _Ptr, class _OI> _OI
# 504 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_a1(_Deque_iterator< _Tp, _Ref, _Ptr> , _Deque_iterator< _Tp, _Ref, _Ptr> , _OI);
# 511 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class
# 512 "/usr/include/c++/12/bits/stl_algobase.h" 3
_ITp, class _IRef, class _IPtr, class _OTp> _Deque_iterator< _OTp, _OTp &, _OTp *>
# 511 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_a1(_Deque_iterator< _ITp, _IRef, _IPtr> , _Deque_iterator< _ITp, _IRef, _IPtr> , _Deque_iterator< _OTp, _OTp &, _OTp *> );
# 518 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _Tp> typename __gnu_cxx::__enable_if< __is_random_access_iter< _II> ::__value, _Deque_iterator< _Tp, _Tp &, _Tp *> > ::__type __copy_move_a1(_II, _II, _Deque_iterator< _Tp, _Tp &, _Tp *> );
# 524 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 527 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_a1(_II __first, _II __last, _OI __result)
# 528 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return std::__copy_move_a2< _IsMove> (__first, __last, __result); }
# 530 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 533 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_a(_II __first, _II __last, _OI __result)
# 534 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 535 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__niter_wrap(__result, std::__copy_move_a1< _IsMove> (std::__niter_base(__first), std::__niter_base(__last), std::__niter_base(__result)));
# 539 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 541 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class
# 542 "/usr/include/c++/12/bits/stl_algobase.h" 3
_Ite, class _Seq, class _Cat, class _OI> _OI
# 541 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_a(const __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat> &, const __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat> &, _OI);
# 548 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class
# 549 "/usr/include/c++/12/bits/stl_algobase.h" 3
_II, class _Ite, class _Seq, class _Cat> __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat>
# 548 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_a(_II, _II, const __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat> &);
# 554 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class
# 555 "/usr/include/c++/12/bits/stl_algobase.h" 3
_IIte, class _ISeq, class _ICat, class
# 556 "/usr/include/c++/12/bits/stl_algobase.h" 3
_OIte, class _OSeq, class _OCat> __gnu_debug::_Safe_iterator< _OIte, _OSeq, _OCat>
# 554 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_a(const __gnu_debug::_Safe_iterator< _IIte, _ISeq, _ICat> &, const __gnu_debug::_Safe_iterator< _IIte, _ISeq, _ICat> &, const __gnu_debug::_Safe_iterator< _OIte, _OSeq, _OCat> &);
# 562 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _InputIterator, class _Size, class _OutputIterator> _OutputIterator
# 565 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_n_a(_InputIterator __first, _Size __n, _OutputIterator __result, bool)
# 567 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 568 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__n > 0)
# 569 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 570 "/usr/include/c++/12/bits/stl_algobase.h" 3
while (true)
# 571 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 572 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*__result) = (*__first);
# 573 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__result;
# 574 "/usr/include/c++/12/bits/stl_algobase.h" 3
if ((--__n) > 0) {
# 575 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first; } else {
# 577 "/usr/include/c++/12/bits/stl_algobase.h" 3
break; }
# 578 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 579 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 580 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result;
# 581 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 583 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _CharT, class _Size> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _CharT *> ::__type __copy_n_a(istreambuf_iterator< _CharT, char_traits< _CharT> > , _Size, _CharT *, bool);
# 589 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _CharT, class _Size> typename __gnu_cxx::__enable_if< __is_char< _CharT> ::__value, _Deque_iterator< _CharT, _CharT &, _CharT *> > ::__type __copy_n_a(istreambuf_iterator< _CharT, char_traits< _CharT> > , _Size, _Deque_iterator< _CharT, _CharT &, _CharT *> , bool);
# 614 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II, class _OI> inline _OI
# 617 "/usr/include/c++/12/bits/stl_algobase.h" 3
copy(_II __first, _II __last, _OI __result)
# 618 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 623 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 625 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__copy_move_a< __is_move_iterator< _II> ::__value> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 627 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 647 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II, class _OI> inline _OI
# 650 "/usr/include/c++/12/bits/stl_algobase.h" 3
move(_II __first, _II __last, _OI __result)
# 651 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 656 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 658 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__copy_move_a< true> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 660 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 667 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, bool _IsSimple, class _Category>
# 668 "/usr/include/c++/12/bits/stl_algobase.h" 3
struct __copy_move_backward {
# 670 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 673 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 674 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 675 "/usr/include/c++/12/bits/stl_algobase.h" 3
while (__first != __last) {
# 676 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*(--__result)) = (*(--__last)); }
# 677 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result;
# 678 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 679 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 682 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Category>
# 683 "/usr/include/c++/12/bits/stl_algobase.h" 3
struct __copy_move_backward< true, false, _Category> {
# 685 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 688 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 689 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 690 "/usr/include/c++/12/bits/stl_algobase.h" 3
while (__first != __last) {
# 691 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*(--__result)) = std::move(*(--__last)); }
# 692 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result;
# 693 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 694 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 698 "/usr/include/c++/12/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< false, false, random_access_iterator_tag> {
# 700 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 703 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 704 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 706 "/usr/include/c++/12/bits/stl_algobase.h" 3
typename iterator_traits< _BI1> ::difference_type __n = __last - __first;
# 707 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __n > 0; --__n) {
# 708 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*(--__result)) = (*(--__last)); }
# 709 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result;
# 710 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 711 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 715 "/usr/include/c++/12/bits/stl_algobase.h" 3
template<> struct __copy_move_backward< true, false, random_access_iterator_tag> {
# 717 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> static _BI2
# 720 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
# 721 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 723 "/usr/include/c++/12/bits/stl_algobase.h" 3
typename iterator_traits< _BI1> ::difference_type __n = __last - __first;
# 724 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __n > 0; --__n) {
# 725 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*(--__result)) = std::move(*(--__last)); }
# 726 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result;
# 727 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 728 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 731 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove>
# 732 "/usr/include/c++/12/bits/stl_algobase.h" 3
struct __copy_move_backward< _IsMove, true, random_access_iterator_tag> {
# 734 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _Up> static _Up *
# 737 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_b(_Tp *__first, _Tp *__last, _Up *__result)
# 738 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 739 "/usr/include/c++/12/bits/stl_algobase.h" 3
const ptrdiff_t _Num = __last - __first;
# 740 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__builtin_expect(_Num > (1), true)) {
# 741 "/usr/include/c++/12/bits/stl_algobase.h" 3
__builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num); } else {
# 742 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (_Num == (1)) {
# 743 "/usr/include/c++/12/bits/stl_algobase.h" 3
std::template __copy_move< _IsMove, false, random_access_iterator_tag> ::__assign_one(__result - 1, __first); } }
# 745 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result - _Num;
# 746 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 747 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 749 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _BI1, class _BI2> inline _BI2
# 752 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
# 753 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 754 "/usr/include/c++/12/bits/stl_algobase.h" 3
typedef typename iterator_traits< _BI1> ::iterator_category _Category;
# 760 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::template __copy_move_backward< _IsMove, __memcpyable< _BI2, _BI1> ::__value, typename iterator_traits< _BI1> ::iterator_category> ::__copy_move_b(__first, __last, __result);
# 765 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 767 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _BI1, class _BI2> inline _BI2
# 770 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_backward_a1(_BI1 __first, _BI1 __last, _BI2 __result)
# 771 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return std::__copy_move_backward_a2< _IsMove> (__first, __last, __result); }
# 773 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class
# 774 "/usr/include/c++/12/bits/stl_algobase.h" 3
_Tp, class _Ref, class _Ptr, class _OI> _OI
# 773 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_backward_a1(_Deque_iterator< _Tp, _Ref, _Ptr> , _Deque_iterator< _Tp, _Ref, _Ptr> , _OI);
# 780 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class
# 781 "/usr/include/c++/12/bits/stl_algobase.h" 3
_ITp, class _IRef, class _IPtr, class _OTp> _Deque_iterator< _OTp, _OTp &, _OTp *>
# 780 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_backward_a1(_Deque_iterator< _ITp, _IRef, _IPtr> , _Deque_iterator< _ITp, _IRef, _IPtr> , _Deque_iterator< _OTp, _OTp &, _OTp *> );
# 788 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _Tp> typename __gnu_cxx::__enable_if< __is_random_access_iter< _II> ::__value, _Deque_iterator< _Tp, _Tp &, _Tp *> > ::__type __copy_move_backward_a1(_II, _II, _Deque_iterator< _Tp, _Tp &, _Tp *> );
# 795 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class _II, class _OI> inline _OI
# 798 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_backward_a(_II __first, _II __last, _OI __result)
# 799 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 800 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__niter_wrap(__result, std::__copy_move_backward_a1< _IsMove> (std::__niter_base(__first), std::__niter_base(__last), std::__niter_base(__result)));
# 804 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 806 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class
# 807 "/usr/include/c++/12/bits/stl_algobase.h" 3
_Ite, class _Seq, class _Cat, class _OI> _OI
# 806 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_backward_a(const __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat> &, const __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat> &, _OI);
# 814 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class
# 815 "/usr/include/c++/12/bits/stl_algobase.h" 3
_II, class _Ite, class _Seq, class _Cat> __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat>
# 814 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_backward_a(_II, _II, const __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat> &);
# 820 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _IsMove, class
# 821 "/usr/include/c++/12/bits/stl_algobase.h" 3
_IIte, class _ISeq, class _ICat, class
# 822 "/usr/include/c++/12/bits/stl_algobase.h" 3
_OIte, class _OSeq, class _OCat> __gnu_debug::_Safe_iterator< _OIte, _OSeq, _OCat>
# 820 "/usr/include/c++/12/bits/stl_algobase.h" 3
__copy_move_backward_a(const __gnu_debug::_Safe_iterator< _IIte, _ISeq, _ICat> &, const __gnu_debug::_Safe_iterator< _IIte, _ISeq, _ICat> &, const __gnu_debug::_Safe_iterator< _OIte, _OSeq, _OCat> &);
# 847 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> inline _BI2
# 850 "/usr/include/c++/12/bits/stl_algobase.h" 3
copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
# 851 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 857 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 859 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__copy_move_backward_a< __is_move_iterator< _BI1> ::__value> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 861 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 882 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _BI1, class _BI2> inline _BI2
# 885 "/usr/include/c++/12/bits/stl_algobase.h" 3
move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
# 886 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 892 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 894 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__copy_move_backward_a< true> (std::__miter_base(__first), std::__miter_base(__last), __result);
# 897 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 904 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline typename __gnu_cxx::__enable_if< !__is_scalar< _Tp> ::__value, void> ::__type
# 908 "/usr/include/c++/12/bits/stl_algobase.h" 3
__fill_a1(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 909 "/usr/include/c++/12/bits/stl_algobase.h" 3
__value)
# 910 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 911 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 912 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*__first) = __value; }
# 913 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 915 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline typename __gnu_cxx::__enable_if< __is_scalar< _Tp> ::__value, void> ::__type
# 919 "/usr/include/c++/12/bits/stl_algobase.h" 3
__fill_a1(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 920 "/usr/include/c++/12/bits/stl_algobase.h" 3
__value)
# 921 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 922 "/usr/include/c++/12/bits/stl_algobase.h" 3
const _Tp __tmp = __value;
# 923 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 924 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*__first) = __tmp; }
# 925 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 928 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp> inline typename __gnu_cxx::__enable_if< __is_byte< _Tp> ::__value, void> ::__type
# 932 "/usr/include/c++/12/bits/stl_algobase.h" 3
__fill_a1(_Tp *__first, _Tp *__last, const _Tp &__c)
# 933 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 934 "/usr/include/c++/12/bits/stl_algobase.h" 3
const _Tp __tmp = __c;
# 943 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (const size_t __len = __last - __first) {
# 944 "/usr/include/c++/12/bits/stl_algobase.h" 3
__builtin_memset(__first, static_cast< unsigned char>(__tmp), __len); }
# 945 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 947 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Ite, class _Cont, class _Tp> inline void
# 950 "/usr/include/c++/12/bits/stl_algobase.h" 3
__fill_a1(__gnu_cxx::__normal_iterator< _Ite, _Cont> __first, __gnu_cxx::__normal_iterator< _Ite, _Cont>
# 951 "/usr/include/c++/12/bits/stl_algobase.h" 3
__last, const _Tp &
# 952 "/usr/include/c++/12/bits/stl_algobase.h" 3
__value)
# 953 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ std::__fill_a1(__first.base(), __last.base(), __value); }
# 955 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _VTp> void __fill_a1(const _Deque_iterator< _Tp, _Tp &, _Tp *> &, const _Deque_iterator< _Tp, _Tp &, _Tp *> &, const _VTp &);
# 963 "/usr/include/c++/12/bits/stl_algobase.h" 3
void __fill_a1(_Bit_iterator, _Bit_iterator, const bool &);
# 966 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _FIte, class _Tp> inline void
# 969 "/usr/include/c++/12/bits/stl_algobase.h" 3
__fill_a(_FIte __first, _FIte __last, const _Tp &__value)
# 970 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ std::__fill_a1(__first, __last, __value); }
# 972 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Ite, class _Seq, class _Cat, class _Tp> void __fill_a(const __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat> &, const __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat> &, const _Tp &);
# 990 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline void
# 993 "/usr/include/c++/12/bits/stl_algobase.h" 3
fill(_ForwardIterator __first, _ForwardIterator __last, const _Tp &__value)
# 994 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 998 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1000 "/usr/include/c++/12/bits/stl_algobase.h" 3
std::__fill_a(__first, __last, __value);
# 1001 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1005 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr int __size_to_integer(int __n) { return __n; }
# 1007 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr unsigned __size_to_integer(unsigned __n) { return __n; }
# 1009 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr long __size_to_integer(long __n) { return __n; }
# 1011 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr unsigned long __size_to_integer(unsigned long __n) { return __n; }
# 1013 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr long long __size_to_integer(long long __n) { return __n; }
# 1015 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr unsigned long long __size_to_integer(unsigned long long __n) { return __n; }
# 1019 "/usr/include/c++/12/bits/stl_algobase.h" 3
__extension__ constexpr __int128 __size_to_integer(__int128 __n) { return __n; }
# 1021 "/usr/include/c++/12/bits/stl_algobase.h" 3
__extension__ constexpr unsigned __int128 __size_to_integer(unsigned __int128 __n) { return __n; }
# 1043 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr long long __size_to_integer(float __n) { return (long long)__n; }
# 1045 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr long long __size_to_integer(double __n) { return (long long)__n; }
# 1047 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr long long __size_to_integer(long double __n) { return (long long)__n; }
# 1053 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< !__is_scalar< _Tp> ::__value, _OutputIterator> ::__type
# 1057 "/usr/include/c++/12/bits/stl_algobase.h" 3
__fill_n_a1(_OutputIterator __first, _Size __n, const _Tp &__value)
# 1058 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1059 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __n > 0; (--__n), ((void)(++__first))) {
# 1060 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*__first) = __value; }
# 1061 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first;
# 1062 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1064 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline typename __gnu_cxx::__enable_if< __is_scalar< _Tp> ::__value, _OutputIterator> ::__type
# 1068 "/usr/include/c++/12/bits/stl_algobase.h" 3
__fill_n_a1(_OutputIterator __first, _Size __n, const _Tp &__value)
# 1069 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1070 "/usr/include/c++/12/bits/stl_algobase.h" 3
const _Tp __tmp = __value;
# 1071 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __n > 0; (--__n), ((void)(++__first))) {
# 1072 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*__first) = __tmp; }
# 1073 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first;
# 1074 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1076 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Ite, class _Seq, class _Cat, class _Size, class
# 1077 "/usr/include/c++/12/bits/stl_algobase.h" 3
_Tp> __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat>
# 1076 "/usr/include/c++/12/bits/stl_algobase.h" 3
__fill_n_a(const __gnu_debug::_Safe_iterator< _Ite, _Seq, _Cat> & __first, _Size __n, const _Tp & __value, input_iterator_tag);
# 1083 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline _OutputIterator
# 1086 "/usr/include/c++/12/bits/stl_algobase.h" 3
__fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value, output_iterator_tag)
# 1088 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1090 "/usr/include/c++/12/bits/stl_algobase.h" 3
static_assert((is_integral< _Size> {}), "fill_n must pass integral size");
# 1092 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __fill_n_a1(__first, __n, __value);
# 1093 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1095 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline _OutputIterator
# 1098 "/usr/include/c++/12/bits/stl_algobase.h" 3
__fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value, input_iterator_tag)
# 1100 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1102 "/usr/include/c++/12/bits/stl_algobase.h" 3
static_assert((is_integral< _Size> {}), "fill_n must pass integral size");
# 1104 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __fill_n_a1(__first, __n, __value);
# 1105 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1107 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _OutputIterator, class _Size, class _Tp> inline _OutputIterator
# 1110 "/usr/include/c++/12/bits/stl_algobase.h" 3
__fill_n_a(_OutputIterator __first, _Size __n, const _Tp &__value, random_access_iterator_tag)
# 1112 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1114 "/usr/include/c++/12/bits/stl_algobase.h" 3
static_assert((is_integral< _Size> {}), "fill_n must pass integral size");
# 1116 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__n <= 0) {
# 1117 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first; }
# 1119 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1121 "/usr/include/c++/12/bits/stl_algobase.h" 3
std::__fill_a(__first, __first + __n, __value);
# 1122 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first + __n;
# 1123 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1142 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _OI, class _Size, class _Tp> inline _OI
# 1145 "/usr/include/c++/12/bits/stl_algobase.h" 3
fill_n(_OI __first, _Size __n, const _Tp &__value)
# 1146 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1150 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__fill_n_a(__first, std::__size_to_integer(__n), __value, std::__iterator_category(__first));
# 1152 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1154 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _BoolType>
# 1155 "/usr/include/c++/12/bits/stl_algobase.h" 3
struct __equal {
# 1157 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> static bool
# 1160 "/usr/include/c++/12/bits/stl_algobase.h" 3
equal(_II1 __first1, _II1 __last1, _II2 __first2)
# 1161 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1162 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), ((void)(++__first2))) {
# 1163 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (!((*__first1) == (*__first2))) {
# 1164 "/usr/include/c++/12/bits/stl_algobase.h" 3
return false; } }
# 1165 "/usr/include/c++/12/bits/stl_algobase.h" 3
return true;
# 1166 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1167 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 1170 "/usr/include/c++/12/bits/stl_algobase.h" 3
template<> struct __equal< true> {
# 1172 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp> static bool
# 1175 "/usr/include/c++/12/bits/stl_algobase.h" 3
equal(const _Tp *__first1, const _Tp *__last1, const _Tp *__first2)
# 1176 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1177 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (const size_t __len = __last1 - __first1) {
# 1178 "/usr/include/c++/12/bits/stl_algobase.h" 3
return !std::__memcmp(__first1, __first2, __len); }
# 1179 "/usr/include/c++/12/bits/stl_algobase.h" 3
return true;
# 1180 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1181 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 1183 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _Ref, class _Ptr, class _II> typename __gnu_cxx::__enable_if< __is_random_access_iter< _II> ::__value, bool> ::__type __equal_aux1(_Deque_iterator< _Tp, _Ref, _Ptr> , _Deque_iterator< _Tp, _Ref, _Ptr> , _II);
# 1190 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp1, class _Ref1, class _Ptr1, class
# 1191 "/usr/include/c++/12/bits/stl_algobase.h" 3
_Tp2, class _Ref2, class _Ptr2> bool
# 1190 "/usr/include/c++/12/bits/stl_algobase.h" 3
__equal_aux1(_Deque_iterator< _Tp1, _Ref1, _Ptr1> , _Deque_iterator< _Tp1, _Ref1, _Ptr1> , _Deque_iterator< _Tp2, _Ref2, _Ptr2> );
# 1197 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II, class _Tp, class _Ref, class _Ptr> typename __gnu_cxx::__enable_if< __is_random_access_iter< _II> ::__value, bool> ::__type __equal_aux1(_II, _II, _Deque_iterator< _Tp, _Ref, _Ptr> );
# 1203 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1206 "/usr/include/c++/12/bits/stl_algobase.h" 3
__equal_aux1(_II1 __first1, _II1 __last1, _II2 __first2)
# 1207 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1208 "/usr/include/c++/12/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::value_type _ValueType1;
# 1209 "/usr/include/c++/12/bits/stl_algobase.h" 3
const bool __simple = ((__is_integer< typename iterator_traits< _II1> ::value_type> ::__value || __is_pointer< typename iterator_traits< _II1> ::value_type> ::__value) && __memcmpable< _II1, _II2> ::__value);
# 1212 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::template __equal< __simple> ::equal(__first1, __last1, __first2);
# 1213 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1215 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1218 "/usr/include/c++/12/bits/stl_algobase.h" 3
__equal_aux(_II1 __first1, _II1 __last1, _II2 __first2)
# 1219 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1220 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__equal_aux1(std::__niter_base(__first1), std::__niter_base(__last1), std::__niter_base(__first2));
# 1223 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1225 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _Seq1, class _Cat1, class _II2> bool __equal_aux(const __gnu_debug::_Safe_iterator< _II1, _Seq1, _Cat1> &, const __gnu_debug::_Safe_iterator< _II1, _Seq1, _Cat1> &, _II2);
# 1231 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2, class _Seq2, class _Cat2> bool __equal_aux(_II1, _II1, const __gnu_debug::_Safe_iterator< _II2, _Seq2, _Cat2> &);
# 1236 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _Seq1, class _Cat1, class
# 1237 "/usr/include/c++/12/bits/stl_algobase.h" 3
_II2, class _Seq2, class _Cat2> bool
# 1236 "/usr/include/c++/12/bits/stl_algobase.h" 3
__equal_aux(const __gnu_debug::_Safe_iterator< _II1, _Seq1, _Cat1> &, const __gnu_debug::_Safe_iterator< _II1, _Seq1, _Cat1> &, const __gnu_debug::_Safe_iterator< _II2, _Seq2, _Cat2> &);
# 1243 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class , class >
# 1244 "/usr/include/c++/12/bits/stl_algobase.h" 3
struct __lc_rai {
# 1246 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> static _II1
# 1249 "/usr/include/c++/12/bits/stl_algobase.h" 3
__newlast1(_II1, _II1 __last1, _II2, _II2)
# 1250 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return __last1; }
# 1252 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II> static bool
# 1255 "/usr/include/c++/12/bits/stl_algobase.h" 3
__cnd2(_II __first, _II __last)
# 1256 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return __first != __last; }
# 1257 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 1260 "/usr/include/c++/12/bits/stl_algobase.h" 3
template<> struct __lc_rai< random_access_iterator_tag, random_access_iterator_tag> {
# 1262 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _RAI1, class _RAI2> static _RAI1
# 1265 "/usr/include/c++/12/bits/stl_algobase.h" 3
__newlast1(_RAI1 __first1, _RAI1 __last1, _RAI2
# 1266 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _RAI2 __last2)
# 1267 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1269 "/usr/include/c++/12/bits/stl_algobase.h" 3
const typename iterator_traits< _RAI1> ::difference_type __diff1 = __last1 - __first1;
# 1271 "/usr/include/c++/12/bits/stl_algobase.h" 3
const typename iterator_traits< _RAI2> ::difference_type __diff2 = __last2 - __first2;
# 1272 "/usr/include/c++/12/bits/stl_algobase.h" 3
return (__diff2 < __diff1) ? __first1 + __diff2 : __last1;
# 1273 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1275 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _RAI> static bool
# 1277 "/usr/include/c++/12/bits/stl_algobase.h" 3
__cnd2(_RAI, _RAI)
# 1278 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return true; }
# 1279 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 1281 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2, class _Compare> bool
# 1284 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lexicographical_compare_impl(_II1 __first1, _II1 __last1, _II2
# 1285 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _II2 __last2, _Compare
# 1286 "/usr/include/c++/12/bits/stl_algobase.h" 3
__comp)
# 1287 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1288 "/usr/include/c++/12/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::iterator_category _Category1;
# 1289 "/usr/include/c++/12/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::iterator_category _Category2;
# 1290 "/usr/include/c++/12/bits/stl_algobase.h" 3
typedef __lc_rai< typename iterator_traits< _II1> ::iterator_category, typename iterator_traits< _II2> ::iterator_category> __rai_type;
# 1292 "/usr/include/c++/12/bits/stl_algobase.h" 3
__last1 = __rai_type::__newlast1(__first1, __last1, __first2, __last2);
# 1293 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; (__first1 != __last1) && __rai_type::__cnd2(__first2, __last2); (++__first1), ((void)(++__first2)))
# 1295 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1296 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__comp(__first1, __first2)) {
# 1297 "/usr/include/c++/12/bits/stl_algobase.h" 3
return true; }
# 1298 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__comp(__first2, __first1)) {
# 1299 "/usr/include/c++/12/bits/stl_algobase.h" 3
return false; }
# 1300 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1301 "/usr/include/c++/12/bits/stl_algobase.h" 3
return (__first1 == __last1) && (__first2 != __last2);
# 1302 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1304 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< bool _BoolType>
# 1305 "/usr/include/c++/12/bits/stl_algobase.h" 3
struct __lexicographical_compare {
# 1307 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> static bool
# 1310 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lc(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)
# 1311 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1312 "/usr/include/c++/12/bits/stl_algobase.h" 3
using __gnu_cxx::__ops::__iter_less_iter;
# 1313 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__lexicographical_compare_impl(__first1, __last1, __first2, __last2, __iter_less_iter());
# 1316 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1318 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> static int
# 1321 "/usr/include/c++/12/bits/stl_algobase.h" 3
__3way(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)
# 1322 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1323 "/usr/include/c++/12/bits/stl_algobase.h" 3
while (__first1 != __last1)
# 1324 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1325 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__first2 == __last2) {
# 1326 "/usr/include/c++/12/bits/stl_algobase.h" 3
return +1; }
# 1327 "/usr/include/c++/12/bits/stl_algobase.h" 3
if ((*__first1) < (*__first2)) {
# 1328 "/usr/include/c++/12/bits/stl_algobase.h" 3
return -1; }
# 1329 "/usr/include/c++/12/bits/stl_algobase.h" 3
if ((*__first2) < (*__first1)) {
# 1330 "/usr/include/c++/12/bits/stl_algobase.h" 3
return +1; }
# 1331 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first1;
# 1332 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first2;
# 1333 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1334 "/usr/include/c++/12/bits/stl_algobase.h" 3
return ((int)(__first2 == __last2)) - 1;
# 1335 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1336 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 1339 "/usr/include/c++/12/bits/stl_algobase.h" 3
template<> struct __lexicographical_compare< true> {
# 1341 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _Up> static bool
# 1344 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lc(const _Tp *__first1, const _Tp *__last1, const _Up *
# 1345 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, const _Up *__last2)
# 1346 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return __3way(__first1, __last1, __first2, __last2) < 0; }
# 1348 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp, class _Up> static ptrdiff_t
# 1351 "/usr/include/c++/12/bits/stl_algobase.h" 3
__3way(const _Tp *__first1, const _Tp *__last1, const _Up *
# 1352 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, const _Up *__last2)
# 1353 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1354 "/usr/include/c++/12/bits/stl_algobase.h" 3
const size_t __len1 = __last1 - __first1;
# 1355 "/usr/include/c++/12/bits/stl_algobase.h" 3
const size_t __len2 = __last2 - __first2;
# 1356 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (const size_t __len = std::min(__len1, __len2)) {
# 1357 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (int __result = std::__memcmp(__first1, __first2, __len)) {
# 1358 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result; } }
# 1359 "/usr/include/c++/12/bits/stl_algobase.h" 3
return (ptrdiff_t)(__len1 - __len2);
# 1360 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1361 "/usr/include/c++/12/bits/stl_algobase.h" 3
};
# 1363 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1366 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lexicographical_compare_aux1(_II1 __first1, _II1 __last1, _II2
# 1367 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _II2 __last2)
# 1368 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1369 "/usr/include/c++/12/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II1> ::value_type _ValueType1;
# 1370 "/usr/include/c++/12/bits/stl_algobase.h" 3
typedef typename iterator_traits< _II2> ::value_type _ValueType2;
# 1371 "/usr/include/c++/12/bits/stl_algobase.h" 3
const bool __simple = (__is_memcmp_ordered_with< typename iterator_traits< _II1> ::value_type, typename iterator_traits< _II2> ::value_type> ::__value && __is_pointer< _II1> ::__value && __is_pointer< _II2> ::__value);
# 1384 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::template __lexicographical_compare< __simple> ::__lc(__first1, __last1, __first2, __last2);
# 1386 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1388 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp1, class _Ref1, class _Ptr1, class
# 1389 "/usr/include/c++/12/bits/stl_algobase.h" 3
_Tp2> bool
# 1388 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lexicographical_compare_aux1(_Deque_iterator< _Tp1, _Ref1, _Ptr1> , _Deque_iterator< _Tp1, _Ref1, _Ptr1> , _Tp2 *, _Tp2 *);
# 1396 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp1, class
# 1397 "/usr/include/c++/12/bits/stl_algobase.h" 3
_Tp2, class _Ref2, class _Ptr2> bool
# 1396 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lexicographical_compare_aux1(_Tp1 *, _Tp1 *, _Deque_iterator< _Tp2, _Ref2, _Ptr2> , _Deque_iterator< _Tp2, _Ref2, _Ptr2> );
# 1403 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Tp1, class _Ref1, class _Ptr1, class
# 1404 "/usr/include/c++/12/bits/stl_algobase.h" 3
_Tp2, class _Ref2, class _Ptr2> bool
# 1403 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lexicographical_compare_aux1(_Deque_iterator< _Tp1, _Ref1, _Ptr1> , _Deque_iterator< _Tp1, _Ref1, _Ptr1> , _Deque_iterator< _Tp2, _Ref2, _Ptr2> , _Deque_iterator< _Tp2, _Ref2, _Ptr2> );
# 1412 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1415 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lexicographical_compare_aux(_II1 __first1, _II1 __last1, _II2
# 1416 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _II2 __last2)
# 1417 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1418 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__lexicographical_compare_aux1(std::__niter_base(__first1), std::__niter_base(__last1), std::__niter_base(__first2), std::__niter_base(__last2));
# 1422 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1424 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Iter1, class _Seq1, class _Cat1, class
# 1425 "/usr/include/c++/12/bits/stl_algobase.h" 3
_II2> bool
# 1424 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lexicographical_compare_aux(const __gnu_debug::_Safe_iterator< _Iter1, _Seq1, _Cat1> &, const __gnu_debug::_Safe_iterator< _Iter1, _Seq1, _Cat1> &, _II2, _II2);
# 1432 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class
# 1433 "/usr/include/c++/12/bits/stl_algobase.h" 3
_Iter2, class _Seq2, class _Cat2> bool
# 1432 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lexicographical_compare_aux(_II1, _II1, const __gnu_debug::_Safe_iterator< _Iter2, _Seq2, _Cat2> &, const __gnu_debug::_Safe_iterator< _Iter2, _Seq2, _Cat2> &);
# 1440 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Iter1, class _Seq1, class _Cat1, class
# 1441 "/usr/include/c++/12/bits/stl_algobase.h" 3
_Iter2, class _Seq2, class _Cat2> bool
# 1440 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lexicographical_compare_aux(const __gnu_debug::_Safe_iterator< _Iter1, _Seq1, _Cat1> &, const __gnu_debug::_Safe_iterator< _Iter1, _Seq1, _Cat1> &, const __gnu_debug::_Safe_iterator< _Iter2, _Seq2, _Cat2> &, const __gnu_debug::_Safe_iterator< _Iter2, _Seq2, _Cat2> &);
# 1449 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp, class _Compare> _ForwardIterator
# 1452 "/usr/include/c++/12/bits/stl_algobase.h" 3
__lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 1453 "/usr/include/c++/12/bits/stl_algobase.h" 3
__val, _Compare __comp)
# 1454 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1456 "/usr/include/c++/12/bits/stl_algobase.h" 3
typedef typename iterator_traits< _ForwardIterator> ::difference_type _DistanceType;
# 1458 "/usr/include/c++/12/bits/stl_algobase.h" 3
_DistanceType __len = std::distance(__first, __last);
# 1460 "/usr/include/c++/12/bits/stl_algobase.h" 3
while (__len > 0)
# 1461 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1462 "/usr/include/c++/12/bits/stl_algobase.h" 3
_DistanceType __half = __len >> 1;
# 1463 "/usr/include/c++/12/bits/stl_algobase.h" 3
_ForwardIterator __middle = __first;
# 1464 "/usr/include/c++/12/bits/stl_algobase.h" 3
std::advance(__middle, __half);
# 1465 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__comp(__middle, __val))
# 1466 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1467 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first = __middle;
# 1468 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first;
# 1469 "/usr/include/c++/12/bits/stl_algobase.h" 3
__len = ((__len - __half) - 1);
# 1470 "/usr/include/c++/12/bits/stl_algobase.h" 3
} else {
# 1472 "/usr/include/c++/12/bits/stl_algobase.h" 3
__len = __half; }
# 1473 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1474 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first;
# 1475 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1488 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Tp> inline _ForwardIterator
# 1491 "/usr/include/c++/12/bits/stl_algobase.h" 3
lower_bound(_ForwardIterator __first, _ForwardIterator __last, const _Tp &
# 1492 "/usr/include/c++/12/bits/stl_algobase.h" 3
__val)
# 1493 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1498 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1500 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__lower_bound(__first, __last, __val, __gnu_cxx::__ops::__iter_less_val());
# 1502 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1507 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr int __lg(int __n)
# 1508 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return ((((int)sizeof(int)) * 8) - 1) - __builtin_clz(__n); }
# 1511 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr unsigned __lg(unsigned __n)
# 1512 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return ((((int)sizeof(int)) * 8) - 1) - __builtin_clz(__n); }
# 1515 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr long __lg(long __n)
# 1516 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return ((((int)sizeof(long)) * 8) - 1) - __builtin_clzl(__n); }
# 1519 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr unsigned long __lg(unsigned long __n)
# 1520 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return ((((int)sizeof(long)) * 8) - 1) - __builtin_clzl(__n); }
# 1523 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr long long __lg(long long __n)
# 1524 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return ((((int)sizeof(long long)) * 8) - 1) - __builtin_clzll(__n); }
# 1527 "/usr/include/c++/12/bits/stl_algobase.h" 3
constexpr unsigned long long __lg(unsigned long long __n)
# 1528 "/usr/include/c++/12/bits/stl_algobase.h" 3
{ return ((((int)sizeof(long long)) * 8) - 1) - __builtin_clzll(__n); }
# 1544 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1547 "/usr/include/c++/12/bits/stl_algobase.h" 3
equal(_II1 __first1, _II1 __last1, _II2 __first2)
# 1548 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1555 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1557 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__equal_aux(__first1, __last1, __first2);
# 1558 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1575 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _IIter1, class _IIter2, class _BinaryPredicate> inline bool
# 1578 "/usr/include/c++/12/bits/stl_algobase.h" 3
equal(_IIter1 __first1, _IIter1 __last1, _IIter2
# 1579 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1580 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1584 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1586 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), ((void)(++__first2))) {
# 1587 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (!((bool)__binary_pred(*__first1, *__first2))) {
# 1588 "/usr/include/c++/12/bits/stl_algobase.h" 3
return false; } }
# 1589 "/usr/include/c++/12/bits/stl_algobase.h" 3
return true;
# 1590 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1594 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1597 "/usr/include/c++/12/bits/stl_algobase.h" 3
__equal4(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)
# 1598 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1599 "/usr/include/c++/12/bits/stl_algobase.h" 3
using _RATag = random_access_iterator_tag;
# 1600 "/usr/include/c++/12/bits/stl_algobase.h" 3
using _Cat1 = typename iterator_traits< _II1> ::iterator_category;
# 1601 "/usr/include/c++/12/bits/stl_algobase.h" 3
using _Cat2 = typename iterator_traits< _II2> ::iterator_category;
# 1602 "/usr/include/c++/12/bits/stl_algobase.h" 3
using _RAIters = __and_< is_same< typename iterator_traits< _II1> ::iterator_category, random_access_iterator_tag> , is_same< typename iterator_traits< _II2> ::iterator_category, random_access_iterator_tag> > ;
# 1603 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (_RAIters())
# 1604 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1605 "/usr/include/c++/12/bits/stl_algobase.h" 3
auto __d1 = std::distance(__first1, __last1);
# 1606 "/usr/include/c++/12/bits/stl_algobase.h" 3
auto __d2 = std::distance(__first2, __last2);
# 1607 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__d1 != __d2) {
# 1608 "/usr/include/c++/12/bits/stl_algobase.h" 3
return false; }
# 1609 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::equal(__first1, __last1, __first2);
# 1610 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1612 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; (__first1 != __last1) && (__first2 != __last2); (++__first1), ((void)(++__first2))) {
# 1614 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (!((*__first1) == (*__first2))) {
# 1615 "/usr/include/c++/12/bits/stl_algobase.h" 3
return false; } }
# 1616 "/usr/include/c++/12/bits/stl_algobase.h" 3
return (__first1 == __last1) && (__first2 == __last2);
# 1617 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1620 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2, class _BinaryPredicate> inline bool
# 1623 "/usr/include/c++/12/bits/stl_algobase.h" 3
__equal4(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2, _BinaryPredicate
# 1624 "/usr/include/c++/12/bits/stl_algobase.h" 3
__binary_pred)
# 1625 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1626 "/usr/include/c++/12/bits/stl_algobase.h" 3
using _RATag = random_access_iterator_tag;
# 1627 "/usr/include/c++/12/bits/stl_algobase.h" 3
using _Cat1 = typename iterator_traits< _II1> ::iterator_category;
# 1628 "/usr/include/c++/12/bits/stl_algobase.h" 3
using _Cat2 = typename iterator_traits< _II2> ::iterator_category;
# 1629 "/usr/include/c++/12/bits/stl_algobase.h" 3
using _RAIters = __and_< is_same< typename iterator_traits< _II1> ::iterator_category, random_access_iterator_tag> , is_same< typename iterator_traits< _II2> ::iterator_category, random_access_iterator_tag> > ;
# 1630 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (_RAIters())
# 1631 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1632 "/usr/include/c++/12/bits/stl_algobase.h" 3
auto __d1 = std::distance(__first1, __last1);
# 1633 "/usr/include/c++/12/bits/stl_algobase.h" 3
auto __d2 = std::distance(__first2, __last2);
# 1634 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__d1 != __d2) {
# 1635 "/usr/include/c++/12/bits/stl_algobase.h" 3
return false; }
# 1636 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::equal(__first1, __last1, __first2, __binary_pred);
# 1638 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1640 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; (__first1 != __last1) && (__first2 != __last2); (++__first1), ((void)(++__first2))) {
# 1642 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (!((bool)__binary_pred(*__first1, *__first2))) {
# 1643 "/usr/include/c++/12/bits/stl_algobase.h" 3
return false; } }
# 1644 "/usr/include/c++/12/bits/stl_algobase.h" 3
return (__first1 == __last1) && (__first2 == __last2);
# 1645 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1665 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1668 "/usr/include/c++/12/bits/stl_algobase.h" 3
equal(_II1 __first1, _II1 __last1, _II2 __first2, _II2 __last2)
# 1669 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1676 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1677 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1679 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__equal4(__first1, __last1, __first2, __last2);
# 1680 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1698 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _IIter1, class _IIter2, class _BinaryPredicate> inline bool
# 1701 "/usr/include/c++/12/bits/stl_algobase.h" 3
equal(_IIter1 __first1, _IIter1 __last1, _IIter2
# 1702 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _IIter2 __last2, _BinaryPredicate __binary_pred)
# 1703 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1707 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1708 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1710 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__equal4(__first1, __last1, __first2, __last2, __binary_pred);
# 1712 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1730 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2> inline bool
# 1733 "/usr/include/c++/12/bits/stl_algobase.h" 3
lexicographical_compare(_II1 __first1, _II1 __last1, _II2
# 1734 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _II2 __last2)
# 1735 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1745 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1746 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1748 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__lexicographical_compare_aux(__first1, __last1, __first2, __last2);
# 1750 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1765 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _II1, class _II2, class _Compare> inline bool
# 1768 "/usr/include/c++/12/bits/stl_algobase.h" 3
lexicographical_compare(_II1 __first1, _II1 __last1, _II2
# 1769 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _II2 __last2, _Compare __comp)
# 1770 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1774 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1775 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1777 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__lexicographical_compare_impl(__first1, __last1, __first2, __last2, __gnu_cxx::__ops::__iter_comp_iter(__comp));
# 1780 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1880 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 1881 "/usr/include/c++/12/bits/stl_algobase.h" 3
_BinaryPredicate> pair< _InputIterator1, _InputIterator2>
# 1884 "/usr/include/c++/12/bits/stl_algobase.h" 3
__mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1885 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1886 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1887 "/usr/include/c++/12/bits/stl_algobase.h" 3
while ((__first1 != __last1) && __binary_pred(__first1, __first2))
# 1888 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1889 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first1;
# 1890 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first2;
# 1891 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1892 "/usr/include/c++/12/bits/stl_algobase.h" 3
return pair< _InputIterator1, _InputIterator2> (__first1, __first2);
# 1893 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1908 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2> inline pair< _InputIterator1, _InputIterator2>
# 1911 "/usr/include/c++/12/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1912 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2)
# 1913 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1920 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1922 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__mismatch(__first1, __last1, __first2, __gnu_cxx::__ops::__iter_equal_to_iter());
# 1924 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1942 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 1943 "/usr/include/c++/12/bits/stl_algobase.h" 3
_BinaryPredicate> inline pair< _InputIterator1, _InputIterator2>
# 1946 "/usr/include/c++/12/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1947 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __binary_pred)
# 1948 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1952 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 1954 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__mismatch(__first1, __last1, __first2, __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
# 1956 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1960 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 1961 "/usr/include/c++/12/bits/stl_algobase.h" 3
_BinaryPredicate> pair< _InputIterator1, _InputIterator2>
# 1964 "/usr/include/c++/12/bits/stl_algobase.h" 3
__mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1965 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _InputIterator2 __last2, _BinaryPredicate
# 1966 "/usr/include/c++/12/bits/stl_algobase.h" 3
__binary_pred)
# 1967 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1968 "/usr/include/c++/12/bits/stl_algobase.h" 3
while ((__first1 != __last1) && (__first2 != __last2) && __binary_pred(__first1, __first2))
# 1970 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 1971 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first1;
# 1972 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first2;
# 1973 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1974 "/usr/include/c++/12/bits/stl_algobase.h" 3
return pair< _InputIterator1, _InputIterator2> (__first1, __first2);
# 1975 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 1991 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2> inline pair< _InputIterator1, _InputIterator2>
# 1994 "/usr/include/c++/12/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 1995 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _InputIterator2 __last2)
# 1996 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2003 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 2004 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 2006 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__mismatch(__first1, __last1, __first2, __last2, __gnu_cxx::__ops::__iter_equal_to_iter());
# 2008 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2027 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _InputIterator1, class _InputIterator2, class
# 2028 "/usr/include/c++/12/bits/stl_algobase.h" 3
_BinaryPredicate> inline pair< _InputIterator1, _InputIterator2>
# 2031 "/usr/include/c++/12/bits/stl_algobase.h" 3
mismatch(_InputIterator1 __first1, _InputIterator1 __last1, _InputIterator2
# 2032 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _InputIterator2 __last2, _BinaryPredicate
# 2033 "/usr/include/c++/12/bits/stl_algobase.h" 3
__binary_pred)
# 2034 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2038 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 2039 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 2041 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__mismatch(__first1, __last1, __first2, __last2, __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
# 2043 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2049 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _InputIterator, class _Predicate> inline _InputIterator
# 2052 "/usr/include/c++/12/bits/stl_algobase.h" 3
__find_if(_InputIterator __first, _InputIterator __last, _Predicate
# 2053 "/usr/include/c++/12/bits/stl_algobase.h" 3
__pred, input_iterator_tag)
# 2054 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2055 "/usr/include/c++/12/bits/stl_algobase.h" 3
while ((__first != __last) && (!__pred(__first))) {
# 2056 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first; }
# 2057 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first;
# 2058 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2061 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _RandomAccessIterator, class _Predicate> _RandomAccessIterator
# 2064 "/usr/include/c++/12/bits/stl_algobase.h" 3
__find_if(_RandomAccessIterator __first, _RandomAccessIterator __last, _Predicate
# 2065 "/usr/include/c++/12/bits/stl_algobase.h" 3
__pred, random_access_iterator_tag)
# 2066 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2068 "/usr/include/c++/12/bits/stl_algobase.h" 3
typename iterator_traits< _RandomAccessIterator> ::difference_type __trip_count = (__last - __first) >> 2;
# 2070 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __trip_count > 0; --__trip_count)
# 2071 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2072 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__pred(__first)) {
# 2073 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first; }
# 2074 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first;
# 2076 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__pred(__first)) {
# 2077 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first; }
# 2078 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first;
# 2080 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__pred(__first)) {
# 2081 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first; }
# 2082 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first;
# 2084 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__pred(__first)) {
# 2085 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first; }
# 2086 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first;
# 2087 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2089 "/usr/include/c++/12/bits/stl_algobase.h" 3
switch (__last - __first)
# 2090 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2091 "/usr/include/c++/12/bits/stl_algobase.h" 3
case 3:
# 2092 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__pred(__first)) {
# 2093 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first; }
# 2094 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first;
# 2096 "/usr/include/c++/12/bits/stl_algobase.h" 3
case 2:
# 2097 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__pred(__first)) {
# 2098 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first; }
# 2099 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first;
# 2101 "/usr/include/c++/12/bits/stl_algobase.h" 3
case 1:
# 2102 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__pred(__first)) {
# 2103 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first; }
# 2104 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first;
# 2106 "/usr/include/c++/12/bits/stl_algobase.h" 3
case 0:
# 2107 "/usr/include/c++/12/bits/stl_algobase.h" 3
default:
# 2108 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __last;
# 2109 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2110 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2112 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _Iterator, class _Predicate> inline _Iterator
# 2115 "/usr/include/c++/12/bits/stl_algobase.h" 3
__find_if(_Iterator __first, _Iterator __last, _Predicate __pred)
# 2116 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2117 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __find_if(__first, __last, __pred, std::__iterator_category(__first));
# 2119 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2121 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _InputIterator, class _Predicate> typename iterator_traits< _InputIterator> ::difference_type
# 2124 "/usr/include/c++/12/bits/stl_algobase.h" 3
__count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
# 2125 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2126 "/usr/include/c++/12/bits/stl_algobase.h" 3
typename iterator_traits< _InputIterator> ::difference_type __n = (0);
# 2127 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 2128 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__pred(__first)) {
# 2129 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__n; } }
# 2130 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __n;
# 2131 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2133 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _ForwardIterator, class _Predicate> _ForwardIterator
# 2136 "/usr/include/c++/12/bits/stl_algobase.h" 3
__remove_if(_ForwardIterator __first, _ForwardIterator __last, _Predicate
# 2137 "/usr/include/c++/12/bits/stl_algobase.h" 3
__pred)
# 2138 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2139 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first = std::__find_if(__first, __last, __pred);
# 2140 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__first == __last) {
# 2141 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __first; }
# 2142 "/usr/include/c++/12/bits/stl_algobase.h" 3
_ForwardIterator __result = __first;
# 2143 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__first;
# 2144 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __first != __last; ++__first) {
# 2145 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (!__pred(__first))
# 2146 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2147 "/usr/include/c++/12/bits/stl_algobase.h" 3
(*__result) = std::move(*__first);
# 2148 "/usr/include/c++/12/bits/stl_algobase.h" 3
++__result;
# 2149 "/usr/include/c++/12/bits/stl_algobase.h" 3
} }
# 2150 "/usr/include/c++/12/bits/stl_algobase.h" 3
return __result;
# 2151 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2154 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2, class
# 2155 "/usr/include/c++/12/bits/stl_algobase.h" 3
_BinaryPredicate> bool
# 2158 "/usr/include/c++/12/bits/stl_algobase.h" 3
__is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 2159 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2, _BinaryPredicate __pred)
# 2160 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2163 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (; __first1 != __last1; (++__first1), ((void)(++__first2))) {
# 2164 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (!__pred(__first1, __first2)) {
# 2165 "/usr/include/c++/12/bits/stl_algobase.h" 3
break; } }
# 2167 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__first1 == __last1) {
# 2168 "/usr/include/c++/12/bits/stl_algobase.h" 3
return true; }
# 2172 "/usr/include/c++/12/bits/stl_algobase.h" 3
_ForwardIterator2 __last2 = __first2;
# 2173 "/usr/include/c++/12/bits/stl_algobase.h" 3
std::advance(__last2, std::distance(__first1, __last1));
# 2174 "/usr/include/c++/12/bits/stl_algobase.h" 3
for (_ForwardIterator1 __scan = __first1; __scan != __last1; ++__scan)
# 2175 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2176 "/usr/include/c++/12/bits/stl_algobase.h" 3
if (__scan != std::__find_if(__first1, __scan, __gnu_cxx::__ops::__iter_comp_iter(__pred, __scan))) {
# 2178 "/usr/include/c++/12/bits/stl_algobase.h" 3
continue; }
# 2180 "/usr/include/c++/12/bits/stl_algobase.h" 3
auto __matches = std::__count_if(__first2, __last2, __gnu_cxx::__ops::__iter_comp_iter(__pred, __scan));
# 2183 "/usr/include/c++/12/bits/stl_algobase.h" 3
if ((0 == __matches) || (std::__count_if(__scan, __last1, __gnu_cxx::__ops::__iter_comp_iter(__pred, __scan)) != __matches)) {
# 2187 "/usr/include/c++/12/bits/stl_algobase.h" 3
return false; }
# 2188 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2189 "/usr/include/c++/12/bits/stl_algobase.h" 3
return true;
# 2190 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2204 "/usr/include/c++/12/bits/stl_algobase.h" 3
template< class _ForwardIterator1, class _ForwardIterator2> inline bool
# 2207 "/usr/include/c++/12/bits/stl_algobase.h" 3
is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1, _ForwardIterator2
# 2208 "/usr/include/c++/12/bits/stl_algobase.h" 3
__first2)
# 2209 "/usr/include/c++/12/bits/stl_algobase.h" 3
{
# 2216 "/usr/include/c++/12/bits/stl_algobase.h" 3
;
# 2218 "/usr/include/c++/12/bits/stl_algobase.h" 3
return std::__is_permutation(__first1, __last1, __first2, __gnu_cxx::__ops::__iter_equal_to_iter());
# 2220 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 2224 "/usr/include/c++/12/bits/stl_algobase.h" 3
}
# 158 "/usr/include/c++/12/limits" 3
namespace std __attribute((__visibility__("default"))) {
# 167 "/usr/include/c++/12/limits" 3
enum float_round_style {
# 169 "/usr/include/c++/12/limits" 3
round_indeterminate = (-1),
# 170 "/usr/include/c++/12/limits" 3
round_toward_zero = 0,
# 171 "/usr/include/c++/12/limits" 3
round_to_nearest,
# 172 "/usr/include/c++/12/limits" 3
round_toward_infinity,
# 173 "/usr/include/c++/12/limits" 3
round_toward_neg_infinity
# 174 "/usr/include/c++/12/limits" 3
};
# 182 "/usr/include/c++/12/limits" 3
enum float_denorm_style {
# 185 "/usr/include/c++/12/limits" 3
denorm_indeterminate = (-1),
# 187 "/usr/include/c++/12/limits" 3
denorm_absent = 0,
# 189 "/usr/include/c++/12/limits" 3
denorm_present
# 190 "/usr/include/c++/12/limits" 3
};
# 202 "/usr/include/c++/12/limits" 3
struct __numeric_limits_base {
# 206 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = false;
# 211 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = 0;
# 214 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = 0;
# 219 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 223 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = false;
# 226 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = false;
# 231 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = false;
# 235 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 0;
# 239 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 243 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 248 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 252 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 255 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 259 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 263 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 266 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 270 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 274 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 279 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = false;
# 288 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = false;
# 291 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = false;
# 294 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 299 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 301 "/usr/include/c++/12/limits" 3
};
# 311 "/usr/include/c++/12/limits" 3
template< class _Tp>
# 312 "/usr/include/c++/12/limits" 3
struct numeric_limits : public __numeric_limits_base {
# 317 "/usr/include/c++/12/limits" 3
static constexpr _Tp min() noexcept { return _Tp(); }
# 321 "/usr/include/c++/12/limits" 3
static constexpr _Tp max() noexcept { return _Tp(); }
# 327 "/usr/include/c++/12/limits" 3
static constexpr _Tp lowest() noexcept { return _Tp(); }
# 333 "/usr/include/c++/12/limits" 3
static constexpr _Tp epsilon() noexcept { return _Tp(); }
# 337 "/usr/include/c++/12/limits" 3
static constexpr _Tp round_error() noexcept { return _Tp(); }
# 341 "/usr/include/c++/12/limits" 3
static constexpr _Tp infinity() noexcept { return _Tp(); }
# 346 "/usr/include/c++/12/limits" 3
static constexpr _Tp quiet_NaN() noexcept { return _Tp(); }
# 351 "/usr/include/c++/12/limits" 3
static constexpr _Tp signaling_NaN() noexcept { return _Tp(); }
# 357 "/usr/include/c++/12/limits" 3
static constexpr _Tp denorm_min() noexcept { return _Tp(); }
# 358 "/usr/include/c++/12/limits" 3
};
# 363 "/usr/include/c++/12/limits" 3
template< class _Tp>
# 364 "/usr/include/c++/12/limits" 3
struct numeric_limits< const _Tp> : public std::numeric_limits< _Tp> {
# 365 "/usr/include/c++/12/limits" 3
};
# 367 "/usr/include/c++/12/limits" 3
template< class _Tp>
# 368 "/usr/include/c++/12/limits" 3
struct numeric_limits< volatile _Tp> : public std::numeric_limits< _Tp> {
# 369 "/usr/include/c++/12/limits" 3
};
# 371 "/usr/include/c++/12/limits" 3
template< class _Tp>
# 372 "/usr/include/c++/12/limits" 3
struct numeric_limits< const volatile _Tp> : public std::numeric_limits< _Tp> {
# 373 "/usr/include/c++/12/limits" 3
};
# 384 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< bool> {
# 386 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 389 "/usr/include/c++/12/limits" 3
static constexpr bool min() noexcept { return false; }
# 392 "/usr/include/c++/12/limits" 3
static constexpr bool max() noexcept { return true; }
# 396 "/usr/include/c++/12/limits" 3
static constexpr bool lowest() noexcept { return min(); }
# 398 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = 1;
# 399 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = 0;
# 401 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 403 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = false;
# 404 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 405 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 406 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 409 "/usr/include/c++/12/limits" 3
static constexpr bool epsilon() noexcept { return false; }
# 412 "/usr/include/c++/12/limits" 3
static constexpr bool round_error() noexcept { return false; }
# 414 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 415 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 416 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 417 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 419 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 420 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 421 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 422 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 424 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 427 "/usr/include/c++/12/limits" 3
static constexpr bool infinity() noexcept { return false; }
# 430 "/usr/include/c++/12/limits" 3
static constexpr bool quiet_NaN() noexcept { return false; }
# 433 "/usr/include/c++/12/limits" 3
static constexpr bool signaling_NaN() noexcept { return false; }
# 436 "/usr/include/c++/12/limits" 3
static constexpr bool denorm_min() noexcept { return false; }
# 438 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 439 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 440 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = false;
# 445 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 446 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 447 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 449 "/usr/include/c++/12/limits" 3
};
# 453 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< char> {
# 455 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 458 "/usr/include/c++/12/limits" 3
static constexpr char min() noexcept { return ((((char)(-1)) < 0) ? (-((((char)(-1)) < 0) ? (((((char)1) << (((sizeof(char) * (8)) - (((char)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char)0)))) - 1 : ((char)0)); }
# 461 "/usr/include/c++/12/limits" 3
static constexpr char max() noexcept { return ((((char)(-1)) < 0) ? (((((char)1) << (((sizeof(char) * (8)) - (((char)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char)0))); }
# 465 "/usr/include/c++/12/limits" 3
static constexpr char lowest() noexcept { return min(); }
# 468 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(char) * (8)) - (((char)(-1)) < 0));
# 469 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(char) * (8)) - (((char)(-1)) < 0)) * (643L)) / (2136));
# 471 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 473 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = (((char)(-1)) < 0);
# 474 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 475 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 476 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 479 "/usr/include/c++/12/limits" 3
static constexpr char epsilon() noexcept { return 0; }
# 482 "/usr/include/c++/12/limits" 3
static constexpr char round_error() noexcept { return 0; }
# 484 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 485 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 486 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 487 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 489 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 490 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 491 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 492 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 494 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 497 "/usr/include/c++/12/limits" 3
static constexpr char infinity() noexcept { return ((char)0); }
# 500 "/usr/include/c++/12/limits" 3
static constexpr char quiet_NaN() noexcept { return ((char)0); }
# 503 "/usr/include/c++/12/limits" 3
static constexpr char signaling_NaN() noexcept { return ((char)0); }
# 506 "/usr/include/c++/12/limits" 3
static constexpr char denorm_min() noexcept { return static_cast< char>(0); }
# 508 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 509 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 510 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = (!is_signed);
# 512 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 513 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 514 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 516 "/usr/include/c++/12/limits" 3
};
# 520 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< signed char> {
# 522 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 525 "/usr/include/c++/12/limits" 3
static constexpr signed char min() noexcept { return (-127) - 1; }
# 528 "/usr/include/c++/12/limits" 3
static constexpr signed char max() noexcept { return 127; }
# 532 "/usr/include/c++/12/limits" 3
static constexpr signed char lowest() noexcept { return min(); }
# 535 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(signed char) * (8)) - (((signed char)(-1)) < 0));
# 536 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(signed char) * (8)) - (((signed char)(-1)) < 0)) * (643L)) / (2136));
# 539 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 541 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = true;
# 542 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 543 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 544 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 547 "/usr/include/c++/12/limits" 3
static constexpr signed char epsilon() noexcept { return 0; }
# 550 "/usr/include/c++/12/limits" 3
static constexpr signed char round_error() noexcept { return 0; }
# 552 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 553 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 554 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 555 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 557 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 558 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 559 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 560 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 562 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 565 "/usr/include/c++/12/limits" 3
static constexpr signed char infinity() noexcept { return static_cast< signed char>(0); }
# 568 "/usr/include/c++/12/limits" 3
static constexpr signed char quiet_NaN() noexcept { return static_cast< signed char>(0); }
# 571 "/usr/include/c++/12/limits" 3
static constexpr signed char signaling_NaN() noexcept
# 572 "/usr/include/c++/12/limits" 3
{ return static_cast< signed char>(0); }
# 575 "/usr/include/c++/12/limits" 3
static constexpr signed char denorm_min() noexcept
# 576 "/usr/include/c++/12/limits" 3
{ return static_cast< signed char>(0); }
# 578 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 579 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 580 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = false;
# 582 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 583 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 584 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 586 "/usr/include/c++/12/limits" 3
};
# 590 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< unsigned char> {
# 592 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 595 "/usr/include/c++/12/limits" 3
static constexpr unsigned char min() noexcept { return 0; }
# 598 "/usr/include/c++/12/limits" 3
static constexpr unsigned char max() noexcept { return ((127) * 2U) + (1); }
# 602 "/usr/include/c++/12/limits" 3
static constexpr unsigned char lowest() noexcept { return min(); }
# 605 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(unsigned char) * (8)) - (((unsigned char)(-1)) < 0));
# 607 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(unsigned char) * (8)) - (((unsigned char)(-1)) < 0)) * (643L)) / (2136));
# 610 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 612 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = false;
# 613 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 614 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 615 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 618 "/usr/include/c++/12/limits" 3
static constexpr unsigned char epsilon() noexcept { return 0; }
# 621 "/usr/include/c++/12/limits" 3
static constexpr unsigned char round_error() noexcept { return 0; }
# 623 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 624 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 625 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 626 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 628 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 629 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 630 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 631 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 633 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 636 "/usr/include/c++/12/limits" 3
static constexpr unsigned char infinity() noexcept
# 637 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned char>(0); }
# 640 "/usr/include/c++/12/limits" 3
static constexpr unsigned char quiet_NaN() noexcept
# 641 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned char>(0); }
# 644 "/usr/include/c++/12/limits" 3
static constexpr unsigned char signaling_NaN() noexcept
# 645 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned char>(0); }
# 648 "/usr/include/c++/12/limits" 3
static constexpr unsigned char denorm_min() noexcept
# 649 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned char>(0); }
# 651 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 652 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 653 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = true;
# 655 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 656 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 657 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 659 "/usr/include/c++/12/limits" 3
};
# 663 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< wchar_t> {
# 665 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 668 "/usr/include/c++/12/limits" 3
static constexpr wchar_t min() noexcept { return ((((wchar_t)(-1)) < 0) ? (-((((wchar_t)(-1)) < 0) ? (((((wchar_t)1) << (((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((wchar_t)0)))) - 1 : ((wchar_t)0)); }
# 671 "/usr/include/c++/12/limits" 3
static constexpr wchar_t max() noexcept { return ((((wchar_t)(-1)) < 0) ? (((((wchar_t)1) << (((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((wchar_t)0))); }
# 675 "/usr/include/c++/12/limits" 3
static constexpr wchar_t lowest() noexcept { return min(); }
# 678 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0));
# 679 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(wchar_t) * (8)) - (((wchar_t)(-1)) < 0)) * (643L)) / (2136));
# 682 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 684 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = (((wchar_t)(-1)) < 0);
# 685 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 686 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 687 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 690 "/usr/include/c++/12/limits" 3
static constexpr wchar_t epsilon() noexcept { return 0; }
# 693 "/usr/include/c++/12/limits" 3
static constexpr wchar_t round_error() noexcept { return 0; }
# 695 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 696 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 697 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 698 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 700 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 701 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 702 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 703 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 705 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 708 "/usr/include/c++/12/limits" 3
static constexpr wchar_t infinity() noexcept { return ((wchar_t)0); }
# 711 "/usr/include/c++/12/limits" 3
static constexpr wchar_t quiet_NaN() noexcept { return ((wchar_t)0); }
# 714 "/usr/include/c++/12/limits" 3
static constexpr wchar_t signaling_NaN() noexcept { return ((wchar_t)0); }
# 717 "/usr/include/c++/12/limits" 3
static constexpr wchar_t denorm_min() noexcept { return ((wchar_t)0); }
# 719 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 720 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 721 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = (!is_signed);
# 723 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 724 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 725 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 727 "/usr/include/c++/12/limits" 3
};
# 797 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< char16_t> {
# 799 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 802 "/usr/include/c++/12/limits" 3
static constexpr char16_t min() noexcept { return ((((char16_t)(-1)) < 0) ? (-((((char16_t)(-1)) < 0) ? (((((char16_t)1) << (((sizeof(char16_t) * (8)) - (((char16_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char16_t)0)))) - 1 : ((char16_t)0)); }
# 805 "/usr/include/c++/12/limits" 3
static constexpr char16_t max() noexcept { return ((((char16_t)(-1)) < 0) ? (((((char16_t)1) << (((sizeof(char16_t) * (8)) - (((char16_t)(-1)) < 0)) - (1))) - 1) << 1) + 1 : (~((char16_t)0))); }
# 808 "/usr/include/c++/12/limits" 3
static constexpr char16_t lowest() noexcept { return min(); }
# 810 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(char16_t) * (8)) - (((char16_t)(-1)) < 0));
# 811 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(char16_t) * (8)) - (((char16_t)(-1)) < 0)) * (643L)) / (2136));
# 812 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 813 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = (((char16_t)(-1)) < 0);
# 814 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 815 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 816 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 819 "/usr/include/c++/12/limits" 3
static constexpr char16_t epsilon() noexcept { return 0; }
# 822 "/usr/include/c++/12/limits" 3
static constexpr char16_t round_error() noexcept { return 0; }
# 824 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 825 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 826 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 827 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 829 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 830 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 831 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 832 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 833 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 836 "/usr/include/c++/12/limits" 3
static constexpr char16_t infinity() noexcept { return ((char16_t)0); }
# 839 "/usr/include/c++/12/limits" 3
static constexpr char16_t quiet_NaN() noexcept { return ((char16_t)0); }
# 842 "/usr/include/c++/12/limits" 3
static constexpr char16_t signaling_NaN() noexcept { return ((char16_t)0); }
# 845 "/usr/include/c++/12/limits" 3
static constexpr char16_t denorm_min() noexcept { return ((char16_t)0); }
# 847 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 848 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 849 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = (!is_signed);
# 851 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 852 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 853 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 854 "/usr/include/c++/12/limits" 3
};
# 858 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< char32_t> {
# 860 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 863 "/usr/include/c++/12/limits" 3
static constexpr char32_t min() noexcept { return ((((char32_t)(-1)) < (0)) ? (-((((char32_t)(-1)) < (0)) ? (((((char32_t)1) << (((sizeof(char32_t) * (8)) - (((char32_t)(-1)) < (0))) - (1))) - (1)) << 1) + (1) : (~((char32_t)0)))) - (1) : ((char32_t)0)); }
# 866 "/usr/include/c++/12/limits" 3
static constexpr char32_t max() noexcept { return ((((char32_t)(-1)) < (0)) ? (((((char32_t)1) << (((sizeof(char32_t) * (8)) - (((char32_t)(-1)) < (0))) - (1))) - (1)) << 1) + (1) : (~((char32_t)0))); }
# 869 "/usr/include/c++/12/limits" 3
static constexpr char32_t lowest() noexcept { return min(); }
# 871 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(char32_t) * (8)) - (((char32_t)(-1)) < (0)));
# 872 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(char32_t) * (8)) - (((char32_t)(-1)) < (0))) * (643L)) / (2136));
# 873 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 874 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = (((char32_t)(-1)) < (0));
# 875 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 876 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 877 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 880 "/usr/include/c++/12/limits" 3
static constexpr char32_t epsilon() noexcept { return 0; }
# 883 "/usr/include/c++/12/limits" 3
static constexpr char32_t round_error() noexcept { return 0; }
# 885 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 886 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 887 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 888 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 890 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 891 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 892 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 893 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 894 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 897 "/usr/include/c++/12/limits" 3
static constexpr char32_t infinity() noexcept { return ((char32_t)0); }
# 900 "/usr/include/c++/12/limits" 3
static constexpr char32_t quiet_NaN() noexcept { return ((char32_t)0); }
# 903 "/usr/include/c++/12/limits" 3
static constexpr char32_t signaling_NaN() noexcept { return ((char32_t)0); }
# 906 "/usr/include/c++/12/limits" 3
static constexpr char32_t denorm_min() noexcept { return ((char32_t)0); }
# 908 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 909 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 910 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = (!is_signed);
# 912 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 913 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 914 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 915 "/usr/include/c++/12/limits" 3
};
# 920 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< short> {
# 922 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 925 "/usr/include/c++/12/limits" 3
static constexpr short min() noexcept { return (-32767) - 1; }
# 928 "/usr/include/c++/12/limits" 3
static constexpr short max() noexcept { return 32767; }
# 932 "/usr/include/c++/12/limits" 3
static constexpr short lowest() noexcept { return min(); }
# 935 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(short) * (8)) - (((short)(-1)) < 0));
# 936 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(short) * (8)) - (((short)(-1)) < 0)) * (643L)) / (2136));
# 938 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 940 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = true;
# 941 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 942 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 943 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 946 "/usr/include/c++/12/limits" 3
static constexpr short epsilon() noexcept { return 0; }
# 949 "/usr/include/c++/12/limits" 3
static constexpr short round_error() noexcept { return 0; }
# 951 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 952 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 953 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 954 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 956 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 957 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 958 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 959 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 961 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 964 "/usr/include/c++/12/limits" 3
static constexpr short infinity() noexcept { return ((short)0); }
# 967 "/usr/include/c++/12/limits" 3
static constexpr short quiet_NaN() noexcept { return ((short)0); }
# 970 "/usr/include/c++/12/limits" 3
static constexpr short signaling_NaN() noexcept { return ((short)0); }
# 973 "/usr/include/c++/12/limits" 3
static constexpr short denorm_min() noexcept { return ((short)0); }
# 975 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 976 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 977 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = false;
# 979 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 980 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 981 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 983 "/usr/include/c++/12/limits" 3
};
# 987 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< unsigned short> {
# 989 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 992 "/usr/include/c++/12/limits" 3
static constexpr unsigned short min() noexcept { return 0; }
# 995 "/usr/include/c++/12/limits" 3
static constexpr unsigned short max() noexcept { return ((32767) * 2U) + (1); }
# 999 "/usr/include/c++/12/limits" 3
static constexpr unsigned short lowest() noexcept { return min(); }
# 1002 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(unsigned short) * (8)) - (((unsigned short)(-1)) < 0));
# 1004 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(unsigned short) * (8)) - (((unsigned short)(-1)) < 0)) * (643L)) / (2136));
# 1007 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 1009 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = false;
# 1010 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 1011 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 1012 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 1015 "/usr/include/c++/12/limits" 3
static constexpr unsigned short epsilon() noexcept { return 0; }
# 1018 "/usr/include/c++/12/limits" 3
static constexpr unsigned short round_error() noexcept { return 0; }
# 1020 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 1021 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 1022 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 1023 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 1025 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 1026 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 1027 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 1028 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 1030 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 1033 "/usr/include/c++/12/limits" 3
static constexpr unsigned short infinity() noexcept
# 1034 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned short>(0); }
# 1037 "/usr/include/c++/12/limits" 3
static constexpr unsigned short quiet_NaN() noexcept
# 1038 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned short>(0); }
# 1041 "/usr/include/c++/12/limits" 3
static constexpr unsigned short signaling_NaN() noexcept
# 1042 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned short>(0); }
# 1045 "/usr/include/c++/12/limits" 3
static constexpr unsigned short denorm_min() noexcept
# 1046 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned short>(0); }
# 1048 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 1049 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 1050 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = true;
# 1052 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 1053 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 1054 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 1056 "/usr/include/c++/12/limits" 3
};
# 1060 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< int> {
# 1062 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 1065 "/usr/include/c++/12/limits" 3
static constexpr int min() noexcept { return (-2147483647) - 1; }
# 1068 "/usr/include/c++/12/limits" 3
static constexpr int max() noexcept { return 2147483647; }
# 1072 "/usr/include/c++/12/limits" 3
static constexpr int lowest() noexcept { return min(); }
# 1075 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(int) * (8)) - (((int)(-1)) < 0));
# 1076 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(int) * (8)) - (((int)(-1)) < 0)) * (643L)) / (2136));
# 1078 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 1080 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = true;
# 1081 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 1082 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 1083 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 1086 "/usr/include/c++/12/limits" 3
static constexpr int epsilon() noexcept { return 0; }
# 1089 "/usr/include/c++/12/limits" 3
static constexpr int round_error() noexcept { return 0; }
# 1091 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 1092 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 1093 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 1094 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 1096 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 1097 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 1098 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 1099 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 1101 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 1104 "/usr/include/c++/12/limits" 3
static constexpr int infinity() noexcept { return static_cast< int>(0); }
# 1107 "/usr/include/c++/12/limits" 3
static constexpr int quiet_NaN() noexcept { return static_cast< int>(0); }
# 1110 "/usr/include/c++/12/limits" 3
static constexpr int signaling_NaN() noexcept { return static_cast< int>(0); }
# 1113 "/usr/include/c++/12/limits" 3
static constexpr int denorm_min() noexcept { return static_cast< int>(0); }
# 1115 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 1116 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 1117 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = false;
# 1119 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 1120 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 1121 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 1123 "/usr/include/c++/12/limits" 3
};
# 1127 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< unsigned> {
# 1129 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 1132 "/usr/include/c++/12/limits" 3
static constexpr unsigned min() noexcept { return 0; }
# 1135 "/usr/include/c++/12/limits" 3
static constexpr unsigned max() noexcept { return ((2147483647) * 2U) + (1); }
# 1139 "/usr/include/c++/12/limits" 3
static constexpr unsigned lowest() noexcept { return min(); }
# 1142 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(unsigned) * (8)) - (((unsigned)(-1)) < (0)));
# 1144 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(unsigned) * (8)) - (((unsigned)(-1)) < (0))) * (643L)) / (2136));
# 1147 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 1149 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = false;
# 1150 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 1151 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 1152 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 1155 "/usr/include/c++/12/limits" 3
static constexpr unsigned epsilon() noexcept { return 0; }
# 1158 "/usr/include/c++/12/limits" 3
static constexpr unsigned round_error() noexcept { return 0; }
# 1160 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 1161 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 1162 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 1163 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 1165 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 1166 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 1167 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 1168 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 1170 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 1173 "/usr/include/c++/12/limits" 3
static constexpr unsigned infinity() noexcept { return static_cast< unsigned>(0); }
# 1176 "/usr/include/c++/12/limits" 3
static constexpr unsigned quiet_NaN() noexcept
# 1177 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned>(0); }
# 1180 "/usr/include/c++/12/limits" 3
static constexpr unsigned signaling_NaN() noexcept
# 1181 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned>(0); }
# 1184 "/usr/include/c++/12/limits" 3
static constexpr unsigned denorm_min() noexcept
# 1185 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned>(0); }
# 1187 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 1188 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 1189 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = true;
# 1191 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 1192 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 1193 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 1195 "/usr/include/c++/12/limits" 3
};
# 1199 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< long> {
# 1201 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 1204 "/usr/include/c++/12/limits" 3
static constexpr long min() noexcept { return (-9223372036854775807L) - (1); }
# 1207 "/usr/include/c++/12/limits" 3
static constexpr long max() noexcept { return 9223372036854775807L; }
# 1211 "/usr/include/c++/12/limits" 3
static constexpr long lowest() noexcept { return min(); }
# 1214 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(long) * (8)) - (((long)(-1)) < (0)));
# 1215 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(long) * (8)) - (((long)(-1)) < (0))) * (643L)) / (2136));
# 1217 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 1219 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = true;
# 1220 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 1221 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 1222 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 1225 "/usr/include/c++/12/limits" 3
static constexpr long epsilon() noexcept { return 0; }
# 1228 "/usr/include/c++/12/limits" 3
static constexpr long round_error() noexcept { return 0; }
# 1230 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 1231 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 1232 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 1233 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 1235 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 1236 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 1237 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 1238 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 1240 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 1243 "/usr/include/c++/12/limits" 3
static constexpr long infinity() noexcept { return static_cast< long>(0); }
# 1246 "/usr/include/c++/12/limits" 3
static constexpr long quiet_NaN() noexcept { return static_cast< long>(0); }
# 1249 "/usr/include/c++/12/limits" 3
static constexpr long signaling_NaN() noexcept { return static_cast< long>(0); }
# 1252 "/usr/include/c++/12/limits" 3
static constexpr long denorm_min() noexcept { return static_cast< long>(0); }
# 1254 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 1255 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 1256 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = false;
# 1258 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 1259 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 1260 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 1262 "/usr/include/c++/12/limits" 3
};
# 1266 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< unsigned long> {
# 1268 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 1271 "/usr/include/c++/12/limits" 3
static constexpr unsigned long min() noexcept { return 0; }
# 1274 "/usr/include/c++/12/limits" 3
static constexpr unsigned long max() noexcept { return ((9223372036854775807L) * 2UL) + (1); }
# 1278 "/usr/include/c++/12/limits" 3
static constexpr unsigned long lowest() noexcept { return min(); }
# 1281 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(unsigned long) * (8)) - (((unsigned long)(-1)) < (0)));
# 1283 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(unsigned long) * (8)) - (((unsigned long)(-1)) < (0))) * (643L)) / (2136));
# 1286 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 1288 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = false;
# 1289 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 1290 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 1291 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 1294 "/usr/include/c++/12/limits" 3
static constexpr unsigned long epsilon() noexcept { return 0; }
# 1297 "/usr/include/c++/12/limits" 3
static constexpr unsigned long round_error() noexcept { return 0; }
# 1299 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 1300 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 1301 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 1302 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 1304 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 1305 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 1306 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 1307 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 1309 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 1312 "/usr/include/c++/12/limits" 3
static constexpr unsigned long infinity() noexcept
# 1313 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned long>(0); }
# 1316 "/usr/include/c++/12/limits" 3
static constexpr unsigned long quiet_NaN() noexcept
# 1317 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned long>(0); }
# 1320 "/usr/include/c++/12/limits" 3
static constexpr unsigned long signaling_NaN() noexcept
# 1321 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned long>(0); }
# 1324 "/usr/include/c++/12/limits" 3
static constexpr unsigned long denorm_min() noexcept
# 1325 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned long>(0); }
# 1327 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 1328 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 1329 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = true;
# 1331 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 1332 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 1333 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 1335 "/usr/include/c++/12/limits" 3
};
# 1339 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< long long> {
# 1341 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 1344 "/usr/include/c++/12/limits" 3
static constexpr long long min() noexcept { return (-9223372036854775807LL) - (1); }
# 1347 "/usr/include/c++/12/limits" 3
static constexpr long long max() noexcept { return 9223372036854775807LL; }
# 1351 "/usr/include/c++/12/limits" 3
static constexpr long long lowest() noexcept { return min(); }
# 1354 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(long long) * (8)) - (((long long)(-1)) < (0)));
# 1356 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(long long) * (8)) - (((long long)(-1)) < (0))) * (643L)) / (2136));
# 1359 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 1361 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = true;
# 1362 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 1363 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 1364 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 1367 "/usr/include/c++/12/limits" 3
static constexpr long long epsilon() noexcept { return 0; }
# 1370 "/usr/include/c++/12/limits" 3
static constexpr long long round_error() noexcept { return 0; }
# 1372 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 1373 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 1374 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 1375 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 1377 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 1378 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 1379 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 1380 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 1382 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 1385 "/usr/include/c++/12/limits" 3
static constexpr long long infinity() noexcept { return static_cast< long long>(0); }
# 1388 "/usr/include/c++/12/limits" 3
static constexpr long long quiet_NaN() noexcept { return static_cast< long long>(0); }
# 1391 "/usr/include/c++/12/limits" 3
static constexpr long long signaling_NaN() noexcept
# 1392 "/usr/include/c++/12/limits" 3
{ return static_cast< long long>(0); }
# 1395 "/usr/include/c++/12/limits" 3
static constexpr long long denorm_min() noexcept { return static_cast< long long>(0); }
# 1397 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 1398 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 1399 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = false;
# 1401 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 1402 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 1403 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 1405 "/usr/include/c++/12/limits" 3
};
# 1409 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< unsigned long long> {
# 1411 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 1414 "/usr/include/c++/12/limits" 3
static constexpr unsigned long long min() noexcept { return 0; }
# 1417 "/usr/include/c++/12/limits" 3
static constexpr unsigned long long max() noexcept { return ((9223372036854775807LL) * 2ULL) + (1); }
# 1421 "/usr/include/c++/12/limits" 3
static constexpr unsigned long long lowest() noexcept { return min(); }
# 1424 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = ((sizeof(unsigned long long) * (8)) - (((unsigned long long)(-1)) < (0)));
# 1426 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = ((((sizeof(unsigned long long) * (8)) - (((unsigned long long)(-1)) < (0))) * (643L)) / (2136));
# 1429 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = 0;
# 1431 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = false;
# 1432 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = true;
# 1433 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = true;
# 1434 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 1437 "/usr/include/c++/12/limits" 3
static constexpr unsigned long long epsilon() noexcept { return 0; }
# 1440 "/usr/include/c++/12/limits" 3
static constexpr unsigned long long round_error() noexcept { return 0; }
# 1442 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = 0;
# 1443 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = 0;
# 1444 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 0;
# 1445 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 0;
# 1447 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = false;
# 1448 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = false;
# 1449 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = false;
# 1450 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = denorm_absent;
# 1452 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 1455 "/usr/include/c++/12/limits" 3
static constexpr unsigned long long infinity() noexcept
# 1456 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1459 "/usr/include/c++/12/limits" 3
static constexpr unsigned long long quiet_NaN() noexcept
# 1460 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1463 "/usr/include/c++/12/limits" 3
static constexpr unsigned long long signaling_NaN() noexcept
# 1464 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1467 "/usr/include/c++/12/limits" 3
static constexpr unsigned long long denorm_min() noexcept
# 1468 "/usr/include/c++/12/limits" 3
{ return static_cast< unsigned long long>(0); }
# 1470 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = false;
# 1471 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 1472 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = true;
# 1474 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = true;
# 1475 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 1476 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_toward_zero;
# 1478 "/usr/include/c++/12/limits" 3
};
# 1637 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< __int128> { static constexpr inline bool is_specialized = true; static constexpr __int128 min() noexcept { return ((((__int128)(-1)) < (0)) ? (-((((__int128)(-1)) < (0)) ? (((((__int128)1) << ((128 - (((__int128)(-1)) < (0))) - 1)) - (1)) << 1) + (1) : (~((__int128)0)))) - (1) : ((__int128)0)); } static constexpr __int128 max() noexcept { return ((((__int128)(-1)) < (0)) ? (((((__int128)1) << ((128 - (((__int128)(-1)) < (0))) - 1)) - (1)) << 1) + (1) : (~((__int128)0))); } static constexpr inline int digits = (128 - 1); static constexpr inline int digits10 = (((128 - 1) * 643L) / (2136)); static constexpr inline bool is_signed = true; static constexpr inline bool is_integer = true; static constexpr inline bool is_exact = true; static constexpr inline int radix = 2; static constexpr __int128 epsilon() noexcept { return 0; } static constexpr __int128 round_error() noexcept { return 0; } static constexpr __int128 lowest() noexcept { return min(); } static constexpr inline int max_digits10 = 0; static constexpr inline int min_exponent = 0; static constexpr inline int min_exponent10 = 0; static constexpr inline int max_exponent = 0; static constexpr inline int max_exponent10 = 0; static constexpr inline bool has_infinity = false; static constexpr inline bool has_quiet_NaN = false; static constexpr inline bool has_signaling_NaN = false; static constexpr inline float_denorm_style has_denorm = denorm_absent; static constexpr inline bool has_denorm_loss = false; static constexpr __int128 infinity() noexcept { return static_cast< __int128>(0); } static constexpr __int128 quiet_NaN() noexcept { return static_cast< __int128>(0); } static constexpr __int128 signaling_NaN() noexcept { return static_cast< __int128>(0); } static constexpr __int128 denorm_min() noexcept { return static_cast< __int128>(0); } static constexpr inline bool is_iec559 = false; static constexpr inline bool is_bounded = true; static constexpr inline bool is_modulo = false; static constexpr inline bool traps = true; static constexpr inline bool tinyness_before = false; static constexpr inline float_round_style round_style = round_toward_zero; }; template<> struct numeric_limits< unsigned __int128> { static constexpr inline bool is_specialized = true; static constexpr unsigned __int128 min() noexcept { return 0; } static constexpr unsigned __int128 max() noexcept { return ((((unsigned __int128)(-1)) < (0)) ? (((((unsigned __int128)1) << ((128 - (((unsigned __int128)(-1)) < (0))) - 1)) - (1)) << 1) + (1) : (~((unsigned __int128)0))); } static constexpr unsigned __int128 lowest() noexcept { return min(); } static constexpr inline int max_digits10 = 0; static constexpr inline int digits = 128; static constexpr inline int digits10 = (((128) * 643L) / (2136)); static constexpr inline bool is_signed = false; static constexpr inline bool is_integer = true; static constexpr inline bool is_exact = true; static constexpr inline int radix = 2; static constexpr unsigned __int128 epsilon() noexcept { return 0; } static constexpr unsigned __int128 round_error() noexcept { return 0; } static constexpr inline int min_exponent = 0; static constexpr inline int min_exponent10 = 0; static constexpr inline int max_exponent = 0; static constexpr inline int max_exponent10 = 0; static constexpr inline bool has_infinity = false; static constexpr inline bool has_quiet_NaN = false; static constexpr inline bool has_signaling_NaN = false; static constexpr inline float_denorm_style has_denorm = denorm_absent; static constexpr inline bool has_denorm_loss = false; static constexpr unsigned __int128 infinity() noexcept { return static_cast< unsigned __int128>(0); } static constexpr unsigned __int128 quiet_NaN() noexcept { return static_cast< unsigned __int128>(0); } static constexpr unsigned __int128 signaling_NaN() noexcept { return static_cast< unsigned __int128>(0); } static constexpr unsigned __int128 denorm_min() noexcept { return static_cast< unsigned __int128>(0); } static constexpr inline bool is_iec559 = false; static constexpr inline bool is_bounded = true; static constexpr inline bool is_modulo = true; static constexpr inline bool traps = true; static constexpr inline bool tinyness_before = false; static constexpr inline float_round_style round_style = round_toward_zero; };
# 1670 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< float> {
# 1672 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 1675 "/usr/include/c++/12/limits" 3
static constexpr float min() noexcept { return (1.1754944E-38F); }
# 1678 "/usr/include/c++/12/limits" 3
static constexpr float max() noexcept { return (3.4028235E38F); }
# 1682 "/usr/include/c++/12/limits" 3
static constexpr float lowest() noexcept { return -(3.4028235E38F); }
# 1685 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = 24;
# 1686 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = 6;
# 1688 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = ((2) + (((24) * 643L) / (2136)));
# 1691 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = true;
# 1692 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = false;
# 1693 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = false;
# 1694 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 1697 "/usr/include/c++/12/limits" 3
static constexpr float epsilon() noexcept { return (1.1920929E-7F); }
# 1700 "/usr/include/c++/12/limits" 3
static constexpr float round_error() noexcept { return (0.5F); }
# 1702 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = (-125);
# 1703 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = (-37);
# 1704 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 128;
# 1705 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 38;
# 1707 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = (1);
# 1708 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = (1);
# 1709 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = has_quiet_NaN;
# 1710 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1712 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 1716 "/usr/include/c++/12/limits" 3
static constexpr float infinity() noexcept { return __builtin_huge_valf(); }
# 1719 "/usr/include/c++/12/limits" 3
static constexpr float quiet_NaN() noexcept { return __builtin_nanf(""); }
# 1722 "/usr/include/c++/12/limits" 3
static constexpr float signaling_NaN() noexcept { return __builtin_nansf(""); }
# 1725 "/usr/include/c++/12/limits" 3
static constexpr float denorm_min() noexcept { return (1.4E-45F); }
# 1727 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1729 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 1730 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = false;
# 1732 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = false;
# 1733 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 1735 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_to_nearest;
# 1737 "/usr/include/c++/12/limits" 3
};
# 1745 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< double> {
# 1747 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 1750 "/usr/include/c++/12/limits" 3
static constexpr double min() noexcept { return (double)(2.2250738585072013831E-308L); }
# 1753 "/usr/include/c++/12/limits" 3
static constexpr double max() noexcept { return (double)(1.7976931348623157081E308L); }
# 1757 "/usr/include/c++/12/limits" 3
static constexpr double lowest() noexcept { return -((double)(1.7976931348623157081E308L)); }
# 1760 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = 53;
# 1761 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = 15;
# 1763 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = ((2) + (((53) * 643L) / (2136)));
# 1766 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = true;
# 1767 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = false;
# 1768 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = false;
# 1769 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 1772 "/usr/include/c++/12/limits" 3
static constexpr double epsilon() noexcept { return (double)(2.2204460492503130808E-16L); }
# 1775 "/usr/include/c++/12/limits" 3
static constexpr double round_error() noexcept { return (0.5); }
# 1777 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = (-1021);
# 1778 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = (-307);
# 1779 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 1024;
# 1780 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 308;
# 1782 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = (1);
# 1783 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = (1);
# 1784 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = has_quiet_NaN;
# 1785 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1787 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 1791 "/usr/include/c++/12/limits" 3
static constexpr double infinity() noexcept { return __builtin_huge_val(); }
# 1794 "/usr/include/c++/12/limits" 3
static constexpr double quiet_NaN() noexcept { return __builtin_nan(""); }
# 1797 "/usr/include/c++/12/limits" 3
static constexpr double signaling_NaN() noexcept { return __builtin_nans(""); }
# 1800 "/usr/include/c++/12/limits" 3
static constexpr double denorm_min() noexcept { return (double)(4.940656458412465442E-324L); }
# 1802 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1804 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 1805 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = false;
# 1807 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = false;
# 1808 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 1810 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_to_nearest;
# 1812 "/usr/include/c++/12/limits" 3
};
# 1820 "/usr/include/c++/12/limits" 3
template<> struct numeric_limits< long double> {
# 1822 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_specialized = true;
# 1825 "/usr/include/c++/12/limits" 3
static constexpr long double min() noexcept { return (3.3621031431120935063E-4932L); }
# 1828 "/usr/include/c++/12/limits" 3
static constexpr long double max() noexcept { return (1.189731495357231765E4932L); }
# 1832 "/usr/include/c++/12/limits" 3
static constexpr long double lowest() noexcept { return -(1.189731495357231765E4932L); }
# 1835 "/usr/include/c++/12/limits" 3
static constexpr inline int digits = 64;
# 1836 "/usr/include/c++/12/limits" 3
static constexpr inline int digits10 = 18;
# 1838 "/usr/include/c++/12/limits" 3
static constexpr inline int max_digits10 = ((2) + (((64) * 643L) / (2136)));
# 1841 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_signed = true;
# 1842 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_integer = false;
# 1843 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_exact = false;
# 1844 "/usr/include/c++/12/limits" 3
static constexpr inline int radix = 2;
# 1847 "/usr/include/c++/12/limits" 3
static constexpr long double epsilon() noexcept { return (1.084202172485504434E-19L); }
# 1850 "/usr/include/c++/12/limits" 3
static constexpr long double round_error() noexcept { return (0.5L); }
# 1852 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent = (-16381);
# 1853 "/usr/include/c++/12/limits" 3
static constexpr inline int min_exponent10 = (-4931);
# 1854 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent = 16384;
# 1855 "/usr/include/c++/12/limits" 3
static constexpr inline int max_exponent10 = 4932;
# 1857 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_infinity = (1);
# 1858 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_quiet_NaN = (1);
# 1859 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_signaling_NaN = has_quiet_NaN;
# 1860 "/usr/include/c++/12/limits" 3
static constexpr inline float_denorm_style has_denorm = (((bool)1) ? denorm_present : denorm_absent);
# 1862 "/usr/include/c++/12/limits" 3
static constexpr inline bool has_denorm_loss = false;
# 1866 "/usr/include/c++/12/limits" 3
static constexpr long double infinity() noexcept { return __builtin_huge_vall(); }
# 1869 "/usr/include/c++/12/limits" 3
static constexpr long double quiet_NaN() noexcept { return __builtin_nanl(""); }
# 1872 "/usr/include/c++/12/limits" 3
static constexpr long double signaling_NaN() noexcept { return __builtin_nansl(""); }
# 1875 "/usr/include/c++/12/limits" 3
static constexpr long double denorm_min() noexcept { return (3.6E-4951L); }
# 1877 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_iec559 = (has_infinity && has_quiet_NaN && (has_denorm == (denorm_present)));
# 1879 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_bounded = true;
# 1880 "/usr/include/c++/12/limits" 3
static constexpr inline bool is_modulo = false;
# 1882 "/usr/include/c++/12/limits" 3
static constexpr inline bool traps = false;
# 1883 "/usr/include/c++/12/limits" 3
static constexpr inline bool tinyness_before = false;
# 1885 "/usr/include/c++/12/limits" 3
static constexpr inline float_round_style round_style = round_to_nearest;
# 1887 "/usr/include/c++/12/limits" 3
};
# 1894 "/usr/include/c++/12/limits" 3
}
# 39 "/usr/include/c++/12/tr1/special_function_util.h" 3
namespace std __attribute((__visibility__("default"))) {
# 50 "/usr/include/c++/12/tr1/special_function_util.h" 3
namespace __detail {
# 55 "/usr/include/c++/12/tr1/special_function_util.h" 3
template< class _Tp>
# 56 "/usr/include/c++/12/tr1/special_function_util.h" 3
struct __floating_point_constant {
# 58 "/usr/include/c++/12/tr1/special_function_util.h" 3
static const _Tp __value;
# 59 "/usr/include/c++/12/tr1/special_function_util.h" 3
};
# 63 "/usr/include/c++/12/tr1/special_function_util.h" 3
template< class _Tp>
# 64 "/usr/include/c++/12/tr1/special_function_util.h" 3
struct __numeric_constants {
# 67 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __pi() throw()
# 68 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((3.1415926535897932385L)); }
# 70 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __pi_2() throw()
# 71 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((1.5707963267948966193L)); }
# 73 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __pi_3() throw()
# 74 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((1.0471975511965977461L)); }
# 76 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __pi_4() throw()
# 77 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((0.78539816339744830963L)); }
# 79 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __1_pi() throw()
# 80 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((0.31830988618379067154L)); }
# 82 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __2_sqrtpi() throw()
# 83 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((1.1283791670955125738L)); }
# 85 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __sqrt2() throw()
# 86 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((1.4142135623730950488L)); }
# 88 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __sqrt3() throw()
# 89 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((1.7320508075688772936L)); }
# 91 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __sqrtpio2() throw()
# 92 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((1.2533141373155002512L)); }
# 94 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __sqrt1_2() throw()
# 95 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((0.7071067811865475244L)); }
# 97 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __lnpi() throw()
# 98 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((1.1447298858494001742L)); }
# 100 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __gamma_e() throw()
# 101 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((0.5772156649015328606L)); }
# 103 "/usr/include/c++/12/tr1/special_function_util.h" 3
static _Tp __euler() throw()
# 104 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return static_cast< _Tp>((2.7182818284590452354L)); }
# 105 "/usr/include/c++/12/tr1/special_function_util.h" 3
};
# 114 "/usr/include/c++/12/tr1/special_function_util.h" 3
template< class _Tp> inline bool
# 115 "/usr/include/c++/12/tr1/special_function_util.h" 3
__isnan(_Tp __x)
# 116 "/usr/include/c++/12/tr1/special_function_util.h" 3
{ return std::isnan(__x); }
# 133 "/usr/include/c++/12/tr1/special_function_util.h" 3
}
# 139 "/usr/include/c++/12/tr1/special_function_util.h" 3
}
# 51 "/usr/include/c++/12/tr1/gamma.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 65 "/usr/include/c++/12/tr1/gamma.tcc" 3
namespace __detail {
# 76 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> _Tp
# 78 "/usr/include/c++/12/tr1/gamma.tcc" 3
__bernoulli_series(unsigned __n)
# 79 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 81 "/usr/include/c++/12/tr1/gamma.tcc" 3
static const _Tp __num[28] = {((_Tp)1UL), ((-((_Tp)1UL)) / ((_Tp)2UL)), (((_Tp)1UL) / ((_Tp)6UL)), ((_Tp)0UL), ((-((_Tp)1UL)) / ((_Tp)30UL)), ((_Tp)0UL), (((_Tp)1UL) / ((_Tp)42UL)), ((_Tp)0UL), ((-((_Tp)1UL)) / ((_Tp)30UL)), ((_Tp)0UL), (((_Tp)5UL) / ((_Tp)66UL)), ((_Tp)0UL), ((-((_Tp)691UL)) / ((_Tp)2730UL)), ((_Tp)0UL), (((_Tp)7UL) / ((_Tp)6UL)), ((_Tp)0UL), ((-((_Tp)3617UL)) / ((_Tp)510UL)), ((_Tp)0UL), (((_Tp)43867UL) / ((_Tp)798UL)), ((_Tp)0UL), ((-((_Tp)174611)) / ((_Tp)330UL)), ((_Tp)0UL), (((_Tp)854513UL) / ((_Tp)138UL)), ((_Tp)0UL), ((-((_Tp)236364091UL)) / ((_Tp)2730UL)), ((_Tp)0UL), (((_Tp)8553103UL) / ((_Tp)6UL)), ((_Tp)0UL)};
# 98 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__n == (0)) {
# 99 "/usr/include/c++/12/tr1/gamma.tcc" 3
return (_Tp)1; }
# 101 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__n == (1)) {
# 102 "/usr/include/c++/12/tr1/gamma.tcc" 3
return (-((_Tp)1)) / ((_Tp)2); }
# 105 "/usr/include/c++/12/tr1/gamma.tcc" 3
if ((__n % (2)) == (1)) {
# 106 "/usr/include/c++/12/tr1/gamma.tcc" 3
return (_Tp)0; }
# 109 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__n < (28)) {
# 110 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __num[__n]; }
# 113 "/usr/include/c++/12/tr1/gamma.tcc" 3
_Tp __fact = ((_Tp)1);
# 114 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (((__n / (2)) % (2)) == (0)) {
# 115 "/usr/include/c++/12/tr1/gamma.tcc" 3
__fact *= ((_Tp)(-1)); }
# 116 "/usr/include/c++/12/tr1/gamma.tcc" 3
for (unsigned __k = (1); __k <= __n; ++__k) {
# 117 "/usr/include/c++/12/tr1/gamma.tcc" 3
__fact *= (__k / (((_Tp)2) * __numeric_constants< _Tp> ::__pi())); }
# 118 "/usr/include/c++/12/tr1/gamma.tcc" 3
__fact *= ((_Tp)2);
# 120 "/usr/include/c++/12/tr1/gamma.tcc" 3
_Tp __sum = ((_Tp)0);
# 121 "/usr/include/c++/12/tr1/gamma.tcc" 3
for (unsigned __i = (1); __i < (1000); ++__i)
# 122 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 123 "/usr/include/c++/12/tr1/gamma.tcc" 3
_Tp __term = std::pow((_Tp)__i, -((_Tp)__n));
# 124 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__term < std::template numeric_limits< _Tp> ::epsilon()) {
# 125 "/usr/include/c++/12/tr1/gamma.tcc" 3
break; }
# 126 "/usr/include/c++/12/tr1/gamma.tcc" 3
__sum += __term;
# 127 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 129 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __fact * __sum;
# 130 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 139 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> inline _Tp
# 141 "/usr/include/c++/12/tr1/gamma.tcc" 3
__bernoulli(int __n)
# 142 "/usr/include/c++/12/tr1/gamma.tcc" 3
{ return __bernoulli_series< _Tp> (__n); }
# 153 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> _Tp
# 155 "/usr/include/c++/12/tr1/gamma.tcc" 3
__log_gamma_bernoulli(_Tp __x)
# 156 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 157 "/usr/include/c++/12/tr1/gamma.tcc" 3
_Tp __lg = (((__x - ((_Tp)(0.5L))) * std::log(__x)) - __x) + (((_Tp)(0.5L)) * std::log(((_Tp)2) * __numeric_constants< _Tp> ::__pi()));
# 161 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __xx = __x * __x;
# 162 "/usr/include/c++/12/tr1/gamma.tcc" 3
_Tp __help = ((_Tp)1) / __x;
# 163 "/usr/include/c++/12/tr1/gamma.tcc" 3
for (unsigned __i = (1); __i < (20); ++__i)
# 164 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 165 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __2i = (_Tp)((2) * __i);
# 166 "/usr/include/c++/12/tr1/gamma.tcc" 3
__help /= ((__2i * (__2i - ((_Tp)1))) * __xx);
# 167 "/usr/include/c++/12/tr1/gamma.tcc" 3
__lg += (__bernoulli< _Tp> ((2) * __i) * __help);
# 168 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 170 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __lg;
# 171 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 181 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> _Tp
# 183 "/usr/include/c++/12/tr1/gamma.tcc" 3
__log_gamma_lanczos(_Tp __x)
# 184 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 185 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __xm1 = __x - ((_Tp)1);
# 187 "/usr/include/c++/12/tr1/gamma.tcc" 3
static const _Tp __lanczos_cheb_7[9] = {((_Tp)(0.99999999999980993226L)), ((_Tp)(676.52036812188509857L)), ((_Tp)(-(1259.1392167224028704L))), ((_Tp)(771.32342877765307887L)), ((_Tp)(-(176.61502916214059906L))), ((_Tp)(12.507343278686904814L)), ((_Tp)(-(0.1385710952657201169L))), ((_Tp)(9.9843695780195708595E-6L)), ((_Tp)(1.5056327351493115584E-7L))};
# 199 "/usr/include/c++/12/tr1/gamma.tcc" 3
static const _Tp __LOGROOT2PI = ((_Tp)(0.9189385332046727418L));
# 202 "/usr/include/c++/12/tr1/gamma.tcc" 3
_Tp __sum = (__lanczos_cheb_7[0]);
# 203 "/usr/include/c++/12/tr1/gamma.tcc" 3
for (unsigned __k = (1); __k < (9); ++__k) {
# 204 "/usr/include/c++/12/tr1/gamma.tcc" 3
__sum += ((__lanczos_cheb_7[__k]) / (__xm1 + __k)); }
# 206 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __term1 = (__xm1 + ((_Tp)(0.5L))) * std::log((__xm1 + ((_Tp)(7.5L))) / __numeric_constants< _Tp> ::__euler());
# 209 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __term2 = __LOGROOT2PI + std::log(__sum);
# 210 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __result = __term1 + (__term2 - ((_Tp)7));
# 212 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __result;
# 213 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 225 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> _Tp
# 227 "/usr/include/c++/12/tr1/gamma.tcc" 3
__log_gamma(_Tp __x)
# 228 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 229 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__x > ((_Tp)(0.5L))) {
# 230 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __log_gamma_lanczos(__x); } else
# 232 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 233 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __sin_fact = std::abs(std::sin(__numeric_constants< _Tp> ::__pi() * __x));
# 235 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__sin_fact == ((_Tp)0)) {
# 236 "/usr/include/c++/12/tr1/gamma.tcc" 3
std::__throw_domain_error("Argument is nonpositive integer in __log_gamma"); }
# 238 "/usr/include/c++/12/tr1/gamma.tcc" 3
return (__numeric_constants< _Tp> ::__lnpi() - std::log(__sin_fact)) - __log_gamma_lanczos(((_Tp)1) - __x);
# 241 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 242 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 252 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> _Tp
# 254 "/usr/include/c++/12/tr1/gamma.tcc" 3
__log_gamma_sign(_Tp __x)
# 255 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 256 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__x > ((_Tp)0)) {
# 257 "/usr/include/c++/12/tr1/gamma.tcc" 3
return (_Tp)1; } else
# 259 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 260 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __sin_fact = std::sin(__numeric_constants< _Tp> ::__pi() * __x);
# 262 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__sin_fact > ((_Tp)0)) {
# 263 "/usr/include/c++/12/tr1/gamma.tcc" 3
return 1; } else {
# 264 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__sin_fact < ((_Tp)0)) {
# 265 "/usr/include/c++/12/tr1/gamma.tcc" 3
return -((_Tp)1); } else {
# 267 "/usr/include/c++/12/tr1/gamma.tcc" 3
return (_Tp)0; } }
# 268 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 269 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 283 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> _Tp
# 285 "/usr/include/c++/12/tr1/gamma.tcc" 3
__log_bincoef(unsigned __n, unsigned __k)
# 286 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 288 "/usr/include/c++/12/tr1/gamma.tcc" 3
static const _Tp __max_bincoeff = (std::template numeric_limits< _Tp> ::max_exponent10 * std::log((_Tp)10)) - ((_Tp)1);
# 292 "/usr/include/c++/12/tr1/gamma.tcc" 3
_Tp __coeff = (std::lgamma((_Tp)((1) + __n)) - std::lgamma((_Tp)((1) + __k))) - std::lgamma((_Tp)(((1) + __n) - __k));
# 300 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 314 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> _Tp
# 316 "/usr/include/c++/12/tr1/gamma.tcc" 3
__bincoef(unsigned __n, unsigned __k)
# 317 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 319 "/usr/include/c++/12/tr1/gamma.tcc" 3
static const _Tp __max_bincoeff = (std::template numeric_limits< _Tp> ::max_exponent10 * std::log((_Tp)10)) - ((_Tp)1);
# 323 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __log_coeff = __log_bincoef< _Tp> (__n, __k);
# 324 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__log_coeff > __max_bincoeff) {
# 325 "/usr/include/c++/12/tr1/gamma.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 327 "/usr/include/c++/12/tr1/gamma.tcc" 3
return std::exp(__log_coeff); }
# 328 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 337 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> inline _Tp
# 339 "/usr/include/c++/12/tr1/gamma.tcc" 3
__gamma(_Tp __x)
# 340 "/usr/include/c++/12/tr1/gamma.tcc" 3
{ return std::exp(__log_gamma(__x)); }
# 356 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> _Tp
# 358 "/usr/include/c++/12/tr1/gamma.tcc" 3
__psi_series(_Tp __x)
# 359 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 360 "/usr/include/c++/12/tr1/gamma.tcc" 3
_Tp __sum = (-__numeric_constants< _Tp> ::__gamma_e()) - (((_Tp)1) / __x);
# 361 "/usr/include/c++/12/tr1/gamma.tcc" 3
const unsigned __max_iter = (100000);
# 362 "/usr/include/c++/12/tr1/gamma.tcc" 3
for (unsigned __k = (1); __k < __max_iter; ++__k)
# 363 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 364 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __term = __x / (__k * (__k + __x));
# 365 "/usr/include/c++/12/tr1/gamma.tcc" 3
__sum += __term;
# 366 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (std::abs(__term / __sum) < std::template numeric_limits< _Tp> ::epsilon()) {
# 367 "/usr/include/c++/12/tr1/gamma.tcc" 3
break; }
# 368 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 369 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __sum;
# 370 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 386 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> _Tp
# 388 "/usr/include/c++/12/tr1/gamma.tcc" 3
__psi_asymp(_Tp __x)
# 389 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 390 "/usr/include/c++/12/tr1/gamma.tcc" 3
_Tp __sum = std::log(__x) - (((_Tp)(0.5L)) / __x);
# 391 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __xx = __x * __x;
# 392 "/usr/include/c++/12/tr1/gamma.tcc" 3
_Tp __xp = __xx;
# 393 "/usr/include/c++/12/tr1/gamma.tcc" 3
const unsigned __max_iter = (100);
# 394 "/usr/include/c++/12/tr1/gamma.tcc" 3
for (unsigned __k = (1); __k < __max_iter; ++__k)
# 395 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 396 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __term = __bernoulli< _Tp> ((2) * __k) / (((2) * __k) * __xp);
# 397 "/usr/include/c++/12/tr1/gamma.tcc" 3
__sum -= __term;
# 398 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (std::abs(__term / __sum) < std::template numeric_limits< _Tp> ::epsilon()) {
# 399 "/usr/include/c++/12/tr1/gamma.tcc" 3
break; }
# 400 "/usr/include/c++/12/tr1/gamma.tcc" 3
__xp *= __xx;
# 401 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 402 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __sum;
# 403 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 417 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> _Tp
# 419 "/usr/include/c++/12/tr1/gamma.tcc" 3
__psi(_Tp __x)
# 420 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 421 "/usr/include/c++/12/tr1/gamma.tcc" 3
const int __n = static_cast< int>(__x + (0.5L));
# 422 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __eps = ((_Tp)4) * std::template numeric_limits< _Tp> ::epsilon();
# 423 "/usr/include/c++/12/tr1/gamma.tcc" 3
if ((__n <= 0) && (std::abs(__x - ((_Tp)__n)) < __eps)) {
# 424 "/usr/include/c++/12/tr1/gamma.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 425 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__x < ((_Tp)0))
# 426 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 427 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __pi = __numeric_constants< _Tp> ::__pi();
# 428 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __psi(((_Tp)1) - __x) - ((__pi * std::cos(__pi * __x)) / std::sin(__pi * __x));
# 430 "/usr/include/c++/12/tr1/gamma.tcc" 3
} else {
# 431 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__x > ((_Tp)100)) {
# 432 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __psi_asymp(__x); } else {
# 434 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __psi_series(__x); } } }
# 435 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 446 "/usr/include/c++/12/tr1/gamma.tcc" 3
template< class _Tp> _Tp
# 448 "/usr/include/c++/12/tr1/gamma.tcc" 3
__psi(unsigned __n, _Tp __x)
# 449 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 450 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__x <= ((_Tp)0)) {
# 451 "/usr/include/c++/12/tr1/gamma.tcc" 3
std::__throw_domain_error("Argument out of range in __psi"); } else {
# 453 "/usr/include/c++/12/tr1/gamma.tcc" 3
if (__n == (0)) {
# 454 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __psi(__x); } else
# 456 "/usr/include/c++/12/tr1/gamma.tcc" 3
{
# 457 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __hzeta = __hurwitz_zeta((_Tp)(__n + (1)), __x);
# 459 "/usr/include/c++/12/tr1/gamma.tcc" 3
const _Tp __ln_nfact = std::lgamma((_Tp)(__n + (1)));
# 463 "/usr/include/c++/12/tr1/gamma.tcc" 3
_Tp __result = std::exp(__ln_nfact) * __hzeta;
# 464 "/usr/include/c++/12/tr1/gamma.tcc" 3
if ((__n % (2)) == (1)) {
# 465 "/usr/include/c++/12/tr1/gamma.tcc" 3
__result = (-__result); }
# 466 "/usr/include/c++/12/tr1/gamma.tcc" 3
return __result;
# 467 "/usr/include/c++/12/tr1/gamma.tcc" 3
} }
# 468 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 469 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 476 "/usr/include/c++/12/tr1/gamma.tcc" 3
}
# 55 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 71 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
namespace __detail {
# 98 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
template< class _Tp> void
# 100 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__gamma_temme(_Tp __mu, _Tp &
# 101 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__gam1, _Tp &__gam2, _Tp &__gampl, _Tp &__gammi)
# 102 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 104 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__gampl = (((_Tp)1) / std::tgamma(((_Tp)1) + __mu));
# 105 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__gammi = (((_Tp)1) / std::tgamma(((_Tp)1) - __mu));
# 111 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (std::abs(__mu) < std::template numeric_limits< _Tp> ::epsilon()) {
# 112 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__gam1 = (-((_Tp)__numeric_constants< _Tp> ::__gamma_e())); } else {
# 114 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__gam1 = ((__gammi - __gampl) / (((_Tp)2) * __mu)); }
# 116 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__gam2 = ((__gammi + __gampl) / ((_Tp)2));
# 119 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 136 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
template< class _Tp> void
# 138 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__bessel_jn(_Tp __nu, _Tp __x, _Tp &
# 139 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jnu, _Tp &__Nnu, _Tp &__Jpnu, _Tp &__Npnu)
# 140 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 141 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__x == ((_Tp)0))
# 142 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 143 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__nu == ((_Tp)0))
# 144 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 145 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jnu = ((_Tp)1);
# 146 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jpnu = ((_Tp)0);
# 147 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
} else {
# 148 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__nu == ((_Tp)1))
# 149 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 150 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jnu = ((_Tp)0);
# 151 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jpnu = ((_Tp)(0.5L));
# 152 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
} else
# 154 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 155 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jnu = ((_Tp)0);
# 156 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jpnu = ((_Tp)0);
# 157 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
} }
# 158 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Nnu = (-std::template numeric_limits< _Tp> ::infinity());
# 159 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Npnu = std::template numeric_limits< _Tp> ::infinity();
# 160 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return;
# 161 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 163 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 168 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __fp_min = std::sqrt(std::template numeric_limits< _Tp> ::min());
# 169 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const int __max_iter = 15000;
# 170 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __x_min = ((_Tp)2);
# 172 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const int __nl = (__x < __x_min) ? static_cast< int>(__nu + ((_Tp)(0.5L))) : std::max(0, static_cast< int>((__nu - __x) + ((_Tp)(1.5L))));
# 176 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __mu = __nu - __nl;
# 177 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __mu2 = __mu * __mu;
# 178 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __xi = ((_Tp)1) / __x;
# 179 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __xi2 = ((_Tp)2) * __xi;
# 180 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __w = __xi2 / __numeric_constants< _Tp> ::__pi();
# 181 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
int __isign = 1;
# 182 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __h = __nu * __xi;
# 183 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__h < __fp_min) {
# 184 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__h = __fp_min; }
# 185 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __b = __xi2 * __nu;
# 186 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __d = ((_Tp)0);
# 187 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __c = __h;
# 188 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
int __i;
# 189 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
for (__i = 1; __i <= __max_iter; ++__i)
# 190 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 191 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__b += __xi2;
# 192 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__d = (__b - __d);
# 193 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (std::abs(__d) < __fp_min) {
# 194 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__d = __fp_min; }
# 195 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__c = (__b - (((_Tp)1) / __c));
# 196 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (std::abs(__c) < __fp_min) {
# 197 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__c = __fp_min; }
# 198 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__d = (((_Tp)1) / __d);
# 199 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __del = __c * __d;
# 200 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__h *= __del;
# 201 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__d < ((_Tp)0)) {
# 202 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__isign = (-__isign); }
# 203 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (std::abs(__del - ((_Tp)1)) < __eps) {
# 204 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
break; }
# 205 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 206 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__i > __max_iter) {
# 207 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
std::__throw_runtime_error("Argument x too large in __bessel_jn; try asymptotic expansion."); }
# 209 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __Jnul = __isign * __fp_min;
# 210 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __Jpnul = __h * __Jnul;
# 211 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __Jnul1 = __Jnul;
# 212 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __Jpnu1 = __Jpnul;
# 213 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __fact = __nu * __xi;
# 214 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
for (int __l = __nl; __l >= 1; --__l)
# 215 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 216 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __Jnutemp = (__fact * __Jnul) + __Jpnul;
# 217 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__fact -= __xi;
# 218 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jpnul = ((__fact * __Jnutemp) - __Jnul);
# 219 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jnul = __Jnutemp;
# 220 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 221 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__Jnul == ((_Tp)0)) {
# 222 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jnul = __eps; }
# 223 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __f = __Jpnul / __Jnul;
# 224 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __Nmu, __Nnu1, __Npmu, __Jmu;
# 225 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__x < __x_min)
# 226 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 227 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __x2 = __x / ((_Tp)2);
# 228 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __pimu = __numeric_constants< _Tp> ::__pi() * __mu;
# 229 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __fact = (std::abs(__pimu) < __eps) ? (_Tp)1 : (__pimu / std::sin(__pimu));
# 231 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __d = (-std::log(__x2));
# 232 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __e = __mu * __d;
# 233 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __fact2 = (std::abs(__e) < __eps) ? (_Tp)1 : (std::sinh(__e) / __e);
# 235 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __gam1, __gam2, __gampl, __gammi;
# 236 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__gamma_temme(__mu, __gam1, __gam2, __gampl, __gammi);
# 237 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __ff = ((((_Tp)2) / __numeric_constants< _Tp> ::__pi()) * __fact) * ((__gam1 * std::cosh(__e)) + ((__gam2 * __fact2) * __d));
# 239 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__e = std::exp(__e);
# 240 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __p = __e / (__numeric_constants< _Tp> ::__pi() * __gampl);
# 241 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __q = ((_Tp)1) / ((__e * __numeric_constants< _Tp> ::__pi()) * __gammi);
# 242 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __pimu2 = __pimu / ((_Tp)2);
# 243 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __fact3 = (std::abs(__pimu2) < __eps) ? (_Tp)1 : (std::sin(__pimu2) / __pimu2);
# 245 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __r = ((__numeric_constants< _Tp> ::__pi() * __pimu2) * __fact3) * __fact3;
# 246 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __c = ((_Tp)1);
# 247 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__d = ((-__x2) * __x2);
# 248 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __sum = __ff + (__r * __q);
# 249 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __sum1 = __p;
# 250 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
for (__i = 1; __i <= __max_iter; ++__i)
# 251 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 252 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__ff = ((((__i * __ff) + __p) + __q) / ((__i * __i) - __mu2));
# 253 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__c *= (__d / ((_Tp)__i));
# 254 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__p /= (((_Tp)__i) - __mu);
# 255 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__q /= (((_Tp)__i) + __mu);
# 256 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __del = __c * (__ff + (__r * __q));
# 257 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__sum += __del;
# 258 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __del1 = (__c * __p) - (__i * __del);
# 259 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__sum1 += __del1;
# 260 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (std::abs(__del) < (__eps * (((_Tp)1) + std::abs(__sum)))) {
# 261 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
break; }
# 262 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 263 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__i > __max_iter) {
# 264 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
std::__throw_runtime_error("Bessel y series failed to converge in __bessel_jn."); }
# 266 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Nmu = (-__sum);
# 267 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Nnu1 = ((-__sum1) * __xi2);
# 268 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Npmu = (((__mu * __xi) * __Nmu) - __Nnu1);
# 269 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jmu = (__w / (__Npmu - (__f * __Nmu)));
# 270 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
} else
# 272 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 273 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __a = ((_Tp)(0.25L)) - __mu2;
# 274 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __q = ((_Tp)1);
# 275 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __p = ((-__xi) / ((_Tp)2));
# 276 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __br = ((_Tp)2) * __x;
# 277 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __bi = ((_Tp)2);
# 278 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __fact = (__a * __xi) / ((__p * __p) + (__q * __q));
# 279 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __cr = __br + (__q * __fact);
# 280 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __ci = __bi + (__p * __fact);
# 281 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __den = (__br * __br) + (__bi * __bi);
# 282 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __dr = __br / __den;
# 283 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __di = (-__bi) / __den;
# 284 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __dlr = (__cr * __dr) - (__ci * __di);
# 285 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __dli = (__cr * __di) + (__ci * __dr);
# 286 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __temp = (__p * __dlr) - (__q * __dli);
# 287 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__q = ((__p * __dli) + (__q * __dlr));
# 288 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__p = __temp;
# 289 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
int __i;
# 290 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
for (__i = 2; __i <= __max_iter; ++__i)
# 291 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 292 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__a += ((_Tp)(2 * (__i - 1)));
# 293 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__bi += ((_Tp)2);
# 294 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__dr = ((__a * __dr) + __br);
# 295 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__di = ((__a * __di) + __bi);
# 296 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if ((std::abs(__dr) + std::abs(__di)) < __fp_min) {
# 297 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__dr = __fp_min; }
# 298 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__fact = (__a / ((__cr * __cr) + (__ci * __ci)));
# 299 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__cr = (__br + (__cr * __fact));
# 300 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__ci = (__bi - (__ci * __fact));
# 301 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if ((std::abs(__cr) + std::abs(__ci)) < __fp_min) {
# 302 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__cr = __fp_min; }
# 303 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__den = ((__dr * __dr) + (__di * __di));
# 304 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__dr /= __den;
# 305 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__di /= (-__den);
# 306 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__dlr = ((__cr * __dr) - (__ci * __di));
# 307 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__dli = ((__cr * __di) + (__ci * __dr));
# 308 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__temp = ((__p * __dlr) - (__q * __dli));
# 309 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__q = ((__p * __dli) + (__q * __dlr));
# 310 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__p = __temp;
# 311 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if ((std::abs(__dlr - ((_Tp)1)) + std::abs(__dli)) < __eps) {
# 312 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
break; }
# 313 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 314 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__i > __max_iter) {
# 315 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
std::__throw_runtime_error("Lentz\'s method failed in __bessel_jn."); }
# 317 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __gam = (__p - __f) / __q;
# 318 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jmu = std::sqrt(__w / (((__p - __f) * __gam) + __q));
# 320 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jmu = std::copysign(__Jmu, __Jnul);
# 325 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Nmu = (__gam * __Jmu);
# 326 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Npmu = ((__p + (__q / __gam)) * __Nmu);
# 327 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Nnu1 = (((__mu * __xi) * __Nmu) - __Npmu);
# 328 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 329 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__fact = (__Jmu / __Jnul);
# 330 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jnu = (__fact * __Jnul1);
# 331 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jpnu = (__fact * __Jpnu1);
# 332 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
for (__i = 1; __i <= __nl; ++__i)
# 333 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 334 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __Nnutemp = (((__mu + __i) * __xi2) * __Nnu1) - __Nmu;
# 335 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Nmu = __Nnu1;
# 336 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Nnu1 = __Nnutemp;
# 337 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 338 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Nnu = __Nmu;
# 339 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Npnu = (((__nu * __xi) * __Nmu) - __Nnu1);
# 342 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 361 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
template< class _Tp> void
# 363 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__cyl_bessel_jn_asymp(_Tp __nu, _Tp __x, _Tp &__Jnu, _Tp &__Nnu)
# 364 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 365 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __mu = (((_Tp)4) * __nu) * __nu;
# 366 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __8x = ((_Tp)8) * __x;
# 368 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __P = ((_Tp)0);
# 369 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __Q = ((_Tp)0);
# 371 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __k = ((_Tp)0);
# 372 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __term = ((_Tp)1);
# 374 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
int __epsP = 0;
# 375 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
int __epsQ = 0;
# 377 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 379 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
do
# 380 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 381 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__term *= ((__k == 0) ? (_Tp)1 : ((-(__mu - (((2 * __k) - 1) * ((2 * __k) - 1)))) / (__k * __8x)));
# 385 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__epsP = (std::abs(__term) < (__eps * std::abs(__P)));
# 386 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__P += __term;
# 388 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__k++;
# 390 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__term *= ((__mu - (((2 * __k) - 1) * ((2 * __k) - 1))) / (__k * __8x));
# 391 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__epsQ = (std::abs(__term) < (__eps * std::abs(__Q)));
# 392 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Q += __term;
# 394 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__epsP && __epsQ && (__k > (__nu / (2.0)))) {
# 395 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
break; }
# 397 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__k++;
# 398 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 399 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
while (__k < 1000);
# 401 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __chi = __x - ((__nu + ((_Tp)(0.5L))) * __numeric_constants< _Tp> ::__pi_2());
# 404 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __c = std::cos(__chi);
# 405 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __s = std::sin(__chi);
# 407 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __coef = std::sqrt(((_Tp)2) / (__numeric_constants< _Tp> ::__pi() * __x));
# 410 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jnu = (__coef * ((__c * __P) - (__s * __Q)));
# 411 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Nnu = (__coef * ((__s * __P) + (__c * __Q)));
# 414 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 444 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
template< class _Tp> _Tp
# 446 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__cyl_bessel_ij_series(_Tp __nu, _Tp __x, _Tp __sgn, unsigned
# 447 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__max_iter)
# 448 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 449 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__x == ((_Tp)0)) {
# 450 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return (__nu == ((_Tp)0)) ? (_Tp)1 : ((_Tp)0); }
# 452 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __x2 = __x / ((_Tp)2);
# 453 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __fact = __nu * std::log(__x2);
# 455 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__fact -= std::lgamma(__nu + ((_Tp)1));
# 459 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__fact = std::exp(__fact);
# 460 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __xx4 = (__sgn * __x2) * __x2;
# 461 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __Jn = ((_Tp)1);
# 462 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __term = ((_Tp)1);
# 464 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
for (unsigned __i = (1); __i < __max_iter; ++__i)
# 465 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 466 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__term *= (__xx4 / (((_Tp)__i) * (__nu + ((_Tp)__i))));
# 467 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__Jn += __term;
# 468 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (std::abs(__term / __Jn) < std::template numeric_limits< _Tp> ::epsilon()) {
# 469 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
break; }
# 470 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 472 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return __fact * __Jn;
# 473 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 490 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
template< class _Tp> _Tp
# 492 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__cyl_bessel_j(_Tp __nu, _Tp __x)
# 493 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 494 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if ((__nu < ((_Tp)0)) || (__x < ((_Tp)0))) {
# 495 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
std::__throw_domain_error("Bad argument in __cyl_bessel_j."); } else {
# 497 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__isnan(__nu) || __isnan(__x)) {
# 498 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 499 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if ((__x * __x) < (((_Tp)10) * (__nu + ((_Tp)1)))) {
# 500 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return __cyl_bessel_ij_series(__nu, __x, -((_Tp)1), 200); } else {
# 501 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__x > ((_Tp)1000))
# 502 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 503 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __J_nu, __N_nu;
# 504 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__cyl_bessel_jn_asymp(__nu, __x, __J_nu, __N_nu);
# 505 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return __J_nu;
# 506 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
} else
# 508 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 509 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __J_nu, __N_nu, __Jp_nu, __Np_nu;
# 510 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__bessel_jn(__nu, __x, __J_nu, __N_nu, __Jp_nu, __Np_nu);
# 511 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return __J_nu;
# 512 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
} } } }
# 513 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 532 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
template< class _Tp> _Tp
# 534 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__cyl_neumann_n(_Tp __nu, _Tp __x)
# 535 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 536 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if ((__nu < ((_Tp)0)) || (__x < ((_Tp)0))) {
# 537 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
std::__throw_domain_error("Bad argument in __cyl_neumann_n."); } else {
# 539 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__isnan(__nu) || __isnan(__x)) {
# 540 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 541 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__x > ((_Tp)1000))
# 542 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 543 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __J_nu, __N_nu;
# 544 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__cyl_bessel_jn_asymp(__nu, __x, __J_nu, __N_nu);
# 545 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return __N_nu;
# 546 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
} else
# 548 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 549 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __J_nu, __N_nu, __Jp_nu, __Np_nu;
# 550 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__bessel_jn(__nu, __x, __J_nu, __N_nu, __Jp_nu, __Np_nu);
# 551 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return __N_nu;
# 552 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
} } }
# 553 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 569 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
template< class _Tp> void
# 571 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__sph_bessel_jn(unsigned __n, _Tp __x, _Tp &
# 572 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__j_n, _Tp &__n_n, _Tp &__jp_n, _Tp &__np_n)
# 573 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 574 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __nu = ((_Tp)__n) + ((_Tp)(0.5L));
# 576 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __J_nu, __N_nu, __Jp_nu, __Np_nu;
# 577 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__bessel_jn(__nu, __x, __J_nu, __N_nu, __Jp_nu, __Np_nu);
# 579 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
const _Tp __factor = __numeric_constants< _Tp> ::__sqrtpio2() / std::sqrt(__x);
# 582 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__j_n = (__factor * __J_nu);
# 583 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__n_n = (__factor * __N_nu);
# 584 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__jp_n = ((__factor * __Jp_nu) - (__j_n / (((_Tp)2) * __x)));
# 585 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__np_n = ((__factor * __Np_nu) - (__n_n / (((_Tp)2) * __x)));
# 588 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 604 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
template< class _Tp> _Tp
# 606 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__sph_bessel(unsigned __n, _Tp __x)
# 607 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 608 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__x < ((_Tp)0)) {
# 609 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
std::__throw_domain_error("Bad argument in __sph_bessel."); } else {
# 611 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__isnan(__x)) {
# 612 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 613 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__x == ((_Tp)0))
# 614 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 615 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__n == (0)) {
# 616 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return (_Tp)1; } else {
# 618 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return (_Tp)0; }
# 619 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
} else
# 621 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 622 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __j_n, __n_n, __jp_n, __np_n;
# 623 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__sph_bessel_jn(__n, __x, __j_n, __n_n, __jp_n, __np_n);
# 624 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return __j_n;
# 625 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
} } }
# 626 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 642 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
template< class _Tp> _Tp
# 644 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__sph_neumann(unsigned __n, _Tp __x)
# 645 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 646 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__x < ((_Tp)0)) {
# 647 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
std::__throw_domain_error("Bad argument in __sph_neumann."); } else {
# 649 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__isnan(__x)) {
# 650 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 651 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
if (__x == ((_Tp)0)) {
# 652 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return -std::template numeric_limits< _Tp> ::infinity(); } else
# 654 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
{
# 655 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
_Tp __j_n, __n_n, __jp_n, __np_n;
# 656 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
__sph_bessel_jn(__n, __x, __j_n, __n_n, __jp_n, __np_n);
# 657 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
return __n_n;
# 658 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
} } }
# 659 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 660 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 667 "/usr/include/c++/12/tr1/bessel_function.tcc" 3
}
# 49 "/usr/include/c++/12/tr1/beta_function.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 65 "/usr/include/c++/12/tr1/beta_function.tcc" 3
namespace __detail {
# 79 "/usr/include/c++/12/tr1/beta_function.tcc" 3
template< class _Tp> _Tp
# 81 "/usr/include/c++/12/tr1/beta_function.tcc" 3
__beta_gamma(_Tp __x, _Tp __y)
# 82 "/usr/include/c++/12/tr1/beta_function.tcc" 3
{
# 84 "/usr/include/c++/12/tr1/beta_function.tcc" 3
_Tp __bet;
# 86 "/usr/include/c++/12/tr1/beta_function.tcc" 3
if (__x > __y)
# 87 "/usr/include/c++/12/tr1/beta_function.tcc" 3
{
# 88 "/usr/include/c++/12/tr1/beta_function.tcc" 3
__bet = (std::tgamma(__x) / std::tgamma(__x + __y));
# 90 "/usr/include/c++/12/tr1/beta_function.tcc" 3
__bet *= std::tgamma(__y);
# 91 "/usr/include/c++/12/tr1/beta_function.tcc" 3
} else
# 93 "/usr/include/c++/12/tr1/beta_function.tcc" 3
{
# 94 "/usr/include/c++/12/tr1/beta_function.tcc" 3
__bet = (std::tgamma(__y) / std::tgamma(__x + __y));
# 96 "/usr/include/c++/12/tr1/beta_function.tcc" 3
__bet *= std::tgamma(__x);
# 97 "/usr/include/c++/12/tr1/beta_function.tcc" 3
}
# 111 "/usr/include/c++/12/tr1/beta_function.tcc" 3
return __bet;
# 112 "/usr/include/c++/12/tr1/beta_function.tcc" 3
}
# 127 "/usr/include/c++/12/tr1/beta_function.tcc" 3
template< class _Tp> _Tp
# 129 "/usr/include/c++/12/tr1/beta_function.tcc" 3
__beta_lgamma(_Tp __x, _Tp __y)
# 130 "/usr/include/c++/12/tr1/beta_function.tcc" 3
{
# 132 "/usr/include/c++/12/tr1/beta_function.tcc" 3
_Tp __bet = (std::lgamma(__x) + std::lgamma(__y)) - std::lgamma(__x + __y);
# 140 "/usr/include/c++/12/tr1/beta_function.tcc" 3
__bet = std::exp(__bet);
# 141 "/usr/include/c++/12/tr1/beta_function.tcc" 3
return __bet;
# 142 "/usr/include/c++/12/tr1/beta_function.tcc" 3
}
# 158 "/usr/include/c++/12/tr1/beta_function.tcc" 3
template< class _Tp> _Tp
# 160 "/usr/include/c++/12/tr1/beta_function.tcc" 3
__beta_product(_Tp __x, _Tp __y)
# 161 "/usr/include/c++/12/tr1/beta_function.tcc" 3
{
# 163 "/usr/include/c++/12/tr1/beta_function.tcc" 3
_Tp __bet = (__x + __y) / (__x * __y);
# 165 "/usr/include/c++/12/tr1/beta_function.tcc" 3
unsigned __max_iter = (1000000);
# 166 "/usr/include/c++/12/tr1/beta_function.tcc" 3
for (unsigned __k = (1); __k < __max_iter; ++__k)
# 167 "/usr/include/c++/12/tr1/beta_function.tcc" 3
{
# 168 "/usr/include/c++/12/tr1/beta_function.tcc" 3
_Tp __term = (((_Tp)1) + ((__x + __y) / __k)) / ((((_Tp)1) + (__x / __k)) * (((_Tp)1) + (__y / __k)));
# 170 "/usr/include/c++/12/tr1/beta_function.tcc" 3
__bet *= __term;
# 171 "/usr/include/c++/12/tr1/beta_function.tcc" 3
}
# 173 "/usr/include/c++/12/tr1/beta_function.tcc" 3
return __bet;
# 174 "/usr/include/c++/12/tr1/beta_function.tcc" 3
}
# 189 "/usr/include/c++/12/tr1/beta_function.tcc" 3
template< class _Tp> inline _Tp
# 191 "/usr/include/c++/12/tr1/beta_function.tcc" 3
__beta(_Tp __x, _Tp __y)
# 192 "/usr/include/c++/12/tr1/beta_function.tcc" 3
{
# 193 "/usr/include/c++/12/tr1/beta_function.tcc" 3
if (__isnan(__x) || __isnan(__y)) {
# 194 "/usr/include/c++/12/tr1/beta_function.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 196 "/usr/include/c++/12/tr1/beta_function.tcc" 3
return __beta_lgamma(__x, __y); }
# 197 "/usr/include/c++/12/tr1/beta_function.tcc" 3
}
# 198 "/usr/include/c++/12/tr1/beta_function.tcc" 3
}
# 205 "/usr/include/c++/12/tr1/beta_function.tcc" 3
}
# 45 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 59 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
namespace __detail {
# 76 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 78 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__ellint_rf(_Tp __x, _Tp __y, _Tp __z)
# 79 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 80 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __min = std::template numeric_limits< _Tp> ::min();
# 81 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __lolim = ((_Tp)5) * __min;
# 83 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (((__x < ((_Tp)0)) || (__y < ((_Tp)0))) || (__z < ((_Tp)0))) {
# 84 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Argument less than zero in __ellint_rf."); } else {
# 86 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if ((((__x + __y) < __lolim) || ((__x + __z) < __lolim)) || ((__y + __z) < __lolim)) {
# 88 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Argument too small in __ellint_rf"); } else
# 90 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 91 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c0 = (((_Tp)1) / ((_Tp)4));
# 92 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c1 = (((_Tp)1) / ((_Tp)24));
# 93 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c2 = (((_Tp)1) / ((_Tp)10));
# 94 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c3 = (((_Tp)3) / ((_Tp)44));
# 95 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c4 = (((_Tp)1) / ((_Tp)14));
# 97 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __xn = __x;
# 98 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __yn = __y;
# 99 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __zn = __z;
# 101 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 102 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __errtol = std::pow(__eps, ((_Tp)1) / ((_Tp)6));
# 103 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __mu;
# 104 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __xndev, __yndev, __zndev;
# 106 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const unsigned __max_iter = (100);
# 107 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
for (unsigned __iter = (0); __iter < __max_iter; ++__iter)
# 108 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 109 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__mu = (((__xn + __yn) + __zn) / ((_Tp)3));
# 110 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__xndev = (2 - ((__mu + __xn) / __mu));
# 111 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__yndev = (2 - ((__mu + __yn) / __mu));
# 112 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__zndev = (2 - ((__mu + __zn) / __mu));
# 113 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __epsilon = std::max(std::abs(__xndev), std::abs(__yndev));
# 114 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__epsilon = std::max(__epsilon, std::abs(__zndev));
# 115 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__epsilon < __errtol) {
# 116 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
break; }
# 117 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __xnroot = std::sqrt(__xn);
# 118 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __ynroot = std::sqrt(__yn);
# 119 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __znroot = std::sqrt(__zn);
# 120 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __lambda = (__xnroot * (__ynroot + __znroot)) + (__ynroot * __znroot);
# 122 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__xn = (__c0 * (__xn + __lambda));
# 123 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__yn = (__c0 * (__yn + __lambda));
# 124 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__zn = (__c0 * (__zn + __lambda));
# 125 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 127 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __e2 = (__xndev * __yndev) - (__zndev * __zndev);
# 128 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __e3 = (__xndev * __yndev) * __zndev;
# 129 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __s = (((_Tp)1) + ((((__c1 * __e2) - __c2) - (__c3 * __e3)) * __e2)) + (__c4 * __e3);
# 132 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __s / std::sqrt(__mu);
# 133 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
} }
# 134 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 153 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 155 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__comp_ellint_1_series(_Tp __k)
# 156 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 158 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __kk = __k * __k;
# 160 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __term = __kk / ((_Tp)4);
# 161 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __sum = ((_Tp)1) + __term;
# 163 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const unsigned __max_iter = (1000);
# 164 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
for (unsigned __i = (2); __i < __max_iter; ++__i)
# 165 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 166 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__term *= (((((2) * __i) - (1)) * __kk) / ((2) * __i));
# 167 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__term < std::template numeric_limits< _Tp> ::epsilon()) {
# 168 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
break; }
# 169 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__sum += __term;
# 170 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 172 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __numeric_constants< _Tp> ::__pi_2() * __sum;
# 173 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 191 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 193 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__comp_ellint_1(_Tp __k)
# 194 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 196 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__isnan(__k)) {
# 197 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 198 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (std::abs(__k) >= ((_Tp)1)) {
# 199 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 201 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __ellint_rf((_Tp)0, ((_Tp)1) - (__k * __k), (_Tp)1); } }
# 202 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 219 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 221 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__ellint_1(_Tp __k, _Tp __phi)
# 222 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 224 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__isnan(__k) || __isnan(__phi)) {
# 225 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 226 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (std::abs(__k) > ((_Tp)1)) {
# 227 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Bad argument in __ellint_1."); } else
# 229 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 231 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const int __n = std::floor((__phi / __numeric_constants< _Tp> ::__pi()) + ((_Tp)(0.5L)));
# 233 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __phi_red = __phi - (__n * __numeric_constants< _Tp> ::__pi());
# 236 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __s = std::sin(__phi_red);
# 237 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c = std::cos(__phi_red);
# 239 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __F = __s * __ellint_rf(__c * __c, ((_Tp)1) - (((__k * __k) * __s) * __s), (_Tp)1);
# 243 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__n == 0) {
# 244 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __F; } else {
# 246 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __F + ((((_Tp)2) * __n) * __comp_ellint_1(__k)); }
# 247 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
} }
# 248 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 266 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 268 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__comp_ellint_2_series(_Tp __k)
# 269 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 271 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __kk = __k * __k;
# 273 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __term = __kk;
# 274 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __sum = __term;
# 276 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const unsigned __max_iter = (1000);
# 277 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
for (unsigned __i = (2); __i < __max_iter; ++__i)
# 278 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 279 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __i2m = ((2) * __i) - (1);
# 280 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __i2 = (2) * __i;
# 281 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__term *= (((__i2m * __i2m) * __kk) / (__i2 * __i2));
# 282 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__term < std::template numeric_limits< _Tp> ::epsilon()) {
# 283 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
break; }
# 284 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__sum += (__term / __i2m);
# 285 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 287 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __numeric_constants< _Tp> ::__pi_2() * (((_Tp)1) - __sum);
# 288 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 314 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 316 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__ellint_rd(_Tp __x, _Tp __y, _Tp __z)
# 317 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 318 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 319 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __errtol = std::pow(__eps / ((_Tp)8), ((_Tp)1) / ((_Tp)6));
# 320 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __max = std::template numeric_limits< _Tp> ::max();
# 321 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __lolim = (((_Tp)2) / std::pow(__max, ((_Tp)2) / ((_Tp)3)));
# 323 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if ((__x < ((_Tp)0)) || (__y < ((_Tp)0))) {
# 324 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Argument less than zero in __ellint_rd."); } else {
# 326 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (((__x + __y) < __lolim) || (__z < __lolim)) {
# 327 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Argument too small in __ellint_rd."); } else
# 330 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 331 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c0 = (((_Tp)1) / ((_Tp)4));
# 332 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c1 = (((_Tp)3) / ((_Tp)14));
# 333 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c2 = (((_Tp)1) / ((_Tp)6));
# 334 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c3 = (((_Tp)9) / ((_Tp)22));
# 335 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c4 = (((_Tp)3) / ((_Tp)26));
# 337 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __xn = __x;
# 338 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __yn = __y;
# 339 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __zn = __z;
# 340 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __sigma = ((_Tp)0);
# 341 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __power4 = ((_Tp)1);
# 343 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __mu;
# 344 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __xndev, __yndev, __zndev;
# 346 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const unsigned __max_iter = (100);
# 347 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
for (unsigned __iter = (0); __iter < __max_iter; ++__iter)
# 348 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 349 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__mu = (((__xn + __yn) + (((_Tp)3) * __zn)) / ((_Tp)5));
# 350 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__xndev = ((__mu - __xn) / __mu);
# 351 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__yndev = ((__mu - __yn) / __mu);
# 352 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__zndev = ((__mu - __zn) / __mu);
# 353 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __epsilon = std::max(std::abs(__xndev), std::abs(__yndev));
# 354 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__epsilon = std::max(__epsilon, std::abs(__zndev));
# 355 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__epsilon < __errtol) {
# 356 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
break; }
# 357 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __xnroot = std::sqrt(__xn);
# 358 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __ynroot = std::sqrt(__yn);
# 359 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __znroot = std::sqrt(__zn);
# 360 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __lambda = (__xnroot * (__ynroot + __znroot)) + (__ynroot * __znroot);
# 362 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__sigma += (__power4 / (__znroot * (__zn + __lambda)));
# 363 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__power4 *= __c0;
# 364 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__xn = (__c0 * (__xn + __lambda));
# 365 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__yn = (__c0 * (__yn + __lambda));
# 366 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__zn = (__c0 * (__zn + __lambda));
# 367 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 369 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __ea = __xndev * __yndev;
# 370 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __eb = __zndev * __zndev;
# 371 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __ec = __ea - __eb;
# 372 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __ed = __ea - (((_Tp)6) * __eb);
# 373 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __ef = (__ed + __ec) + __ec;
# 374 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __s1 = __ed * (((-__c1) + ((__c3 * __ed) / ((_Tp)3))) - ((((((_Tp)3) * __c4) * __zndev) * __ef) / ((_Tp)2)));
# 377 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __s2 = __zndev * ((__c2 * __ef) + (__zndev * ((((-__c3) * __ec) - (__zndev * __c4)) - __ea)));
# 381 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return (((_Tp)3) * __sigma) + ((__power4 * ((((_Tp)1) + __s1) + __s2)) / (__mu * std::sqrt(__mu)));
# 383 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
} }
# 384 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 399 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 401 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__comp_ellint_2(_Tp __k)
# 402 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 404 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__isnan(__k)) {
# 405 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 406 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (std::abs(__k) == 1) {
# 407 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return (_Tp)1; } else {
# 408 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (std::abs(__k) > ((_Tp)1)) {
# 409 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Bad argument in __comp_ellint_2."); } else
# 411 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 412 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __kk = __k * __k;
# 414 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __ellint_rf((_Tp)0, ((_Tp)1) - __kk, (_Tp)1) - ((__kk * __ellint_rd((_Tp)0, ((_Tp)1) - __kk, (_Tp)1)) / ((_Tp)3));
# 416 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
} } }
# 417 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 433 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 435 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__ellint_2(_Tp __k, _Tp __phi)
# 436 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 438 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__isnan(__k) || __isnan(__phi)) {
# 439 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 440 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (std::abs(__k) > ((_Tp)1)) {
# 441 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Bad argument in __ellint_2."); } else
# 443 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 445 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const int __n = std::floor((__phi / __numeric_constants< _Tp> ::__pi()) + ((_Tp)(0.5L)));
# 447 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __phi_red = __phi - (__n * __numeric_constants< _Tp> ::__pi());
# 450 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __kk = __k * __k;
# 451 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __s = std::sin(__phi_red);
# 452 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __ss = __s * __s;
# 453 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __sss = __ss * __s;
# 454 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c = std::cos(__phi_red);
# 455 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __cc = __c * __c;
# 457 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __E = (__s * __ellint_rf(__cc, ((_Tp)1) - (__kk * __ss), (_Tp)1)) - (((__kk * __sss) * __ellint_rd(__cc, ((_Tp)1) - (__kk * __ss), (_Tp)1)) / ((_Tp)3));
# 463 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__n == 0) {
# 464 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __E; } else {
# 466 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __E + ((((_Tp)2) * __n) * __comp_ellint_2(__k)); }
# 467 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
} }
# 468 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 492 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 494 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__ellint_rc(_Tp __x, _Tp __y)
# 495 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 496 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __min = std::template numeric_limits< _Tp> ::min();
# 497 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __lolim = ((_Tp)5) * __min;
# 499 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (((__x < ((_Tp)0)) || (__y < ((_Tp)0))) || ((__x + __y) < __lolim)) {
# 500 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Argument less than zero in __ellint_rc."); } else
# 503 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 504 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c0 = (((_Tp)1) / ((_Tp)4));
# 505 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c1 = (((_Tp)1) / ((_Tp)7));
# 506 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c2 = (((_Tp)9) / ((_Tp)22));
# 507 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c3 = (((_Tp)3) / ((_Tp)10));
# 508 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c4 = (((_Tp)3) / ((_Tp)8));
# 510 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __xn = __x;
# 511 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __yn = __y;
# 513 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 514 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __errtol = std::pow(__eps / ((_Tp)30), ((_Tp)1) / ((_Tp)6));
# 515 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __mu;
# 516 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __sn;
# 518 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const unsigned __max_iter = (100);
# 519 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
for (unsigned __iter = (0); __iter < __max_iter; ++__iter)
# 520 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 521 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__mu = ((__xn + (((_Tp)2) * __yn)) / ((_Tp)3));
# 522 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__sn = (((__yn + __mu) / __mu) - ((_Tp)2));
# 523 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (std::abs(__sn) < __errtol) {
# 524 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
break; }
# 525 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __lambda = ((((_Tp)2) * std::sqrt(__xn)) * std::sqrt(__yn)) + __yn;
# 527 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__xn = (__c0 * (__xn + __lambda));
# 528 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__yn = (__c0 * (__yn + __lambda));
# 529 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 531 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __s = (__sn * __sn) * (__c3 + (__sn * (__c1 + (__sn * (__c4 + (__sn * __c2))))));
# 534 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return (((_Tp)1) + __s) / std::sqrt(__mu);
# 535 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 536 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 561 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 563 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__ellint_rj(_Tp __x, _Tp __y, _Tp __z, _Tp __p)
# 564 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 565 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __min = std::template numeric_limits< _Tp> ::min();
# 566 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __lolim = std::pow(((_Tp)5) * __min, ((_Tp)1) / ((_Tp)3));
# 568 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (((__x < ((_Tp)0)) || (__y < ((_Tp)0))) || (__z < ((_Tp)0))) {
# 569 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Argument less than zero in __ellint_rj."); } else {
# 571 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (((((__x + __y) < __lolim) || ((__x + __z) < __lolim)) || ((__y + __z) < __lolim)) || (__p < __lolim)) {
# 573 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Argument too small in __ellint_rj"); } else
# 576 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 577 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c0 = (((_Tp)1) / ((_Tp)4));
# 578 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c1 = (((_Tp)3) / ((_Tp)14));
# 579 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c2 = (((_Tp)1) / ((_Tp)3));
# 580 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c3 = (((_Tp)3) / ((_Tp)22));
# 581 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c4 = (((_Tp)3) / ((_Tp)26));
# 583 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __xn = __x;
# 584 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __yn = __y;
# 585 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __zn = __z;
# 586 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __pn = __p;
# 587 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __sigma = ((_Tp)0);
# 588 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __power4 = ((_Tp)1);
# 590 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 591 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __errtol = std::pow(__eps / ((_Tp)8), ((_Tp)1) / ((_Tp)6));
# 593 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __mu;
# 594 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __xndev, __yndev, __zndev, __pndev;
# 596 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const unsigned __max_iter = (100);
# 597 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
for (unsigned __iter = (0); __iter < __max_iter; ++__iter)
# 598 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 599 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__mu = ((((__xn + __yn) + __zn) + (((_Tp)2) * __pn)) / ((_Tp)5));
# 600 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__xndev = ((__mu - __xn) / __mu);
# 601 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__yndev = ((__mu - __yn) / __mu);
# 602 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__zndev = ((__mu - __zn) / __mu);
# 603 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__pndev = ((__mu - __pn) / __mu);
# 604 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __epsilon = std::max(std::abs(__xndev), std::abs(__yndev));
# 605 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__epsilon = std::max(__epsilon, std::abs(__zndev));
# 606 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__epsilon = std::max(__epsilon, std::abs(__pndev));
# 607 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__epsilon < __errtol) {
# 608 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
break; }
# 609 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __xnroot = std::sqrt(__xn);
# 610 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __ynroot = std::sqrt(__yn);
# 611 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __znroot = std::sqrt(__zn);
# 612 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __lambda = (__xnroot * (__ynroot + __znroot)) + (__ynroot * __znroot);
# 614 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __alpha1 = (__pn * ((__xnroot + __ynroot) + __znroot)) + ((__xnroot * __ynroot) * __znroot);
# 616 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __alpha2 = __alpha1 * __alpha1;
# 617 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __beta = (__pn * (__pn + __lambda)) * (__pn + __lambda);
# 619 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__sigma += (__power4 * __ellint_rc(__alpha2, __beta));
# 620 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__power4 *= __c0;
# 621 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__xn = (__c0 * (__xn + __lambda));
# 622 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__yn = (__c0 * (__yn + __lambda));
# 623 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__zn = (__c0 * (__zn + __lambda));
# 624 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__pn = (__c0 * (__pn + __lambda));
# 625 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 627 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __ea = (__xndev * (__yndev + __zndev)) + (__yndev * __zndev);
# 628 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __eb = (__xndev * __yndev) * __zndev;
# 629 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __ec = __pndev * __pndev;
# 630 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __e2 = __ea - (((_Tp)3) * __ec);
# 631 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __e3 = __eb + ((((_Tp)2) * __pndev) * (__ea - __ec));
# 632 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __s1 = ((_Tp)1) + (__e2 * (((-__c1) + (((((_Tp)3) * __c3) * __e2) / ((_Tp)4))) - (((((_Tp)3) * __c4) * __e3) / ((_Tp)2))));
# 634 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __s2 = __eb * ((__c2 / ((_Tp)2)) + (__pndev * (((-__c3) - __c3) + (__pndev * __c4))));
# 636 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
_Tp __s3 = ((__pndev * __ea) * (__c2 - (__pndev * __c3))) - ((__c2 * __pndev) * __ec);
# 639 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return (((_Tp)3) * __sigma) + ((__power4 * ((__s1 + __s2) + __s3)) / (__mu * std::sqrt(__mu)));
# 641 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
} }
# 642 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 661 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 663 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__comp_ellint_3(_Tp __k, _Tp __nu)
# 664 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 666 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__isnan(__k) || __isnan(__nu)) {
# 667 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 668 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__nu == ((_Tp)1)) {
# 669 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return std::template numeric_limits< _Tp> ::infinity(); } else {
# 670 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (std::abs(__k) > ((_Tp)1)) {
# 671 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Bad argument in __comp_ellint_3."); } else
# 673 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 674 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __kk = __k * __k;
# 676 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __ellint_rf((_Tp)0, ((_Tp)1) - __kk, (_Tp)1) + ((__nu * __ellint_rj((_Tp)0, ((_Tp)1) - __kk, (_Tp)1, ((_Tp)1) - __nu)) / ((_Tp)3));
# 680 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
} } }
# 681 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 701 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
template< class _Tp> _Tp
# 703 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
__ellint_3(_Tp __k, _Tp __nu, _Tp __phi)
# 704 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 706 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if ((__isnan(__k) || __isnan(__nu)) || __isnan(__phi)) {
# 707 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 708 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (std::abs(__k) > ((_Tp)1)) {
# 709 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
std::__throw_domain_error("Bad argument in __ellint_3."); } else
# 711 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
{
# 713 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const int __n = std::floor((__phi / __numeric_constants< _Tp> ::__pi()) + ((_Tp)(0.5L)));
# 715 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __phi_red = __phi - (__n * __numeric_constants< _Tp> ::__pi());
# 718 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __kk = __k * __k;
# 719 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __s = std::sin(__phi_red);
# 720 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __ss = __s * __s;
# 721 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __sss = __ss * __s;
# 722 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __c = std::cos(__phi_red);
# 723 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __cc = __c * __c;
# 725 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
const _Tp __Pi = (__s * __ellint_rf(__cc, ((_Tp)1) - (__kk * __ss), (_Tp)1)) + (((__nu * __sss) * __ellint_rj(__cc, ((_Tp)1) - (__kk * __ss), (_Tp)1, ((_Tp)1) - (__nu * __ss))) / ((_Tp)3));
# 731 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
if (__n == 0) {
# 732 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __Pi; } else {
# 734 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
return __Pi + ((((_Tp)2) * __n) * __comp_ellint_3(__k, __nu)); }
# 735 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
} }
# 736 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 737 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 743 "/usr/include/c++/12/tr1/ell_integral.tcc" 3
}
# 50 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 64 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
namespace __detail {
# 66 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp __expint_E1(_Tp);
# 81 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 83 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint_E1_series(_Tp __x)
# 84 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 85 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 86 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __term = ((_Tp)1);
# 87 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __esum = ((_Tp)0);
# 88 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __osum = ((_Tp)0);
# 89 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const unsigned __max_iter = (1000);
# 90 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
for (unsigned __i = (1); __i < __max_iter; ++__i)
# 91 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 92 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__term *= ((-__x) / __i);
# 93 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (std::abs(__term) < __eps) {
# 94 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
break; }
# 95 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__term >= ((_Tp)0)) {
# 96 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__esum += (__term / __i); } else {
# 98 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__osum += (__term / __i); }
# 99 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 101 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return (((-__esum) - __osum) - __numeric_constants< _Tp> ::__gamma_e()) - std::log(__x);
# 103 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 118 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 120 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint_E1_asymp(_Tp __x)
# 121 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 122 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __term = ((_Tp)1);
# 123 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __esum = ((_Tp)1);
# 124 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __osum = ((_Tp)0);
# 125 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const unsigned __max_iter = (1000);
# 126 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
for (unsigned __i = (1); __i < __max_iter; ++__i)
# 127 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 128 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __prev = __term;
# 129 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__term *= ((-__i) / __x);
# 130 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (std::abs(__term) > std::abs(__prev)) {
# 131 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
break; }
# 132 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__term >= ((_Tp)0)) {
# 133 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__esum += __term; } else {
# 135 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__osum += __term; }
# 136 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 138 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return (std::exp(-__x) * (__esum + __osum)) / __x;
# 139 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 155 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 157 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint_En_series(unsigned __n, _Tp __x)
# 158 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 159 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const unsigned __max_iter = (1000);
# 160 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 161 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const int __nm1 = __n - (1);
# 162 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __ans = (__nm1 != 0) ? ((_Tp)1) / __nm1 : ((-std::log(__x)) - __numeric_constants< _Tp> ::__gamma_e());
# 165 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __fact = ((_Tp)1);
# 166 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
for (int __i = 1; __i <= __max_iter; ++__i)
# 167 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 168 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__fact *= ((-__x) / ((_Tp)__i));
# 169 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __del;
# 170 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__i != __nm1) {
# 171 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__del = ((-__fact) / ((_Tp)(__i - __nm1))); } else
# 173 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 174 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __psi = (-__numeric_constants< _Tp> ::gamma_e());
# 175 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
for (int __ii = 1; __ii <= __nm1; ++__ii) {
# 176 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__psi += (((_Tp)1) / ((_Tp)__ii)); }
# 177 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__del = (__fact * (__psi - std::log(__x)));
# 178 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 179 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__ans += __del;
# 180 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (std::abs(__del) < (__eps * std::abs(__ans))) {
# 181 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __ans; }
# 182 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 183 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
std::__throw_runtime_error("Series summation failed in __expint_En_series.");
# 185 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 201 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 203 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint_En_cont_frac(unsigned __n, _Tp __x)
# 204 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 205 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const unsigned __max_iter = (1000);
# 206 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 207 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const _Tp __fp_min = std::template numeric_limits< _Tp> ::min();
# 208 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const int __nm1 = __n - (1);
# 209 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __b = __x + ((_Tp)__n);
# 210 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __c = ((_Tp)1) / __fp_min;
# 211 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __d = ((_Tp)1) / __b;
# 212 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __h = __d;
# 213 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
for (unsigned __i = (1); __i <= __max_iter; ++__i)
# 214 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 215 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __a = (-((_Tp)(__i * (__nm1 + __i))));
# 216 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__b += ((_Tp)2);
# 217 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__d = (((_Tp)1) / ((__a * __d) + __b));
# 218 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__c = (__b + (__a / __c));
# 219 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const _Tp __del = __c * __d;
# 220 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__h *= __del;
# 221 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (std::abs(__del - ((_Tp)1)) < __eps)
# 222 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 223 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const _Tp __ans = __h * std::exp(-__x);
# 224 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __ans;
# 225 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 226 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 227 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
std::__throw_runtime_error("Continued fraction failed in __expint_En_cont_frac.");
# 229 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 246 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 248 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint_En_recursion(unsigned __n, _Tp __x)
# 249 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 250 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __En;
# 251 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __E1 = __expint_E1(__x);
# 252 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__x < ((_Tp)__n))
# 253 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 255 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__En = __E1;
# 256 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
for (unsigned __j = (2); __j < __n; ++__j) {
# 257 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__En = ((std::exp(-__x) - (__x * __En)) / ((_Tp)(__j - (1)))); }
# 258 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
} else
# 260 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 262 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__En = ((_Tp)1);
# 263 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const int __N = __n + (20);
# 264 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __save = ((_Tp)0);
# 265 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
for (int __j = __N; __j > 0; --__j)
# 266 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 267 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__En = ((std::exp(-__x) - (__j * __En)) / __x);
# 268 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__j == __n) {
# 269 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__save = __En; }
# 270 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 271 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __norm = __En / __E1;
# 272 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__En /= __norm;
# 273 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 275 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __En;
# 276 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 290 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 292 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint_Ei_series(_Tp __x)
# 293 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 294 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __term = ((_Tp)1);
# 295 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __sum = ((_Tp)0);
# 296 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const unsigned __max_iter = (1000);
# 297 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
for (unsigned __i = (1); __i < __max_iter; ++__i)
# 298 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 299 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__term *= (__x / __i);
# 300 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__sum += (__term / __i);
# 301 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__term < (std::template numeric_limits< _Tp> ::epsilon() * __sum)) {
# 302 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
break; }
# 303 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 305 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return (__numeric_constants< _Tp> ::__gamma_e() + __sum) + std::log(__x);
# 306 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 321 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 323 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint_Ei_asymp(_Tp __x)
# 324 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 325 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __term = ((_Tp)1);
# 326 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __sum = ((_Tp)1);
# 327 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const unsigned __max_iter = (1000);
# 328 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
for (unsigned __i = (1); __i < __max_iter; ++__i)
# 329 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 330 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __prev = __term;
# 331 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__term *= (__i / __x);
# 332 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__term < std::template numeric_limits< _Tp> ::epsilon()) {
# 333 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
break; }
# 334 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__term >= __prev) {
# 335 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
break; }
# 336 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__sum += __term;
# 337 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 339 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return (std::exp(__x) * __sum) / __x;
# 340 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 354 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 356 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint_Ei(_Tp __x)
# 357 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 358 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__x < ((_Tp)0)) {
# 359 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return -__expint_E1(-__x); } else {
# 360 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__x < (-std::log(std::template numeric_limits< _Tp> ::epsilon()))) {
# 361 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __expint_Ei_series(__x); } else {
# 363 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __expint_Ei_asymp(__x); } }
# 364 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 378 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 380 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint_E1(_Tp __x)
# 381 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 382 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__x < ((_Tp)0)) {
# 383 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return -__expint_Ei(-__x); } else {
# 384 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__x < ((_Tp)1)) {
# 385 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __expint_E1_series(__x); } else {
# 386 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__x < ((_Tp)100)) {
# 387 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __expint_En_cont_frac(1, __x); } else {
# 389 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __expint_E1_asymp(__x); } } }
# 390 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 408 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 410 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint_asymp(unsigned __n, _Tp __x)
# 411 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 412 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __term = ((_Tp)1);
# 413 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __sum = ((_Tp)1);
# 414 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
for (unsigned __i = (1); __i <= __n; ++__i)
# 415 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 416 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __prev = __term;
# 417 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__term *= ((-((__n - __i) + (1))) / __x);
# 418 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (std::abs(__term) > std::abs(__prev)) {
# 419 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
break; }
# 420 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__sum += __term;
# 421 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 423 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return (std::exp(-__x) * __sum) / __x;
# 424 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 442 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 444 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint_large_n(unsigned __n, _Tp __x)
# 445 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 446 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const _Tp __xpn = __x + __n;
# 447 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
const _Tp __xpn2 = __xpn * __xpn;
# 448 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __term = ((_Tp)1);
# 449 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __sum = ((_Tp)1);
# 450 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
for (unsigned __i = (1); __i <= __n; ++__i)
# 451 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 452 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __prev = __term;
# 453 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__term *= ((__n - (((2) * (__i - (1))) * __x)) / __xpn2);
# 454 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (std::abs(__term) < std::template numeric_limits< _Tp> ::epsilon()) {
# 455 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
break; }
# 456 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__sum += __term;
# 457 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 459 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return (std::exp(-__x) * __sum) / __xpn;
# 460 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 476 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> _Tp
# 478 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint(unsigned __n, _Tp __x)
# 479 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 481 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__isnan(__x)) {
# 482 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 483 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if ((__n <= (1)) && (__x == ((_Tp)0))) {
# 484 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return std::template numeric_limits< _Tp> ::infinity(); } else
# 486 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 487 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __E0 = std::exp(__x) / __x;
# 488 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__n == (0)) {
# 489 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __E0; }
# 491 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __E1 = __expint_E1(__x);
# 492 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__n == (1)) {
# 493 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __E1; }
# 495 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__x == ((_Tp)0)) {
# 496 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return ((_Tp)1) / (static_cast< _Tp>(__n - (1))); }
# 498 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
_Tp __En = __expint_En_recursion(__n, __x);
# 500 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __En;
# 501 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
} }
# 502 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 516 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
template< class _Tp> inline _Tp
# 518 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
__expint(_Tp __x)
# 519 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
{
# 520 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
if (__isnan(__x)) {
# 521 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 523 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
return __expint_Ei(__x); }
# 524 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 525 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 531 "/usr/include/c++/12/tr1/exp_integral.tcc" 3
}
# 44 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 60 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
namespace __detail {
# 83 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
template< class _Tp> _Tp
# 85 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__conf_hyperg_series(_Tp __a, _Tp __c, _Tp __x)
# 86 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 87 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 89 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __term = ((_Tp)1);
# 90 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Fac = ((_Tp)1);
# 91 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const unsigned __max_iter = (100000);
# 92 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
unsigned __i;
# 93 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
for (__i = (0); __i < __max_iter; ++__i)
# 94 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 95 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__term *= (((__a + ((_Tp)__i)) * __x) / ((__c + ((_Tp)__i)) * ((_Tp)((1) + __i))));
# 97 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (std::abs(__term) < __eps)
# 98 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 99 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
break;
# 100 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 101 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Fac += __term;
# 102 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 103 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__i == __max_iter) {
# 104 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
std::__throw_runtime_error("Series failed to converge in __conf_hyperg_series."); }
# 107 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __Fac;
# 108 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 120 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
template< class _Tp> _Tp
# 122 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__conf_hyperg_luke(_Tp __a, _Tp __c, _Tp __xin)
# 123 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 124 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __big = std::pow(std::template numeric_limits< _Tp> ::max(), (_Tp)(0.16L));
# 125 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const int __nmax = 20000;
# 126 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 127 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __x = (-__xin);
# 128 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __x3 = (__x * __x) * __x;
# 129 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __t0 = __a / __c;
# 130 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __t1 = (__a + ((_Tp)1)) / (((_Tp)2) * __c);
# 131 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __t2 = (__a + ((_Tp)2)) / (((_Tp)2) * (__c + ((_Tp)1)));
# 132 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __F = ((_Tp)1);
# 133 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __prec;
# 135 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Bnm3 = ((_Tp)1);
# 136 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Bnm2 = ((_Tp)1) + (__t1 * __x);
# 137 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Bnm1 = ((_Tp)1) + ((__t2 * __x) * (((_Tp)1) + ((__t1 / ((_Tp)3)) * __x)));
# 139 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Anm3 = ((_Tp)1);
# 140 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Anm2 = __Bnm2 - (__t0 * __x);
# 141 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Anm1 = (__Bnm1 - ((__t0 * (((_Tp)1) + (__t2 * __x))) * __x)) + ((((__t0 * __t1) * (__c / (__c + ((_Tp)1)))) * __x) * __x);
# 144 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
int __n = 3;
# 145 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
while (1)
# 146 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 147 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __npam1 = ((_Tp)(__n - 1)) + __a;
# 148 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __npcm1 = ((_Tp)(__n - 1)) + __c;
# 149 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __npam2 = ((_Tp)(__n - 2)) + __a;
# 150 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __npcm2 = ((_Tp)(__n - 2)) + __c;
# 151 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __tnm1 = (_Tp)((2 * __n) - 1);
# 152 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __tnm3 = (_Tp)((2 * __n) - 3);
# 153 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __tnm5 = (_Tp)((2 * __n) - 5);
# 154 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __F1 = (((_Tp)(__n - 2)) - __a) / ((((_Tp)2) * __tnm3) * __npcm1);
# 155 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __F2 = ((((_Tp)__n) + __a) * __npam1) / ((((((_Tp)4) * __tnm1) * __tnm3) * __npcm2) * __npcm1);
# 157 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __F3 = (((-__npam2) * __npam1) * (((_Tp)(__n - 2)) - __a)) / ((((((((_Tp)8) * __tnm3) * __tnm3) * __tnm5) * (((_Tp)(__n - 3)) + __c)) * __npcm2) * __npcm1);
# 160 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __E = ((-__npam1) * (((_Tp)(__n - 1)) - __c)) / (((((_Tp)2) * __tnm3) * __npcm2) * __npcm1);
# 163 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __An = (((((_Tp)1) + (__F1 * __x)) * __Anm1) + (((__E + (__F2 * __x)) * __x) * __Anm2)) + ((__F3 * __x3) * __Anm3);
# 165 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Bn = (((((_Tp)1) + (__F1 * __x)) * __Bnm1) + (((__E + (__F2 * __x)) * __x) * __Bnm2)) + ((__F3 * __x3) * __Bnm3);
# 167 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __r = __An / __Bn;
# 169 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__prec = std::abs((__F - __r) / __F);
# 170 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__F = __r;
# 172 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((__prec < __eps) || (__n > __nmax)) {
# 173 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
break; }
# 175 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((std::abs(__An) > __big) || (std::abs(__Bn) > __big))
# 176 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 177 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__An /= __big;
# 178 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bn /= __big;
# 179 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm1 /= __big;
# 180 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm1 /= __big;
# 181 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm2 /= __big;
# 182 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm2 /= __big;
# 183 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm3 /= __big;
# 184 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm3 /= __big;
# 185 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else {
# 186 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((std::abs(__An) < (((_Tp)1) / __big)) || (std::abs(__Bn) < (((_Tp)1) / __big)))
# 188 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 189 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__An *= __big;
# 190 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bn *= __big;
# 191 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm1 *= __big;
# 192 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm1 *= __big;
# 193 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm2 *= __big;
# 194 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm2 *= __big;
# 195 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm3 *= __big;
# 196 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm3 *= __big;
# 197 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} }
# 199 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
++__n;
# 200 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm3 = __Bnm2;
# 201 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm2 = __Bnm1;
# 202 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm1 = __Bn;
# 203 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm3 = __Anm2;
# 204 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm2 = __Anm1;
# 205 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm1 = __An;
# 206 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 208 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__n >= __nmax) {
# 209 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
std::__throw_runtime_error("Iteration failed to converge in __conf_hyperg_luke."); }
# 212 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __F;
# 213 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 227 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
template< class _Tp> _Tp
# 229 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__conf_hyperg(_Tp __a, _Tp __c, _Tp __x)
# 230 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 232 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __c_nint = std::nearbyint(__c);
# 236 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((__isnan(__a) || __isnan(__c)) || __isnan(__x)) {
# 237 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 238 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((__c_nint == __c) && (__c_nint <= 0)) {
# 239 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return std::template numeric_limits< _Tp> ::infinity(); } else {
# 240 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__a == ((_Tp)0)) {
# 241 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return (_Tp)1; } else {
# 242 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__c == __a) {
# 243 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return std::exp(__x); } else {
# 244 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__x < ((_Tp)0)) {
# 245 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __conf_hyperg_luke(__a, __c, __x); } else {
# 247 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __conf_hyperg_series(__a, __c, __x); } } } } }
# 248 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 271 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
template< class _Tp> _Tp
# 273 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__hyperg_series(_Tp __a, _Tp __b, _Tp __c, _Tp __x)
# 274 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 275 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 277 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __term = ((_Tp)1);
# 278 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Fabc = ((_Tp)1);
# 279 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const unsigned __max_iter = (100000);
# 280 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
unsigned __i;
# 281 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
for (__i = (0); __i < __max_iter; ++__i)
# 282 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 283 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__term *= ((((__a + ((_Tp)__i)) * (__b + ((_Tp)__i))) * __x) / ((__c + ((_Tp)__i)) * ((_Tp)((1) + __i))));
# 285 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (std::abs(__term) < __eps)
# 286 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 287 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
break;
# 288 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 289 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Fabc += __term;
# 290 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 291 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__i == __max_iter) {
# 292 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
std::__throw_runtime_error("Series failed to converge in __hyperg_series."); }
# 295 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __Fabc;
# 296 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 304 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
template< class _Tp> _Tp
# 306 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__hyperg_luke(_Tp __a, _Tp __b, _Tp __c, _Tp __xin)
# 307 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 308 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __big = std::pow(std::template numeric_limits< _Tp> ::max(), (_Tp)(0.16L));
# 309 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const int __nmax = 20000;
# 310 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 311 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __x = (-__xin);
# 312 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __x3 = (__x * __x) * __x;
# 313 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __t0 = (__a * __b) / __c;
# 314 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __t1 = ((__a + ((_Tp)1)) * (__b + ((_Tp)1))) / (((_Tp)2) * __c);
# 315 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __t2 = ((__a + ((_Tp)2)) * (__b + ((_Tp)2))) / (((_Tp)2) * (__c + ((_Tp)1)));
# 318 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __F = ((_Tp)1);
# 320 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Bnm3 = ((_Tp)1);
# 321 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Bnm2 = ((_Tp)1) + (__t1 * __x);
# 322 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Bnm1 = ((_Tp)1) + ((__t2 * __x) * (((_Tp)1) + ((__t1 / ((_Tp)3)) * __x)));
# 324 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Anm3 = ((_Tp)1);
# 325 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Anm2 = __Bnm2 - (__t0 * __x);
# 326 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Anm1 = (__Bnm1 - ((__t0 * (((_Tp)1) + (__t2 * __x))) * __x)) + ((((__t0 * __t1) * (__c / (__c + ((_Tp)1)))) * __x) * __x);
# 329 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
int __n = 3;
# 330 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
while (1)
# 331 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 332 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __npam1 = ((_Tp)(__n - 1)) + __a;
# 333 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __npbm1 = ((_Tp)(__n - 1)) + __b;
# 334 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __npcm1 = ((_Tp)(__n - 1)) + __c;
# 335 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __npam2 = ((_Tp)(__n - 2)) + __a;
# 336 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __npbm2 = ((_Tp)(__n - 2)) + __b;
# 337 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __npcm2 = ((_Tp)(__n - 2)) + __c;
# 338 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __tnm1 = (_Tp)((2 * __n) - 1);
# 339 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __tnm3 = (_Tp)((2 * __n) - 3);
# 340 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __tnm5 = (_Tp)((2 * __n) - 5);
# 341 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __n2 = __n * __n;
# 342 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __F1 = (((((((_Tp)3) * __n2) + (((__a + __b) - ((_Tp)6)) * __n)) + ((_Tp)2)) - (__a * __b)) - (((_Tp)2) * (__a + __b))) / ((((_Tp)2) * __tnm3) * __npcm1);
# 345 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __F2 = (((-((((((_Tp)3) * __n2) - (((__a + __b) + ((_Tp)6)) * __n)) + ((_Tp)2)) - (__a * __b))) * __npam1) * __npbm1) / ((((((_Tp)4) * __tnm1) * __tnm3) * __npcm2) * __npcm1);
# 348 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __F3 = (((((__npam2 * __npam1) * __npbm2) * __npbm1) * (((_Tp)(__n - 2)) - __a)) * (((_Tp)(__n - 2)) - __b)) / ((((((((_Tp)8) * __tnm3) * __tnm3) * __tnm5) * (((_Tp)(__n - 3)) + __c)) * __npcm2) * __npcm1);
# 352 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __E = (((-__npam1) * __npbm1) * (((_Tp)(__n - 1)) - __c)) / (((((_Tp)2) * __tnm3) * __npcm2) * __npcm1);
# 355 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __An = (((((_Tp)1) + (__F1 * __x)) * __Anm1) + (((__E + (__F2 * __x)) * __x) * __Anm2)) + ((__F3 * __x3) * __Anm3);
# 357 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __Bn = (((((_Tp)1) + (__F1 * __x)) * __Bnm1) + (((__E + (__F2 * __x)) * __x) * __Bnm2)) + ((__F3 * __x3) * __Bnm3);
# 359 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __r = __An / __Bn;
# 361 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __prec = std::abs((__F - __r) / __F);
# 362 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__F = __r;
# 364 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((__prec < __eps) || (__n > __nmax)) {
# 365 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
break; }
# 367 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((std::abs(__An) > __big) || (std::abs(__Bn) > __big))
# 368 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 369 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__An /= __big;
# 370 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bn /= __big;
# 371 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm1 /= __big;
# 372 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm1 /= __big;
# 373 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm2 /= __big;
# 374 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm2 /= __big;
# 375 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm3 /= __big;
# 376 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm3 /= __big;
# 377 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else {
# 378 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((std::abs(__An) < (((_Tp)1) / __big)) || (std::abs(__Bn) < (((_Tp)1) / __big)))
# 380 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 381 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__An *= __big;
# 382 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bn *= __big;
# 383 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm1 *= __big;
# 384 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm1 *= __big;
# 385 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm2 *= __big;
# 386 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm2 *= __big;
# 387 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm3 *= __big;
# 388 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm3 *= __big;
# 389 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} }
# 391 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
++__n;
# 392 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm3 = __Bnm2;
# 393 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm2 = __Bnm1;
# 394 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Bnm1 = __Bn;
# 395 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm3 = __Anm2;
# 396 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm2 = __Anm1;
# 397 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__Anm1 = __An;
# 398 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 400 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__n >= __nmax) {
# 401 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
std::__throw_runtime_error("Iteration failed to converge in __hyperg_luke."); }
# 404 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __F;
# 405 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 438 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
template< class _Tp> _Tp
# 440 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__hyperg_reflect(_Tp __a, _Tp __b, _Tp __c, _Tp __x)
# 441 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 442 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __d = (__c - __a) - __b;
# 443 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const int __intd = std::floor(__d + ((_Tp)(0.5L)));
# 444 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 445 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __toler = ((_Tp)1000) * __eps;
# 446 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __log_max = std::log(std::template numeric_limits< _Tp> ::max());
# 447 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const bool __d_integer = std::abs(__d - __intd) < __toler;
# 449 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__d_integer)
# 450 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 451 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __ln_omx = std::log(((_Tp)1) - __x);
# 452 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __ad = std::abs(__d);
# 453 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __F1, __F2;
# 455 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __d1, __d2;
# 456 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__d >= ((_Tp)0))
# 457 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 458 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__d1 = __d;
# 459 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__d2 = ((_Tp)0);
# 460 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else
# 462 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 463 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__d1 = ((_Tp)0);
# 464 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__d2 = __d;
# 465 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 467 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __lng_c = __log_gamma(__c);
# 470 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__ad < __eps)
# 471 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 473 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__F1 = ((_Tp)0);
# 474 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else
# 476 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 478 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
bool __ok_d1 = true;
# 479 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __lng_ad, __lng_ad1, __lng_bd1;
# 480 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
try
# 481 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 482 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__lng_ad = __log_gamma(__ad);
# 483 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__lng_ad1 = __log_gamma(__a + __d1);
# 484 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__lng_bd1 = __log_gamma(__b + __d1);
# 485 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 486 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
catch (...)
# 487 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 488 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__ok_d1 = false;
# 489 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 491 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__ok_d1)
# 492 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 496 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __sum1 = ((_Tp)1);
# 497 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __term = ((_Tp)1);
# 498 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __ln_pre1 = (((__lng_ad + __lng_c) + (__d2 * __ln_omx)) - __lng_ad1) - __lng_bd1;
# 503 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
for (int __i = 1; __i < __ad; ++__i)
# 504 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 505 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const int __j = __i - 1;
# 506 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__term *= ((((((__a + __d2) + __j) * ((__b + __d2) + __j)) / ((((_Tp)1) + __d2) + __j)) / __i) * (((_Tp)1) - __x));
# 508 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__sum1 += __term;
# 509 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 511 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__ln_pre1 > __log_max) {
# 512 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
std::__throw_runtime_error("Overflow of gamma functions in __hyperg_luke."); } else {
# 515 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__F1 = (std::exp(__ln_pre1) * __sum1); }
# 516 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else
# 518 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 521 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__F1 = ((_Tp)0);
# 522 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 523 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 526 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
bool __ok_d2 = true;
# 527 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __lng_ad2, __lng_bd2;
# 528 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
try
# 529 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 530 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__lng_ad2 = __log_gamma(__a + __d2);
# 531 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__lng_bd2 = __log_gamma(__b + __d2);
# 532 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 533 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
catch (...)
# 534 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 535 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__ok_d2 = false;
# 536 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 538 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__ok_d2)
# 539 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 542 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const int __maxiter = 2000;
# 543 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __psi_1 = (-__numeric_constants< _Tp> ::__gamma_e());
# 544 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __psi_1pd = __psi(((_Tp)1) + __ad);
# 545 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __psi_apd1 = __psi(__a + __d1);
# 546 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __psi_bpd1 = __psi(__b + __d1);
# 548 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __psi_term = (((__psi_1 + __psi_1pd) - __psi_apd1) - __psi_bpd1) - __ln_omx;
# 550 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __fact = ((_Tp)1);
# 551 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __sum2 = __psi_term;
# 552 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __ln_pre2 = ((__lng_c + (__d1 * __ln_omx)) - __lng_ad2) - __lng_bd2;
# 556 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
int __j;
# 557 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
for (__j = 1; __j < __maxiter; ++__j)
# 558 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 561 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __term1 = (((_Tp)1) / ((_Tp)__j)) + (((_Tp)1) / (__ad + __j));
# 563 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __term2 = (((_Tp)1) / ((__a + __d1) + ((_Tp)(__j - 1)))) + (((_Tp)1) / ((__b + __d1) + ((_Tp)(__j - 1))));
# 565 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__psi_term += (__term1 - __term2);
# 566 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__fact *= (((((__a + __d1) + ((_Tp)(__j - 1))) * ((__b + __d1) + ((_Tp)(__j - 1)))) / ((__ad + __j) * __j)) * (((_Tp)1) - __x));
# 569 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __delta = __fact * __psi_term;
# 570 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__sum2 += __delta;
# 571 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (std::abs(__delta) < (__eps * std::abs(__sum2))) {
# 572 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
break; }
# 573 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 574 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__j == __maxiter) {
# 575 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
std::__throw_runtime_error("Sum F2 failed to converge in __hyperg_reflect"); }
# 578 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__sum2 == ((_Tp)0)) {
# 579 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__F2 = ((_Tp)0); } else {
# 581 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__F2 = (std::exp(__ln_pre2) * __sum2); }
# 582 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else
# 584 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 587 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__F2 = ((_Tp)0);
# 588 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 590 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __sgn_2 = (((__intd % 2) == 1) ? -((_Tp)1) : ((_Tp)1));
# 591 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __F = __F1 + (__sgn_2 * __F2);
# 593 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __F;
# 594 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else
# 596 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 601 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
bool __ok1 = true;
# 602 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __sgn_g1ca = ((_Tp)0), __ln_g1ca = ((_Tp)0);
# 603 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __sgn_g1cb = ((_Tp)0), __ln_g1cb = ((_Tp)0);
# 604 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
try
# 605 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 606 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__sgn_g1ca = __log_gamma_sign(__c - __a);
# 607 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__ln_g1ca = __log_gamma(__c - __a);
# 608 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__sgn_g1cb = __log_gamma_sign(__c - __b);
# 609 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__ln_g1cb = __log_gamma(__c - __b);
# 610 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 611 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
catch (...)
# 612 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 613 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__ok1 = false;
# 614 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 616 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
bool __ok2 = true;
# 617 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __sgn_g2a = ((_Tp)0), __ln_g2a = ((_Tp)0);
# 618 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __sgn_g2b = ((_Tp)0), __ln_g2b = ((_Tp)0);
# 619 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
try
# 620 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 621 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__sgn_g2a = __log_gamma_sign(__a);
# 622 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__ln_g2a = __log_gamma(__a);
# 623 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__sgn_g2b = __log_gamma_sign(__b);
# 624 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__ln_g2b = __log_gamma(__b);
# 625 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 626 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
catch (...)
# 627 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 628 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__ok2 = false;
# 629 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 631 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __sgn_gc = __log_gamma_sign(__c);
# 632 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __ln_gc = __log_gamma(__c);
# 633 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __sgn_gd = __log_gamma_sign(__d);
# 634 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __ln_gd = __log_gamma(__d);
# 635 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __sgn_gmd = __log_gamma_sign(-__d);
# 636 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __ln_gmd = __log_gamma(-__d);
# 638 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __sgn1 = ((__sgn_gc * __sgn_gd) * __sgn_g1ca) * __sgn_g1cb;
# 639 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __sgn2 = ((__sgn_gc * __sgn_gmd) * __sgn_g2a) * __sgn_g2b;
# 641 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __pre1, __pre2;
# 642 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__ok1 && __ok2)
# 643 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 644 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __ln_pre1 = ((__ln_gc + __ln_gd) - __ln_g1ca) - __ln_g1cb;
# 645 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __ln_pre2 = (((__ln_gc + __ln_gmd) - __ln_g2a) - __ln_g2b) + (__d * std::log(((_Tp)1) - __x));
# 647 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((__ln_pre1 < __log_max) && (__ln_pre2 < __log_max))
# 648 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 649 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre1 = std::exp(__ln_pre1);
# 650 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre2 = std::exp(__ln_pre2);
# 651 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre1 *= __sgn1;
# 652 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre2 *= __sgn2;
# 653 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else
# 655 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 656 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
std::__throw_runtime_error("Overflow of gamma functions in __hyperg_reflect");
# 658 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 659 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else {
# 660 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__ok1 && (!__ok2))
# 661 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 662 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __ln_pre1 = ((__ln_gc + __ln_gd) - __ln_g1ca) - __ln_g1cb;
# 663 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__ln_pre1 < __log_max)
# 664 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 665 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre1 = std::exp(__ln_pre1);
# 666 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre1 *= __sgn1;
# 667 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre2 = ((_Tp)0);
# 668 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else
# 670 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 671 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
std::__throw_runtime_error("Overflow of gamma functions in __hyperg_reflect");
# 673 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 674 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else {
# 675 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((!__ok1) && __ok2)
# 676 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 677 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
_Tp __ln_pre2 = (((__ln_gc + __ln_gmd) - __ln_g2a) - __ln_g2b) + (__d * std::log(((_Tp)1) - __x));
# 679 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__ln_pre2 < __log_max)
# 680 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 681 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre1 = ((_Tp)0);
# 682 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre2 = std::exp(__ln_pre2);
# 683 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre2 *= __sgn2;
# 684 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else
# 686 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 687 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
std::__throw_runtime_error("Overflow of gamma functions in __hyperg_reflect");
# 689 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 690 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else
# 692 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 693 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre1 = ((_Tp)0);
# 694 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__pre2 = ((_Tp)0);
# 695 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
std::__throw_runtime_error("Underflow of gamma functions in __hyperg_reflect");
# 697 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} } }
# 699 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __F1 = __hyperg_series(__a, __b, ((_Tp)1) - __d, ((_Tp)1) - __x);
# 701 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __F2 = __hyperg_series(__c - __a, __c - __b, ((_Tp)1) + __d, ((_Tp)1) - __x);
# 704 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __F = (__pre1 * __F1) + (__pre2 * __F2);
# 706 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __F;
# 707 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 708 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 728 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
template< class _Tp> _Tp
# 730 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
__hyperg(_Tp __a, _Tp __b, _Tp __c, _Tp __x)
# 731 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 733 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __a_nint = std::nearbyint(__a);
# 734 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __b_nint = std::nearbyint(__b);
# 735 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __c_nint = std::nearbyint(__c);
# 741 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
const _Tp __toler = ((_Tp)1000) * std::template numeric_limits< _Tp> ::epsilon();
# 742 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (std::abs(__x) >= ((_Tp)1)) {
# 743 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
std::__throw_domain_error("Argument outside unit circle in __hyperg."); } else {
# 745 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (((__isnan(__a) || __isnan(__b)) || __isnan(__c)) || __isnan(__x)) {
# 747 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 748 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((__c_nint == __c) && (__c_nint <= ((_Tp)0))) {
# 749 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return std::template numeric_limits< _Tp> ::infinity(); } else {
# 750 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((std::abs(__c - __b) < __toler) || (std::abs(__c - __a) < __toler)) {
# 751 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return std::pow(((_Tp)1) - __x, (__c - __a) - __b); } else {
# 752 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((__a >= ((_Tp)0)) && (__b >= ((_Tp)0)) && (__c >= ((_Tp)0)) && (__x >= ((_Tp)0)) && (__x < ((_Tp)(0.995L)))) {
# 754 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __hyperg_series(__a, __b, __c, __x); } else {
# 755 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((std::abs(__a) < ((_Tp)10)) && (std::abs(__b) < ((_Tp)10)))
# 756 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
{
# 759 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((__a < ((_Tp)0)) && (std::abs(__a - __a_nint) < __toler)) {
# 760 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __hyperg_series(__a_nint, __b, __c, __x); } else {
# 761 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if ((__b < ((_Tp)0)) && (std::abs(__b - __b_nint) < __toler)) {
# 762 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __hyperg_series(__a, __b_nint, __c, __x); } else {
# 763 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__x < (-((_Tp)(0.25L)))) {
# 764 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __hyperg_luke(__a, __b, __c, __x); } else {
# 765 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (__x < ((_Tp)(0.5L))) {
# 766 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __hyperg_series(__a, __b, __c, __x); } else {
# 768 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
if (std::abs(__c) > ((_Tp)10)) {
# 769 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __hyperg_series(__a, __b, __c, __x); } else {
# 771 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __hyperg_reflect(__a, __b, __c, __x); } } } } }
# 772 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
} else {
# 774 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
return __hyperg_luke(__a, __b, __c, __x); } } } } } }
# 775 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 776 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 783 "/usr/include/c++/12/tr1/hypergeometric.tcc" 3
}
# 49 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 65 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
namespace __detail {
# 80 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
template< class _Tp> _Tp
# 82 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__poly_legendre_p(unsigned __l, _Tp __x)
# 83 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 85 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__isnan(__x)) {
# 86 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 87 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__x == (+((_Tp)1))) {
# 88 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return +((_Tp)1); } else {
# 89 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__x == (-((_Tp)1))) {
# 90 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return (((__l % (2)) == (1)) ? -((_Tp)1) : (+((_Tp)1))); } else
# 92 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 93 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __p_lm2 = ((_Tp)1);
# 94 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__l == (0)) {
# 95 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return __p_lm2; }
# 97 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __p_lm1 = __x;
# 98 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__l == (1)) {
# 99 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return __p_lm1; }
# 101 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __p_l = (0);
# 102 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
for (unsigned __ll = (2); __ll <= __l; ++__ll)
# 103 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 106 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__p_l = ((((((_Tp)2) * __x) * __p_lm1) - __p_lm2) - (((__x * __p_lm1) - __p_lm2) / ((_Tp)__ll)));
# 108 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__p_lm2 = __p_lm1;
# 109 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__p_lm1 = __p_l;
# 110 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
}
# 112 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return __p_l;
# 113 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
} } }
# 114 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
}
# 136 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
template< class _Tp> _Tp
# 138 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__assoc_legendre_p(unsigned __l, unsigned __m, _Tp __x, _Tp
# 139 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__phase = (_Tp)(+1))
# 140 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 142 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__m > __l) {
# 143 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return (_Tp)0; } else {
# 144 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__isnan(__x)) {
# 145 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 146 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__m == (0)) {
# 147 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return __poly_legendre_p(__l, __x); } else
# 149 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 150 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __p_mm = ((_Tp)1);
# 151 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__m > (0))
# 152 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 155 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __root = std::sqrt(((_Tp)1) - __x) * std::sqrt(((_Tp)1) + __x);
# 156 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __fact = ((_Tp)1);
# 157 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
for (unsigned __i = (1); __i <= __m; ++__i)
# 158 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 159 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__p_mm *= ((__phase * __fact) * __root);
# 160 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__fact += ((_Tp)2);
# 161 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
}
# 162 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
}
# 163 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__l == __m) {
# 164 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return __p_mm; }
# 166 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __p_mp1m = (((_Tp)(((2) * __m) + (1))) * __x) * __p_mm;
# 167 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__l == (__m + (1))) {
# 168 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return __p_mp1m; }
# 170 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __p_lm2m = __p_mm;
# 171 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __P_lm1m = __p_mp1m;
# 172 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __p_lm = ((_Tp)0);
# 173 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
for (unsigned __j = __m + (2); __j <= __l; ++__j)
# 174 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 175 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__p_lm = ((((((_Tp)(((2) * __j) - (1))) * __x) * __P_lm1m) - (((_Tp)((__j + __m) - (1))) * __p_lm2m)) / ((_Tp)(__j - __m)));
# 177 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__p_lm2m = __P_lm1m;
# 178 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__P_lm1m = __p_lm;
# 179 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
}
# 181 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return __p_lm;
# 182 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
} } }
# 183 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
}
# 214 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
template< class _Tp> _Tp
# 216 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__sph_legendre(unsigned __l, unsigned __m, _Tp __theta)
# 217 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 218 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__isnan(__theta)) {
# 219 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); }
# 221 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
const _Tp __x = std::cos(__theta);
# 223 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__m > __l) {
# 224 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return (_Tp)0; } else {
# 225 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__m == (0))
# 226 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 227 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __P = __poly_legendre_p(__l, __x);
# 228 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __fact = std::sqrt(((_Tp)(((2) * __l) + (1))) / (((_Tp)4) * __numeric_constants< _Tp> ::__pi()));
# 230 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__P *= __fact;
# 231 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return __P;
# 232 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
} else {
# 233 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if ((__x == ((_Tp)1)) || (__x == (-((_Tp)1))))
# 234 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 236 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return (_Tp)0;
# 237 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
} else
# 239 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 245 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
const _Tp __sgn = ((__m % (2)) == (1)) ? -((_Tp)1) : ((_Tp)1);
# 246 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
const _Tp __y_mp1m_factor = __x * std::sqrt((_Tp)(((2) * __m) + (3)));
# 248 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
const _Tp __lncirc = std::log1p((-__x) * __x);
# 254 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
const _Tp __lnpoch = std::lgamma((_Tp)(__m + ((_Tp)(0.5L)))) - std::lgamma((_Tp)__m);
# 260 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
const _Tp __lnpre_val = ((-((_Tp)(0.25L))) * __numeric_constants< _Tp> ::__lnpi()) + (((_Tp)(0.5L)) * (__lnpoch + (__m * __lncirc)));
# 263 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
const _Tp __sr = std::sqrt((((_Tp)2) + (((_Tp)1) / __m)) / (((_Tp)4) * __numeric_constants< _Tp> ::__pi()));
# 265 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __y_mm = (__sgn * __sr) * std::exp(__lnpre_val);
# 266 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __y_mp1m = __y_mp1m_factor * __y_mm;
# 268 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__l == __m) {
# 269 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return __y_mm; } else {
# 270 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
if (__l == (__m + (1))) {
# 271 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return __y_mp1m; } else
# 273 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 274 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
_Tp __y_lm = ((_Tp)0);
# 277 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
for (unsigned __ll = __m + (2); __ll <= __l; ++__ll)
# 278 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
{
# 279 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
const _Tp __rat1 = ((_Tp)(__ll - __m)) / ((_Tp)(__ll + __m));
# 280 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
const _Tp __rat2 = ((_Tp)((__ll - __m) - (1))) / ((_Tp)((__ll + __m) - (1)));
# 281 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
const _Tp __fact1 = std::sqrt((__rat1 * ((_Tp)(((2) * __ll) + (1)))) * ((_Tp)(((2) * __ll) - (1))));
# 283 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
const _Tp __fact2 = std::sqrt(((__rat1 * __rat2) * ((_Tp)(((2) * __ll) + (1)))) / ((_Tp)(((2) * __ll) - (3))));
# 285 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__y_lm = ((((__x * __y_mp1m) * __fact1) - ((((__ll + __m) - (1)) * __y_mm) * __fact2)) / ((_Tp)(__ll - __m)));
# 287 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__y_mm = __y_mp1m;
# 288 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
__y_mp1m = __y_lm;
# 289 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
}
# 291 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
return __y_lm;
# 292 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
} }
# 293 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
} } }
# 294 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
}
# 295 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
}
# 302 "/usr/include/c++/12/tr1/legendre_function.tcc" 3
}
# 51 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 65 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
namespace __detail {
# 83 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
template< class _Tp> void
# 85 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__bessel_ik(_Tp __nu, _Tp __x, _Tp &
# 86 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Inu, _Tp &__Knu, _Tp &__Ipnu, _Tp &__Kpnu)
# 87 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 88 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__x == ((_Tp)0))
# 89 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 90 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__nu == ((_Tp)0))
# 91 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 92 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Inu = ((_Tp)1);
# 93 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Ipnu = ((_Tp)0);
# 94 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
} else {
# 95 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__nu == ((_Tp)1))
# 96 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 97 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Inu = ((_Tp)0);
# 98 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Ipnu = ((_Tp)(0.5L));
# 99 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
} else
# 101 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 102 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Inu = ((_Tp)0);
# 103 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Ipnu = ((_Tp)0);
# 104 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
} }
# 105 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Knu = std::template numeric_limits< _Tp> ::infinity();
# 106 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Kpnu = (-std::template numeric_limits< _Tp> ::infinity());
# 107 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
return;
# 108 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 110 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 111 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __fp_min = ((_Tp)10) * std::template numeric_limits< _Tp> ::epsilon();
# 112 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const int __max_iter = 15000;
# 113 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __x_min = ((_Tp)2);
# 115 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const int __nl = static_cast< int>(__nu + ((_Tp)(0.5L)));
# 117 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __mu = __nu - __nl;
# 118 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __mu2 = __mu * __mu;
# 119 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __xi = ((_Tp)1) / __x;
# 120 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __xi2 = ((_Tp)2) * __xi;
# 121 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __h = __nu * __xi;
# 122 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__h < __fp_min) {
# 123 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__h = __fp_min; }
# 124 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __b = __xi2 * __nu;
# 125 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __d = ((_Tp)0);
# 126 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __c = __h;
# 127 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
int __i;
# 128 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
for (__i = 1; __i <= __max_iter; ++__i)
# 129 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 130 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__b += __xi2;
# 131 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__d = (((_Tp)1) / (__b + __d));
# 132 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__c = (__b + (((_Tp)1) / __c));
# 133 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __del = __c * __d;
# 134 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__h *= __del;
# 135 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (std::abs(__del - ((_Tp)1)) < __eps) {
# 136 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
break; }
# 137 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 138 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__i > __max_iter) {
# 139 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
std::__throw_runtime_error("Argument x too large in __bessel_ik; try asymptotic expansion."); }
# 142 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __Inul = __fp_min;
# 143 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __Ipnul = __h * __Inul;
# 144 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __Inul1 = __Inul;
# 145 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __Ipnu1 = __Ipnul;
# 146 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __fact = __nu * __xi;
# 147 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
for (int __l = __nl; __l >= 1; --__l)
# 148 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 149 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __Inutemp = (__fact * __Inul) + __Ipnul;
# 150 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__fact -= __xi;
# 151 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Ipnul = ((__fact * __Inutemp) + __Inul);
# 152 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Inul = __Inutemp;
# 153 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 154 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __f = __Ipnul / __Inul;
# 155 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __Kmu, __Knu1;
# 156 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__x < __x_min)
# 157 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 158 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __x2 = __x / ((_Tp)2);
# 159 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __pimu = __numeric_constants< _Tp> ::__pi() * __mu;
# 160 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __fact = (std::abs(__pimu) < __eps) ? (_Tp)1 : (__pimu / std::sin(__pimu));
# 162 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __d = (-std::log(__x2));
# 163 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __e = __mu * __d;
# 164 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __fact2 = (std::abs(__e) < __eps) ? (_Tp)1 : (std::sinh(__e) / __e);
# 166 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __gam1, __gam2, __gampl, __gammi;
# 167 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__gamma_temme(__mu, __gam1, __gam2, __gampl, __gammi);
# 168 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __ff = __fact * ((__gam1 * std::cosh(__e)) + ((__gam2 * __fact2) * __d));
# 170 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __sum = __ff;
# 171 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__e = std::exp(__e);
# 172 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __p = __e / (((_Tp)2) * __gampl);
# 173 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __q = ((_Tp)1) / ((((_Tp)2) * __e) * __gammi);
# 174 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __c = ((_Tp)1);
# 175 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__d = (__x2 * __x2);
# 176 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __sum1 = __p;
# 177 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
int __i;
# 178 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
for (__i = 1; __i <= __max_iter; ++__i)
# 179 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 180 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__ff = ((((__i * __ff) + __p) + __q) / ((__i * __i) - __mu2));
# 181 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__c *= (__d / __i);
# 182 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__p /= (__i - __mu);
# 183 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__q /= (__i + __mu);
# 184 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __del = __c * __ff;
# 185 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__sum += __del;
# 186 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __del1 = __c * (__p - (__i * __ff));
# 187 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__sum1 += __del1;
# 188 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (std::abs(__del) < (__eps * std::abs(__sum))) {
# 189 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
break; }
# 190 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 191 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__i > __max_iter) {
# 192 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
std::__throw_runtime_error("Bessel k series failed to converge in __bessel_ik."); }
# 194 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Kmu = __sum;
# 195 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Knu1 = (__sum1 * __xi2);
# 196 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
} else
# 198 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 199 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __b = ((_Tp)2) * (((_Tp)1) + __x);
# 200 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __d = ((_Tp)1) / __b;
# 201 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __delh = __d;
# 202 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __h = __delh;
# 203 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __q1 = ((_Tp)0);
# 204 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __q2 = ((_Tp)1);
# 205 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __a1 = ((_Tp)(0.25L)) - __mu2;
# 206 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __q = __c = __a1;
# 207 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __a = (-__a1);
# 208 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __s = ((_Tp)1) + (__q * __delh);
# 209 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
int __i;
# 210 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
for (__i = 2; __i <= __max_iter; ++__i)
# 211 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 212 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__a -= (2 * (__i - 1));
# 213 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__c = (((-__a) * __c) / __i);
# 214 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __qnew = (__q1 - (__b * __q2)) / __a;
# 215 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__q1 = __q2;
# 216 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__q2 = __qnew;
# 217 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__q += (__c * __qnew);
# 218 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__b += ((_Tp)2);
# 219 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__d = (((_Tp)1) / (__b + (__a * __d)));
# 220 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__delh = (((__b * __d) - ((_Tp)1)) * __delh);
# 221 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__h += __delh;
# 222 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __dels = __q * __delh;
# 223 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__s += __dels;
# 224 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (std::abs(__dels / __s) < __eps) {
# 225 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
break; }
# 226 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 227 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__i > __max_iter) {
# 228 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
std::__throw_runtime_error("Steed\'s method failed in __bessel_ik."); }
# 230 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__h = (__a1 * __h);
# 231 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Kmu = ((std::sqrt(__numeric_constants< _Tp> ::__pi() / (((_Tp)2) * __x)) * std::exp(-__x)) / __s);
# 233 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Knu1 = ((__Kmu * (((__mu + __x) + ((_Tp)(0.5L))) - __h)) * __xi);
# 234 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 236 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __Kpmu = ((__mu * __xi) * __Kmu) - __Knu1;
# 237 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __Inumu = __xi / ((__f * __Kmu) - __Kpmu);
# 238 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Inu = ((__Inumu * __Inul1) / __Inul);
# 239 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Ipnu = ((__Inumu * __Ipnu1) / __Inul);
# 240 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
for (__i = 1; __i <= __nl; ++__i)
# 241 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 242 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __Knutemp = (((__mu + __i) * __xi2) * __Knu1) + __Kmu;
# 243 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Kmu = __Knu1;
# 244 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Knu1 = __Knutemp;
# 245 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 246 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Knu = __Kmu;
# 247 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Kpnu = (((__nu * __xi) * __Kmu) - __Knu1);
# 250 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 267 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
template< class _Tp> _Tp
# 269 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__cyl_bessel_i(_Tp __nu, _Tp __x)
# 270 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 271 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if ((__nu < ((_Tp)0)) || (__x < ((_Tp)0))) {
# 272 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
std::__throw_domain_error("Bad argument in __cyl_bessel_i."); } else {
# 274 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__isnan(__nu) || __isnan(__x)) {
# 275 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 276 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if ((__x * __x) < (((_Tp)10) * (__nu + ((_Tp)1)))) {
# 277 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
return __cyl_bessel_ij_series(__nu, __x, +((_Tp)1), 200); } else
# 279 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 280 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __I_nu, __K_nu, __Ip_nu, __Kp_nu;
# 281 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__bessel_ik(__nu, __x, __I_nu, __K_nu, __Ip_nu, __Kp_nu);
# 282 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
return __I_nu;
# 283 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
} } }
# 284 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 303 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
template< class _Tp> _Tp
# 305 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__cyl_bessel_k(_Tp __nu, _Tp __x)
# 306 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 307 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if ((__nu < ((_Tp)0)) || (__x < ((_Tp)0))) {
# 308 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
std::__throw_domain_error("Bad argument in __cyl_bessel_k."); } else {
# 310 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__isnan(__nu) || __isnan(__x)) {
# 311 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else
# 313 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 314 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __I_nu, __K_nu, __Ip_nu, __Kp_nu;
# 315 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__bessel_ik(__nu, __x, __I_nu, __K_nu, __Ip_nu, __Kp_nu);
# 316 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
return __K_nu;
# 317 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
} }
# 318 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 337 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
template< class _Tp> void
# 339 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__sph_bessel_ik(unsigned __n, _Tp __x, _Tp &
# 340 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__i_n, _Tp &__k_n, _Tp &__ip_n, _Tp &__kp_n)
# 341 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 342 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __nu = ((_Tp)__n) + ((_Tp)(0.5L));
# 344 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __I_nu, __Ip_nu, __K_nu, __Kp_nu;
# 345 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__bessel_ik(__nu, __x, __I_nu, __K_nu, __Ip_nu, __Kp_nu);
# 347 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __factor = __numeric_constants< _Tp> ::__sqrtpio2() / std::sqrt(__x);
# 350 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__i_n = (__factor * __I_nu);
# 351 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__k_n = (__factor * __K_nu);
# 352 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__ip_n = ((__factor * __Ip_nu) - (__i_n / (((_Tp)2) * __x)));
# 353 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__kp_n = ((__factor * __Kp_nu) - (__k_n / (((_Tp)2) * __x)));
# 356 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 373 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
template< class _Tp> void
# 375 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__airy(_Tp __x, _Tp &__Ai, _Tp &__Bi, _Tp &__Aip, _Tp &__Bip)
# 376 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 377 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __absx = std::abs(__x);
# 378 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __rootx = std::sqrt(__absx);
# 379 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp __z = ((((_Tp)2) * __absx) * __rootx) / ((_Tp)3);
# 380 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
const _Tp _S_inf = std::template numeric_limits< _Tp> ::infinity();
# 382 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__isnan(__x)) {
# 383 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Bip = (__Aip = (__Bi = (__Ai = std::template numeric_limits< _Tp> ::quiet_NaN()))); } else {
# 384 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__z == _S_inf)
# 385 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 386 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Aip = (__Ai = ((_Tp)0));
# 387 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Bip = (__Bi = _S_inf);
# 388 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
} else {
# 389 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__z == (-_S_inf)) {
# 390 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Bip = (__Aip = (__Bi = (__Ai = ((_Tp)0)))); } else {
# 391 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__x > ((_Tp)0))
# 392 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 393 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __I_nu, __Ip_nu, __K_nu, __Kp_nu;
# 395 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__bessel_ik(((_Tp)1) / ((_Tp)3), __z, __I_nu, __K_nu, __Ip_nu, __Kp_nu);
# 396 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Ai = ((__rootx * __K_nu) / (__numeric_constants< _Tp> ::__sqrt3() * __numeric_constants< _Tp> ::__pi()));
# 399 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Bi = (__rootx * ((__K_nu / __numeric_constants< _Tp> ::__pi()) + ((((_Tp)2) * __I_nu) / __numeric_constants< _Tp> ::__sqrt3())));
# 402 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__bessel_ik(((_Tp)2) / ((_Tp)3), __z, __I_nu, __K_nu, __Ip_nu, __Kp_nu);
# 403 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Aip = (((-__x) * __K_nu) / (__numeric_constants< _Tp> ::__sqrt3() * __numeric_constants< _Tp> ::__pi()));
# 406 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Bip = (__x * ((__K_nu / __numeric_constants< _Tp> ::__pi()) + ((((_Tp)2) * __I_nu) / __numeric_constants< _Tp> ::__sqrt3())));
# 409 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
} else {
# 410 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
if (__x < ((_Tp)0))
# 411 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 412 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
_Tp __J_nu, __Jp_nu, __N_nu, __Np_nu;
# 414 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__bessel_jn(((_Tp)1) / ((_Tp)3), __z, __J_nu, __N_nu, __Jp_nu, __Np_nu);
# 415 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Ai = ((__rootx * (__J_nu - (__N_nu / __numeric_constants< _Tp> ::__sqrt3()))) / ((_Tp)2));
# 417 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Bi = (((-__rootx) * (__N_nu + (__J_nu / __numeric_constants< _Tp> ::__sqrt3()))) / ((_Tp)2));
# 420 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__bessel_jn(((_Tp)2) / ((_Tp)3), __z, __J_nu, __N_nu, __Jp_nu, __Np_nu);
# 421 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Aip = ((__absx * ((__N_nu / __numeric_constants< _Tp> ::__sqrt3()) + __J_nu)) / ((_Tp)2));
# 423 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Bip = ((__absx * ((__J_nu / __numeric_constants< _Tp> ::__sqrt3()) - __N_nu)) / ((_Tp)2));
# 425 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
} else
# 427 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
{
# 431 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Ai = ((_Tp)(0.35502805388781723926L));
# 432 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Bi = (__Ai * __numeric_constants< _Tp> ::__sqrt3());
# 437 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Aip = (-((_Tp)(0.2588194037928067984L)));
# 438 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
__Bip = ((-__Aip) * __numeric_constants< _Tp> ::__sqrt3());
# 439 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
} } } } }
# 442 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 443 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 449 "/usr/include/c++/12/tr1/modified_bessel_func.tcc" 3
}
# 42 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 56 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
namespace __detail {
# 72 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
template< class _Tp> _Tp
# 74 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
__poly_hermite_recursion(unsigned __n, _Tp __x)
# 75 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
{
# 77 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
_Tp __H_0 = (1);
# 78 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
if (__n == (0)) {
# 79 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
return __H_0; }
# 82 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
_Tp __H_1 = 2 * __x;
# 83 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
if (__n == (1)) {
# 84 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
return __H_1; }
# 87 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
_Tp __H_n, __H_nm1, __H_nm2;
# 88 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
unsigned __i;
# 89 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
for (((__H_nm2 = __H_0), (__H_nm1 = __H_1)), (__i = (2)); __i <= __n; ++__i)
# 90 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
{
# 91 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
__H_n = (2 * ((__x * __H_nm1) - ((__i - (1)) * __H_nm2)));
# 92 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
__H_nm2 = __H_nm1;
# 93 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
__H_nm1 = __H_n;
# 94 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
}
# 96 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
return __H_n;
# 97 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
}
# 114 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
template< class _Tp> inline _Tp
# 116 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
__poly_hermite(unsigned __n, _Tp __x)
# 117 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
{
# 118 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
if (__isnan(__x)) {
# 119 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 121 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
return __poly_hermite_recursion(__n, __x); }
# 122 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
}
# 123 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
}
# 129 "/usr/include/c++/12/tr1/poly_hermite.tcc" 3
}
# 44 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 60 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
namespace __detail {
# 75 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
template< class _Tpa, class _Tp> _Tp
# 77 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__poly_laguerre_large_n(unsigned __n, _Tpa __alpha1, _Tp __x)
# 78 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
{
# 79 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __a = (-((_Tp)__n));
# 80 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __b = ((_Tp)__alpha1) + ((_Tp)1);
# 81 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __eta = (((_Tp)2) * __b) - (((_Tp)4) * __a);
# 82 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __cos2th = __x / __eta;
# 83 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __sin2th = ((_Tp)1) - __cos2th;
# 84 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __th = std::acos(std::sqrt(__cos2th));
# 85 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __pre_h = ((((__numeric_constants< _Tp> ::__pi_2() * __numeric_constants< _Tp> ::__pi_2()) * __eta) * __eta) * __cos2th) * __sin2th;
# 90 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __lg_b = std::lgamma(((_Tp)__n) + __b);
# 91 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __lnfact = std::lgamma((_Tp)(__n + (1)));
# 97 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __pre_term1 = (((_Tp)(0.5L)) * (((_Tp)1) - __b)) * std::log((((_Tp)(0.25L)) * __x) * __eta);
# 99 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __pre_term2 = ((_Tp)(0.25L)) * std::log(__pre_h);
# 100 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __lnpre = (((__lg_b - __lnfact) + (((_Tp)(0.5L)) * __x)) + __pre_term1) - __pre_term2;
# 102 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __ser_term1 = std::sin(__a * __numeric_constants< _Tp> ::__pi());
# 103 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __ser_term2 = std::sin(((((_Tp)(0.25L)) * __eta) * ((((_Tp)2) * __th) - std::sin(((_Tp)2) * __th))) + __numeric_constants< _Tp> ::__pi_4());
# 107 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __ser = __ser_term1 + __ser_term2;
# 109 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return std::exp(__lnpre) * __ser;
# 110 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
}
# 129 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
template< class _Tpa, class _Tp> _Tp
# 131 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__poly_laguerre_hyperg(unsigned __n, _Tpa __alpha1, _Tp __x)
# 132 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
{
# 133 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __b = ((_Tp)__alpha1) + ((_Tp)1);
# 134 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __mx = (-__x);
# 135 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __tc_sgn = (__x < ((_Tp)0)) ? (_Tp)1 : (((__n % (2)) == (1)) ? -((_Tp)1) : ((_Tp)1));
# 138 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __tc = ((_Tp)1);
# 139 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
const _Tp __ax = std::abs(__x);
# 140 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
for (unsigned __k = (1); __k <= __n; ++__k) {
# 141 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__tc *= (__ax / __k); }
# 143 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __term = __tc * __tc_sgn;
# 144 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __sum = __term;
# 145 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
for (int __k = ((int)__n) - 1; __k >= 0; --__k)
# 146 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
{
# 147 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__term *= ((((__b + ((_Tp)__k)) / ((_Tp)(((int)__n) - __k))) * ((_Tp)(__k + 1))) / __mx);
# 149 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__sum += __term;
# 150 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
}
# 152 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return __sum;
# 153 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
}
# 185 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
template< class _Tpa, class _Tp> _Tp
# 187 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__poly_laguerre_recursion(unsigned __n, _Tpa __alpha1, _Tp __x)
# 188 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
{
# 190 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __l_0 = ((_Tp)1);
# 191 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
if (__n == (0)) {
# 192 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return __l_0; }
# 195 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __l_1 = (((-__x) + ((_Tp)1)) + ((_Tp)__alpha1));
# 196 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
if (__n == (1)) {
# 197 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return __l_1; }
# 200 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __l_n2 = __l_0;
# 201 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __l_n1 = __l_1;
# 202 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __l_n = ((_Tp)0);
# 203 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
for (unsigned __nn = (2); __nn <= __n; ++__nn)
# 204 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
{
# 205 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__l_n = (((((((_Tp)(((2) * __nn) - (1))) + ((_Tp)__alpha1)) - __x) * __l_n1) / ((_Tp)__nn)) - (((((_Tp)(__nn - (1))) + ((_Tp)__alpha1)) * __l_n2) / ((_Tp)__nn)));
# 208 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__l_n2 = __l_n1;
# 209 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__l_n1 = __l_n;
# 210 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
}
# 212 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return __l_n;
# 213 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
}
# 244 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
template< class _Tpa, class _Tp> _Tp
# 246 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__poly_laguerre(unsigned __n, _Tpa __alpha1, _Tp __x)
# 247 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
{
# 248 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
if (__x < ((_Tp)0)) {
# 249 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
std::__throw_domain_error("Negative argument in __poly_laguerre."); } else {
# 252 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
if (__isnan(__x)) {
# 253 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 254 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
if (__n == (0)) {
# 255 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return (_Tp)1; } else {
# 256 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
if (__n == (1)) {
# 257 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return (((_Tp)1) + ((_Tp)__alpha1)) - __x; } else {
# 258 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
if (__x == ((_Tp)0))
# 259 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
{
# 260 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
_Tp __prod = ((_Tp)__alpha1) + ((_Tp)1);
# 261 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
for (unsigned __k = (2); __k <= __n; ++__k) {
# 262 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__prod *= ((((_Tp)__alpha1) + ((_Tp)__k)) / ((_Tp)__k)); }
# 263 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return __prod;
# 264 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
} else {
# 265 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
if ((__n > (10000000)) && (((_Tp)__alpha1) > (-((_Tp)1))) && (__x < ((((_Tp)2) * (((_Tp)__alpha1) + ((_Tp)1))) + ((_Tp)((4) * __n))))) {
# 267 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return __poly_laguerre_large_n(__n, __alpha1, __x); } else {
# 268 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
if ((((_Tp)__alpha1) >= ((_Tp)0)) || ((__x > ((_Tp)0)) && (((_Tp)__alpha1) < (-((_Tp)(__n + (1))))))) {
# 270 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return __poly_laguerre_recursion(__n, __alpha1, __x); } else {
# 272 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
return __poly_laguerre_hyperg(__n, __alpha1, __x); } } } } } } }
# 273 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
}
# 296 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
template< class _Tp> inline _Tp
# 298 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__assoc_laguerre(unsigned __n, unsigned __m, _Tp __x)
# 299 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
{ return __poly_laguerre< unsigned, _Tp> (__n, __m, __x); }
# 316 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
template< class _Tp> inline _Tp
# 318 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
__laguerre(unsigned __n, _Tp __x)
# 319 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
{ return __poly_laguerre< unsigned, _Tp> (__n, 0, __x); }
# 320 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
}
# 327 "/usr/include/c++/12/tr1/poly_laguerre.tcc" 3
}
# 47 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
namespace std __attribute((__visibility__("default"))) {
# 63 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
namespace __detail {
# 78 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
template< class _Tp> _Tp
# 80 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__riemann_zeta_sum(_Tp __s)
# 81 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 83 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__s < ((_Tp)1)) {
# 84 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
std::__throw_domain_error("Bad argument in zeta sum."); }
# 86 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
const unsigned max_iter = (10000);
# 87 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __zeta = ((_Tp)0);
# 88 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
for (unsigned __k = (1); __k < max_iter; ++__k)
# 89 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 90 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __term = std::pow(static_cast< _Tp>(__k), -__s);
# 91 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__term < std::template numeric_limits< _Tp> ::epsilon())
# 92 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 93 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
break;
# 94 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 95 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__zeta += __term;
# 96 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 98 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return __zeta;
# 99 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 115 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
template< class _Tp> _Tp
# 117 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__riemann_zeta_alt(_Tp __s)
# 118 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 119 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __sgn = ((_Tp)1);
# 120 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __zeta = ((_Tp)0);
# 121 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
for (unsigned __i = (1); __i < (10000000); ++__i)
# 122 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 123 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __term = __sgn / std::pow(__i, __s);
# 124 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (std::abs(__term) < std::template numeric_limits< _Tp> ::epsilon()) {
# 125 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
break; }
# 126 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__zeta += __term;
# 127 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__sgn *= ((_Tp)(-1));
# 128 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 129 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__zeta /= (((_Tp)1) - std::pow((_Tp)2, ((_Tp)1) - __s));
# 131 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return __zeta;
# 132 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 157 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
template< class _Tp> _Tp
# 159 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__riemann_zeta_glob(_Tp __s)
# 160 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 161 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __zeta = ((_Tp)0);
# 163 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 165 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
const _Tp __max_bincoeff = (std::template numeric_limits< _Tp> ::max_exponent10 * std::log((_Tp)10)) - ((_Tp)1);
# 170 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__s < ((_Tp)0))
# 171 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 173 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (std::fmod(__s, (_Tp)2) == ((_Tp)0)) {
# 174 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return (_Tp)0; } else
# 177 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 178 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __zeta = __riemann_zeta_glob(((_Tp)1) - __s);
# 179 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__zeta *= (((std::pow(((_Tp)2) * __numeric_constants< _Tp> ::__pi(), __s) * std::sin(__numeric_constants< _Tp> ::__pi_2() * __s)) * std::exp(std::lgamma(((_Tp)1) - __s))) / __numeric_constants< _Tp> ::__pi());
# 188 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return __zeta;
# 189 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 190 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 192 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __num = ((_Tp)(0.5L));
# 193 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
const unsigned __maxit = (10000);
# 194 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
for (unsigned __i = (0); __i < __maxit; ++__i)
# 195 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 196 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
bool __punt = false;
# 197 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __sgn = ((_Tp)1);
# 198 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __term = ((_Tp)0);
# 199 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
for (unsigned __j = (0); __j <= __i; ++__j)
# 200 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 202 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __bincoeff = (std::lgamma((_Tp)((1) + __i)) - std::lgamma((_Tp)((1) + __j))) - std::lgamma((_Tp)(((1) + __i) - __j));
# 210 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__bincoeff > __max_bincoeff)
# 211 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 213 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__punt = true;
# 214 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
break;
# 215 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 216 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__bincoeff = std::exp(__bincoeff);
# 217 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__term += ((__sgn * __bincoeff) * std::pow((_Tp)((1) + __j), -__s));
# 218 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__sgn *= ((_Tp)(-1));
# 219 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 220 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__punt) {
# 221 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
break; }
# 222 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__term *= __num;
# 223 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__zeta += __term;
# 224 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (std::abs(__term / __zeta) < __eps) {
# 225 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
break; }
# 226 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__num *= ((_Tp)(0.5L));
# 227 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 229 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__zeta /= (((_Tp)1) - std::pow((_Tp)2, ((_Tp)1) - __s));
# 231 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return __zeta;
# 232 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 252 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
template< class _Tp> _Tp
# 254 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__riemann_zeta_product(_Tp __s)
# 255 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 256 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
static const _Tp __prime[] = {((_Tp)2), ((_Tp)3), ((_Tp)5), ((_Tp)7), ((_Tp)11), ((_Tp)13), ((_Tp)17), ((_Tp)19), ((_Tp)23), ((_Tp)29), ((_Tp)31), ((_Tp)37), ((_Tp)41), ((_Tp)43), ((_Tp)47), ((_Tp)53), ((_Tp)59), ((_Tp)61), ((_Tp)67), ((_Tp)71), ((_Tp)73), ((_Tp)79), ((_Tp)83), ((_Tp)89), ((_Tp)97), ((_Tp)101), ((_Tp)103), ((_Tp)107), ((_Tp)109)};
# 262 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
static const unsigned __num_primes = (sizeof(__prime) / sizeof(_Tp));
# 264 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __zeta = ((_Tp)1);
# 265 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
for (unsigned __i = (0); __i < __num_primes; ++__i)
# 266 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 267 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
const _Tp __fact = ((_Tp)1) - std::pow(__prime[__i], -__s);
# 268 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__zeta *= __fact;
# 269 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if ((((_Tp)1) - __fact) < std::template numeric_limits< _Tp> ::epsilon()) {
# 270 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
break; }
# 271 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 273 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__zeta = (((_Tp)1) / __zeta);
# 275 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return __zeta;
# 276 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 293 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
template< class _Tp> _Tp
# 295 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__riemann_zeta(_Tp __s)
# 296 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 297 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__isnan(__s)) {
# 298 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return std::template numeric_limits< _Tp> ::quiet_NaN(); } else {
# 299 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__s == ((_Tp)1)) {
# 300 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return std::template numeric_limits< _Tp> ::infinity(); } else {
# 301 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__s < (-((_Tp)19)))
# 302 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 303 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __zeta = __riemann_zeta_product(((_Tp)1) - __s);
# 304 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__zeta *= (((std::pow(((_Tp)2) * __numeric_constants< _Tp> ::__pi(), __s) * std::sin(__numeric_constants< _Tp> ::__pi_2() * __s)) * std::exp(std::lgamma(((_Tp)1) - __s))) / __numeric_constants< _Tp> ::__pi());
# 312 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return __zeta;
# 313 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
} else {
# 314 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__s < ((_Tp)20))
# 315 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 317 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
bool __glob = true;
# 318 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__glob) {
# 319 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return __riemann_zeta_glob(__s); } else
# 321 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 322 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__s > ((_Tp)1)) {
# 323 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return __riemann_zeta_sum(__s); } else
# 325 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 326 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __zeta = ((std::pow(((_Tp)2) * __numeric_constants< _Tp> ::__pi(), __s) * std::sin(__numeric_constants< _Tp> ::__pi_2() * __s)) * std::tgamma(((_Tp)1) - __s)) * __riemann_zeta_sum(((_Tp)1) - __s);
# 335 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return __zeta;
# 336 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 337 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 338 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
} else {
# 340 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return __riemann_zeta_product(__s); } } } }
# 341 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 365 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
template< class _Tp> _Tp
# 367 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__hurwitz_zeta_glob(_Tp __a, _Tp __s)
# 368 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 369 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __zeta = ((_Tp)0);
# 371 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
const _Tp __eps = std::template numeric_limits< _Tp> ::epsilon();
# 373 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
const _Tp __max_bincoeff = (std::template numeric_limits< _Tp> ::max_exponent10 * std::log((_Tp)10)) - ((_Tp)1);
# 376 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
const unsigned __maxit = (10000);
# 377 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
for (unsigned __i = (0); __i < __maxit; ++__i)
# 378 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 379 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
bool __punt = false;
# 380 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __sgn = ((_Tp)1);
# 381 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __term = ((_Tp)0);
# 382 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
for (unsigned __j = (0); __j <= __i; ++__j)
# 383 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 385 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
_Tp __bincoeff = (std::lgamma((_Tp)((1) + __i)) - std::lgamma((_Tp)((1) + __j))) - std::lgamma((_Tp)(((1) + __i) - __j));
# 393 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__bincoeff > __max_bincoeff)
# 394 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{
# 396 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__punt = true;
# 397 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
break;
# 398 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 399 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__bincoeff = std::exp(__bincoeff);
# 400 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__term += ((__sgn * __bincoeff) * std::pow((_Tp)(__a + __j), -__s));
# 401 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__sgn *= ((_Tp)(-1));
# 402 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 403 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (__punt) {
# 404 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
break; }
# 405 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__term /= ((_Tp)(__i + (1)));
# 406 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
if (std::abs(__term / __zeta) < __eps) {
# 407 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
break; }
# 408 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__zeta += __term;
# 409 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 411 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__zeta /= (__s - ((_Tp)1));
# 413 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
return __zeta;
# 414 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 430 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
template< class _Tp> inline _Tp
# 432 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
__hurwitz_zeta(_Tp __a, _Tp __s)
# 433 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
{ return __hurwitz_zeta_glob(__a, __s); }
# 434 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 441 "/usr/include/c++/12/tr1/riemann_zeta.tcc" 3
}
# 61 "/usr/include/c++/12/bits/specfun.h" 3
namespace std __attribute((__visibility__("default"))) {
# 206 "/usr/include/c++/12/bits/specfun.h" 3
inline float assoc_laguerref(unsigned __n, unsigned __m, float __x)
# 207 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__assoc_laguerre< float> (__n, __m, __x); }
# 216 "/usr/include/c++/12/bits/specfun.h" 3
inline long double assoc_laguerrel(unsigned __n, unsigned __m, long double __x)
# 217 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__assoc_laguerre< long double> (__n, __m, __x); }
# 250 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 252 "/usr/include/c++/12/bits/specfun.h" 3
assoc_laguerre(unsigned __n, unsigned __m, _Tp __x)
# 253 "/usr/include/c++/12/bits/specfun.h" 3
{
# 254 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 255 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__assoc_laguerre< typename __gnu_cxx::__promote< _Tp> ::__type> (__n, __m, __x);
# 256 "/usr/include/c++/12/bits/specfun.h" 3
}
# 267 "/usr/include/c++/12/bits/specfun.h" 3
inline float assoc_legendref(unsigned __l, unsigned __m, float __x)
# 268 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__assoc_legendre_p< float> (__l, __m, __x); }
# 276 "/usr/include/c++/12/bits/specfun.h" 3
inline long double assoc_legendrel(unsigned __l, unsigned __m, long double __x)
# 277 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__assoc_legendre_p< long double> (__l, __m, __x); }
# 296 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 298 "/usr/include/c++/12/bits/specfun.h" 3
assoc_legendre(unsigned __l, unsigned __m, _Tp __x)
# 299 "/usr/include/c++/12/bits/specfun.h" 3
{
# 300 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 301 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__assoc_legendre_p< typename __gnu_cxx::__promote< _Tp> ::__type> (__l, __m, __x);
# 302 "/usr/include/c++/12/bits/specfun.h" 3
}
# 312 "/usr/include/c++/12/bits/specfun.h" 3
inline float betaf(float __a, float __b)
# 313 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__beta< float> (__a, __b); }
# 322 "/usr/include/c++/12/bits/specfun.h" 3
inline long double betal(long double __a, long double __b)
# 323 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__beta< long double> (__a, __b); }
# 341 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tpa, class _Tpb> inline typename __gnu_cxx::__promote_2< _Tpa, _Tpb> ::__type
# 343 "/usr/include/c++/12/bits/specfun.h" 3
beta(_Tpa __a, _Tpb __b)
# 344 "/usr/include/c++/12/bits/specfun.h" 3
{
# 345 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote_2< _Tpa, _Tpb> ::__type __type;
# 346 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__beta< typename __gnu_cxx::__promote_2< _Tpa, _Tpb> ::__type> (__a, __b);
# 347 "/usr/include/c++/12/bits/specfun.h" 3
}
# 358 "/usr/include/c++/12/bits/specfun.h" 3
inline float comp_ellint_1f(float __k)
# 359 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__comp_ellint_1< float> (__k); }
# 368 "/usr/include/c++/12/bits/specfun.h" 3
inline long double comp_ellint_1l(long double __k)
# 369 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__comp_ellint_1< long double> (__k); }
# 389 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 391 "/usr/include/c++/12/bits/specfun.h" 3
comp_ellint_1(_Tp __k)
# 392 "/usr/include/c++/12/bits/specfun.h" 3
{
# 393 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 394 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__comp_ellint_1< typename __gnu_cxx::__promote< _Tp> ::__type> (__k);
# 395 "/usr/include/c++/12/bits/specfun.h" 3
}
# 406 "/usr/include/c++/12/bits/specfun.h" 3
inline float comp_ellint_2f(float __k)
# 407 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__comp_ellint_2< float> (__k); }
# 416 "/usr/include/c++/12/bits/specfun.h" 3
inline long double comp_ellint_2l(long double __k)
# 417 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__comp_ellint_2< long double> (__k); }
# 436 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 438 "/usr/include/c++/12/bits/specfun.h" 3
comp_ellint_2(_Tp __k)
# 439 "/usr/include/c++/12/bits/specfun.h" 3
{
# 440 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 441 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__comp_ellint_2< typename __gnu_cxx::__promote< _Tp> ::__type> (__k);
# 442 "/usr/include/c++/12/bits/specfun.h" 3
}
# 453 "/usr/include/c++/12/bits/specfun.h" 3
inline float comp_ellint_3f(float __k, float __nu)
# 454 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__comp_ellint_3< float> (__k, __nu); }
# 463 "/usr/include/c++/12/bits/specfun.h" 3
inline long double comp_ellint_3l(long double __k, long double __nu)
# 464 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__comp_ellint_3< long double> (__k, __nu); }
# 487 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp, class _Tpn> inline typename __gnu_cxx::__promote_2< _Tp, _Tpn> ::__type
# 489 "/usr/include/c++/12/bits/specfun.h" 3
comp_ellint_3(_Tp __k, _Tpn __nu)
# 490 "/usr/include/c++/12/bits/specfun.h" 3
{
# 491 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Tpn> ::__type __type;
# 492 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__comp_ellint_3< typename __gnu_cxx::__promote_2< _Tp, _Tpn> ::__type> (__k, __nu);
# 493 "/usr/include/c++/12/bits/specfun.h" 3
}
# 504 "/usr/include/c++/12/bits/specfun.h" 3
inline float cyl_bessel_if(float __nu, float __x)
# 505 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__cyl_bessel_i< float> (__nu, __x); }
# 514 "/usr/include/c++/12/bits/specfun.h" 3
inline long double cyl_bessel_il(long double __nu, long double __x)
# 515 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__cyl_bessel_i< long double> (__nu, __x); }
# 533 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tpnu, class _Tp> inline typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type
# 535 "/usr/include/c++/12/bits/specfun.h" 3
cyl_bessel_i(_Tpnu __nu, _Tp __x)
# 536 "/usr/include/c++/12/bits/specfun.h" 3
{
# 537 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type __type;
# 538 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__cyl_bessel_i< typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type> (__nu, __x);
# 539 "/usr/include/c++/12/bits/specfun.h" 3
}
# 550 "/usr/include/c++/12/bits/specfun.h" 3
inline float cyl_bessel_jf(float __nu, float __x)
# 551 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__cyl_bessel_j< float> (__nu, __x); }
# 560 "/usr/include/c++/12/bits/specfun.h" 3
inline long double cyl_bessel_jl(long double __nu, long double __x)
# 561 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__cyl_bessel_j< long double> (__nu, __x); }
# 579 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tpnu, class _Tp> inline typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type
# 581 "/usr/include/c++/12/bits/specfun.h" 3
cyl_bessel_j(_Tpnu __nu, _Tp __x)
# 582 "/usr/include/c++/12/bits/specfun.h" 3
{
# 583 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type __type;
# 584 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__cyl_bessel_j< typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type> (__nu, __x);
# 585 "/usr/include/c++/12/bits/specfun.h" 3
}
# 596 "/usr/include/c++/12/bits/specfun.h" 3
inline float cyl_bessel_kf(float __nu, float __x)
# 597 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__cyl_bessel_k< float> (__nu, __x); }
# 606 "/usr/include/c++/12/bits/specfun.h" 3
inline long double cyl_bessel_kl(long double __nu, long double __x)
# 607 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__cyl_bessel_k< long double> (__nu, __x); }
# 631 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tpnu, class _Tp> inline typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type
# 633 "/usr/include/c++/12/bits/specfun.h" 3
cyl_bessel_k(_Tpnu __nu, _Tp __x)
# 634 "/usr/include/c++/12/bits/specfun.h" 3
{
# 635 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type __type;
# 636 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__cyl_bessel_k< typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type> (__nu, __x);
# 637 "/usr/include/c++/12/bits/specfun.h" 3
}
# 648 "/usr/include/c++/12/bits/specfun.h" 3
inline float cyl_neumannf(float __nu, float __x)
# 649 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__cyl_neumann_n< float> (__nu, __x); }
# 658 "/usr/include/c++/12/bits/specfun.h" 3
inline long double cyl_neumannl(long double __nu, long double __x)
# 659 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__cyl_neumann_n< long double> (__nu, __x); }
# 679 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tpnu, class _Tp> inline typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type
# 681 "/usr/include/c++/12/bits/specfun.h" 3
cyl_neumann(_Tpnu __nu, _Tp __x)
# 682 "/usr/include/c++/12/bits/specfun.h" 3
{
# 683 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type __type;
# 684 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__cyl_neumann_n< typename __gnu_cxx::__promote_2< _Tpnu, _Tp> ::__type> (__nu, __x);
# 685 "/usr/include/c++/12/bits/specfun.h" 3
}
# 696 "/usr/include/c++/12/bits/specfun.h" 3
inline float ellint_1f(float __k, float __phi)
# 697 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__ellint_1< float> (__k, __phi); }
# 706 "/usr/include/c++/12/bits/specfun.h" 3
inline long double ellint_1l(long double __k, long double __phi)
# 707 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__ellint_1< long double> (__k, __phi); }
# 727 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp, class _Tpp> inline typename __gnu_cxx::__promote_2< _Tp, _Tpp> ::__type
# 729 "/usr/include/c++/12/bits/specfun.h" 3
ellint_1(_Tp __k, _Tpp __phi)
# 730 "/usr/include/c++/12/bits/specfun.h" 3
{
# 731 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Tpp> ::__type __type;
# 732 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__ellint_1< typename __gnu_cxx::__promote_2< _Tp, _Tpp> ::__type> (__k, __phi);
# 733 "/usr/include/c++/12/bits/specfun.h" 3
}
# 744 "/usr/include/c++/12/bits/specfun.h" 3
inline float ellint_2f(float __k, float __phi)
# 745 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__ellint_2< float> (__k, __phi); }
# 754 "/usr/include/c++/12/bits/specfun.h" 3
inline long double ellint_2l(long double __k, long double __phi)
# 755 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__ellint_2< long double> (__k, __phi); }
# 775 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp, class _Tpp> inline typename __gnu_cxx::__promote_2< _Tp, _Tpp> ::__type
# 777 "/usr/include/c++/12/bits/specfun.h" 3
ellint_2(_Tp __k, _Tpp __phi)
# 778 "/usr/include/c++/12/bits/specfun.h" 3
{
# 779 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote_2< _Tp, _Tpp> ::__type __type;
# 780 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__ellint_2< typename __gnu_cxx::__promote_2< _Tp, _Tpp> ::__type> (__k, __phi);
# 781 "/usr/include/c++/12/bits/specfun.h" 3
}
# 792 "/usr/include/c++/12/bits/specfun.h" 3
inline float ellint_3f(float __k, float __nu, float __phi)
# 793 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__ellint_3< float> (__k, __nu, __phi); }
# 802 "/usr/include/c++/12/bits/specfun.h" 3
inline long double ellint_3l(long double __k, long double __nu, long double __phi)
# 803 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__ellint_3< long double> (__k, __nu, __phi); }
# 828 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp, class _Tpn, class _Tpp> inline typename __gnu_cxx::__promote_3< _Tp, _Tpn, _Tpp> ::__type
# 830 "/usr/include/c++/12/bits/specfun.h" 3
ellint_3(_Tp __k, _Tpn __nu, _Tpp __phi)
# 831 "/usr/include/c++/12/bits/specfun.h" 3
{
# 832 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote_3< _Tp, _Tpn, _Tpp> ::__type __type;
# 833 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__ellint_3< typename __gnu_cxx::__promote_3< _Tp, _Tpn, _Tpp> ::__type> (__k, __nu, __phi);
# 834 "/usr/include/c++/12/bits/specfun.h" 3
}
# 844 "/usr/include/c++/12/bits/specfun.h" 3
inline float expintf(float __x)
# 845 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__expint< float> (__x); }
# 854 "/usr/include/c++/12/bits/specfun.h" 3
inline long double expintl(long double __x)
# 855 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__expint< long double> (__x); }
# 868 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 870 "/usr/include/c++/12/bits/specfun.h" 3
expint(_Tp __x)
# 871 "/usr/include/c++/12/bits/specfun.h" 3
{
# 872 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 873 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__expint< typename __gnu_cxx::__promote< _Tp> ::__type> (__x);
# 874 "/usr/include/c++/12/bits/specfun.h" 3
}
# 885 "/usr/include/c++/12/bits/specfun.h" 3
inline float hermitef(unsigned __n, float __x)
# 886 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__poly_hermite< float> (__n, __x); }
# 895 "/usr/include/c++/12/bits/specfun.h" 3
inline long double hermitel(unsigned __n, long double __x)
# 896 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__poly_hermite< long double> (__n, __x); }
# 916 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 918 "/usr/include/c++/12/bits/specfun.h" 3
hermite(unsigned __n, _Tp __x)
# 919 "/usr/include/c++/12/bits/specfun.h" 3
{
# 920 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 921 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__poly_hermite< typename __gnu_cxx::__promote< _Tp> ::__type> (__n, __x);
# 922 "/usr/include/c++/12/bits/specfun.h" 3
}
# 933 "/usr/include/c++/12/bits/specfun.h" 3
inline float laguerref(unsigned __n, float __x)
# 934 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__laguerre< float> (__n, __x); }
# 943 "/usr/include/c++/12/bits/specfun.h" 3
inline long double laguerrel(unsigned __n, long double __x)
# 944 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__laguerre< long double> (__n, __x); }
# 960 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 962 "/usr/include/c++/12/bits/specfun.h" 3
laguerre(unsigned __n, _Tp __x)
# 963 "/usr/include/c++/12/bits/specfun.h" 3
{
# 964 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 965 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__laguerre< typename __gnu_cxx::__promote< _Tp> ::__type> (__n, __x);
# 966 "/usr/include/c++/12/bits/specfun.h" 3
}
# 977 "/usr/include/c++/12/bits/specfun.h" 3
inline float legendref(unsigned __l, float __x)
# 978 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__poly_legendre_p< float> (__l, __x); }
# 987 "/usr/include/c++/12/bits/specfun.h" 3
inline long double legendrel(unsigned __l, long double __x)
# 988 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__poly_legendre_p< long double> (__l, __x); }
# 1005 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 1007 "/usr/include/c++/12/bits/specfun.h" 3
legendre(unsigned __l, _Tp __x)
# 1008 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1009 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 1010 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__poly_legendre_p< typename __gnu_cxx::__promote< _Tp> ::__type> (__l, __x);
# 1011 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1022 "/usr/include/c++/12/bits/specfun.h" 3
inline float riemann_zetaf(float __s)
# 1023 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__riemann_zeta< float> (__s); }
# 1032 "/usr/include/c++/12/bits/specfun.h" 3
inline long double riemann_zetal(long double __s)
# 1033 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__riemann_zeta< long double> (__s); }
# 1056 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 1058 "/usr/include/c++/12/bits/specfun.h" 3
riemann_zeta(_Tp __s)
# 1059 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1060 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 1061 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__riemann_zeta< typename __gnu_cxx::__promote< _Tp> ::__type> (__s);
# 1062 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1073 "/usr/include/c++/12/bits/specfun.h" 3
inline float sph_besself(unsigned __n, float __x)
# 1074 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__sph_bessel< float> (__n, __x); }
# 1083 "/usr/include/c++/12/bits/specfun.h" 3
inline long double sph_bessell(unsigned __n, long double __x)
# 1084 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__sph_bessel< long double> (__n, __x); }
# 1100 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 1102 "/usr/include/c++/12/bits/specfun.h" 3
sph_bessel(unsigned __n, _Tp __x)
# 1103 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1104 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 1105 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__sph_bessel< typename __gnu_cxx::__promote< _Tp> ::__type> (__n, __x);
# 1106 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1117 "/usr/include/c++/12/bits/specfun.h" 3
inline float sph_legendref(unsigned __l, unsigned __m, float __theta)
# 1118 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__sph_legendre< float> (__l, __m, __theta); }
# 1128 "/usr/include/c++/12/bits/specfun.h" 3
inline long double sph_legendrel(unsigned __l, unsigned __m, long double __theta)
# 1129 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__sph_legendre< long double> (__l, __m, __theta); }
# 1147 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 1149 "/usr/include/c++/12/bits/specfun.h" 3
sph_legendre(unsigned __l, unsigned __m, _Tp __theta)
# 1150 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1151 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 1152 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__sph_legendre< typename __gnu_cxx::__promote< _Tp> ::__type> (__l, __m, __theta);
# 1153 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1164 "/usr/include/c++/12/bits/specfun.h" 3
inline float sph_neumannf(unsigned __n, float __x)
# 1165 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__sph_neumann< float> (__n, __x); }
# 1174 "/usr/include/c++/12/bits/specfun.h" 3
inline long double sph_neumannl(unsigned __n, long double __x)
# 1175 "/usr/include/c++/12/bits/specfun.h" 3
{ return __detail::__sph_neumann< long double> (__n, __x); }
# 1191 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __gnu_cxx::__promote< _Tp> ::__type
# 1193 "/usr/include/c++/12/bits/specfun.h" 3
sph_neumann(unsigned __n, _Tp __x)
# 1194 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1195 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __gnu_cxx::__promote< _Tp> ::__type __type;
# 1196 "/usr/include/c++/12/bits/specfun.h" 3
return __detail::__sph_neumann< typename __gnu_cxx::__promote< _Tp> ::__type> (__n, __x);
# 1197 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1202 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1205 "/usr/include/c++/12/bits/specfun.h" 3
namespace __gnu_cxx __attribute((__visibility__("default"))) {
# 1219 "/usr/include/c++/12/bits/specfun.h" 3
inline float airy_aif(float __x)
# 1220 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1221 "/usr/include/c++/12/bits/specfun.h" 3
float __Ai, __Bi, __Aip, __Bip;
# 1222 "/usr/include/c++/12/bits/specfun.h" 3
std::__detail::__airy< float> (__x, __Ai, __Bi, __Aip, __Bip);
# 1223 "/usr/include/c++/12/bits/specfun.h" 3
return __Ai;
# 1224 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1230 "/usr/include/c++/12/bits/specfun.h" 3
inline long double airy_ail(long double __x)
# 1231 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1232 "/usr/include/c++/12/bits/specfun.h" 3
long double __Ai, __Bi, __Aip, __Bip;
# 1233 "/usr/include/c++/12/bits/specfun.h" 3
std::__detail::__airy< long double> (__x, __Ai, __Bi, __Aip, __Bip);
# 1234 "/usr/include/c++/12/bits/specfun.h" 3
return __Ai;
# 1235 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1240 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __promote< _Tp> ::__type
# 1242 "/usr/include/c++/12/bits/specfun.h" 3
airy_ai(_Tp __x)
# 1243 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1244 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __promote< _Tp> ::__type __type;
# 1245 "/usr/include/c++/12/bits/specfun.h" 3
__type __Ai, __Bi, __Aip, __Bip;
# 1246 "/usr/include/c++/12/bits/specfun.h" 3
std::__detail::__airy< typename __promote< _Tp> ::__type> (__x, __Ai, __Bi, __Aip, __Bip);
# 1247 "/usr/include/c++/12/bits/specfun.h" 3
return __Ai;
# 1248 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1254 "/usr/include/c++/12/bits/specfun.h" 3
inline float airy_bif(float __x)
# 1255 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1256 "/usr/include/c++/12/bits/specfun.h" 3
float __Ai, __Bi, __Aip, __Bip;
# 1257 "/usr/include/c++/12/bits/specfun.h" 3
std::__detail::__airy< float> (__x, __Ai, __Bi, __Aip, __Bip);
# 1258 "/usr/include/c++/12/bits/specfun.h" 3
return __Bi;
# 1259 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1265 "/usr/include/c++/12/bits/specfun.h" 3
inline long double airy_bil(long double __x)
# 1266 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1267 "/usr/include/c++/12/bits/specfun.h" 3
long double __Ai, __Bi, __Aip, __Bip;
# 1268 "/usr/include/c++/12/bits/specfun.h" 3
std::__detail::__airy< long double> (__x, __Ai, __Bi, __Aip, __Bip);
# 1269 "/usr/include/c++/12/bits/specfun.h" 3
return __Bi;
# 1270 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1275 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tp> inline typename __promote< _Tp> ::__type
# 1277 "/usr/include/c++/12/bits/specfun.h" 3
airy_bi(_Tp __x)
# 1278 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1279 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __promote< _Tp> ::__type __type;
# 1280 "/usr/include/c++/12/bits/specfun.h" 3
__type __Ai, __Bi, __Aip, __Bip;
# 1281 "/usr/include/c++/12/bits/specfun.h" 3
std::__detail::__airy< typename __promote< _Tp> ::__type> (__x, __Ai, __Bi, __Aip, __Bip);
# 1282 "/usr/include/c++/12/bits/specfun.h" 3
return __Bi;
# 1283 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1295 "/usr/include/c++/12/bits/specfun.h" 3
inline float conf_hypergf(float __a, float __c, float __x)
# 1296 "/usr/include/c++/12/bits/specfun.h" 3
{ return std::__detail::__conf_hyperg< float> (__a, __c, __x); }
# 1306 "/usr/include/c++/12/bits/specfun.h" 3
inline long double conf_hypergl(long double __a, long double __c, long double __x)
# 1307 "/usr/include/c++/12/bits/specfun.h" 3
{ return std::__detail::__conf_hyperg< long double> (__a, __c, __x); }
# 1325 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tpa, class _Tpc, class _Tp> inline typename __promote_3< _Tpa, _Tpc, _Tp> ::__type
# 1327 "/usr/include/c++/12/bits/specfun.h" 3
conf_hyperg(_Tpa __a, _Tpc __c, _Tp __x)
# 1328 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1329 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __promote_3< _Tpa, _Tpc, _Tp> ::__type __type;
# 1330 "/usr/include/c++/12/bits/specfun.h" 3
return std::__detail::__conf_hyperg< typename __promote_3< _Tpa, _Tpc, _Tp> ::__type> (__a, __c, __x);
# 1331 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1343 "/usr/include/c++/12/bits/specfun.h" 3
inline float hypergf(float __a, float __b, float __c, float __x)
# 1344 "/usr/include/c++/12/bits/specfun.h" 3
{ return std::__detail::__hyperg< float> (__a, __b, __c, __x); }
# 1354 "/usr/include/c++/12/bits/specfun.h" 3
inline long double hypergl(long double __a, long double __b, long double __c, long double __x)
# 1355 "/usr/include/c++/12/bits/specfun.h" 3
{ return std::__detail::__hyperg< long double> (__a, __b, __c, __x); }
# 1374 "/usr/include/c++/12/bits/specfun.h" 3
template< class _Tpa, class _Tpb, class _Tpc, class _Tp> inline typename __promote_4< _Tpa, _Tpb, _Tpc, _Tp> ::__type
# 1376 "/usr/include/c++/12/bits/specfun.h" 3
hyperg(_Tpa __a, _Tpb __b, _Tpc __c, _Tp __x)
# 1377 "/usr/include/c++/12/bits/specfun.h" 3
{
# 1379 "/usr/include/c++/12/bits/specfun.h" 3
typedef typename __promote_4< _Tpa, _Tpb, _Tpc, _Tp> ::__type __type;
# 1380 "/usr/include/c++/12/bits/specfun.h" 3
return std::__detail::__hyperg< typename __promote_4< _Tpa, _Tpb, _Tpc, _Tp> ::__type> (__a, __b, __c, __x);
# 1381 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1385 "/usr/include/c++/12/bits/specfun.h" 3
}
# 1388 "/usr/include/c++/12/bits/specfun.h" 3
#pragma GCC visibility pop
# 1938 "/usr/include/c++/12/cmath" 3
}
# 38 "/usr/include/c++/12/math.h" 3
using std::abs;
# 39 "/usr/include/c++/12/math.h" 3
using std::acos;
# 40 "/usr/include/c++/12/math.h" 3
using std::asin;
# 41 "/usr/include/c++/12/math.h" 3
using std::atan;
# 42 "/usr/include/c++/12/math.h" 3
using std::atan2;
# 43 "/usr/include/c++/12/math.h" 3
using std::cos;
# 44 "/usr/include/c++/12/math.h" 3
using std::sin;
# 45 "/usr/include/c++/12/math.h" 3
using std::tan;
# 46 "/usr/include/c++/12/math.h" 3
using std::cosh;
# 47 "/usr/include/c++/12/math.h" 3
using std::sinh;
# 48 "/usr/include/c++/12/math.h" 3
using std::tanh;
# 49 "/usr/include/c++/12/math.h" 3
using std::exp;
# 50 "/usr/include/c++/12/math.h" 3
using std::frexp;
# 51 "/usr/include/c++/12/math.h" 3
using std::ldexp;
# 52 "/usr/include/c++/12/math.h" 3
using std::log;
# 53 "/usr/include/c++/12/math.h" 3
using std::log10;
# 54 "/usr/include/c++/12/math.h" 3
using std::modf;
# 55 "/usr/include/c++/12/math.h" 3
using std::pow;
# 56 "/usr/include/c++/12/math.h" 3
using std::sqrt;
# 57 "/usr/include/c++/12/math.h" 3
using std::ceil;
# 58 "/usr/include/c++/12/math.h" 3
using std::fabs;
# 59 "/usr/include/c++/12/math.h" 3
using std::floor;
# 60 "/usr/include/c++/12/math.h" 3
using std::fmod;
# 63 "/usr/include/c++/12/math.h" 3
using std::fpclassify;
# 64 "/usr/include/c++/12/math.h" 3
using std::isfinite;
# 65 "/usr/include/c++/12/math.h" 3
using std::isinf;
# 66 "/usr/include/c++/12/math.h" 3
using std::isnan;
# 67 "/usr/include/c++/12/math.h" 3
using std::isnormal;
# 68 "/usr/include/c++/12/math.h" 3
using std::signbit;
# 69 "/usr/include/c++/12/math.h" 3
using std::isgreater;
# 70 "/usr/include/c++/12/math.h" 3
using std::isgreaterequal;
# 71 "/usr/include/c++/12/math.h" 3
using std::isless;
# 72 "/usr/include/c++/12/math.h" 3
using std::islessequal;
# 73 "/usr/include/c++/12/math.h" 3
using std::islessgreater;
# 74 "/usr/include/c++/12/math.h" 3
using std::isunordered;
# 78 "/usr/include/c++/12/math.h" 3
using std::acosh;
# 79 "/usr/include/c++/12/math.h" 3
using std::asinh;
# 80 "/usr/include/c++/12/math.h" 3
using std::atanh;
# 81 "/usr/include/c++/12/math.h" 3
using std::cbrt;
# 82 "/usr/include/c++/12/math.h" 3
using std::copysign;
# 83 "/usr/include/c++/12/math.h" 3
using std::erf;
# 84 "/usr/include/c++/12/math.h" 3
using std::erfc;
# 85 "/usr/include/c++/12/math.h" 3
using std::exp2;
# 86 "/usr/include/c++/12/math.h" 3
using std::expm1;
# 87 "/usr/include/c++/12/math.h" 3
using std::fdim;
# 88 "/usr/include/c++/12/math.h" 3
using std::fma;
# 89 "/usr/include/c++/12/math.h" 3
using std::fmax;
# 90 "/usr/include/c++/12/math.h" 3
using std::fmin;
# 91 "/usr/include/c++/12/math.h" 3
using std::hypot;
# 92 "/usr/include/c++/12/math.h" 3
using std::ilogb;
# 93 "/usr/include/c++/12/math.h" 3
using std::lgamma;
# 94 "/usr/include/c++/12/math.h" 3
using std::llrint;
# 95 "/usr/include/c++/12/math.h" 3
using std::llround;
# 96 "/usr/include/c++/12/math.h" 3
using std::log1p;
# 97 "/usr/include/c++/12/math.h" 3
using std::log2;
# 98 "/usr/include/c++/12/math.h" 3
using std::logb;
# 99 "/usr/include/c++/12/math.h" 3
using std::lrint;
# 100 "/usr/include/c++/12/math.h" 3
using std::lround;
# 101 "/usr/include/c++/12/math.h" 3
using std::nearbyint;
# 102 "/usr/include/c++/12/math.h" 3
using std::nextafter;
# 103 "/usr/include/c++/12/math.h" 3
using std::nexttoward;
# 104 "/usr/include/c++/12/math.h" 3
using std::remainder;
# 105 "/usr/include/c++/12/math.h" 3
using std::remquo;
# 106 "/usr/include/c++/12/math.h" 3
using std::rint;
# 107 "/usr/include/c++/12/math.h" 3
using std::round;
# 108 "/usr/include/c++/12/math.h" 3
using std::scalbln;
# 109 "/usr/include/c++/12/math.h" 3
using std::scalbn;
# 110 "/usr/include/c++/12/math.h" 3
using std::tgamma;
# 111 "/usr/include/c++/12/math.h" 3
using std::trunc;
# 10623 "/usr/include/crt/math_functions.h" 3
namespace std {
# 10624 "/usr/include/crt/math_functions.h" 3
constexpr bool signbit(float x);
# 10625 "/usr/include/crt/math_functions.h" 3
constexpr bool signbit(double x);
# 10626 "/usr/include/crt/math_functions.h" 3
constexpr bool signbit(long double x);
# 10627 "/usr/include/crt/math_functions.h" 3
constexpr bool isfinite(float x);
# 10628 "/usr/include/crt/math_functions.h" 3
constexpr bool isfinite(double x);
# 10629 "/usr/include/crt/math_functions.h" 3
constexpr bool isfinite(long double x);
# 10630 "/usr/include/crt/math_functions.h" 3
constexpr bool isnan(float x);
# 10635 "/usr/include/crt/math_functions.h" 3
constexpr bool isnan(double x);
# 10637 "/usr/include/crt/math_functions.h" 3
constexpr bool isnan(long double x);
# 10638 "/usr/include/crt/math_functions.h" 3
constexpr bool isinf(float x);
# 10643 "/usr/include/crt/math_functions.h" 3
constexpr bool isinf(double x);
# 10645 "/usr/include/crt/math_functions.h" 3
constexpr bool isinf(long double x);
# 10646 "/usr/include/crt/math_functions.h" 3
}
# 10800 "/usr/include/crt/math_functions.h" 3
namespace std {
# 10802 "/usr/include/crt/math_functions.h" 3
template< class T> extern T __pow_helper(T, int);
# 10803 "/usr/include/crt/math_functions.h" 3
template< class T> extern T __cmath_power(T, unsigned);
# 10804 "/usr/include/crt/math_functions.h" 3
}
# 10806 "/usr/include/crt/math_functions.h" 3
using std::abs;
# 10807 "/usr/include/crt/math_functions.h" 3
using std::fabs;
# 10808 "/usr/include/crt/math_functions.h" 3
using std::ceil;
# 10809 "/usr/include/crt/math_functions.h" 3
using std::floor;
# 10810 "/usr/include/crt/math_functions.h" 3
using std::sqrt;
# 10812 "/usr/include/crt/math_functions.h" 3
using std::pow;
# 10814 "/usr/include/crt/math_functions.h" 3
using std::log;
# 10815 "/usr/include/crt/math_functions.h" 3
using std::log10;
# 10816 "/usr/include/crt/math_functions.h" 3
using std::fmod;
# 10817 "/usr/include/crt/math_functions.h" 3
using std::modf;
# 10818 "/usr/include/crt/math_functions.h" 3
using std::exp;
# 10819 "/usr/include/crt/math_functions.h" 3
using std::frexp;
# 10820 "/usr/include/crt/math_functions.h" 3
using std::ldexp;
# 10821 "/usr/include/crt/math_functions.h" 3
using std::asin;
# 10822 "/usr/include/crt/math_functions.h" 3
using std::sin;
# 10823 "/usr/include/crt/math_functions.h" 3
using std::sinh;
# 10824 "/usr/include/crt/math_functions.h" 3
using std::acos;
# 10825 "/usr/include/crt/math_functions.h" 3
using std::cos;
# 10826 "/usr/include/crt/math_functions.h" 3
using std::cosh;
# 10827 "/usr/include/crt/math_functions.h" 3
using std::atan;
# 10828 "/usr/include/crt/math_functions.h" 3
using std::atan2;
# 10829 "/usr/include/crt/math_functions.h" 3
using std::tan;
# 10830 "/usr/include/crt/math_functions.h" 3
using std::tanh;
# 11201 "/usr/include/crt/math_functions.h" 3
namespace std {
# 11210 "/usr/include/crt/math_functions.h" 3
extern inline long long abs(long long);
# 11220 "/usr/include/crt/math_functions.h" 3
extern inline long abs(long);
# 11221 "/usr/include/crt/math_functions.h" 3
extern constexpr float abs(float);
# 11222 "/usr/include/crt/math_functions.h" 3
extern constexpr double abs(double);
# 11223 "/usr/include/crt/math_functions.h" 3
extern constexpr float fabs(float);
# 11224 "/usr/include/crt/math_functions.h" 3
extern constexpr float ceil(float);
# 11225 "/usr/include/crt/math_functions.h" 3
extern constexpr float floor(float);
# 11226 "/usr/include/crt/math_functions.h" 3
extern constexpr float sqrt(float);
# 11227 "/usr/include/crt/math_functions.h" 3
extern constexpr float pow(float, float);
# 11232 "/usr/include/crt/math_functions.h" 3
template< class _Tp, class _Up> extern constexpr typename __gnu_cxx::__promote_2< _Tp, _Up> ::__type pow(_Tp, _Up);
# 11242 "/usr/include/crt/math_functions.h" 3
extern constexpr float log(float);
# 11243 "/usr/include/crt/math_functions.h" 3
extern constexpr float log10(float);
# 11244 "/usr/include/crt/math_functions.h" 3
extern constexpr float fmod(float, float);
# 11245 "/usr/include/crt/math_functions.h" 3
extern inline float modf(float, float *);
# 11246 "/usr/include/crt/math_functions.h" 3
extern constexpr float exp(float);
# 11247 "/usr/include/crt/math_functions.h" 3
extern inline float frexp(float, int *);
# 11248 "/usr/include/crt/math_functions.h" 3
extern constexpr float ldexp(float, int);
# 11249 "/usr/include/crt/math_functions.h" 3
extern constexpr float asin(float);
# 11250 "/usr/include/crt/math_functions.h" 3
extern constexpr float sin(float);
# 11251 "/usr/include/crt/math_functions.h" 3
extern constexpr float sinh(float);
# 11252 "/usr/include/crt/math_functions.h" 3
extern constexpr float acos(float);
# 11253 "/usr/include/crt/math_functions.h" 3
extern constexpr float cos(float);
# 11254 "/usr/include/crt/math_functions.h" 3
extern constexpr float cosh(float);
# 11255 "/usr/include/crt/math_functions.h" 3
extern constexpr float atan(float);
# 11256 "/usr/include/crt/math_functions.h" 3
extern constexpr float atan2(float, float);
# 11257 "/usr/include/crt/math_functions.h" 3
extern constexpr float tan(float);
# 11258 "/usr/include/crt/math_functions.h" 3
extern constexpr float tanh(float);
# 11337 "/usr/include/crt/math_functions.h" 3
}
# 11443 "/usr/include/crt/math_functions.h" 3
namespace std {
# 11444 "/usr/include/crt/math_functions.h" 3
constexpr float logb(float a);
# 11445 "/usr/include/crt/math_functions.h" 3
constexpr int ilogb(float a);
# 11446 "/usr/include/crt/math_functions.h" 3
constexpr float scalbn(float a, int b);
# 11447 "/usr/include/crt/math_functions.h" 3
constexpr float scalbln(float a, long b);
# 11448 "/usr/include/crt/math_functions.h" 3
constexpr float exp2(float a);
# 11449 "/usr/include/crt/math_functions.h" 3
constexpr float expm1(float a);
# 11450 "/usr/include/crt/math_functions.h" 3
constexpr float log2(float a);
# 11451 "/usr/include/crt/math_functions.h" 3
constexpr float log1p(float a);
# 11452 "/usr/include/crt/math_functions.h" 3
constexpr float acosh(float a);
# 11453 "/usr/include/crt/math_functions.h" 3
constexpr float asinh(float a);
# 11454 "/usr/include/crt/math_functions.h" 3
constexpr float atanh(float a);
# 11455 "/usr/include/crt/math_functions.h" 3
constexpr float hypot(float a, float b);
# 11456 "/usr/include/crt/math_functions.h" 3
constexpr float cbrt(float a);
# 11457 "/usr/include/crt/math_functions.h" 3
constexpr float erf(float a);
# 11458 "/usr/include/crt/math_functions.h" 3
constexpr float erfc(float a);
# 11459 "/usr/include/crt/math_functions.h" 3
constexpr float lgamma(float a);
# 11460 "/usr/include/crt/math_functions.h" 3
constexpr float tgamma(float a);
# 11461 "/usr/include/crt/math_functions.h" 3
constexpr float copysign(float a, float b);
# 11462 "/usr/include/crt/math_functions.h" 3
constexpr float nextafter(float a, float b);
# 11463 "/usr/include/crt/math_functions.h" 3
constexpr float remainder(float a, float b);
# 11464 "/usr/include/crt/math_functions.h" 3
inline float remquo(float a, float b, int * quo);
# 11465 "/usr/include/crt/math_functions.h" 3
constexpr float round(float a);
# 11466 "/usr/include/crt/math_functions.h" 3
constexpr long lround(float a);
# 11467 "/usr/include/crt/math_functions.h" 3
constexpr long long llround(float a);
# 11468 "/usr/include/crt/math_functions.h" 3
constexpr float trunc(float a);
# 11469 "/usr/include/crt/math_functions.h" 3
constexpr float rint(float a);
# 11470 "/usr/include/crt/math_functions.h" 3
constexpr long lrint(float a);
# 11471 "/usr/include/crt/math_functions.h" 3
constexpr long long llrint(float a);
# 11472 "/usr/include/crt/math_functions.h" 3
constexpr float nearbyint(float a);
# 11473 "/usr/include/crt/math_functions.h" 3
constexpr float fdim(float a, float b);
# 11474 "/usr/include/crt/math_functions.h" 3
constexpr float fma(float a, float b, float c);
# 11475 "/usr/include/crt/math_functions.h" 3
constexpr float fmax(float a, float b);
# 11476 "/usr/include/crt/math_functions.h" 3
constexpr float fmin(float a, float b);
# 11477 "/usr/include/crt/math_functions.h" 3
}
# 11582 "/usr/include/crt/math_functions.h" 3
static inline float exp10(const float a);
# 11584 "/usr/include/crt/math_functions.h" 3
static inline float rsqrt(const float a);
# 11586 "/usr/include/crt/math_functions.h" 3
static inline float rcbrt(const float a);
# 11588 "/usr/include/crt/math_functions.h" 3
static inline float sinpi(const float a);
# 11590 "/usr/include/crt/math_functions.h" 3
static inline float cospi(const float a);
# 11592 "/usr/include/crt/math_functions.h" 3
static inline void sincospi(const float a, float *const sptr, float *const cptr);
# 11594 "/usr/include/crt/math_functions.h" 3
static inline void sincos(const float a, float *const sptr, float *const cptr);
# 11596 "/usr/include/crt/math_functions.h" 3
static inline float j0(const float a);
# 11598 "/usr/include/crt/math_functions.h" 3
static inline float j1(const float a);
# 11600 "/usr/include/crt/math_functions.h" 3
static inline float jn(const int n, const float a);
# 11602 "/usr/include/crt/math_functions.h" 3
static inline float y0(const float a);
# 11604 "/usr/include/crt/math_functions.h" 3
static inline float y1(const float a);
# 11606 "/usr/include/crt/math_functions.h" 3
static inline float yn(const int n, const float a);
# 11608 "/usr/include/crt/math_functions.h" 3
__attribute__((unused)) static inline float cyl_bessel_i0(const float a);
# 11610 "/usr/include/crt/math_functions.h" 3
__attribute__((unused)) static inline float cyl_bessel_i1(const float a);
# 11612 "/usr/include/crt/math_functions.h" 3
static inline float erfinv(const float a);
# 11614 "/usr/include/crt/math_functions.h" 3
static inline float erfcinv(const float a);
# 11616 "/usr/include/crt/math_functions.h" 3
static inline float normcdfinv(const float a);
# 11618 "/usr/include/crt/math_functions.h" 3
static inline float normcdf(const float a);
# 11620 "/usr/include/crt/math_functions.h" 3
static inline float erfcx(const float a);
# 11622 "/usr/include/crt/math_functions.h" 3
static inline double copysign(const double a, const float b);
# 11624 "/usr/include/crt/math_functions.h" 3
static inline double copysign(const float a, const double b);
# 11632 "/usr/include/crt/math_functions.h" 3
static inline unsigned min(const unsigned a, const unsigned b);
# 11640 "/usr/include/crt/math_functions.h" 3
static inline unsigned min(const int a, const unsigned b);
# 11648 "/usr/include/crt/math_functions.h" 3
static inline unsigned min(const unsigned a, const int b);
# 11656 "/usr/include/crt/math_functions.h" 3
static inline long min(const long a, const long b);
# 11664 "/usr/include/crt/math_functions.h" 3
static inline unsigned long min(const unsigned long a, const unsigned long b);
# 11672 "/usr/include/crt/math_functions.h" 3
static inline unsigned long min(const long a, const unsigned long b);
# 11680 "/usr/include/crt/math_functions.h" 3
static inline unsigned long min(const unsigned long a, const long b);
# 11688 "/usr/include/crt/math_functions.h" 3
static inline long long min(const long long a, const long long b);
# 11696 "/usr/include/crt/math_functions.h" 3
static inline unsigned long long min(const unsigned long long a, const unsigned long long b);
# 11704 "/usr/include/crt/math_functions.h" 3
static inline unsigned long long min(const long long a, const unsigned long long b);
# 11712 "/usr/include/crt/math_functions.h" 3
static inline unsigned long long min(const unsigned long long a, const long long b);
# 11723 "/usr/include/crt/math_functions.h" 3
static inline float min(const float a, const float b);
# 11734 "/usr/include/crt/math_functions.h" 3
static inline double min(const double a, const double b);
# 11744 "/usr/include/crt/math_functions.h" 3
static inline double min(const float a, const double b);
# 11754 "/usr/include/crt/math_functions.h" 3
static inline double min(const double a, const float b);
# 11762 "/usr/include/crt/math_functions.h" 3
static inline unsigned max(const unsigned a, const unsigned b);
# 11770 "/usr/include/crt/math_functions.h" 3
static inline unsigned max(const int a, const unsigned b);
# 11778 "/usr/include/crt/math_functions.h" 3
static inline unsigned max(const unsigned a, const int b);
# 11786 "/usr/include/crt/math_functions.h" 3
static inline long max(const long a, const long b);
# 11794 "/usr/include/crt/math_functions.h" 3
static inline unsigned long max(const unsigned long a, const unsigned long b);
# 11802 "/usr/include/crt/math_functions.h" 3
static inline unsigned long max(const long a, const unsigned long b);
# 11810 "/usr/include/crt/math_functions.h" 3
static inline unsigned long max(const unsigned long a, const long b);
# 11818 "/usr/include/crt/math_functions.h" 3
static inline long long max(const long long a, const long long b);
# 11826 "/usr/include/crt/math_functions.h" 3
static inline unsigned long long max(const unsigned long long a, const unsigned long long b);
# 11834 "/usr/include/crt/math_functions.h" 3
static inline unsigned long long max(const long long a, const unsigned long long b);
# 11842 "/usr/include/crt/math_functions.h" 3
static inline unsigned long long max(const unsigned long long a, const long long b);
# 11853 "/usr/include/crt/math_functions.h" 3
static inline float max(const float a, const float b);
# 11864 "/usr/include/crt/math_functions.h" 3
static inline double max(const double a, const double b);
# 11874 "/usr/include/crt/math_functions.h" 3
static inline double max(const float a, const double b);
# 11884 "/usr/include/crt/math_functions.h" 3
static inline double max(const double a, const float b);
# 11895 "/usr/include/crt/math_functions.h" 3
extern "C" {
# 11896 "/usr/include/crt/math_functions.h" 3
__attribute__((unused)) inline void *__nv_aligned_device_malloc(size_t size, size_t align)
# 11897 "/usr/include/crt/math_functions.h" 3
{int volatile ___ = 1;(void)size;(void)align;
# 11900 "/usr/include/crt/math_functions.h" 3
::exit(___);}
# 11901 "/usr/include/crt/math_functions.h" 3
}
# 758 "/usr/include/crt/math_functions.hpp" 3
static inline float exp10(const float a)
# 759 "/usr/include/crt/math_functions.hpp" 3
{
# 760 "/usr/include/crt/math_functions.hpp" 3
return exp10f(a);
# 761 "/usr/include/crt/math_functions.hpp" 3
}
# 763 "/usr/include/crt/math_functions.hpp" 3
static inline float rsqrt(const float a)
# 764 "/usr/include/crt/math_functions.hpp" 3
{
# 765 "/usr/include/crt/math_functions.hpp" 3
return rsqrtf(a);
# 766 "/usr/include/crt/math_functions.hpp" 3
}
# 768 "/usr/include/crt/math_functions.hpp" 3
static inline float rcbrt(const float a)
# 769 "/usr/include/crt/math_functions.hpp" 3
{
# 770 "/usr/include/crt/math_functions.hpp" 3
return rcbrtf(a);
# 771 "/usr/include/crt/math_functions.hpp" 3
}
# 773 "/usr/include/crt/math_functions.hpp" 3
static inline float sinpi(const float a)
# 774 "/usr/include/crt/math_functions.hpp" 3
{
# 775 "/usr/include/crt/math_functions.hpp" 3
return sinpif(a);
# 776 "/usr/include/crt/math_functions.hpp" 3
}
# 778 "/usr/include/crt/math_functions.hpp" 3
static inline float cospi(const float a)
# 779 "/usr/include/crt/math_functions.hpp" 3
{
# 780 "/usr/include/crt/math_functions.hpp" 3
return cospif(a);
# 781 "/usr/include/crt/math_functions.hpp" 3
}
# 783 "/usr/include/crt/math_functions.hpp" 3
static inline void sincospi(const float a, float *const sptr, float *const cptr)
# 784 "/usr/include/crt/math_functions.hpp" 3
{
# 785 "/usr/include/crt/math_functions.hpp" 3
sincospif(a, sptr, cptr);
# 786 "/usr/include/crt/math_functions.hpp" 3
}
# 788 "/usr/include/crt/math_functions.hpp" 3
static inline void sincos(const float a, float *const sptr, float *const cptr)
# 789 "/usr/include/crt/math_functions.hpp" 3
{
# 790 "/usr/include/crt/math_functions.hpp" 3
sincosf(a, sptr, cptr);
# 791 "/usr/include/crt/math_functions.hpp" 3
}
# 793 "/usr/include/crt/math_functions.hpp" 3
static inline float j0(const float a)
# 794 "/usr/include/crt/math_functions.hpp" 3
{
# 795 "/usr/include/crt/math_functions.hpp" 3
return j0f(a);
# 796 "/usr/include/crt/math_functions.hpp" 3
}
# 798 "/usr/include/crt/math_functions.hpp" 3
static inline float j1(const float a)
# 799 "/usr/include/crt/math_functions.hpp" 3
{
# 800 "/usr/include/crt/math_functions.hpp" 3
return j1f(a);
# 801 "/usr/include/crt/math_functions.hpp" 3
}
# 803 "/usr/include/crt/math_functions.hpp" 3
static inline float jn(const int n, const float a)
# 804 "/usr/include/crt/math_functions.hpp" 3
{
# 805 "/usr/include/crt/math_functions.hpp" 3
return jnf(n, a);
# 806 "/usr/include/crt/math_functions.hpp" 3
}
# 808 "/usr/include/crt/math_functions.hpp" 3
static inline float y0(const float a)
# 809 "/usr/include/crt/math_functions.hpp" 3
{
# 810 "/usr/include/crt/math_functions.hpp" 3
return y0f(a);
# 811 "/usr/include/crt/math_functions.hpp" 3
}
# 813 "/usr/include/crt/math_functions.hpp" 3
static inline float y1(const float a)
# 814 "/usr/include/crt/math_functions.hpp" 3
{
# 815 "/usr/include/crt/math_functions.hpp" 3
return y1f(a);
# 816 "/usr/include/crt/math_functions.hpp" 3
}
# 818 "/usr/include/crt/math_functions.hpp" 3
static inline float yn(const int n, const float a)
# 819 "/usr/include/crt/math_functions.hpp" 3
{
# 820 "/usr/include/crt/math_functions.hpp" 3
return ynf(n, a);
# 821 "/usr/include/crt/math_functions.hpp" 3
}
# 823 "/usr/include/crt/math_functions.hpp" 3
__attribute__((unused)) static inline float cyl_bessel_i0(const float a)
# 824 "/usr/include/crt/math_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 826 "/usr/include/crt/math_functions.hpp" 3
::exit(___);}
# 828 "/usr/include/crt/math_functions.hpp" 3
__attribute__((unused)) static inline float cyl_bessel_i1(const float a)
# 829 "/usr/include/crt/math_functions.hpp" 3
{int volatile ___ = 1;(void)a;
# 831 "/usr/include/crt/math_functions.hpp" 3
::exit(___);}
# 833 "/usr/include/crt/math_functions.hpp" 3
static inline float erfinv(const float a)
# 834 "/usr/include/crt/math_functions.hpp" 3
{
# 835 "/usr/include/crt/math_functions.hpp" 3
return erfinvf(a);
# 836 "/usr/include/crt/math_functions.hpp" 3
}
# 838 "/usr/include/crt/math_functions.hpp" 3
static inline float erfcinv(const float a)
# 839 "/usr/include/crt/math_functions.hpp" 3
{
# 840 "/usr/include/crt/math_functions.hpp" 3
return erfcinvf(a);
# 841 "/usr/include/crt/math_functions.hpp" 3
}
# 843 "/usr/include/crt/math_functions.hpp" 3
static inline float normcdfinv(const float a)
# 844 "/usr/include/crt/math_functions.hpp" 3
{
# 845 "/usr/include/crt/math_functions.hpp" 3
return normcdfinvf(a);
# 846 "/usr/include/crt/math_functions.hpp" 3
}
# 848 "/usr/include/crt/math_functions.hpp" 3
static inline float normcdf(const float a)
# 849 "/usr/include/crt/math_functions.hpp" 3
{
# 850 "/usr/include/crt/math_functions.hpp" 3
return normcdff(a);
# 851 "/usr/include/crt/math_functions.hpp" 3
}
# 853 "/usr/include/crt/math_functions.hpp" 3
static inline float erfcx(const float a)
# 854 "/usr/include/crt/math_functions.hpp" 3
{
# 855 "/usr/include/crt/math_functions.hpp" 3
return erfcxf(a);
# 856 "/usr/include/crt/math_functions.hpp" 3
}
# 858 "/usr/include/crt/math_functions.hpp" 3
static inline double copysign(const double a, const float b)
# 859 "/usr/include/crt/math_functions.hpp" 3
{
# 860 "/usr/include/crt/math_functions.hpp" 3
return copysign(a, static_cast< double>(b));
# 861 "/usr/include/crt/math_functions.hpp" 3
}
# 863 "/usr/include/crt/math_functions.hpp" 3
static inline double copysign(const float a, const double b)
# 864 "/usr/include/crt/math_functions.hpp" 3
{
# 865 "/usr/include/crt/math_functions.hpp" 3
return copysign(static_cast< double>(a), b);
# 866 "/usr/include/crt/math_functions.hpp" 3
}
# 868 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned min(const unsigned a, const unsigned b)
# 869 "/usr/include/crt/math_functions.hpp" 3
{
# 870 "/usr/include/crt/math_functions.hpp" 3
return umin(a, b);
# 871 "/usr/include/crt/math_functions.hpp" 3
}
# 873 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned min(const int a, const unsigned b)
# 874 "/usr/include/crt/math_functions.hpp" 3
{
# 875 "/usr/include/crt/math_functions.hpp" 3
return umin(static_cast< unsigned>(a), b);
# 876 "/usr/include/crt/math_functions.hpp" 3
}
# 878 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned min(const unsigned a, const int b)
# 879 "/usr/include/crt/math_functions.hpp" 3
{
# 880 "/usr/include/crt/math_functions.hpp" 3
return umin(a, static_cast< unsigned>(b));
# 881 "/usr/include/crt/math_functions.hpp" 3
}
# 883 "/usr/include/crt/math_functions.hpp" 3
static inline long min(const long a, const long b)
# 884 "/usr/include/crt/math_functions.hpp" 3
{
# 885 "/usr/include/crt/math_functions.hpp" 3
long retval;
# 891 "/usr/include/crt/math_functions.hpp" 3
if (sizeof(long) == sizeof(int)) {
# 895 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< long>(min(static_cast< int>(a), static_cast< int>(b))));
# 896 "/usr/include/crt/math_functions.hpp" 3
} else {
# 897 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< long>(llmin(static_cast< long long>(a), static_cast< long long>(b))));
# 898 "/usr/include/crt/math_functions.hpp" 3
}
# 899 "/usr/include/crt/math_functions.hpp" 3
return retval;
# 900 "/usr/include/crt/math_functions.hpp" 3
}
# 902 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long min(const unsigned long a, const unsigned long b)
# 903 "/usr/include/crt/math_functions.hpp" 3
{
# 904 "/usr/include/crt/math_functions.hpp" 3
unsigned long retval;
# 908 "/usr/include/crt/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 912 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(umin(static_cast< unsigned>(a), static_cast< unsigned>(b))));
# 913 "/usr/include/crt/math_functions.hpp" 3
} else {
# 914 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(ullmin(static_cast< unsigned long long>(a), static_cast< unsigned long long>(b))));
# 915 "/usr/include/crt/math_functions.hpp" 3
}
# 916 "/usr/include/crt/math_functions.hpp" 3
return retval;
# 917 "/usr/include/crt/math_functions.hpp" 3
}
# 919 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long min(const long a, const unsigned long b)
# 920 "/usr/include/crt/math_functions.hpp" 3
{
# 921 "/usr/include/crt/math_functions.hpp" 3
unsigned long retval;
# 925 "/usr/include/crt/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 929 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(umin(static_cast< unsigned>(a), static_cast< unsigned>(b))));
# 930 "/usr/include/crt/math_functions.hpp" 3
} else {
# 931 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(ullmin(static_cast< unsigned long long>(a), static_cast< unsigned long long>(b))));
# 932 "/usr/include/crt/math_functions.hpp" 3
}
# 933 "/usr/include/crt/math_functions.hpp" 3
return retval;
# 934 "/usr/include/crt/math_functions.hpp" 3
}
# 936 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long min(const unsigned long a, const long b)
# 937 "/usr/include/crt/math_functions.hpp" 3
{
# 938 "/usr/include/crt/math_functions.hpp" 3
unsigned long retval;
# 942 "/usr/include/crt/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 946 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(umin(static_cast< unsigned>(a), static_cast< unsigned>(b))));
# 947 "/usr/include/crt/math_functions.hpp" 3
} else {
# 948 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(ullmin(static_cast< unsigned long long>(a), static_cast< unsigned long long>(b))));
# 949 "/usr/include/crt/math_functions.hpp" 3
}
# 950 "/usr/include/crt/math_functions.hpp" 3
return retval;
# 951 "/usr/include/crt/math_functions.hpp" 3
}
# 953 "/usr/include/crt/math_functions.hpp" 3
static inline long long min(const long long a, const long long b)
# 954 "/usr/include/crt/math_functions.hpp" 3
{
# 955 "/usr/include/crt/math_functions.hpp" 3
return llmin(a, b);
# 956 "/usr/include/crt/math_functions.hpp" 3
}
# 958 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long long min(const unsigned long long a, const unsigned long long b)
# 959 "/usr/include/crt/math_functions.hpp" 3
{
# 960 "/usr/include/crt/math_functions.hpp" 3
return ullmin(a, b);
# 961 "/usr/include/crt/math_functions.hpp" 3
}
# 963 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long long min(const long long a, const unsigned long long b)
# 964 "/usr/include/crt/math_functions.hpp" 3
{
# 965 "/usr/include/crt/math_functions.hpp" 3
return ullmin(static_cast< unsigned long long>(a), b);
# 966 "/usr/include/crt/math_functions.hpp" 3
}
# 968 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long long min(const unsigned long long a, const long long b)
# 969 "/usr/include/crt/math_functions.hpp" 3
{
# 970 "/usr/include/crt/math_functions.hpp" 3
return ullmin(a, static_cast< unsigned long long>(b));
# 971 "/usr/include/crt/math_functions.hpp" 3
}
# 973 "/usr/include/crt/math_functions.hpp" 3
static inline float min(const float a, const float b)
# 974 "/usr/include/crt/math_functions.hpp" 3
{
# 975 "/usr/include/crt/math_functions.hpp" 3
return fminf(a, b);
# 976 "/usr/include/crt/math_functions.hpp" 3
}
# 978 "/usr/include/crt/math_functions.hpp" 3
static inline double min(const double a, const double b)
# 979 "/usr/include/crt/math_functions.hpp" 3
{
# 980 "/usr/include/crt/math_functions.hpp" 3
return fmin(a, b);
# 981 "/usr/include/crt/math_functions.hpp" 3
}
# 983 "/usr/include/crt/math_functions.hpp" 3
static inline double min(const float a, const double b)
# 984 "/usr/include/crt/math_functions.hpp" 3
{
# 985 "/usr/include/crt/math_functions.hpp" 3
return fmin(static_cast< double>(a), b);
# 986 "/usr/include/crt/math_functions.hpp" 3
}
# 988 "/usr/include/crt/math_functions.hpp" 3
static inline double min(const double a, const float b)
# 989 "/usr/include/crt/math_functions.hpp" 3
{
# 990 "/usr/include/crt/math_functions.hpp" 3
return fmin(a, static_cast< double>(b));
# 991 "/usr/include/crt/math_functions.hpp" 3
}
# 993 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned max(const unsigned a, const unsigned b)
# 994 "/usr/include/crt/math_functions.hpp" 3
{
# 995 "/usr/include/crt/math_functions.hpp" 3
return umax(a, b);
# 996 "/usr/include/crt/math_functions.hpp" 3
}
# 998 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned max(const int a, const unsigned b)
# 999 "/usr/include/crt/math_functions.hpp" 3
{
# 1000 "/usr/include/crt/math_functions.hpp" 3
return umax(static_cast< unsigned>(a), b);
# 1001 "/usr/include/crt/math_functions.hpp" 3
}
# 1003 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned max(const unsigned a, const int b)
# 1004 "/usr/include/crt/math_functions.hpp" 3
{
# 1005 "/usr/include/crt/math_functions.hpp" 3
return umax(a, static_cast< unsigned>(b));
# 1006 "/usr/include/crt/math_functions.hpp" 3
}
# 1008 "/usr/include/crt/math_functions.hpp" 3
static inline long max(const long a, const long b)
# 1009 "/usr/include/crt/math_functions.hpp" 3
{
# 1010 "/usr/include/crt/math_functions.hpp" 3
long retval;
# 1015 "/usr/include/crt/math_functions.hpp" 3
if (sizeof(long) == sizeof(int)) {
# 1019 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< long>(max(static_cast< int>(a), static_cast< int>(b))));
# 1020 "/usr/include/crt/math_functions.hpp" 3
} else {
# 1021 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< long>(llmax(static_cast< long long>(a), static_cast< long long>(b))));
# 1022 "/usr/include/crt/math_functions.hpp" 3
}
# 1023 "/usr/include/crt/math_functions.hpp" 3
return retval;
# 1024 "/usr/include/crt/math_functions.hpp" 3
}
# 1026 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long max(const unsigned long a, const unsigned long b)
# 1027 "/usr/include/crt/math_functions.hpp" 3
{
# 1028 "/usr/include/crt/math_functions.hpp" 3
unsigned long retval;
# 1032 "/usr/include/crt/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 1036 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(umax(static_cast< unsigned>(a), static_cast< unsigned>(b))));
# 1037 "/usr/include/crt/math_functions.hpp" 3
} else {
# 1038 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(ullmax(static_cast< unsigned long long>(a), static_cast< unsigned long long>(b))));
# 1039 "/usr/include/crt/math_functions.hpp" 3
}
# 1040 "/usr/include/crt/math_functions.hpp" 3
return retval;
# 1041 "/usr/include/crt/math_functions.hpp" 3
}
# 1043 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long max(const long a, const unsigned long b)
# 1044 "/usr/include/crt/math_functions.hpp" 3
{
# 1045 "/usr/include/crt/math_functions.hpp" 3
unsigned long retval;
# 1049 "/usr/include/crt/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 1053 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(umax(static_cast< unsigned>(a), static_cast< unsigned>(b))));
# 1054 "/usr/include/crt/math_functions.hpp" 3
} else {
# 1055 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(ullmax(static_cast< unsigned long long>(a), static_cast< unsigned long long>(b))));
# 1056 "/usr/include/crt/math_functions.hpp" 3
}
# 1057 "/usr/include/crt/math_functions.hpp" 3
return retval;
# 1058 "/usr/include/crt/math_functions.hpp" 3
}
# 1060 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long max(const unsigned long a, const long b)
# 1061 "/usr/include/crt/math_functions.hpp" 3
{
# 1062 "/usr/include/crt/math_functions.hpp" 3
unsigned long retval;
# 1066 "/usr/include/crt/math_functions.hpp" 3
if (sizeof(unsigned long) == sizeof(unsigned)) {
# 1070 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(umax(static_cast< unsigned>(a), static_cast< unsigned>(b))));
# 1071 "/usr/include/crt/math_functions.hpp" 3
} else {
# 1072 "/usr/include/crt/math_functions.hpp" 3
retval = (static_cast< unsigned long>(ullmax(static_cast< unsigned long long>(a), static_cast< unsigned long long>(b))));
# 1073 "/usr/include/crt/math_functions.hpp" 3
}
# 1074 "/usr/include/crt/math_functions.hpp" 3
return retval;
# 1075 "/usr/include/crt/math_functions.hpp" 3
}
# 1077 "/usr/include/crt/math_functions.hpp" 3
static inline long long max(const long long a, const long long b)
# 1078 "/usr/include/crt/math_functions.hpp" 3
{
# 1079 "/usr/include/crt/math_functions.hpp" 3
return llmax(a, b);
# 1080 "/usr/include/crt/math_functions.hpp" 3
}
# 1082 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long long max(const unsigned long long a, const unsigned long long b)
# 1083 "/usr/include/crt/math_functions.hpp" 3
{
# 1084 "/usr/include/crt/math_functions.hpp" 3
return ullmax(a, b);
# 1085 "/usr/include/crt/math_functions.hpp" 3
}
# 1087 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long long max(const long long a, const unsigned long long b)
# 1088 "/usr/include/crt/math_functions.hpp" 3
{
# 1089 "/usr/include/crt/math_functions.hpp" 3
return ullmax(static_cast< unsigned long long>(a), b);
# 1090 "/usr/include/crt/math_functions.hpp" 3
}
# 1092 "/usr/include/crt/math_functions.hpp" 3
static inline unsigned long long max(const unsigned long long a, const long long b)
# 1093 "/usr/include/crt/math_functions.hpp" 3
{
# 1094 "/usr/include/crt/math_functions.hpp" 3
return ullmax(a, static_cast< unsigned long long>(b));
# 1095 "/usr/include/crt/math_functions.hpp" 3
}
# 1097 "/usr/include/crt/math_functions.hpp" 3
static inline float max(const float a, const float b)
# 1098 "/usr/include/crt/math_functions.hpp" 3
{
# 1099 "/usr/include/crt/math_functions.hpp" 3
return fmaxf(a, b);
# 1100 "/usr/include/crt/math_functions.hpp" 3
}
# 1102 "/usr/include/crt/math_functions.hpp" 3
static inline double max(const double a, const double b)
# 1103 "/usr/include/crt/math_functions.hpp" 3
{
# 1104 "/usr/include/crt/math_functions.hpp" 3
return fmax(a, b);
# 1105 "/usr/include/crt/math_functions.hpp" 3
}
# 1107 "/usr/include/crt/math_functions.hpp" 3
static inline double max(const float a, const double b)
# 1108 "/usr/include/crt/math_functions.hpp" 3
{
# 1109 "/usr/include/crt/math_functions.hpp" 3
return fmax(static_cast< double>(a), b);
# 1110 "/usr/include/crt/math_functions.hpp" 3
}
# 1112 "/usr/include/crt/math_functions.hpp" 3
static inline double max(const double a, const float b)
# 1113 "/usr/include/crt/math_functions.hpp" 3
{
# 1114 "/usr/include/crt/math_functions.hpp" 3
return fmax(a, static_cast< double>(b));
# 1115 "/usr/include/crt/math_functions.hpp" 3
}
# 1126 "/usr/include/crt/math_functions.hpp" 3
inline int min(const int a, const int b)
# 1127 "/usr/include/crt/math_functions.hpp" 3
{
# 1128 "/usr/include/crt/math_functions.hpp" 3
return (a < b) ? a : b;
# 1129 "/usr/include/crt/math_functions.hpp" 3
}
# 1131 "/usr/include/crt/math_functions.hpp" 3
inline unsigned umin(const unsigned a, const unsigned b)
# 1132 "/usr/include/crt/math_functions.hpp" 3
{
# 1133 "/usr/include/crt/math_functions.hpp" 3
return (a < b) ? a : b;
# 1134 "/usr/include/crt/math_functions.hpp" 3
}
# 1136 "/usr/include/crt/math_functions.hpp" 3
inline long long llmin(const long long a, const long long b)
# 1137 "/usr/include/crt/math_functions.hpp" 3
{
# 1138 "/usr/include/crt/math_functions.hpp" 3
return (a < b) ? a : b;
# 1139 "/usr/include/crt/math_functions.hpp" 3
}
# 1141 "/usr/include/crt/math_functions.hpp" 3
inline unsigned long long ullmin(const unsigned long long a, const unsigned long long
# 1142 "/usr/include/crt/math_functions.hpp" 3
b)
# 1143 "/usr/include/crt/math_functions.hpp" 3
{
# 1144 "/usr/include/crt/math_functions.hpp" 3
return (a < b) ? a : b;
# 1145 "/usr/include/crt/math_functions.hpp" 3
}
# 1147 "/usr/include/crt/math_functions.hpp" 3
inline int max(const int a, const int b)
# 1148 "/usr/include/crt/math_functions.hpp" 3
{
# 1149 "/usr/include/crt/math_functions.hpp" 3
return (a > b) ? a : b;
# 1150 "/usr/include/crt/math_functions.hpp" 3
}
# 1152 "/usr/include/crt/math_functions.hpp" 3
inline unsigned umax(const unsigned a, const unsigned b)
# 1153 "/usr/include/crt/math_functions.hpp" 3
{
# 1154 "/usr/include/crt/math_functions.hpp" 3
return (a > b) ? a : b;
# 1155 "/usr/include/crt/math_functions.hpp" 3
}
# 1157 "/usr/include/crt/math_functions.hpp" 3
inline long long llmax(const long long a, const long long b)
# 1158 "/usr/include/crt/math_functions.hpp" 3
{
# 1159 "/usr/include/crt/math_functions.hpp" 3
return (a > b) ? a : b;
# 1160 "/usr/include/crt/math_functions.hpp" 3
}
# 1162 "/usr/include/crt/math_functions.hpp" 3
inline unsigned long long ullmax(const unsigned long long a, const unsigned long long
# 1163 "/usr/include/crt/math_functions.hpp" 3
b)
# 1164 "/usr/include/crt/math_functions.hpp" 3
{
# 1165 "/usr/include/crt/math_functions.hpp" 3
return (a > b) ? a : b;
# 1166 "/usr/include/crt/math_functions.hpp" 3
}
# 91 "/usr/include/crt/device_functions.h" 3
extern "C" {
# 3211 "/usr/include/crt/device_functions.h" 3
static inline int __vimax_s32_relu(const int a, const int b);
# 3223 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vimax_s16x2_relu(const unsigned a, const unsigned b);
# 3232 "/usr/include/crt/device_functions.h" 3
static inline int __vimin_s32_relu(const int a, const int b);
# 3244 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vimin_s16x2_relu(const unsigned a, const unsigned b);
# 3253 "/usr/include/crt/device_functions.h" 3
static inline int __vimax3_s32(const int a, const int b, const int c);
# 3265 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vimax3_s16x2(const unsigned a, const unsigned b, const unsigned c);
# 3274 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vimax3_u32(const unsigned a, const unsigned b, const unsigned c);
# 3286 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vimax3_u16x2(const unsigned a, const unsigned b, const unsigned c);
# 3295 "/usr/include/crt/device_functions.h" 3
static inline int __vimin3_s32(const int a, const int b, const int c);
# 3307 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vimin3_s16x2(const unsigned a, const unsigned b, const unsigned c);
# 3316 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vimin3_u32(const unsigned a, const unsigned b, const unsigned c);
# 3328 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vimin3_u16x2(const unsigned a, const unsigned b, const unsigned c);
# 3337 "/usr/include/crt/device_functions.h" 3
static inline int __vimax3_s32_relu(const int a, const int b, const int c);
# 3349 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vimax3_s16x2_relu(const unsigned a, const unsigned b, const unsigned c);
# 3358 "/usr/include/crt/device_functions.h" 3
static inline int __vimin3_s32_relu(const int a, const int b, const int c);
# 3370 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vimin3_s16x2_relu(const unsigned a, const unsigned b, const unsigned c);
# 3379 "/usr/include/crt/device_functions.h" 3
static inline int __viaddmax_s32(const int a, const int b, const int c);
# 3391 "/usr/include/crt/device_functions.h" 3
static inline unsigned __viaddmax_s16x2(const unsigned a, const unsigned b, const unsigned c);
# 3400 "/usr/include/crt/device_functions.h" 3
static inline unsigned __viaddmax_u32(const unsigned a, const unsigned b, const unsigned c);
# 3412 "/usr/include/crt/device_functions.h" 3
static inline unsigned __viaddmax_u16x2(const unsigned a, const unsigned b, const unsigned c);
# 3421 "/usr/include/crt/device_functions.h" 3
static inline int __viaddmin_s32(const int a, const int b, const int c);
# 3433 "/usr/include/crt/device_functions.h" 3
static inline unsigned __viaddmin_s16x2(const unsigned a, const unsigned b, const unsigned c);
# 3442 "/usr/include/crt/device_functions.h" 3
static inline unsigned __viaddmin_u32(const unsigned a, const unsigned b, const unsigned c);
# 3454 "/usr/include/crt/device_functions.h" 3
static inline unsigned __viaddmin_u16x2(const unsigned a, const unsigned b, const unsigned c);
# 3464 "/usr/include/crt/device_functions.h" 3
static inline int __viaddmax_s32_relu(const int a, const int b, const int c);
# 3476 "/usr/include/crt/device_functions.h" 3
static inline unsigned __viaddmax_s16x2_relu(const unsigned a, const unsigned b, const unsigned c);
# 3486 "/usr/include/crt/device_functions.h" 3
static inline int __viaddmin_s32_relu(const int a, const int b, const int c);
# 3498 "/usr/include/crt/device_functions.h" 3
static inline unsigned __viaddmin_s16x2_relu(const unsigned a, const unsigned b, const unsigned c);
# 3507 "/usr/include/crt/device_functions.h" 3
static inline int __vibmax_s32(const int a, const int b, bool *const pred);
# 3516 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vibmax_u32(const unsigned a, const unsigned b, bool *const pred);
# 3525 "/usr/include/crt/device_functions.h" 3
static inline int __vibmin_s32(const int a, const int b, bool *const pred);
# 3534 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vibmin_u32(const unsigned a, const unsigned b, bool *const pred);
# 3548 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vibmax_s16x2(const unsigned a, const unsigned b, bool *const pred_hi, bool *const pred_lo);
# 3562 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vibmax_u16x2(const unsigned a, const unsigned b, bool *const pred_hi, bool *const pred_lo);
# 3576 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vibmin_s16x2(const unsigned a, const unsigned b, bool *const pred_hi, bool *const pred_lo);
# 3590 "/usr/include/crt/device_functions.h" 3
static inline unsigned __vibmin_u16x2(const unsigned a, const unsigned b, bool *const pred_hi, bool *const pred_lo);
# 3597 "/usr/include/crt/device_functions.h" 3
}
# 102 "/usr/include/crt/device_functions.hpp" 3
static inline int __vimax_s32_relu(const int a, const int b) {
# 109 "/usr/include/crt/device_functions.hpp" 3
int ans = max(a, b);
# 111 "/usr/include/crt/device_functions.hpp" 3
return (ans > 0) ? ans : 0;
# 113 "/usr/include/crt/device_functions.hpp" 3
}
# 115 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vimax_s16x2_relu(const unsigned a, const unsigned b) {
# 123 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 124 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 126 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 127 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 130 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 131 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 133 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 134 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 137 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)max(aS_lo, bS_lo);
# 138 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)max(aS_hi, bS_hi);
# 141 "/usr/include/crt/device_functions.hpp" 3
if (ansS_lo < 0) { ansS_lo = (0); }
# 142 "/usr/include/crt/device_functions.hpp" 3
if (ansS_hi < 0) { ansS_hi = (0); }
# 145 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 146 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 149 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 151 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 153 "/usr/include/crt/device_functions.hpp" 3
}
# 155 "/usr/include/crt/device_functions.hpp" 3
static inline int __vimin_s32_relu(const int a, const int b) {
# 162 "/usr/include/crt/device_functions.hpp" 3
int ans = min(a, b);
# 164 "/usr/include/crt/device_functions.hpp" 3
return (ans > 0) ? ans : 0;
# 166 "/usr/include/crt/device_functions.hpp" 3
}
# 168 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vimin_s16x2_relu(const unsigned a, const unsigned b) {
# 176 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 177 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 179 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 180 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 183 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 184 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 186 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 187 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 190 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)min(aS_lo, bS_lo);
# 191 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)min(aS_hi, bS_hi);
# 194 "/usr/include/crt/device_functions.hpp" 3
if (ansS_lo < 0) { ansS_lo = (0); }
# 195 "/usr/include/crt/device_functions.hpp" 3
if (ansS_hi < 0) { ansS_hi = (0); }
# 198 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 199 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 202 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 204 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 206 "/usr/include/crt/device_functions.hpp" 3
}
# 208 "/usr/include/crt/device_functions.hpp" 3
static inline int __vimax3_s32(const int a, const int b, const int c) {
# 218 "/usr/include/crt/device_functions.hpp" 3
return max(max(a, b), c);
# 220 "/usr/include/crt/device_functions.hpp" 3
}
# 222 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vimax3_s16x2(const unsigned a, const unsigned b, const unsigned c) {
# 234 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 235 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 237 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 238 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 240 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 241 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 244 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 245 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 247 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 248 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 250 "/usr/include/crt/device_functions.hpp" 3
short cS_lo = *((short *)(&cU_lo));
# 251 "/usr/include/crt/device_functions.hpp" 3
short cS_hi = *((short *)(&cU_hi));
# 254 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)max(max(aS_lo, bS_lo), cS_lo);
# 255 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)max(max(aS_hi, bS_hi), cS_hi);
# 258 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 259 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 262 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 264 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 266 "/usr/include/crt/device_functions.hpp" 3
}
# 268 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vimax3_u32(const unsigned a, const unsigned b, const unsigned c) {
# 278 "/usr/include/crt/device_functions.hpp" 3
return max(max(a, b), c);
# 280 "/usr/include/crt/device_functions.hpp" 3
}
# 282 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vimax3_u16x2(const unsigned a, const unsigned b, const unsigned c) {
# 293 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 294 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 296 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 297 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 299 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 300 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 303 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = (unsigned short)max(max(aU_lo, bU_lo), cU_lo);
# 304 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = (unsigned short)max(max(aU_hi, bU_hi), cU_hi);
# 307 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 309 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 311 "/usr/include/crt/device_functions.hpp" 3
}
# 313 "/usr/include/crt/device_functions.hpp" 3
static inline int __vimin3_s32(const int a, const int b, const int c) {
# 323 "/usr/include/crt/device_functions.hpp" 3
return min(min(a, b), c);
# 325 "/usr/include/crt/device_functions.hpp" 3
}
# 327 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vimin3_s16x2(const unsigned a, const unsigned b, const unsigned c) {
# 338 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 339 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 341 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 342 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 344 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 345 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 348 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 349 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 351 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 352 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 354 "/usr/include/crt/device_functions.hpp" 3
short cS_lo = *((short *)(&cU_lo));
# 355 "/usr/include/crt/device_functions.hpp" 3
short cS_hi = *((short *)(&cU_hi));
# 358 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)min(min(aS_lo, bS_lo), cS_lo);
# 359 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)min(min(aS_hi, bS_hi), cS_hi);
# 362 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 363 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 366 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 368 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 370 "/usr/include/crt/device_functions.hpp" 3
}
# 372 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vimin3_u32(const unsigned a, const unsigned b, const unsigned c) {
# 382 "/usr/include/crt/device_functions.hpp" 3
return min(min(a, b), c);
# 384 "/usr/include/crt/device_functions.hpp" 3
}
# 386 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vimin3_u16x2(const unsigned a, const unsigned b, const unsigned c) {
# 397 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 398 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 400 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 401 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 403 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 404 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 407 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = (unsigned short)min(min(aU_lo, bU_lo), cU_lo);
# 408 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = (unsigned short)min(min(aU_hi, bU_hi), cU_hi);
# 411 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 413 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 415 "/usr/include/crt/device_functions.hpp" 3
}
# 417 "/usr/include/crt/device_functions.hpp" 3
static inline int __vimax3_s32_relu(const int a, const int b, const int c) {
# 427 "/usr/include/crt/device_functions.hpp" 3
int ans = max(max(a, b), c);
# 429 "/usr/include/crt/device_functions.hpp" 3
return (ans > 0) ? ans : 0;
# 431 "/usr/include/crt/device_functions.hpp" 3
}
# 433 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vimax3_s16x2_relu(const unsigned a, const unsigned b, const unsigned c) {
# 444 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 445 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 447 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 448 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 450 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 451 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 454 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 455 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 457 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 458 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 460 "/usr/include/crt/device_functions.hpp" 3
short cS_lo = *((short *)(&cU_lo));
# 461 "/usr/include/crt/device_functions.hpp" 3
short cS_hi = *((short *)(&cU_hi));
# 464 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)max(max(aS_lo, bS_lo), cS_lo);
# 465 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)max(max(aS_hi, bS_hi), cS_hi);
# 468 "/usr/include/crt/device_functions.hpp" 3
if (ansS_lo < 0) { ansS_lo = (0); }
# 469 "/usr/include/crt/device_functions.hpp" 3
if (ansS_hi < 0) { ansS_hi = (0); }
# 472 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 473 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 476 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 478 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 480 "/usr/include/crt/device_functions.hpp" 3
}
# 482 "/usr/include/crt/device_functions.hpp" 3
static inline int __vimin3_s32_relu(const int a, const int b, const int c) {
# 492 "/usr/include/crt/device_functions.hpp" 3
int ans = min(min(a, b), c);
# 494 "/usr/include/crt/device_functions.hpp" 3
return (ans > 0) ? ans : 0;
# 496 "/usr/include/crt/device_functions.hpp" 3
}
# 498 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vimin3_s16x2_relu(const unsigned a, const unsigned b, const unsigned c) {
# 509 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 510 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 512 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 513 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 515 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 516 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 519 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 520 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 522 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 523 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 525 "/usr/include/crt/device_functions.hpp" 3
short cS_lo = *((short *)(&cU_lo));
# 526 "/usr/include/crt/device_functions.hpp" 3
short cS_hi = *((short *)(&cU_hi));
# 529 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)min(min(aS_lo, bS_lo), cS_lo);
# 530 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)min(min(aS_hi, bS_hi), cS_hi);
# 533 "/usr/include/crt/device_functions.hpp" 3
if (ansS_lo < 0) { ansS_lo = (0); }
# 534 "/usr/include/crt/device_functions.hpp" 3
if (ansS_hi < 0) { ansS_hi = (0); }
# 537 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 538 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 541 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 543 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 545 "/usr/include/crt/device_functions.hpp" 3
}
# 547 "/usr/include/crt/device_functions.hpp" 3
static inline int __viaddmax_s32(const int a, const int b, const int c) {
# 557 "/usr/include/crt/device_functions.hpp" 3
return max(a + b, c);
# 559 "/usr/include/crt/device_functions.hpp" 3
}
# 561 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __viaddmax_s16x2(const unsigned a, const unsigned b, const unsigned c) {
# 572 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 573 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 575 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 576 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 578 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 579 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 582 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 583 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 585 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 586 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 588 "/usr/include/crt/device_functions.hpp" 3
short cS_lo = *((short *)(&cU_lo));
# 589 "/usr/include/crt/device_functions.hpp" 3
short cS_hi = *((short *)(&cU_hi));
# 592 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)max((short)(aS_lo + bS_lo), cS_lo);
# 593 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)max((short)(aS_hi + bS_hi), cS_hi);
# 596 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 597 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 600 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 602 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 604 "/usr/include/crt/device_functions.hpp" 3
}
# 606 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __viaddmax_u32(const unsigned a, const unsigned b, const unsigned c) {
# 616 "/usr/include/crt/device_functions.hpp" 3
return max(a + b, c);
# 618 "/usr/include/crt/device_functions.hpp" 3
}
# 620 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __viaddmax_u16x2(const unsigned a, const unsigned b, const unsigned c) {
# 631 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 632 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 634 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 635 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 637 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 638 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 641 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = (unsigned short)max((unsigned short)(aU_lo + bU_lo), cU_lo);
# 642 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = (unsigned short)max((unsigned short)(aU_hi + bU_hi), cU_hi);
# 645 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 647 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 649 "/usr/include/crt/device_functions.hpp" 3
}
# 651 "/usr/include/crt/device_functions.hpp" 3
static inline int __viaddmin_s32(const int a, const int b, const int c) {
# 661 "/usr/include/crt/device_functions.hpp" 3
return min(a + b, c);
# 663 "/usr/include/crt/device_functions.hpp" 3
}
# 665 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __viaddmin_s16x2(const unsigned a, const unsigned b, const unsigned c) {
# 676 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 677 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 679 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 680 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 682 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 683 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 686 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 687 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 689 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 690 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 692 "/usr/include/crt/device_functions.hpp" 3
short cS_lo = *((short *)(&cU_lo));
# 693 "/usr/include/crt/device_functions.hpp" 3
short cS_hi = *((short *)(&cU_hi));
# 696 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)min((short)(aS_lo + bS_lo), cS_lo);
# 697 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)min((short)(aS_hi + bS_hi), cS_hi);
# 700 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 701 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 704 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 706 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 708 "/usr/include/crt/device_functions.hpp" 3
}
# 710 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __viaddmin_u32(const unsigned a, const unsigned b, const unsigned c) {
# 720 "/usr/include/crt/device_functions.hpp" 3
return min(a + b, c);
# 722 "/usr/include/crt/device_functions.hpp" 3
}
# 724 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __viaddmin_u16x2(const unsigned a, const unsigned b, const unsigned c) {
# 735 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 736 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 738 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 739 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 741 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 742 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 745 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = (unsigned short)min((unsigned short)(aU_lo + bU_lo), cU_lo);
# 746 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = (unsigned short)min((unsigned short)(aU_hi + bU_hi), cU_hi);
# 749 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 751 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 753 "/usr/include/crt/device_functions.hpp" 3
}
# 755 "/usr/include/crt/device_functions.hpp" 3
static inline int __viaddmax_s32_relu(const int a, const int b, const int c) {
# 765 "/usr/include/crt/device_functions.hpp" 3
int ans = max(a + b, c);
# 767 "/usr/include/crt/device_functions.hpp" 3
return (ans > 0) ? ans : 0;
# 769 "/usr/include/crt/device_functions.hpp" 3
}
# 771 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __viaddmax_s16x2_relu(const unsigned a, const unsigned b, const unsigned c) {
# 782 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 783 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 785 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 786 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 788 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 789 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 792 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 793 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 795 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 796 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 798 "/usr/include/crt/device_functions.hpp" 3
short cS_lo = *((short *)(&cU_lo));
# 799 "/usr/include/crt/device_functions.hpp" 3
short cS_hi = *((short *)(&cU_hi));
# 802 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)max((short)(aS_lo + bS_lo), cS_lo);
# 803 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)max((short)(aS_hi + bS_hi), cS_hi);
# 805 "/usr/include/crt/device_functions.hpp" 3
if (ansS_lo < 0) { ansS_lo = (0); }
# 806 "/usr/include/crt/device_functions.hpp" 3
if (ansS_hi < 0) { ansS_hi = (0); }
# 809 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 810 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 813 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 815 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 817 "/usr/include/crt/device_functions.hpp" 3
}
# 819 "/usr/include/crt/device_functions.hpp" 3
static inline int __viaddmin_s32_relu(const int a, const int b, const int c) {
# 829 "/usr/include/crt/device_functions.hpp" 3
int ans = min(a + b, c);
# 831 "/usr/include/crt/device_functions.hpp" 3
return (ans > 0) ? ans : 0;
# 833 "/usr/include/crt/device_functions.hpp" 3
}
# 835 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __viaddmin_s16x2_relu(const unsigned a, const unsigned b, const unsigned c) {
# 846 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 847 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 849 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 850 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 852 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_lo = (unsigned short)(c & 65535U);
# 853 "/usr/include/crt/device_functions.hpp" 3
unsigned short cU_hi = (unsigned short)(c >> 16);
# 856 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 857 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 859 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 860 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 862 "/usr/include/crt/device_functions.hpp" 3
short cS_lo = *((short *)(&cU_lo));
# 863 "/usr/include/crt/device_functions.hpp" 3
short cS_hi = *((short *)(&cU_hi));
# 866 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)min((short)(aS_lo + bS_lo), cS_lo);
# 867 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)min((short)(aS_hi + bS_hi), cS_hi);
# 869 "/usr/include/crt/device_functions.hpp" 3
if (ansS_lo < 0) { ansS_lo = (0); }
# 870 "/usr/include/crt/device_functions.hpp" 3
if (ansS_hi < 0) { ansS_hi = (0); }
# 873 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 874 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 877 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 879 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 881 "/usr/include/crt/device_functions.hpp" 3
}
# 885 "/usr/include/crt/device_functions.hpp" 3
static inline int __vibmax_s32(const int a, const int b, bool *const pred) {
# 899 "/usr/include/crt/device_functions.hpp" 3
int ans = max(a, b);
# 901 "/usr/include/crt/device_functions.hpp" 3
(*pred) = (a >= b);
# 902 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 904 "/usr/include/crt/device_functions.hpp" 3
}
# 906 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vibmax_u32(const unsigned a, const unsigned b, bool *const pred) {
# 920 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = max(a, b);
# 922 "/usr/include/crt/device_functions.hpp" 3
(*pred) = (a >= b);
# 923 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 925 "/usr/include/crt/device_functions.hpp" 3
}
# 928 "/usr/include/crt/device_functions.hpp" 3
static inline int __vibmin_s32(const int a, const int b, bool *const pred) {
# 942 "/usr/include/crt/device_functions.hpp" 3
int ans = min(a, b);
# 944 "/usr/include/crt/device_functions.hpp" 3
(*pred) = (a <= b);
# 945 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 947 "/usr/include/crt/device_functions.hpp" 3
}
# 950 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vibmin_u32(const unsigned a, const unsigned b, bool *const pred) {
# 964 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = min(a, b);
# 966 "/usr/include/crt/device_functions.hpp" 3
(*pred) = (a <= b);
# 967 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 969 "/usr/include/crt/device_functions.hpp" 3
}
# 971 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vibmax_s16x2(const unsigned a, const unsigned b, bool *const pred_hi, bool *const pred_lo) {
# 993 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 994 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 996 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 997 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 1000 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 1001 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 1003 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 1004 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 1007 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)max(aS_lo, bS_lo);
# 1008 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)max(aS_hi, bS_hi);
# 1010 "/usr/include/crt/device_functions.hpp" 3
(*pred_hi) = (aS_hi >= bS_hi);
# 1011 "/usr/include/crt/device_functions.hpp" 3
(*pred_lo) = (aS_lo >= bS_lo);
# 1014 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 1015 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 1018 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 1020 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 1022 "/usr/include/crt/device_functions.hpp" 3
}
# 1024 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vibmax_u16x2(const unsigned a, const unsigned b, bool *const pred_hi, bool *const pred_lo) {
# 1046 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 1047 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 1049 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 1050 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 1053 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = (unsigned short)max(aU_lo, bU_lo);
# 1054 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = (unsigned short)max(aU_hi, bU_hi);
# 1056 "/usr/include/crt/device_functions.hpp" 3
(*pred_hi) = (aU_hi >= bU_hi);
# 1057 "/usr/include/crt/device_functions.hpp" 3
(*pred_lo) = (aU_lo >= bU_lo);
# 1060 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 1062 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 1064 "/usr/include/crt/device_functions.hpp" 3
}
# 1066 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vibmin_s16x2(const unsigned a, const unsigned b, bool *const pred_hi, bool *const pred_lo) {
# 1088 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 1089 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 1091 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 1092 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 1095 "/usr/include/crt/device_functions.hpp" 3
short aS_lo = *((short *)(&aU_lo));
# 1096 "/usr/include/crt/device_functions.hpp" 3
short aS_hi = *((short *)(&aU_hi));
# 1098 "/usr/include/crt/device_functions.hpp" 3
short bS_lo = *((short *)(&bU_lo));
# 1099 "/usr/include/crt/device_functions.hpp" 3
short bS_hi = *((short *)(&bU_hi));
# 1102 "/usr/include/crt/device_functions.hpp" 3
short ansS_lo = (short)min(aS_lo, bS_lo);
# 1103 "/usr/include/crt/device_functions.hpp" 3
short ansS_hi = (short)min(aS_hi, bS_hi);
# 1105 "/usr/include/crt/device_functions.hpp" 3
(*pred_hi) = (aS_hi <= bS_hi);
# 1106 "/usr/include/crt/device_functions.hpp" 3
(*pred_lo) = (aS_lo <= bS_lo);
# 1109 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = *((unsigned short *)(&ansS_lo));
# 1110 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = *((unsigned short *)(&ansS_hi));
# 1113 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 1115 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 1117 "/usr/include/crt/device_functions.hpp" 3
}
# 1119 "/usr/include/crt/device_functions.hpp" 3
static inline unsigned __vibmin_u16x2(const unsigned a, const unsigned b, bool *const pred_hi, bool *const pred_lo) {
# 1141 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_lo = (unsigned short)(a & 65535U);
# 1142 "/usr/include/crt/device_functions.hpp" 3
unsigned short aU_hi = (unsigned short)(a >> 16);
# 1144 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_lo = (unsigned short)(b & 65535U);
# 1145 "/usr/include/crt/device_functions.hpp" 3
unsigned short bU_hi = (unsigned short)(b >> 16);
# 1148 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_lo = (unsigned short)min(aU_lo, bU_lo);
# 1149 "/usr/include/crt/device_functions.hpp" 3
unsigned short ansU_hi = (unsigned short)min(aU_hi, bU_hi);
# 1151 "/usr/include/crt/device_functions.hpp" 3
(*pred_hi) = (aU_hi <= bU_hi);
# 1152 "/usr/include/crt/device_functions.hpp" 3
(*pred_lo) = (aU_lo <= bU_lo);
# 1155 "/usr/include/crt/device_functions.hpp" 3
unsigned ans = ((unsigned)ansU_lo) | (((unsigned)ansU_hi) << 16);
# 1157 "/usr/include/crt/device_functions.hpp" 3
return ans;
# 1159 "/usr/include/crt/device_functions.hpp" 3
}
# 110 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAdd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 112 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAdd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 114 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicSub(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 116 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicSub(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 118 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicExch(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 120 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicExch(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 122 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicExch(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 124 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMin(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 126 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMin(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 128 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMax(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 130 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMax(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 132 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicInc(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 134 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicDec(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 136 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAnd(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 138 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAnd(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 140 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicOr(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 142 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicOr(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 144 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicXor(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 146 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicXor(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 148 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicCAS(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 150 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicCAS(unsigned *address, unsigned compare, unsigned val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 177 "/usr/include/device_atomic_functions.h" 3
extern "C" {
# 186 "/usr/include/device_atomic_functions.h" 3
}
# 195 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAdd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 197 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicExch(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 199 "/usr/include/device_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicCAS(unsigned long long *address, unsigned long long compare, unsigned long long val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 201 "/usr/include/device_atomic_functions.h" 3
__attribute((deprecated("__any() is deprecated in favor of __any_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to suppr" "ess this warning)."))) __attribute__((unused)) static inline bool any(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 203 "/usr/include/device_atomic_functions.h" 3
__attribute((deprecated("__all() is deprecated in favor of __all_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to suppr" "ess this warning)."))) __attribute__((unused)) static inline bool all(bool cond) {int volatile ___ = 1;(void)cond;::exit(___);}
# 87 "/usr/include/crt/device_double_functions.h" 3
extern "C" {
# 1139 "/usr/include/crt/device_double_functions.h" 3
}
# 1147 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode);
# 1149 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1151 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1153 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode = cudaRoundNearest);
# 1155 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode = cudaRoundZero);
# 1157 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode = cudaRoundZero);
# 1159 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode = cudaRoundZero);
# 1161 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode = cudaRoundZero);
# 1163 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode = cudaRoundNearest);
# 1165 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode = cudaRoundNearest);
# 1167 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode = cudaRoundNearest);
# 1169 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode = cudaRoundNearest);
# 1171 "/usr/include/crt/device_double_functions.h" 3
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode = cudaRoundNearest);
# 93 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline double fma(double a, double b, double c, cudaRoundMode mode)
# 94 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)c;(void)mode;
# 99 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 101 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dmul(double a, double b, cudaRoundMode mode)
# 102 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 107 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 109 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dadd(double a, double b, cudaRoundMode mode)
# 110 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 115 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 117 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline double dsub(double a, double b, cudaRoundMode mode)
# 118 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)b;(void)mode;
# 123 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 125 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline int double2int(double a, cudaRoundMode mode)
# 126 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 131 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 133 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline unsigned double2uint(double a, cudaRoundMode mode)
# 134 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 139 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 141 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline long long double2ll(double a, cudaRoundMode mode)
# 142 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 147 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 149 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline unsigned long long double2ull(double a, cudaRoundMode mode)
# 150 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 155 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 157 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline double ll2double(long long a, cudaRoundMode mode)
# 158 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 163 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 165 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline double ull2double(unsigned long long a, cudaRoundMode mode)
# 166 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 171 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 173 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline double int2double(int a, cudaRoundMode mode)
# 174 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 176 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 178 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline double uint2double(unsigned a, cudaRoundMode mode)
# 179 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 181 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 183 "/usr/include/crt/device_double_functions.hpp" 3
__attribute__((unused)) static inline double float2double(float a, cudaRoundMode mode)
# 184 "/usr/include/crt/device_double_functions.hpp" 3
{int volatile ___ = 1;(void)a;(void)mode;
# 186 "/usr/include/crt/device_double_functions.hpp" 3
::exit(___);}
# 103 "/usr/include/sm_20_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicAdd(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 110 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMin(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 112 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMax(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 114 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicAnd(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 116 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicOr(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 118 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicXor(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 120 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMin(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 122 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMax(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 124 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAnd(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 126 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicOr(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 128 "/usr/include/sm_32_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicXor(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 307 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline double atomicAdd(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 310 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAdd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 313 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAdd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 316 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAdd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 319 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAdd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 322 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAdd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 325 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAdd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 328 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicAdd_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 331 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicAdd_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 334 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline double atomicAdd_block(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 337 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline double atomicAdd_system(double *address, double val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 340 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicSub_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 343 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicSub_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 346 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicSub_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 349 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicSub_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 352 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicExch_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 355 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicExch_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 358 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicExch_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 361 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicExch_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 364 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicExch_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 367 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicExch_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 370 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicExch_block(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 373 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline float atomicExch_system(float *address, float val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 376 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMin_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 379 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMin_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 382 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMin_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 385 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMin_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 388 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMin_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 391 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMin_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 394 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMin_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 397 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMin_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 400 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMax_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 403 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicMax_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 406 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMax_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 409 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicMax_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 412 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMax_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 415 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicMax_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 418 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMax_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 421 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicMax_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 424 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicInc_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 427 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicInc_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 430 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicDec_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 433 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicDec_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 436 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicCAS_block(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 439 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicCAS_system(int *address, int compare, int val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 442 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicCAS_block(unsigned *address, unsigned compare, unsigned
# 443 "/usr/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 446 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicCAS_system(unsigned *address, unsigned compare, unsigned
# 447 "/usr/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 450 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicCAS_block(unsigned long long *address, unsigned long long
# 451 "/usr/include/sm_60_atomic_functions.h" 3
compare, unsigned long long
# 452 "/usr/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 455 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicCAS_system(unsigned long long *address, unsigned long long
# 456 "/usr/include/sm_60_atomic_functions.h" 3
compare, unsigned long long
# 457 "/usr/include/sm_60_atomic_functions.h" 3
val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 460 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAnd_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 463 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicAnd_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 466 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicAnd_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 469 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicAnd_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 472 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAnd_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 475 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicAnd_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 478 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAnd_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 481 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicAnd_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 484 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicOr_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 487 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicOr_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 490 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicOr_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 493 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicOr_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 496 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicOr_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 499 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicOr_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 502 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicOr_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 505 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicOr_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 508 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicXor_block(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 511 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline int atomicXor_system(int *address, int val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 514 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicXor_block(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 517 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline long long atomicXor_system(long long *address, long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 520 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicXor_block(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 523 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned atomicXor_system(unsigned *address, unsigned val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 526 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicXor_block(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 529 "/usr/include/sm_60_atomic_functions.h" 3
__attribute__((unused)) static inline unsigned long long atomicXor_system(unsigned long long *address, unsigned long long val) {int volatile ___ = 1;(void)address;(void)val;::exit(___);}
# 97 "/usr/include/sm_20_intrinsics.h" 3
extern "C" {
# 1510 "/usr/include/sm_20_intrinsics.h" 3
}
# 1522 "/usr/include/sm_20_intrinsics.h" 3
__attribute((deprecated("__ballot() is deprecated in favor of __ballot_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to" " suppress this warning)."))) __attribute__((unused)) static inline unsigned ballot(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1524 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline int syncthreads_count(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1526 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline bool syncthreads_and(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1528 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline bool syncthreads_or(bool pred) {int volatile ___ = 1;(void)pred;::exit(___);}
# 1533 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __isGlobal(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 1534 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __isShared(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 1535 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __isConstant(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 1536 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __isLocal(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 1538 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __isGridConstant(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 1540 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline size_t __cvta_generic_to_global(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 1541 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline size_t __cvta_generic_to_shared(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 1542 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline size_t __cvta_generic_to_constant(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 1543 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline size_t __cvta_generic_to_local(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 1545 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline size_t __cvta_generic_to_grid_constant(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 1548 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline void *__cvta_global_to_generic(size_t rawbits) {int volatile ___ = 1;(void)rawbits;::exit(___);}
# 1549 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline void *__cvta_shared_to_generic(size_t rawbits) {int volatile ___ = 1;(void)rawbits;::exit(___);}
# 1550 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline void *__cvta_constant_to_generic(size_t rawbits) {int volatile ___ = 1;(void)rawbits;::exit(___);}
# 1551 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline void *__cvta_local_to_generic(size_t rawbits) {int volatile ___ = 1;(void)rawbits;::exit(___);}
# 1553 "/usr/include/sm_20_intrinsics.h" 3
__attribute__((unused)) static inline void *__cvta_grid_constant_to_generic(size_t rawbits) {int volatile ___ = 1;(void)rawbits;::exit(___);}
# 108 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __fns(unsigned mask, unsigned base, int offset) {int volatile ___ = 1;(void)mask;(void)base;(void)offset;::exit(___);}
# 109 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline void __barrier_sync(unsigned id) {int volatile ___ = 1;(void)id;::exit(___);}
# 110 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline void __barrier_sync_count(unsigned id, unsigned cnt) {int volatile ___ = 1;(void)id;(void)cnt;::exit(___);}
# 111 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline void __syncwarp(unsigned mask = 4294967295U) {int volatile ___ = 1;(void)mask;::exit(___);}
# 112 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __all_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}
# 113 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __any_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}
# 114 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __uni_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}
# 115 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ballot_sync(unsigned mask, int pred) {int volatile ___ = 1;(void)mask;(void)pred;::exit(___);}
# 116 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __activemask() {int volatile ___ = 1;::exit(___);}
# 125 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline int __shfl(int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 126 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline unsigned __shfl(unsigned var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 127 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline int __shfl_up(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 128 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline unsigned __shfl_up(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 129 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline int __shfl_down(int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 130 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline unsigned __shfl_down(unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 131 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline int __shfl_xor(int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 132 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline unsigned __shfl_xor(unsigned var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 133 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline float __shfl(float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 134 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline float __shfl_up(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 135 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline float __shfl_down(float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 136 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline float __shfl_xor(float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 139 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_sync(unsigned mask, int var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 140 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_sync(unsigned mask, unsigned var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 141 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_up_sync(unsigned mask, int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 142 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_up_sync(unsigned mask, unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 143 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_down_sync(unsigned mask, int var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 144 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_down_sync(unsigned mask, unsigned var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 145 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline int __shfl_xor_sync(unsigned mask, int var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 146 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __shfl_xor_sync(unsigned mask, unsigned var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 147 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_sync(unsigned mask, float var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 148 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_up_sync(unsigned mask, float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 149 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_down_sync(unsigned mask, float var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 150 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline float __shfl_xor_sync(unsigned mask, float var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 154 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl(unsigned long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 155 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline long long __shfl(long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 156 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline long long __shfl_up(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 157 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl_up(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 158 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline long long __shfl_down(long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 159 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl_down(unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 160 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline long long __shfl_xor(long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 161 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline unsigned long long __shfl_xor(unsigned long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 162 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline double __shfl(double var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 163 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline double __shfl_up(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 164 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline double __shfl_down(double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 165 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline double __shfl_xor(double var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 168 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_sync(unsigned mask, long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 169 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_sync(unsigned mask, unsigned long long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 170 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_up_sync(unsigned mask, long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 171 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_up_sync(unsigned mask, unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 172 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_down_sync(unsigned mask, long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 173 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_down_sync(unsigned mask, unsigned long long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 174 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long long __shfl_xor_sync(unsigned mask, long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 175 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __shfl_xor_sync(unsigned mask, unsigned long long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 176 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_sync(unsigned mask, double var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 177 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_up_sync(unsigned mask, double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 178 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_down_sync(unsigned mask, double var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 179 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline double __shfl_xor_sync(unsigned mask, double var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 183 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline long __shfl(long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 184 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl() is deprecated in favor of __shfl_sync() and may be removed in a future release (Use -Wno-deprecated-declarations to sup" "press this warning)."))) __attribute__((unused)) static inline unsigned long __shfl(unsigned long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)var;(void)srcLane;(void)width;::exit(___);}
# 185 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline long __shfl_up(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 186 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_up() is deprecated in favor of __shfl_up_sync() and may be removed in a future release (Use -Wno-deprecated-declarations " "to suppress this warning)."))) __attribute__((unused)) static inline unsigned long __shfl_up(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 187 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline long __shfl_down(long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 188 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_down() is deprecated in favor of __shfl_down_sync() and may be removed in a future release (Use -Wno-deprecated-declarati" "ons to suppress this warning)."))) __attribute__((unused)) static inline unsigned long __shfl_down(unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)var;(void)delta;(void)width;::exit(___);}
# 189 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline long __shfl_xor(long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 190 "/usr/include/sm_30_intrinsics.h" 3
__attribute((deprecated("__shfl_xor() is deprecated in favor of __shfl_xor_sync() and may be removed in a future release (Use -Wno-deprecated-declaration" "s to suppress this warning)."))) __attribute__((unused)) static inline unsigned long __shfl_xor(unsigned long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)var;(void)laneMask;(void)width;::exit(___);}
# 193 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_sync(unsigned mask, long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 194 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_sync(unsigned mask, unsigned long var, int srcLane, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)srcLane;(void)width;::exit(___);}
# 195 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_up_sync(unsigned mask, long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 196 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_up_sync(unsigned mask, unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 197 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_down_sync(unsigned mask, long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 198 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_down_sync(unsigned mask, unsigned long var, unsigned delta, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)delta;(void)width;::exit(___);}
# 199 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline long __shfl_xor_sync(unsigned mask, long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 200 "/usr/include/sm_30_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __shfl_xor_sync(unsigned mask, unsigned long var, int laneMask, int width = 32) {int volatile ___ = 1;(void)mask;(void)var;(void)laneMask;(void)width;::exit(___);}
# 87 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 88 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 90 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 91 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 92 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 93 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 94 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 95 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 96 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 97 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 98 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 99 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 100 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 101 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 103 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 104 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 105 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 106 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 107 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 108 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 109 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 110 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 111 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 112 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 113 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 115 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 116 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 117 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 118 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 119 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 123 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldcg(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 124 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldcg(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 126 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldcg(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 127 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldcg(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 128 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldcg(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 129 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldcg(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 130 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldcg(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 131 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldcg(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 132 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldcg(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 133 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldcg(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 134 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldcg(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 135 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldcg(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 136 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldcg(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 137 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldcg(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 139 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldcg(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 140 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldcg(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 141 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldcg(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 142 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldcg(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 143 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldcg(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 144 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldcg(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 145 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldcg(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 146 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldcg(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 147 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldcg(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 148 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldcg(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 149 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldcg(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 151 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldcg(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 152 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldcg(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 153 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldcg(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 154 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldcg(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 155 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldcg(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 159 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldca(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 160 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldca(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 162 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldca(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 163 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldca(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 164 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldca(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 165 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldca(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 166 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldca(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 167 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldca(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 168 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldca(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 169 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldca(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 170 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldca(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 171 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldca(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 172 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldca(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 173 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldca(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 175 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldca(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 176 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldca(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 177 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldca(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 178 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldca(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 179 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldca(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 180 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldca(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 181 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldca(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 182 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldca(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 183 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldca(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 184 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldca(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 185 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldca(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 187 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldca(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 188 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldca(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 189 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldca(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 190 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldca(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 191 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldca(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 195 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldcs(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 196 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldcs(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 198 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldcs(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 199 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldcs(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 200 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldcs(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 201 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldcs(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 202 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldcs(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 203 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldcs(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 204 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldcs(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 205 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldcs(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 206 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldcs(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 207 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldcs(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 208 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldcs(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 209 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldcs(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 211 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldcs(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 212 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldcs(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 213 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldcs(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 214 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldcs(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 215 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldcs(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 216 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldcs(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 217 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldcs(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 218 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldcs(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 219 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldcs(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 220 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldcs(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 221 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldcs(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 223 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldcs(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 224 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldcs(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 225 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldcs(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 226 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldcs(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 227 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldcs(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 231 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldlu(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 232 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldlu(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 234 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldlu(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 235 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldlu(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 236 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldlu(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 237 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldlu(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 238 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldlu(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 239 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldlu(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 240 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldlu(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 241 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldlu(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 242 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldlu(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 243 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldlu(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 244 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldlu(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 245 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldlu(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 247 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldlu(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 248 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldlu(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 249 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldlu(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 250 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldlu(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 251 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldlu(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 252 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldlu(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 253 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldlu(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 254 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldlu(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 255 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldlu(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 256 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldlu(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 257 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldlu(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 259 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldlu(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 260 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldlu(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 261 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldlu(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 262 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldlu(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 263 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldlu(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 267 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long __ldcv(const long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 268 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long __ldcv(const unsigned long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 270 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char __ldcv(const char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 271 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline signed char __ldcv(const signed char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 272 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short __ldcv(const short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 273 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int __ldcv(const int *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 274 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline long long __ldcv(const long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 275 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char2 __ldcv(const char2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 276 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline char4 __ldcv(const char4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 277 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short2 __ldcv(const short2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 278 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline short4 __ldcv(const short4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 279 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int2 __ldcv(const int2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 280 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline int4 __ldcv(const int4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 281 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline longlong2 __ldcv(const longlong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 283 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned char __ldcv(const unsigned char *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 284 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned short __ldcv(const unsigned short *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 285 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __ldcv(const unsigned *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 286 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned long long __ldcv(const unsigned long long *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 287 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar2 __ldcv(const uchar2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 288 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uchar4 __ldcv(const uchar4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 289 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort2 __ldcv(const ushort2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 290 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ushort4 __ldcv(const ushort4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 291 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint2 __ldcv(const uint2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 292 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline uint4 __ldcv(const uint4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 293 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline ulonglong2 __ldcv(const ulonglong2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 295 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float __ldcv(const float *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 296 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double __ldcv(const double *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 297 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float2 __ldcv(const float2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 298 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline float4 __ldcv(const float4 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 299 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline double2 __ldcv(const double2 *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 303 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(long *ptr, long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 304 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(unsigned long *ptr, unsigned long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 306 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(char *ptr, char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 307 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(signed char *ptr, signed char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 308 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(short *ptr, short value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 309 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(int *ptr, int value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 310 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(long long *ptr, long long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 311 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(char2 *ptr, char2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 312 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(char4 *ptr, char4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 313 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(short2 *ptr, short2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 314 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(short4 *ptr, short4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 315 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(int2 *ptr, int2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 316 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(int4 *ptr, int4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 317 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(longlong2 *ptr, longlong2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 319 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(unsigned char *ptr, unsigned char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 320 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(unsigned short *ptr, unsigned short value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 321 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(unsigned *ptr, unsigned value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 322 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(unsigned long long *ptr, unsigned long long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 323 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(uchar2 *ptr, uchar2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 324 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(uchar4 *ptr, uchar4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 325 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(ushort2 *ptr, ushort2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 326 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(ushort4 *ptr, ushort4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 327 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(uint2 *ptr, uint2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 328 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(uint4 *ptr, uint4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 329 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(ulonglong2 *ptr, ulonglong2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 331 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(float *ptr, float value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 332 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(double *ptr, double value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 333 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(float2 *ptr, float2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 334 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(float4 *ptr, float4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 335 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwb(double2 *ptr, double2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 339 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(long *ptr, long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 340 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(unsigned long *ptr, unsigned long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 342 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(char *ptr, char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 343 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(signed char *ptr, signed char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 344 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(short *ptr, short value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 345 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(int *ptr, int value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 346 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(long long *ptr, long long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 347 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(char2 *ptr, char2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 348 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(char4 *ptr, char4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 349 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(short2 *ptr, short2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 350 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(short4 *ptr, short4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 351 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(int2 *ptr, int2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 352 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(int4 *ptr, int4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 353 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(longlong2 *ptr, longlong2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 355 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(unsigned char *ptr, unsigned char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 356 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(unsigned short *ptr, unsigned short value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 357 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(unsigned *ptr, unsigned value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 358 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(unsigned long long *ptr, unsigned long long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 359 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(uchar2 *ptr, uchar2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 360 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(uchar4 *ptr, uchar4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 361 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(ushort2 *ptr, ushort2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 362 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(ushort4 *ptr, ushort4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 363 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(uint2 *ptr, uint2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 364 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(uint4 *ptr, uint4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 365 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(ulonglong2 *ptr, ulonglong2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 367 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(float *ptr, float value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 368 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(double *ptr, double value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 369 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(float2 *ptr, float2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 370 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(float4 *ptr, float4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 371 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcg(double2 *ptr, double2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 375 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(long *ptr, long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 376 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(unsigned long *ptr, unsigned long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 378 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(char *ptr, char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 379 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(signed char *ptr, signed char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 380 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(short *ptr, short value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 381 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(int *ptr, int value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 382 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(long long *ptr, long long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 383 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(char2 *ptr, char2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 384 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(char4 *ptr, char4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 385 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(short2 *ptr, short2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 386 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(short4 *ptr, short4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 387 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(int2 *ptr, int2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 388 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(int4 *ptr, int4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 389 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(longlong2 *ptr, longlong2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 391 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(unsigned char *ptr, unsigned char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 392 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(unsigned short *ptr, unsigned short value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 393 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(unsigned *ptr, unsigned value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 394 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(unsigned long long *ptr, unsigned long long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 395 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(uchar2 *ptr, uchar2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 396 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(uchar4 *ptr, uchar4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 397 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(ushort2 *ptr, ushort2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 398 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(ushort4 *ptr, ushort4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 399 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(uint2 *ptr, uint2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 400 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(uint4 *ptr, uint4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 401 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(ulonglong2 *ptr, ulonglong2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 403 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(float *ptr, float value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 404 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(double *ptr, double value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 405 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(float2 *ptr, float2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 406 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(float4 *ptr, float4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 407 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stcs(double2 *ptr, double2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 411 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(long *ptr, long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 412 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(unsigned long *ptr, unsigned long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 414 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(char *ptr, char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 415 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(signed char *ptr, signed char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 416 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(short *ptr, short value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 417 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(int *ptr, int value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 418 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(long long *ptr, long long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 419 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(char2 *ptr, char2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 420 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(char4 *ptr, char4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 421 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(short2 *ptr, short2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 422 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(short4 *ptr, short4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 423 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(int2 *ptr, int2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 424 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(int4 *ptr, int4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 425 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(longlong2 *ptr, longlong2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 427 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(unsigned char *ptr, unsigned char value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 428 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(unsigned short *ptr, unsigned short value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 429 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(unsigned *ptr, unsigned value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 430 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(unsigned long long *ptr, unsigned long long value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 431 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(uchar2 *ptr, uchar2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 432 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(uchar4 *ptr, uchar4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 433 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(ushort2 *ptr, ushort2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 434 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(ushort4 *ptr, ushort4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 435 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(uint2 *ptr, uint2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 436 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(uint4 *ptr, uint4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 437 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(ulonglong2 *ptr, ulonglong2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 439 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(float *ptr, float value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 440 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(double *ptr, double value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 441 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(float2 *ptr, float2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 442 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(float4 *ptr, float4 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 443 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline void __stwt(double2 *ptr, double2 value) {int volatile ___ = 1;(void)ptr;(void)value;::exit(___);}
# 460 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_l(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 472 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_lc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 485 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_r(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 497 "/usr/include/sm_32_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __funnelshift_rc(unsigned lo, unsigned hi, unsigned shift) {int volatile ___ = 1;(void)lo;(void)hi;(void)shift;::exit(___);}
# 89 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_lo(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 90 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_lo(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 92 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_lo(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 93 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_lo(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 95 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_hi(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 96 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_hi(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 98 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp2a_hi(short2 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 99 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp2a_hi(ushort2 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 106 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp4a(int srcA, int srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 107 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp4a(unsigned srcA, unsigned srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 109 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline int __dp4a(char4 srcA, char4 srcB, int c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 110 "/usr/include/sm_61_intrinsics.h" 3
__attribute__((unused)) static inline unsigned __dp4a(uchar4 srcA, uchar4 srcB, unsigned c) {int volatile ___ = 1;(void)srcA;(void)srcB;(void)c;::exit(___);}
# 93 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, unsigned value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 94 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, int value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 95 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, unsigned long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 96 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 97 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, unsigned long long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 98 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, long long value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 99 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, float value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 100 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_any_sync(unsigned mask, double value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 102 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, unsigned value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 103 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, int value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 104 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, unsigned long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 105 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 106 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, unsigned long long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 107 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, long long value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 108 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, float value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 109 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned __match_all_sync(unsigned mask, double value, int *pred) {int volatile ___ = 1;(void)mask;(void)value;(void)pred;::exit(___);}
# 111 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline void __nanosleep(unsigned ns) {int volatile ___ = 1;(void)ns;::exit(___);}
# 113 "/usr/include/crt/sm_70_rt.h" 3
__attribute__((unused)) static inline unsigned short atomicCAS(unsigned short *address, unsigned short compare, unsigned short val) {int volatile ___ = 1;(void)address;(void)compare;(void)val;::exit(___);}
# 93 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) static inline unsigned __reduce_add_sync(unsigned mask, unsigned value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 94 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) static inline unsigned __reduce_min_sync(unsigned mask, unsigned value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 95 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) static inline unsigned __reduce_max_sync(unsigned mask, unsigned value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 97 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) static inline int __reduce_add_sync(unsigned mask, int value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 98 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) static inline int __reduce_min_sync(unsigned mask, int value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 99 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) static inline int __reduce_max_sync(unsigned mask, int value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 101 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) static inline unsigned __reduce_and_sync(unsigned mask, unsigned value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 102 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) static inline unsigned __reduce_or_sync(unsigned mask, unsigned value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 103 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) static inline unsigned __reduce_xor_sync(unsigned mask, unsigned value) {int volatile ___ = 1;(void)mask;(void)value;::exit(___);}
# 106 "/usr/include/crt/sm_80_rt.h" 3
extern "C" {
# 107 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) inline void *__nv_associate_access_property(const void *ptr, unsigned long long
# 108 "/usr/include/crt/sm_80_rt.h" 3
property) {int volatile ___ = 1;(void)ptr;(void)property;
# 112 "/usr/include/crt/sm_80_rt.h" 3
::exit(___);}
# 114 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) inline void __nv_memcpy_async_shared_global_4(void *dst, const void *
# 115 "/usr/include/crt/sm_80_rt.h" 3
src, unsigned
# 116 "/usr/include/crt/sm_80_rt.h" 3
src_size) {int volatile ___ = 1;(void)dst;(void)src;(void)src_size;
# 121 "/usr/include/crt/sm_80_rt.h" 3
::exit(___);}
# 123 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) inline void __nv_memcpy_async_shared_global_8(void *dst, const void *
# 124 "/usr/include/crt/sm_80_rt.h" 3
src, unsigned
# 125 "/usr/include/crt/sm_80_rt.h" 3
src_size) {int volatile ___ = 1;(void)dst;(void)src;(void)src_size;
# 130 "/usr/include/crt/sm_80_rt.h" 3
::exit(___);}
# 132 "/usr/include/crt/sm_80_rt.h" 3
__attribute__((unused)) inline void __nv_memcpy_async_shared_global_16(void *dst, const void *
# 133 "/usr/include/crt/sm_80_rt.h" 3
src, unsigned
# 134 "/usr/include/crt/sm_80_rt.h" 3
src_size) {int volatile ___ = 1;(void)dst;(void)src;(void)src_size;
# 139 "/usr/include/crt/sm_80_rt.h" 3
::exit(___);}
# 141 "/usr/include/crt/sm_80_rt.h" 3
}
# 89 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline unsigned __isCtaShared(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 90 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline unsigned __isClusterShared(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 91 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline void *__cluster_map_shared_rank(const void *ptr, unsigned target_block_rank) {int volatile ___ = 1;(void)ptr;(void)target_block_rank;::exit(___);}
# 92 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline unsigned __cluster_query_shared_rank(const void *ptr) {int volatile ___ = 1;(void)ptr;::exit(___);}
# 93 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline uint2 __cluster_map_shared_multicast(const void *ptr, unsigned cluster_cta_mask) {int volatile ___ = 1;(void)ptr;(void)cluster_cta_mask;::exit(___);}
# 94 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline unsigned __clusterDimIsSpecified() {int volatile ___ = 1;::exit(___);}
# 95 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline dim3 __clusterDim() {int volatile ___ = 1;::exit(___);}
# 96 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline dim3 __clusterRelativeBlockIdx() {int volatile ___ = 1;::exit(___);}
# 97 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline dim3 __clusterGridDimInClusters() {int volatile ___ = 1;::exit(___);}
# 98 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline dim3 __clusterIdx() {int volatile ___ = 1;::exit(___);}
# 99 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline unsigned __clusterRelativeBlockRank() {int volatile ___ = 1;::exit(___);}
# 100 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline unsigned __clusterSizeInBlocks() {int volatile ___ = 1;::exit(___);}
# 101 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline void __cluster_barrier_arrive() {int volatile ___ = 1;::exit(___);}
# 102 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline void __cluster_barrier_arrive_relaxed() {int volatile ___ = 1;::exit(___);}
# 103 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline void __cluster_barrier_wait() {int volatile ___ = 1;::exit(___);}
# 104 "/usr/include/crt/sm_90_rt.h" 3
__attribute__((unused)) static inline void __threadfence_cluster() {int volatile ___ = 1;::exit(___);}
# 65 "/usr/include/texture_indirect_functions.h" 3
template< class T> struct __nv_itex_trait { };
# 66 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< char> { typedef void type; };
# 67 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< signed char> { typedef void type; };
# 68 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< char1> { typedef void type; };
# 69 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< char2> { typedef void type; };
# 70 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< char4> { typedef void type; };
# 71 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< unsigned char> { typedef void type; };
# 72 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< uchar1> { typedef void type; };
# 73 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< uchar2> { typedef void type; };
# 74 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< uchar4> { typedef void type; };
# 75 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< short> { typedef void type; };
# 76 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< short1> { typedef void type; };
# 77 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< short2> { typedef void type; };
# 78 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< short4> { typedef void type; };
# 79 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< unsigned short> { typedef void type; };
# 80 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< ushort1> { typedef void type; };
# 81 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< ushort2> { typedef void type; };
# 82 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< ushort4> { typedef void type; };
# 83 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< int> { typedef void type; };
# 84 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< int1> { typedef void type; };
# 85 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< int2> { typedef void type; };
# 86 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< int4> { typedef void type; };
# 87 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< unsigned> { typedef void type; };
# 88 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< uint1> { typedef void type; };
# 89 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< uint2> { typedef void type; };
# 90 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< uint4> { typedef void type; };
# 101 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< float> { typedef void type; };
# 102 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< float1> { typedef void type; };
# 103 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< float2> { typedef void type; };
# 104 "/usr/include/texture_indirect_functions.h" 3
template<> struct __nv_itex_trait< float4> { typedef void type; };
# 108 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 109 "/usr/include/texture_indirect_functions.h" 3
tex1Dfetch(T *ptr, cudaTextureObject_t obj, int x)
# 110 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;
# 112 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 114 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 115 "/usr/include/texture_indirect_functions.h" 3
tex1Dfetch(cudaTextureObject_t texObject, int x)
# 116 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;
# 120 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 122 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 123 "/usr/include/texture_indirect_functions.h" 3
tex1D(T *ptr, cudaTextureObject_t obj, float x)
# 124 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;
# 126 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 129 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 130 "/usr/include/texture_indirect_functions.h" 3
tex1D(cudaTextureObject_t texObject, float x)
# 131 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;
# 135 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 138 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 139 "/usr/include/texture_indirect_functions.h" 3
tex2D(T *ptr, cudaTextureObject_t obj, float x, float y)
# 140 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;
# 142 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 144 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 145 "/usr/include/texture_indirect_functions.h" 3
tex2D(cudaTextureObject_t texObject, float x, float y)
# 146 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;
# 150 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 153 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 154 "/usr/include/texture_indirect_functions.h" 3
tex2D(T *ptr, cudaTextureObject_t obj, float x, float y, bool *
# 155 "/usr/include/texture_indirect_functions.h" 3
isResident)
# 156 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)isResident;
# 160 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 162 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 163 "/usr/include/texture_indirect_functions.h" 3
tex2D(cudaTextureObject_t texObject, float x, float y, bool *isResident)
# 164 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)isResident;
# 168 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 173 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 174 "/usr/include/texture_indirect_functions.h" 3
tex3D(T *ptr, cudaTextureObject_t obj, float x, float y, float z)
# 175 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;
# 177 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 179 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 180 "/usr/include/texture_indirect_functions.h" 3
tex3D(cudaTextureObject_t texObject, float x, float y, float z)
# 181 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 185 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 188 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 189 "/usr/include/texture_indirect_functions.h" 3
tex3D(T *ptr, cudaTextureObject_t obj, float x, float y, float z, bool *
# 190 "/usr/include/texture_indirect_functions.h" 3
isResident)
# 191 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)isResident;
# 195 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 197 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 198 "/usr/include/texture_indirect_functions.h" 3
tex3D(cudaTextureObject_t texObject, float x, float y, float z, bool *isResident)
# 199 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)isResident;
# 203 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 207 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 208 "/usr/include/texture_indirect_functions.h" 3
tex1DLayered(T *ptr, cudaTextureObject_t obj, float x, int layer)
# 209 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)layer;
# 211 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 213 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 214 "/usr/include/texture_indirect_functions.h" 3
tex1DLayered(cudaTextureObject_t texObject, float x, int layer)
# 215 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;
# 219 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 221 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 222 "/usr/include/texture_indirect_functions.h" 3
tex2DLayered(T *ptr, cudaTextureObject_t obj, float x, float y, int layer)
# 223 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layer;
# 225 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 227 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 228 "/usr/include/texture_indirect_functions.h" 3
tex2DLayered(cudaTextureObject_t texObject, float x, float y, int layer)
# 229 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;
# 233 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 236 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 237 "/usr/include/texture_indirect_functions.h" 3
tex2DLayered(T *ptr, cudaTextureObject_t obj, float x, float y, int layer, bool *isResident)
# 238 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layer;(void)isResident;
# 242 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 244 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 245 "/usr/include/texture_indirect_functions.h" 3
tex2DLayered(cudaTextureObject_t texObject, float x, float y, int layer, bool *isResident)
# 246 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)isResident;
# 250 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 254 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 255 "/usr/include/texture_indirect_functions.h" 3
texCubemap(T *ptr, cudaTextureObject_t obj, float x, float y, float z)
# 256 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;
# 258 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 261 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 262 "/usr/include/texture_indirect_functions.h" 3
texCubemap(cudaTextureObject_t texObject, float x, float y, float z)
# 263 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;
# 267 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 270 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 271 "/usr/include/texture_indirect_functions.h" 3
texCubemapLayered(T *ptr, cudaTextureObject_t obj, float x, float y, float z, int layer)
# 272 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)layer;
# 274 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 276 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 277 "/usr/include/texture_indirect_functions.h" 3
texCubemapLayered(cudaTextureObject_t texObject, float x, float y, float z, int layer)
# 278 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;
# 282 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 284 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 285 "/usr/include/texture_indirect_functions.h" 3
tex2Dgather(T *ptr, cudaTextureObject_t obj, float x, float y, int comp = 0)
# 286 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)comp;
# 288 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 290 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 291 "/usr/include/texture_indirect_functions.h" 3
tex2Dgather(cudaTextureObject_t to, float x, float y, int comp = 0)
# 292 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)comp;
# 296 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 299 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 300 "/usr/include/texture_indirect_functions.h" 3
tex2Dgather(T *ptr, cudaTextureObject_t obj, float x, float y, bool *isResident, int comp = 0)
# 301 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)isResident;(void)comp;
# 305 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 307 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 308 "/usr/include/texture_indirect_functions.h" 3
tex2Dgather(cudaTextureObject_t to, float x, float y, bool *isResident, int comp = 0)
# 309 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)to;(void)x;(void)y;(void)isResident;(void)comp;
# 313 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 317 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 318 "/usr/include/texture_indirect_functions.h" 3
tex1DLod(T *ptr, cudaTextureObject_t obj, float x, float level)
# 319 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)level;
# 321 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 323 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 324 "/usr/include/texture_indirect_functions.h" 3
tex1DLod(cudaTextureObject_t texObject, float x, float level)
# 325 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)level;
# 329 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 332 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 333 "/usr/include/texture_indirect_functions.h" 3
tex2DLod(T *ptr, cudaTextureObject_t obj, float x, float y, float level)
# 334 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)level;
# 336 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 338 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 339 "/usr/include/texture_indirect_functions.h" 3
tex2DLod(cudaTextureObject_t texObject, float x, float y, float level)
# 340 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;
# 344 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 348 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 349 "/usr/include/texture_indirect_functions.h" 3
tex2DLod(T *ptr, cudaTextureObject_t obj, float x, float y, float level, bool *isResident)
# 350 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)level;(void)isResident;
# 354 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 356 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 357 "/usr/include/texture_indirect_functions.h" 3
tex2DLod(cudaTextureObject_t texObject, float x, float y, float level, bool *isResident)
# 358 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)level;(void)isResident;
# 362 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 367 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 368 "/usr/include/texture_indirect_functions.h" 3
tex3DLod(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float level)
# 369 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)level;
# 371 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 373 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 374 "/usr/include/texture_indirect_functions.h" 3
tex3DLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 375 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 379 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 382 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 383 "/usr/include/texture_indirect_functions.h" 3
tex3DLod(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float level, bool *isResident)
# 384 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)level;(void)isResident;
# 388 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 390 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 391 "/usr/include/texture_indirect_functions.h" 3
tex3DLod(cudaTextureObject_t texObject, float x, float y, float z, float level, bool *isResident)
# 392 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;(void)isResident;
# 396 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 401 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 402 "/usr/include/texture_indirect_functions.h" 3
tex1DLayeredLod(T *ptr, cudaTextureObject_t obj, float x, int layer, float level)
# 403 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)layer;(void)level;
# 405 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 407 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 408 "/usr/include/texture_indirect_functions.h" 3
tex1DLayeredLod(cudaTextureObject_t texObject, float x, int layer, float level)
# 409 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)level;
# 413 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 416 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 417 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredLod(T *ptr, cudaTextureObject_t obj, float x, float y, int layer, float level)
# 418 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layer;(void)level;
# 420 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 422 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 423 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredLod(cudaTextureObject_t texObject, float x, float y, int layer, float level)
# 424 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;
# 428 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 431 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 432 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredLod(T *ptr, cudaTextureObject_t obj, float x, float y, int layer, float level, bool *isResident)
# 433 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layer;(void)level;(void)isResident;
# 437 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 439 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 440 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredLod(cudaTextureObject_t texObject, float x, float y, int layer, float level, bool *isResident)
# 441 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)level;(void)isResident;
# 445 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 448 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 449 "/usr/include/texture_indirect_functions.h" 3
texCubemapLod(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float level)
# 450 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)level;
# 452 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 454 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 455 "/usr/include/texture_indirect_functions.h" 3
texCubemapLod(cudaTextureObject_t texObject, float x, float y, float z, float level)
# 456 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)level;
# 460 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 463 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 464 "/usr/include/texture_indirect_functions.h" 3
texCubemapGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float4 dPdx, float4 dPdy)
# 465 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 467 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 469 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 470 "/usr/include/texture_indirect_functions.h" 3
texCubemapGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 471 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 475 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 477 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 478 "/usr/include/texture_indirect_functions.h" 3
texCubemapLayeredLod(T *ptr, cudaTextureObject_t obj, float x, float y, float z, int layer, float level)
# 479 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 481 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 483 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 484 "/usr/include/texture_indirect_functions.h" 3
texCubemapLayeredLod(cudaTextureObject_t texObject, float x, float y, float z, int layer, float level)
# 485 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)level;
# 489 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 491 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 492 "/usr/include/texture_indirect_functions.h" 3
tex1DGrad(T *ptr, cudaTextureObject_t obj, float x, float dPdx, float dPdy)
# 493 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)dPdx;(void)dPdy;
# 495 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 497 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 498 "/usr/include/texture_indirect_functions.h" 3
tex1DGrad(cudaTextureObject_t texObject, float x, float dPdx, float dPdy)
# 499 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)dPdx;(void)dPdy;
# 503 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 506 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 507 "/usr/include/texture_indirect_functions.h" 3
tex2DGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float2 dPdx, float2 dPdy)
# 508 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 510 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 512 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 513 "/usr/include/texture_indirect_functions.h" 3
tex2DGrad(cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy)
# 514 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;
# 518 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 521 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 522 "/usr/include/texture_indirect_functions.h" 3
tex2DGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float2 dPdx, float2 dPdy, bool *isResident)
# 523 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)dPdx;(void)dPdy;(void)isResident;
# 527 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 529 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 530 "/usr/include/texture_indirect_functions.h" 3
tex2DGrad(cudaTextureObject_t texObject, float x, float y, float2 dPdx, float2 dPdy, bool *isResident)
# 531 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)dPdx;(void)dPdy;(void)isResident;
# 535 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 539 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 540 "/usr/include/texture_indirect_functions.h" 3
tex3DGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float4 dPdx, float4 dPdy)
# 541 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 543 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 545 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 546 "/usr/include/texture_indirect_functions.h" 3
tex3DGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy)
# 547 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;
# 551 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 554 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 555 "/usr/include/texture_indirect_functions.h" 3
tex3DGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float z, float4 dPdx, float4 dPdy, bool *isResident)
# 556 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;(void)isResident;
# 560 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 562 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 563 "/usr/include/texture_indirect_functions.h" 3
tex3DGrad(cudaTextureObject_t texObject, float x, float y, float z, float4 dPdx, float4 dPdy, bool *isResident)
# 564 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)dPdx;(void)dPdy;(void)isResident;
# 568 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 573 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 574 "/usr/include/texture_indirect_functions.h" 3
tex1DLayeredGrad(T *ptr, cudaTextureObject_t obj, float x, int layer, float dPdx, float dPdy)
# 575 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 577 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 579 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 580 "/usr/include/texture_indirect_functions.h" 3
tex1DLayeredGrad(cudaTextureObject_t texObject, float x, int layer, float dPdx, float dPdy)
# 581 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)layer;(void)dPdx;(void)dPdy;
# 585 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 588 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 589 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredGrad(T *ptr, cudaTextureObject_t obj, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 590 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 592 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 594 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 595 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredGrad(cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy)
# 596 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;
# 600 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 603 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 604 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredGrad(T *ptr, cudaTextureObject_t obj, float x, float y, int layer, float2 dPdx, float2 dPdy, bool *isResident)
# 605 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;(void)isResident;
# 609 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 611 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 612 "/usr/include/texture_indirect_functions.h" 3
tex2DLayeredGrad(cudaTextureObject_t texObject, float x, float y, int layer, float2 dPdx, float2 dPdy, bool *isResident)
# 613 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)layer;(void)dPdx;(void)dPdy;(void)isResident;
# 617 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 621 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_itex_trait< T> ::type
# 622 "/usr/include/texture_indirect_functions.h" 3
texCubemapLayeredGrad(T *ptr, cudaTextureObject_t obj, float x, float y, float z, int layer, float4 dPdx, float4 dPdy)
# 623 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)layer;(void)dPdx;(void)dPdy;
# 625 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 627 "/usr/include/texture_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 628 "/usr/include/texture_indirect_functions.h" 3
texCubemapLayeredGrad(cudaTextureObject_t texObject, float x, float y, float z, int layer, float4 dPdx, float4 dPdy)
# 629 "/usr/include/texture_indirect_functions.h" 3
{int volatile ___ = 1;(void)texObject;(void)x;(void)y;(void)z;(void)layer;(void)dPdx;(void)dPdy;
# 633 "/usr/include/texture_indirect_functions.h" 3
::exit(___);}
# 58 "/usr/include/surface_indirect_functions.h" 3
template< class T> struct __nv_isurf_trait { };
# 59 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< char> { typedef void type; };
# 60 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< signed char> { typedef void type; };
# 61 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< char1> { typedef void type; };
# 62 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< unsigned char> { typedef void type; };
# 63 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< uchar1> { typedef void type; };
# 64 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< short> { typedef void type; };
# 65 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< short1> { typedef void type; };
# 66 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< unsigned short> { typedef void type; };
# 67 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< ushort1> { typedef void type; };
# 68 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< int> { typedef void type; };
# 69 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< int1> { typedef void type; };
# 70 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< unsigned> { typedef void type; };
# 71 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< uint1> { typedef void type; };
# 72 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< long long> { typedef void type; };
# 73 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< longlong1> { typedef void type; };
# 74 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< unsigned long long> { typedef void type; };
# 75 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< ulonglong1> { typedef void type; };
# 76 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< float> { typedef void type; };
# 77 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< float1> { typedef void type; };
# 79 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< char2> { typedef void type; };
# 80 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< uchar2> { typedef void type; };
# 81 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< short2> { typedef void type; };
# 82 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< ushort2> { typedef void type; };
# 83 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< int2> { typedef void type; };
# 84 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< uint2> { typedef void type; };
# 85 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< longlong2> { typedef void type; };
# 86 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< ulonglong2> { typedef void type; };
# 87 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< float2> { typedef void type; };
# 89 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< char4> { typedef void type; };
# 90 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< uchar4> { typedef void type; };
# 91 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< short4> { typedef void type; };
# 92 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< ushort4> { typedef void type; };
# 93 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< int4> { typedef void type; };
# 94 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< uint4> { typedef void type; };
# 95 "/usr/include/surface_indirect_functions.h" 3
template<> struct __nv_isurf_trait< float4> { typedef void type; };
# 98 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 99 "/usr/include/surface_indirect_functions.h" 3
surf1Dread(T *ptr, cudaSurfaceObject_t obj, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 100 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)mode;
# 102 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 104 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 105 "/usr/include/surface_indirect_functions.h" 3
surf1Dread(cudaSurfaceObject_t surfObject, int x, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 106 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)boundaryMode;
# 110 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 112 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 113 "/usr/include/surface_indirect_functions.h" 3
surf2Dread(T *ptr, cudaSurfaceObject_t obj, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 114 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)mode;
# 116 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 118 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 119 "/usr/include/surface_indirect_functions.h" 3
surf2Dread(cudaSurfaceObject_t surfObject, int x, int y, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 120 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)boundaryMode;
# 124 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 127 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 128 "/usr/include/surface_indirect_functions.h" 3
surf3Dread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 129 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)z;(void)mode;
# 131 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 133 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 134 "/usr/include/surface_indirect_functions.h" 3
surf3Dread(cudaSurfaceObject_t surfObject, int x, int y, int z, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 135 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)z;(void)boundaryMode;
# 139 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 141 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 142 "/usr/include/surface_indirect_functions.h" 3
surf1DLayeredread(T *ptr, cudaSurfaceObject_t obj, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 143 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)layer;(void)mode;
# 145 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 147 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 148 "/usr/include/surface_indirect_functions.h" 3
surf1DLayeredread(cudaSurfaceObject_t surfObject, int x, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 149 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)layer;(void)boundaryMode;
# 153 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 155 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 156 "/usr/include/surface_indirect_functions.h" 3
surf2DLayeredread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 157 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layer;(void)mode;
# 159 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 161 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 162 "/usr/include/surface_indirect_functions.h" 3
surf2DLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layer, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 163 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layer;(void)boundaryMode;
# 167 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 169 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 170 "/usr/include/surface_indirect_functions.h" 3
surfCubemapread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 171 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)face;(void)mode;
# 173 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 175 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 176 "/usr/include/surface_indirect_functions.h" 3
surfCubemapread(cudaSurfaceObject_t surfObject, int x, int y, int face, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 177 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)face;(void)boundaryMode;
# 181 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 183 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 184 "/usr/include/surface_indirect_functions.h" 3
surfCubemapLayeredread(T *ptr, cudaSurfaceObject_t obj, int x, int y, int layerface, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 185 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)ptr;(void)obj;(void)x;(void)y;(void)layerface;(void)mode;
# 187 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 189 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static T
# 190 "/usr/include/surface_indirect_functions.h" 3
surfCubemapLayeredread(cudaSurfaceObject_t surfObject, int x, int y, int layerface, cudaSurfaceBoundaryMode boundaryMode = cudaBoundaryModeTrap)
# 191 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)surfObject;(void)x;(void)y;(void)layerface;(void)boundaryMode;
# 195 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 197 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 198 "/usr/include/surface_indirect_functions.h" 3
surf1Dwrite(T val, cudaSurfaceObject_t obj, int x, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 199 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)mode;
# 201 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 203 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 204 "/usr/include/surface_indirect_functions.h" 3
surf2Dwrite(T val, cudaSurfaceObject_t obj, int x, int y, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 205 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)y;(void)mode;
# 207 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 209 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 210 "/usr/include/surface_indirect_functions.h" 3
surf3Dwrite(T val, cudaSurfaceObject_t obj, int x, int y, int z, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 211 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)y;(void)z;(void)mode;
# 213 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 215 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 216 "/usr/include/surface_indirect_functions.h" 3
surf1DLayeredwrite(T val, cudaSurfaceObject_t obj, int x, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 217 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)layer;(void)mode;
# 219 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 221 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 222 "/usr/include/surface_indirect_functions.h" 3
surf2DLayeredwrite(T val, cudaSurfaceObject_t obj, int x, int y, int layer, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 223 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)y;(void)layer;(void)mode;
# 225 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 227 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 228 "/usr/include/surface_indirect_functions.h" 3
surfCubemapwrite(T val, cudaSurfaceObject_t obj, int x, int y, int face, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 229 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)y;(void)face;(void)mode;
# 231 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 233 "/usr/include/surface_indirect_functions.h" 3
template< class T> __attribute__((unused)) static typename __nv_isurf_trait< T> ::type
# 234 "/usr/include/surface_indirect_functions.h" 3
surfCubemapLayeredwrite(T val, cudaSurfaceObject_t obj, int x, int y, int layerface, cudaSurfaceBoundaryMode mode = cudaBoundaryModeTrap)
# 235 "/usr/include/surface_indirect_functions.h" 3
{int volatile ___ = 1;(void)val;(void)obj;(void)x;(void)y;(void)layerface;(void)mode;
# 237 "/usr/include/surface_indirect_functions.h" 3
::exit(___);}
# 3634 "/usr/include/crt/device_functions.h" 3
extern "C" unsigned __cudaPushCallConfiguration(dim3 gridDim, dim3 blockDim, size_t sharedMem = 0, CUstream_st * stream = 0);
# 68 "/usr/include/device_launch_parameters.h" 3
extern "C" {
# 71 "/usr/include/device_launch_parameters.h" 3
extern const uint3 __device_builtin_variable_threadIdx;
# 72 "/usr/include/device_launch_parameters.h" 3
extern const uint3 __device_builtin_variable_blockIdx;
# 73 "/usr/include/device_launch_parameters.h" 3
extern const dim3 __device_builtin_variable_blockDim;
# 74 "/usr/include/device_launch_parameters.h" 3
extern const dim3 __device_builtin_variable_gridDim;
# 75 "/usr/include/device_launch_parameters.h" 3
extern const int __device_builtin_variable_warpSize;
# 80 "/usr/include/device_launch_parameters.h" 3
}
# 62 "/usr/include/c++/12/bits/stl_relops.h" 3
namespace std __attribute((__visibility__("default"))) {
# 66 "/usr/include/c++/12/bits/stl_relops.h" 3
namespace rel_ops {
# 86 "/usr/include/c++/12/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 88 "/usr/include/c++/12/bits/stl_relops.h" 3
operator!=(const _Tp &__x, const _Tp &__y)
# 89 "/usr/include/c++/12/bits/stl_relops.h" 3
{ return !(__x == __y); }
# 99 "/usr/include/c++/12/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 101 "/usr/include/c++/12/bits/stl_relops.h" 3
operator>(const _Tp &__x, const _Tp &__y)
# 102 "/usr/include/c++/12/bits/stl_relops.h" 3
{ return __y < __x; }
# 112 "/usr/include/c++/12/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 114 "/usr/include/c++/12/bits/stl_relops.h" 3
operator<=(const _Tp &__x, const _Tp &__y)
# 115 "/usr/include/c++/12/bits/stl_relops.h" 3
{ return !(__y < __x); }
# 125 "/usr/include/c++/12/bits/stl_relops.h" 3
template< class _Tp> inline bool
# 127 "/usr/include/c++/12/bits/stl_relops.h" 3
operator>=(const _Tp &__x, const _Tp &__y)
# 128 "/usr/include/c++/12/bits/stl_relops.h" 3
{ return !(__x < __y); }
# 129 "/usr/include/c++/12/bits/stl_relops.h" 3
}
# 132 "/usr/include/c++/12/bits/stl_relops.h" 3
}
# 39 "/usr/include/c++/12/initializer_list" 3
#pragma GCC visibility push ( default )
# 43 "/usr/include/c++/12/initializer_list" 3
namespace std {
# 46 "/usr/include/c++/12/initializer_list" 3
template< class _E>
# 47 "/usr/include/c++/12/initializer_list" 3
class initializer_list {
# 50 "/usr/include/c++/12/initializer_list" 3
public: typedef _E value_type;
# 51 "/usr/include/c++/12/initializer_list" 3
typedef const _E &reference;
# 52 "/usr/include/c++/12/initializer_list" 3
typedef const _E &const_reference;
# 53 "/usr/include/c++/12/initializer_list" 3
typedef size_t size_type;
# 54 "/usr/include/c++/12/initializer_list" 3
typedef const _E *iterator;
# 55 "/usr/include/c++/12/initializer_list" 3
typedef const _E *const_iterator;
# 58 "/usr/include/c++/12/initializer_list" 3
private: iterator _M_array;
# 59 "/usr/include/c++/12/initializer_list" 3
size_type _M_len;
# 62 "/usr/include/c++/12/initializer_list" 3
constexpr initializer_list(const_iterator __a, size_type __l) : _M_array(__a), _M_len(__l)
# 63 "/usr/include/c++/12/initializer_list" 3
{ }
# 66 "/usr/include/c++/12/initializer_list" 3
public: constexpr initializer_list() noexcept : _M_array((0)), _M_len((0))
# 67 "/usr/include/c++/12/initializer_list" 3
{ }
# 71 "/usr/include/c++/12/initializer_list" 3
constexpr size_type size() const noexcept { return _M_len; }
# 75 "/usr/include/c++/12/initializer_list" 3
constexpr const_iterator begin() const noexcept { return _M_array; }
# 79 "/usr/include/c++/12/initializer_list" 3
constexpr const_iterator end() const noexcept { return begin() + size(); }
# 80 "/usr/include/c++/12/initializer_list" 3
};
# 88 "/usr/include/c++/12/initializer_list" 3
template< class _Tp> constexpr const _Tp *
# 90 "/usr/include/c++/12/initializer_list" 3
begin(initializer_list< _Tp> __ils) noexcept
# 91 "/usr/include/c++/12/initializer_list" 3
{ return __ils.begin(); }
# 99 "/usr/include/c++/12/initializer_list" 3
template< class _Tp> constexpr const _Tp *
# 101 "/usr/include/c++/12/initializer_list" 3
end(initializer_list< _Tp> __ils) noexcept
# 102 "/usr/include/c++/12/initializer_list" 3
{ return __ils.end(); }
# 103 "/usr/include/c++/12/initializer_list" 3
}
# 105 "/usr/include/c++/12/initializer_list" 3
#pragma GCC visibility pop
# 82 "/usr/include/c++/12/utility" 3
namespace std __attribute((__visibility__("default"))) {
# 90 "/usr/include/c++/12/utility" 3
template< class _Tp, class _Up = _Tp> inline _Tp
# 93 "/usr/include/c++/12/utility" 3
exchange(_Tp &__obj, _Up &&__new_val) noexcept(__and_< is_nothrow_move_constructible< _Tp> , is_nothrow_assignable< _Tp &, _Up> > ::value)
# 96 "/usr/include/c++/12/utility" 3
{ return std::__exchange(__obj, std::forward< _Up> (__new_val)); }
# 101 "/usr/include/c++/12/utility" 3
template< class _Tp>
# 102 "/usr/include/c++/12/utility" 3
[[nodiscard]] constexpr add_const_t< _Tp> &
# 104 "/usr/include/c++/12/utility" 3
as_const(_Tp &__t) noexcept
# 105 "/usr/include/c++/12/utility" 3
{ return __t; }
# 107 "/usr/include/c++/12/utility" 3
template < typename _Tp >
    void as_const ( const _Tp && ) = delete;
# 221 "/usr/include/c++/12/utility" 3
}
# 206 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 207 "/usr/include/cuda_runtime.h" 3
cudaLaunchKernel(const T *
# 208 "/usr/include/cuda_runtime.h" 3
func, dim3
# 209 "/usr/include/cuda_runtime.h" 3
gridDim, dim3
# 210 "/usr/include/cuda_runtime.h" 3
blockDim, void **
# 211 "/usr/include/cuda_runtime.h" 3
args, size_t
# 212 "/usr/include/cuda_runtime.h" 3
sharedMem = 0, cudaStream_t
# 213 "/usr/include/cuda_runtime.h" 3
stream = 0)
# 215 "/usr/include/cuda_runtime.h" 3
{
# 216 "/usr/include/cuda_runtime.h" 3
return ::cudaLaunchKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream);
# 217 "/usr/include/cuda_runtime.h" 3
}
# 277 "/usr/include/cuda_runtime.h" 3
template< class ...ExpTypes, class ...ActTypes> static inline cudaError_t
# 278 "/usr/include/cuda_runtime.h" 3
cudaLaunchKernelEx(const cudaLaunchConfig_t *
# 279 "/usr/include/cuda_runtime.h" 3
config, void (*
# 280 "/usr/include/cuda_runtime.h" 3
kernel)(ExpTypes ...), ActTypes &&...
# 281 "/usr/include/cuda_runtime.h" 3
args)
# 283 "/usr/include/cuda_runtime.h" 3
{
# 284 "/usr/include/cuda_runtime.h" 3
return [&](ExpTypes ...coercedArgs) {
# 285 "/usr/include/cuda_runtime.h" 3
void *pArgs[] = {(&coercedArgs)...};
# 286 "/usr/include/cuda_runtime.h" 3
return ::cudaLaunchKernelExC(config, (const void *)(kernel), pArgs);
# 287 "/usr/include/cuda_runtime.h" 3
} (std::forward< ActTypes> (args)...);
# 288 "/usr/include/cuda_runtime.h" 3
}
# 340 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 341 "/usr/include/cuda_runtime.h" 3
cudaLaunchCooperativeKernel(const T *
# 342 "/usr/include/cuda_runtime.h" 3
func, dim3
# 343 "/usr/include/cuda_runtime.h" 3
gridDim, dim3
# 344 "/usr/include/cuda_runtime.h" 3
blockDim, void **
# 345 "/usr/include/cuda_runtime.h" 3
args, size_t
# 346 "/usr/include/cuda_runtime.h" 3
sharedMem = 0, cudaStream_t
# 347 "/usr/include/cuda_runtime.h" 3
stream = 0)
# 349 "/usr/include/cuda_runtime.h" 3
{
# 350 "/usr/include/cuda_runtime.h" 3
return ::cudaLaunchCooperativeKernel((const void *)func, gridDim, blockDim, args, sharedMem, stream);
# 351 "/usr/include/cuda_runtime.h" 3
}
# 384 "/usr/include/cuda_runtime.h" 3
static inline cudaError_t cudaEventCreate(cudaEvent_t *
# 385 "/usr/include/cuda_runtime.h" 3
event, unsigned
# 386 "/usr/include/cuda_runtime.h" 3
flags)
# 388 "/usr/include/cuda_runtime.h" 3
{
# 389 "/usr/include/cuda_runtime.h" 3
return ::cudaEventCreateWithFlags(event, flags);
# 390 "/usr/include/cuda_runtime.h" 3
}
# 428 "/usr/include/cuda_runtime.h" 3
static inline cudaError_t cudaGraphInstantiate(cudaGraphExec_t *
# 429 "/usr/include/cuda_runtime.h" 3
pGraphExec, cudaGraph_t
# 430 "/usr/include/cuda_runtime.h" 3
graph, cudaGraphNode_t *
# 431 "/usr/include/cuda_runtime.h" 3
pErrorNode, char *
# 432 "/usr/include/cuda_runtime.h" 3
pLogBuffer, size_t
# 433 "/usr/include/cuda_runtime.h" 3
bufferSize)
# 435 "/usr/include/cuda_runtime.h" 3
{
# 436 "/usr/include/cuda_runtime.h" 3
(void)pErrorNode;
# 437 "/usr/include/cuda_runtime.h" 3
(void)pLogBuffer;
# 438 "/usr/include/cuda_runtime.h" 3
(void)bufferSize;
# 439 "/usr/include/cuda_runtime.h" 3
return ::cudaGraphInstantiate(pGraphExec, graph, 0);
# 440 "/usr/include/cuda_runtime.h" 3
}
# 499 "/usr/include/cuda_runtime.h" 3
static inline cudaError_t cudaMallocHost(void **
# 500 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 501 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 502 "/usr/include/cuda_runtime.h" 3
flags)
# 504 "/usr/include/cuda_runtime.h" 3
{
# 505 "/usr/include/cuda_runtime.h" 3
return ::cudaHostAlloc(ptr, size, flags);
# 506 "/usr/include/cuda_runtime.h" 3
}
# 508 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 509 "/usr/include/cuda_runtime.h" 3
cudaHostAlloc(T **
# 510 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 511 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 512 "/usr/include/cuda_runtime.h" 3
flags)
# 514 "/usr/include/cuda_runtime.h" 3
{
# 515 "/usr/include/cuda_runtime.h" 3
return ::cudaHostAlloc((void **)((void *)ptr), size, flags);
# 516 "/usr/include/cuda_runtime.h" 3
}
# 518 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 519 "/usr/include/cuda_runtime.h" 3
cudaHostGetDevicePointer(T **
# 520 "/usr/include/cuda_runtime.h" 3
pDevice, void *
# 521 "/usr/include/cuda_runtime.h" 3
pHost, unsigned
# 522 "/usr/include/cuda_runtime.h" 3
flags)
# 524 "/usr/include/cuda_runtime.h" 3
{
# 525 "/usr/include/cuda_runtime.h" 3
return ::cudaHostGetDevicePointer((void **)((void *)pDevice), pHost, flags);
# 526 "/usr/include/cuda_runtime.h" 3
}
# 628 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 629 "/usr/include/cuda_runtime.h" 3
cudaMallocManaged(T **
# 630 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 631 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 632 "/usr/include/cuda_runtime.h" 3
flags = 1)
# 634 "/usr/include/cuda_runtime.h" 3
{
# 635 "/usr/include/cuda_runtime.h" 3
return ::cudaMallocManaged((void **)((void *)devPtr), size, flags);
# 636 "/usr/include/cuda_runtime.h" 3
}
# 718 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 719 "/usr/include/cuda_runtime.h" 3
cudaStreamAttachMemAsync(cudaStream_t
# 720 "/usr/include/cuda_runtime.h" 3
stream, T *
# 721 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 722 "/usr/include/cuda_runtime.h" 3
length = 0, unsigned
# 723 "/usr/include/cuda_runtime.h" 3
flags = 4)
# 725 "/usr/include/cuda_runtime.h" 3
{
# 726 "/usr/include/cuda_runtime.h" 3
return ::cudaStreamAttachMemAsync(stream, (void *)devPtr, length, flags);
# 727 "/usr/include/cuda_runtime.h" 3
}
# 729 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 730 "/usr/include/cuda_runtime.h" 3
cudaMalloc(T **
# 731 "/usr/include/cuda_runtime.h" 3
devPtr, size_t
# 732 "/usr/include/cuda_runtime.h" 3
size)
# 734 "/usr/include/cuda_runtime.h" 3
{
# 735 "/usr/include/cuda_runtime.h" 3
return ::cudaMalloc((void **)((void *)devPtr), size);
# 736 "/usr/include/cuda_runtime.h" 3
}
# 738 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 739 "/usr/include/cuda_runtime.h" 3
cudaMallocHost(T **
# 740 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 741 "/usr/include/cuda_runtime.h" 3
size, unsigned
# 742 "/usr/include/cuda_runtime.h" 3
flags = 0)
# 744 "/usr/include/cuda_runtime.h" 3
{
# 745 "/usr/include/cuda_runtime.h" 3
return cudaMallocHost((void **)((void *)ptr), size, flags);
# 746 "/usr/include/cuda_runtime.h" 3
}
# 748 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 749 "/usr/include/cuda_runtime.h" 3
cudaMallocPitch(T **
# 750 "/usr/include/cuda_runtime.h" 3
devPtr, size_t *
# 751 "/usr/include/cuda_runtime.h" 3
pitch, size_t
# 752 "/usr/include/cuda_runtime.h" 3
width, size_t
# 753 "/usr/include/cuda_runtime.h" 3
height)
# 755 "/usr/include/cuda_runtime.h" 3
{
# 756 "/usr/include/cuda_runtime.h" 3
return ::cudaMallocPitch((void **)((void *)devPtr), pitch, width, height);
# 757 "/usr/include/cuda_runtime.h" 3
}
# 768 "/usr/include/cuda_runtime.h" 3
static inline cudaError_t cudaMallocAsync(void **
# 769 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 770 "/usr/include/cuda_runtime.h" 3
size, cudaMemPool_t
# 771 "/usr/include/cuda_runtime.h" 3
memPool, cudaStream_t
# 772 "/usr/include/cuda_runtime.h" 3
stream)
# 774 "/usr/include/cuda_runtime.h" 3
{
# 775 "/usr/include/cuda_runtime.h" 3
return ::cudaMallocFromPoolAsync(ptr, size, memPool, stream);
# 776 "/usr/include/cuda_runtime.h" 3
}
# 778 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 779 "/usr/include/cuda_runtime.h" 3
cudaMallocAsync(T **
# 780 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 781 "/usr/include/cuda_runtime.h" 3
size, cudaMemPool_t
# 782 "/usr/include/cuda_runtime.h" 3
memPool, cudaStream_t
# 783 "/usr/include/cuda_runtime.h" 3
stream)
# 785 "/usr/include/cuda_runtime.h" 3
{
# 786 "/usr/include/cuda_runtime.h" 3
return ::cudaMallocFromPoolAsync((void **)((void *)ptr), size, memPool, stream);
# 787 "/usr/include/cuda_runtime.h" 3
}
# 789 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 790 "/usr/include/cuda_runtime.h" 3
cudaMallocAsync(T **
# 791 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 792 "/usr/include/cuda_runtime.h" 3
size, cudaStream_t
# 793 "/usr/include/cuda_runtime.h" 3
stream)
# 795 "/usr/include/cuda_runtime.h" 3
{
# 796 "/usr/include/cuda_runtime.h" 3
return ::cudaMallocAsync((void **)((void *)ptr), size, stream);
# 797 "/usr/include/cuda_runtime.h" 3
}
# 799 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 800 "/usr/include/cuda_runtime.h" 3
cudaMallocFromPoolAsync(T **
# 801 "/usr/include/cuda_runtime.h" 3
ptr, size_t
# 802 "/usr/include/cuda_runtime.h" 3
size, cudaMemPool_t
# 803 "/usr/include/cuda_runtime.h" 3
memPool, cudaStream_t
# 804 "/usr/include/cuda_runtime.h" 3
stream)
# 806 "/usr/include/cuda_runtime.h" 3
{
# 807 "/usr/include/cuda_runtime.h" 3
return ::cudaMallocFromPoolAsync((void **)((void *)ptr), size, memPool, stream);
# 808 "/usr/include/cuda_runtime.h" 3
}
# 847 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 848 "/usr/include/cuda_runtime.h" 3
cudaMemcpyToSymbol(const T &
# 849 "/usr/include/cuda_runtime.h" 3
symbol, const void *
# 850 "/usr/include/cuda_runtime.h" 3
src, size_t
# 851 "/usr/include/cuda_runtime.h" 3
count, size_t
# 852 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 853 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyHostToDevice)
# 855 "/usr/include/cuda_runtime.h" 3
{
# 856 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyToSymbol((const void *)(&symbol), src, count, offset, kind);
# 857 "/usr/include/cuda_runtime.h" 3
}
# 901 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 902 "/usr/include/cuda_runtime.h" 3
cudaMemcpyToSymbolAsync(const T &
# 903 "/usr/include/cuda_runtime.h" 3
symbol, const void *
# 904 "/usr/include/cuda_runtime.h" 3
src, size_t
# 905 "/usr/include/cuda_runtime.h" 3
count, size_t
# 906 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 907 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyHostToDevice, cudaStream_t
# 908 "/usr/include/cuda_runtime.h" 3
stream = 0)
# 910 "/usr/include/cuda_runtime.h" 3
{
# 911 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyToSymbolAsync((const void *)(&symbol), src, count, offset, kind, stream);
# 912 "/usr/include/cuda_runtime.h" 3
}
# 949 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 950 "/usr/include/cuda_runtime.h" 3
cudaMemcpyFromSymbol(void *
# 951 "/usr/include/cuda_runtime.h" 3
dst, const T &
# 952 "/usr/include/cuda_runtime.h" 3
symbol, size_t
# 953 "/usr/include/cuda_runtime.h" 3
count, size_t
# 954 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 955 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyDeviceToHost)
# 957 "/usr/include/cuda_runtime.h" 3
{
# 958 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyFromSymbol(dst, (const void *)(&symbol), count, offset, kind);
# 959 "/usr/include/cuda_runtime.h" 3
}
# 1003 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1004 "/usr/include/cuda_runtime.h" 3
cudaMemcpyFromSymbolAsync(void *
# 1005 "/usr/include/cuda_runtime.h" 3
dst, const T &
# 1006 "/usr/include/cuda_runtime.h" 3
symbol, size_t
# 1007 "/usr/include/cuda_runtime.h" 3
count, size_t
# 1008 "/usr/include/cuda_runtime.h" 3
offset = 0, cudaMemcpyKind
# 1009 "/usr/include/cuda_runtime.h" 3
kind = cudaMemcpyDeviceToHost, cudaStream_t
# 1010 "/usr/include/cuda_runtime.h" 3
stream = 0)
# 1012 "/usr/include/cuda_runtime.h" 3
{
# 1013 "/usr/include/cuda_runtime.h" 3
return ::cudaMemcpyFromSymbolAsync(dst, (const void *)(&symbol), count, offset, kind, stream);
# 1014 "/usr/include/cuda_runtime.h" 3
}
# 1072 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1073 "/usr/include/cuda_runtime.h" 3
cudaGraphAddMemcpyNodeToSymbol(cudaGraphNode_t *
# 1074 "/usr/include/cuda_runtime.h" 3
pGraphNode, cudaGraph_t
# 1075 "/usr/include/cuda_runtime.h" 3
graph, const cudaGraphNode_t *
# 1076 "/usr/include/cuda_runtime.h" 3
pDependencies, size_t
# 1077 "/usr/include/cuda_runtime.h" 3
numDependencies, const T &
# 1078 "/usr/include/cuda_runtime.h" 3
symbol, const void *
# 1079 "/usr/include/cuda_runtime.h" 3
src, size_t
# 1080 "/usr/include/cuda_runtime.h" 3
count, size_t
# 1081 "/usr/include/cuda_runtime.h" 3
offset, cudaMemcpyKind
# 1082 "/usr/include/cuda_runtime.h" 3
kind)
# 1083 "/usr/include/cuda_runtime.h" 3
{
# 1084 "/usr/include/cuda_runtime.h" 3
return ::cudaGraphAddMemcpyNodeToSymbol(pGraphNode, graph, pDependencies, numDependencies, (const void *)(&symbol), src, count, offset, kind);
# 1085 "/usr/include/cuda_runtime.h" 3
}
# 1143 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1144 "/usr/include/cuda_runtime.h" 3
cudaGraphAddMemcpyNodeFromSymbol(cudaGraphNode_t *
# 1145 "/usr/include/cuda_runtime.h" 3
pGraphNode, cudaGraph_t
# 1146 "/usr/include/cuda_runtime.h" 3
graph, const cudaGraphNode_t *
# 1147 "/usr/include/cuda_runtime.h" 3
pDependencies, size_t
# 1148 "/usr/include/cuda_runtime.h" 3
numDependencies, void *
# 1149 "/usr/include/cuda_runtime.h" 3
dst, const T &
# 1150 "/usr/include/cuda_runtime.h" 3
symbol, size_t
# 1151 "/usr/include/cuda_runtime.h" 3
count, size_t
# 1152 "/usr/include/cuda_runtime.h" 3
offset, cudaMemcpyKind
# 1153 "/usr/include/cuda_runtime.h" 3
kind)
# 1154 "/usr/include/cuda_runtime.h" 3
{
# 1155 "/usr/include/cuda_runtime.h" 3
return ::cudaGraphAddMemcpyNodeFromSymbol(pGraphNode, graph, pDependencies, numDependencies, dst, (const void *)(&symbol), count, offset, kind);
# 1156 "/usr/include/cuda_runtime.h" 3
}
# 1194 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1195 "/usr/include/cuda_runtime.h" 3
cudaGraphMemcpyNodeSetParamsToSymbol(cudaGraphNode_t
# 1196 "/usr/include/cuda_runtime.h" 3
node, const T &
# 1197 "/usr/include/cuda_runtime.h" 3
symbol, const void *
# 1198 "/usr/include/cuda_runtime.h" 3
src, size_t
# 1199 "/usr/include/cuda_runtime.h" 3
count, size_t
# 1200 "/usr/include/cuda_runtime.h" 3
offset, cudaMemcpyKind
# 1201 "/usr/include/cuda_runtime.h" 3
kind)
# 1202 "/usr/include/cuda_runtime.h" 3
{
# 1203 "/usr/include/cuda_runtime.h" 3
return ::cudaGraphMemcpyNodeSetParamsToSymbol(node, (const void *)(&symbol), src, count, offset, kind);
# 1204 "/usr/include/cuda_runtime.h" 3
}
# 1242 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1243 "/usr/include/cuda_runtime.h" 3
cudaGraphMemcpyNodeSetParamsFromSymbol(cudaGraphNode_t
# 1244 "/usr/include/cuda_runtime.h" 3
node, void *
# 1245 "/usr/include/cuda_runtime.h" 3
dst, const T &
# 1246 "/usr/include/cuda_runtime.h" 3
symbol, size_t
# 1247 "/usr/include/cuda_runtime.h" 3
count, size_t
# 1248 "/usr/include/cuda_runtime.h" 3
offset, cudaMemcpyKind
# 1249 "/usr/include/cuda_runtime.h" 3
kind)
# 1250 "/usr/include/cuda_runtime.h" 3
{
# 1251 "/usr/include/cuda_runtime.h" 3
return ::cudaGraphMemcpyNodeSetParamsFromSymbol(node, dst, (const void *)(&symbol), count, offset, kind);
# 1252 "/usr/include/cuda_runtime.h" 3
}
# 1300 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1301 "/usr/include/cuda_runtime.h" 3
cudaGraphExecMemcpyNodeSetParamsToSymbol(cudaGraphExec_t
# 1302 "/usr/include/cuda_runtime.h" 3
hGraphExec, cudaGraphNode_t
# 1303 "/usr/include/cuda_runtime.h" 3
node, const T &
# 1304 "/usr/include/cuda_runtime.h" 3
symbol, const void *
# 1305 "/usr/include/cuda_runtime.h" 3
src, size_t
# 1306 "/usr/include/cuda_runtime.h" 3
count, size_t
# 1307 "/usr/include/cuda_runtime.h" 3
offset, cudaMemcpyKind
# 1308 "/usr/include/cuda_runtime.h" 3
kind)
# 1309 "/usr/include/cuda_runtime.h" 3
{
# 1310 "/usr/include/cuda_runtime.h" 3
return ::cudaGraphExecMemcpyNodeSetParamsToSymbol(hGraphExec, node, (const void *)(&symbol), src, count, offset, kind);
# 1311 "/usr/include/cuda_runtime.h" 3
}
# 1359 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1360 "/usr/include/cuda_runtime.h" 3
cudaGraphExecMemcpyNodeSetParamsFromSymbol(cudaGraphExec_t
# 1361 "/usr/include/cuda_runtime.h" 3
hGraphExec, cudaGraphNode_t
# 1362 "/usr/include/cuda_runtime.h" 3
node, void *
# 1363 "/usr/include/cuda_runtime.h" 3
dst, const T &
# 1364 "/usr/include/cuda_runtime.h" 3
symbol, size_t
# 1365 "/usr/include/cuda_runtime.h" 3
count, size_t
# 1366 "/usr/include/cuda_runtime.h" 3
offset, cudaMemcpyKind
# 1367 "/usr/include/cuda_runtime.h" 3
kind)
# 1368 "/usr/include/cuda_runtime.h" 3
{
# 1369 "/usr/include/cuda_runtime.h" 3
return ::cudaGraphExecMemcpyNodeSetParamsFromSymbol(hGraphExec, node, dst, (const void *)(&symbol), count, offset, kind);
# 1370 "/usr/include/cuda_runtime.h" 3
}
# 1373 "/usr/include/cuda_runtime.h" 3
static inline cudaError_t cudaGraphExecUpdate(cudaGraphExec_t hGraphExec, cudaGraph_t hGraph, cudaGraphNode_t *hErrorNode_out, cudaGraphExecUpdateResult *updateResult_out)
# 1374 "/usr/include/cuda_runtime.h" 3
{
# 1375 "/usr/include/cuda_runtime.h" 3
cudaGraphExecUpdateResultInfo resultInfo;
# 1376 "/usr/include/cuda_runtime.h" 3
cudaError_t status = cudaGraphExecUpdate(hGraphExec, hGraph, &resultInfo);
# 1377 "/usr/include/cuda_runtime.h" 3
if (hErrorNode_out) {
# 1378 "/usr/include/cuda_runtime.h" 3
(*hErrorNode_out) = (resultInfo.errorNode);
# 1379 "/usr/include/cuda_runtime.h" 3
}
# 1380 "/usr/include/cuda_runtime.h" 3
if (updateResult_out) {
# 1381 "/usr/include/cuda_runtime.h" 3
(*updateResult_out) = (resultInfo.result);
# 1382 "/usr/include/cuda_runtime.h" 3
}
# 1383 "/usr/include/cuda_runtime.h" 3
return status;
# 1384 "/usr/include/cuda_runtime.h" 3
}
# 1412 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1413 "/usr/include/cuda_runtime.h" 3
cudaUserObjectCreate(cudaUserObject_t *
# 1414 "/usr/include/cuda_runtime.h" 3
object_out, T *
# 1415 "/usr/include/cuda_runtime.h" 3
objectToWrap, unsigned
# 1416 "/usr/include/cuda_runtime.h" 3
initialRefcount, unsigned
# 1417 "/usr/include/cuda_runtime.h" 3
flags)
# 1418 "/usr/include/cuda_runtime.h" 3
{
# 1419 "/usr/include/cuda_runtime.h" 3
return ::cudaUserObjectCreate(object_out, objectToWrap, [](void *
# 1422 "/usr/include/cuda_runtime.h" 3
vpObj) { delete (reinterpret_cast< T *>(vpObj)); } , initialRefcount, flags);
# 1425 "/usr/include/cuda_runtime.h" 3
}
# 1427 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1428 "/usr/include/cuda_runtime.h" 3
cudaUserObjectCreate(cudaUserObject_t *
# 1429 "/usr/include/cuda_runtime.h" 3
object_out, T *
# 1430 "/usr/include/cuda_runtime.h" 3
objectToWrap, unsigned
# 1431 "/usr/include/cuda_runtime.h" 3
initialRefcount, cudaUserObjectFlags
# 1432 "/usr/include/cuda_runtime.h" 3
flags)
# 1433 "/usr/include/cuda_runtime.h" 3
{
# 1434 "/usr/include/cuda_runtime.h" 3
return cudaUserObjectCreate(object_out, objectToWrap, initialRefcount, (unsigned)flags);
# 1435 "/usr/include/cuda_runtime.h" 3
}
# 1462 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1463 "/usr/include/cuda_runtime.h" 3
cudaGetSymbolAddress(void **
# 1464 "/usr/include/cuda_runtime.h" 3
devPtr, const T &
# 1465 "/usr/include/cuda_runtime.h" 3
symbol)
# 1467 "/usr/include/cuda_runtime.h" 3
{
# 1468 "/usr/include/cuda_runtime.h" 3
return ::cudaGetSymbolAddress(devPtr, (const void *)(&symbol));
# 1469 "/usr/include/cuda_runtime.h" 3
}
# 1494 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1495 "/usr/include/cuda_runtime.h" 3
cudaGetSymbolSize(size_t *
# 1496 "/usr/include/cuda_runtime.h" 3
size, const T &
# 1497 "/usr/include/cuda_runtime.h" 3
symbol)
# 1499 "/usr/include/cuda_runtime.h" 3
{
# 1500 "/usr/include/cuda_runtime.h" 3
return ::cudaGetSymbolSize(size, (const void *)(&symbol));
# 1501 "/usr/include/cuda_runtime.h" 3
}
# 1546 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1547 "/usr/include/cuda_runtime.h" 3
cudaFuncSetCacheConfig(T *
# 1548 "/usr/include/cuda_runtime.h" 3
func, cudaFuncCache
# 1549 "/usr/include/cuda_runtime.h" 3
cacheConfig)
# 1551 "/usr/include/cuda_runtime.h" 3
{
# 1552 "/usr/include/cuda_runtime.h" 3
return ::cudaFuncSetCacheConfig((const void *)func, cacheConfig);
# 1553 "/usr/include/cuda_runtime.h" 3
}
# 1555 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1556 "/usr/include/cuda_runtime.h" 3
cudaFuncSetSharedMemConfig(T *
# 1557 "/usr/include/cuda_runtime.h" 3
func, cudaSharedMemConfig
# 1558 "/usr/include/cuda_runtime.h" 3
config)
# 1560 "/usr/include/cuda_runtime.h" 3
{
# 1561 "/usr/include/cuda_runtime.h" 3
return ::cudaFuncSetSharedMemConfig((const void *)func, config);
# 1562 "/usr/include/cuda_runtime.h" 3
}
# 1594 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 1595 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxActiveBlocksPerMultiprocessor(int *
# 1596 "/usr/include/cuda_runtime.h" 3
numBlocks, T
# 1597 "/usr/include/cuda_runtime.h" 3
func, int
# 1598 "/usr/include/cuda_runtime.h" 3
blockSize, size_t
# 1599 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize)
# 1600 "/usr/include/cuda_runtime.h" 3
{
# 1601 "/usr/include/cuda_runtime.h" 3
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, 0);
# 1602 "/usr/include/cuda_runtime.h" 3
}
# 1646 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 1647 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int *
# 1648 "/usr/include/cuda_runtime.h" 3
numBlocks, T
# 1649 "/usr/include/cuda_runtime.h" 3
func, int
# 1650 "/usr/include/cuda_runtime.h" 3
blockSize, size_t
# 1651 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize, unsigned
# 1652 "/usr/include/cuda_runtime.h" 3
flags)
# 1653 "/usr/include/cuda_runtime.h" 3
{
# 1654 "/usr/include/cuda_runtime.h" 3
return ::cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(numBlocks, (const void *)func, blockSize, dynamicSMemSize, flags);
# 1655 "/usr/include/cuda_runtime.h" 3
}
# 1660 "/usr/include/cuda_runtime.h" 3
class __cudaOccupancyB2DHelper {
# 1661 "/usr/include/cuda_runtime.h" 3
size_t n;
# 1663 "/usr/include/cuda_runtime.h" 3
public: __cudaOccupancyB2DHelper(size_t n_) : n(n_) { }
# 1664 "/usr/include/cuda_runtime.h" 3
size_t operator()(int)
# 1665 "/usr/include/cuda_runtime.h" 3
{
# 1666 "/usr/include/cuda_runtime.h" 3
return n;
# 1667 "/usr/include/cuda_runtime.h" 3
}
# 1668 "/usr/include/cuda_runtime.h" 3
};
# 1716 "/usr/include/cuda_runtime.h" 3
template< class UnaryFunction, class T> static inline cudaError_t
# 1717 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(int *
# 1718 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 1719 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 1720 "/usr/include/cuda_runtime.h" 3
func, UnaryFunction
# 1721 "/usr/include/cuda_runtime.h" 3
blockSizeToDynamicSMemSize, int
# 1722 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0, unsigned
# 1723 "/usr/include/cuda_runtime.h" 3
flags = 0)
# 1724 "/usr/include/cuda_runtime.h" 3
{
# 1725 "/usr/include/cuda_runtime.h" 3
cudaError_t status;
# 1728 "/usr/include/cuda_runtime.h" 3
int device;
# 1729 "/usr/include/cuda_runtime.h" 3
cudaFuncAttributes attr;
# 1732 "/usr/include/cuda_runtime.h" 3
int maxThreadsPerMultiProcessor;
# 1733 "/usr/include/cuda_runtime.h" 3
int warpSize;
# 1734 "/usr/include/cuda_runtime.h" 3
int devMaxThreadsPerBlock;
# 1735 "/usr/include/cuda_runtime.h" 3
int multiProcessorCount;
# 1736 "/usr/include/cuda_runtime.h" 3
int funcMaxThreadsPerBlock;
# 1737 "/usr/include/cuda_runtime.h" 3
int occupancyLimit;
# 1738 "/usr/include/cuda_runtime.h" 3
int granularity;
# 1741 "/usr/include/cuda_runtime.h" 3
int maxBlockSize = 0;
# 1742 "/usr/include/cuda_runtime.h" 3
int numBlocks = 0;
# 1743 "/usr/include/cuda_runtime.h" 3
int maxOccupancy = 0;
# 1746 "/usr/include/cuda_runtime.h" 3
int blockSizeToTryAligned;
# 1747 "/usr/include/cuda_runtime.h" 3
int blockSizeToTry;
# 1748 "/usr/include/cuda_runtime.h" 3
int blockSizeLimitAligned;
# 1749 "/usr/include/cuda_runtime.h" 3
int occupancyInBlocks;
# 1750 "/usr/include/cuda_runtime.h" 3
int occupancyInThreads;
# 1751 "/usr/include/cuda_runtime.h" 3
size_t dynamicSMemSize;
# 1757 "/usr/include/cuda_runtime.h" 3
if (((!minGridSize) || (!blockSize)) || (!func)) {
# 1758 "/usr/include/cuda_runtime.h" 3
return cudaErrorInvalidValue;
# 1759 "/usr/include/cuda_runtime.h" 3
}
# 1765 "/usr/include/cuda_runtime.h" 3
status = ::cudaGetDevice(&device);
# 1766 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1767 "/usr/include/cuda_runtime.h" 3
return status;
# 1768 "/usr/include/cuda_runtime.h" 3
}
# 1770 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&maxThreadsPerMultiProcessor, cudaDevAttrMaxThreadsPerMultiProcessor, device);
# 1774 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1775 "/usr/include/cuda_runtime.h" 3
return status;
# 1776 "/usr/include/cuda_runtime.h" 3
}
# 1778 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&warpSize, cudaDevAttrWarpSize, device);
# 1782 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1783 "/usr/include/cuda_runtime.h" 3
return status;
# 1784 "/usr/include/cuda_runtime.h" 3
}
# 1786 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&devMaxThreadsPerBlock, cudaDevAttrMaxThreadsPerBlock, device);
# 1790 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1791 "/usr/include/cuda_runtime.h" 3
return status;
# 1792 "/usr/include/cuda_runtime.h" 3
}
# 1794 "/usr/include/cuda_runtime.h" 3
status = cudaDeviceGetAttribute(&multiProcessorCount, cudaDevAttrMultiProcessorCount, device);
# 1798 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1799 "/usr/include/cuda_runtime.h" 3
return status;
# 1800 "/usr/include/cuda_runtime.h" 3
}
# 1802 "/usr/include/cuda_runtime.h" 3
status = cudaFuncGetAttributes(&attr, func);
# 1803 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1804 "/usr/include/cuda_runtime.h" 3
return status;
# 1805 "/usr/include/cuda_runtime.h" 3
}
# 1807 "/usr/include/cuda_runtime.h" 3
funcMaxThreadsPerBlock = (attr.maxThreadsPerBlock);
# 1813 "/usr/include/cuda_runtime.h" 3
occupancyLimit = maxThreadsPerMultiProcessor;
# 1814 "/usr/include/cuda_runtime.h" 3
granularity = warpSize;
# 1816 "/usr/include/cuda_runtime.h" 3
if (blockSizeLimit == 0) {
# 1817 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = devMaxThreadsPerBlock;
# 1818 "/usr/include/cuda_runtime.h" 3
}
# 1820 "/usr/include/cuda_runtime.h" 3
if (devMaxThreadsPerBlock < blockSizeLimit) {
# 1821 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = devMaxThreadsPerBlock;
# 1822 "/usr/include/cuda_runtime.h" 3
}
# 1824 "/usr/include/cuda_runtime.h" 3
if (funcMaxThreadsPerBlock < blockSizeLimit) {
# 1825 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = funcMaxThreadsPerBlock;
# 1826 "/usr/include/cuda_runtime.h" 3
}
# 1828 "/usr/include/cuda_runtime.h" 3
blockSizeLimitAligned = (((blockSizeLimit + (granularity - 1)) / granularity) * granularity);
# 1830 "/usr/include/cuda_runtime.h" 3
for (blockSizeToTryAligned = blockSizeLimitAligned; blockSizeToTryAligned > 0; blockSizeToTryAligned -= granularity) {
# 1834 "/usr/include/cuda_runtime.h" 3
if (blockSizeLimit < blockSizeToTryAligned) {
# 1835 "/usr/include/cuda_runtime.h" 3
blockSizeToTry = blockSizeLimit;
# 1836 "/usr/include/cuda_runtime.h" 3
} else {
# 1837 "/usr/include/cuda_runtime.h" 3
blockSizeToTry = blockSizeToTryAligned;
# 1838 "/usr/include/cuda_runtime.h" 3
}
# 1840 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize = blockSizeToDynamicSMemSize(blockSizeToTry);
# 1842 "/usr/include/cuda_runtime.h" 3
status = cudaOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(&occupancyInBlocks, func, blockSizeToTry, dynamicSMemSize, flags);
# 1849 "/usr/include/cuda_runtime.h" 3
if (status != (cudaSuccess)) {
# 1850 "/usr/include/cuda_runtime.h" 3
return status;
# 1851 "/usr/include/cuda_runtime.h" 3
}
# 1853 "/usr/include/cuda_runtime.h" 3
occupancyInThreads = (blockSizeToTry * occupancyInBlocks);
# 1855 "/usr/include/cuda_runtime.h" 3
if (occupancyInThreads > maxOccupancy) {
# 1856 "/usr/include/cuda_runtime.h" 3
maxBlockSize = blockSizeToTry;
# 1857 "/usr/include/cuda_runtime.h" 3
numBlocks = occupancyInBlocks;
# 1858 "/usr/include/cuda_runtime.h" 3
maxOccupancy = occupancyInThreads;
# 1859 "/usr/include/cuda_runtime.h" 3
}
# 1863 "/usr/include/cuda_runtime.h" 3
if (occupancyLimit == maxOccupancy) {
# 1864 "/usr/include/cuda_runtime.h" 3
break;
# 1865 "/usr/include/cuda_runtime.h" 3
}
# 1866 "/usr/include/cuda_runtime.h" 3
}
# 1874 "/usr/include/cuda_runtime.h" 3
(*minGridSize) = (numBlocks * multiProcessorCount);
# 1875 "/usr/include/cuda_runtime.h" 3
(*blockSize) = maxBlockSize;
# 1877 "/usr/include/cuda_runtime.h" 3
return status;
# 1878 "/usr/include/cuda_runtime.h" 3
}
# 1912 "/usr/include/cuda_runtime.h" 3
template< class UnaryFunction, class T> static inline cudaError_t
# 1913 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeVariableSMem(int *
# 1914 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 1915 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 1916 "/usr/include/cuda_runtime.h" 3
func, UnaryFunction
# 1917 "/usr/include/cuda_runtime.h" 3
blockSizeToDynamicSMemSize, int
# 1918 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0)
# 1919 "/usr/include/cuda_runtime.h" 3
{
# 1920 "/usr/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, blockSizeToDynamicSMemSize, blockSizeLimit, 0);
# 1921 "/usr/include/cuda_runtime.h" 3
}
# 1958 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1959 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSize(int *
# 1960 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 1961 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 1962 "/usr/include/cuda_runtime.h" 3
func, size_t
# 1963 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize = 0, int
# 1964 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0)
# 1965 "/usr/include/cuda_runtime.h" 3
{
# 1966 "/usr/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, 0);
# 1967 "/usr/include/cuda_runtime.h" 3
}
# 1996 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 1997 "/usr/include/cuda_runtime.h" 3
cudaOccupancyAvailableDynamicSMemPerBlock(size_t *
# 1998 "/usr/include/cuda_runtime.h" 3
dynamicSmemSize, T
# 1999 "/usr/include/cuda_runtime.h" 3
func, int
# 2000 "/usr/include/cuda_runtime.h" 3
numBlocks, int
# 2001 "/usr/include/cuda_runtime.h" 3
blockSize)
# 2002 "/usr/include/cuda_runtime.h" 3
{
# 2003 "/usr/include/cuda_runtime.h" 3
return ::cudaOccupancyAvailableDynamicSMemPerBlock(dynamicSmemSize, (const void *)func, numBlocks, blockSize);
# 2004 "/usr/include/cuda_runtime.h" 3
}
# 2055 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 2056 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialBlockSizeWithFlags(int *
# 2057 "/usr/include/cuda_runtime.h" 3
minGridSize, int *
# 2058 "/usr/include/cuda_runtime.h" 3
blockSize, T
# 2059 "/usr/include/cuda_runtime.h" 3
func, size_t
# 2060 "/usr/include/cuda_runtime.h" 3
dynamicSMemSize = 0, int
# 2061 "/usr/include/cuda_runtime.h" 3
blockSizeLimit = 0, unsigned
# 2062 "/usr/include/cuda_runtime.h" 3
flags = 0)
# 2063 "/usr/include/cuda_runtime.h" 3
{
# 2064 "/usr/include/cuda_runtime.h" 3
return cudaOccupancyMaxPotentialBlockSizeVariableSMemWithFlags(minGridSize, blockSize, func, ((__cudaOccupancyB2DHelper)(dynamicSMemSize)), blockSizeLimit, flags);
# 2065 "/usr/include/cuda_runtime.h" 3
}
# 2099 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 2100 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxPotentialClusterSize(int *
# 2101 "/usr/include/cuda_runtime.h" 3
clusterSize, T *
# 2102 "/usr/include/cuda_runtime.h" 3
func, const cudaLaunchConfig_t *
# 2103 "/usr/include/cuda_runtime.h" 3
config)
# 2104 "/usr/include/cuda_runtime.h" 3
{
# 2105 "/usr/include/cuda_runtime.h" 3
return ::cudaOccupancyMaxPotentialClusterSize(clusterSize, (const void *)func, config);
# 2106 "/usr/include/cuda_runtime.h" 3
}
# 2142 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 2143 "/usr/include/cuda_runtime.h" 3
cudaOccupancyMaxActiveClusters(int *
# 2144 "/usr/include/cuda_runtime.h" 3
numClusters, T *
# 2145 "/usr/include/cuda_runtime.h" 3
func, const cudaLaunchConfig_t *
# 2146 "/usr/include/cuda_runtime.h" 3
config)
# 2147 "/usr/include/cuda_runtime.h" 3
{
# 2148 "/usr/include/cuda_runtime.h" 3
return ::cudaOccupancyMaxActiveClusters(numClusters, (const void *)func, config);
# 2149 "/usr/include/cuda_runtime.h" 3
}
# 2182 "/usr/include/cuda_runtime.h" 3
template< class T> inline cudaError_t
# 2183 "/usr/include/cuda_runtime.h" 3
cudaFuncGetAttributes(cudaFuncAttributes *
# 2184 "/usr/include/cuda_runtime.h" 3
attr, T *
# 2185 "/usr/include/cuda_runtime.h" 3
entry)
# 2187 "/usr/include/cuda_runtime.h" 3
{
# 2188 "/usr/include/cuda_runtime.h" 3
return ::cudaFuncGetAttributes(attr, (const void *)entry);
# 2189 "/usr/include/cuda_runtime.h" 3
}
# 2244 "/usr/include/cuda_runtime.h" 3
template< class T> static inline cudaError_t
# 2245 "/usr/include/cuda_runtime.h" 3
cudaFuncSetAttribute(T *
# 2246 "/usr/include/cuda_runtime.h" 3
entry, cudaFuncAttribute
# 2247 "/usr/include/cuda_runtime.h" 3
attr, int
# 2248 "/usr/include/cuda_runtime.h" 3
value)
# 2250 "/usr/include/cuda_runtime.h" 3
{
# 2251 "/usr/include/cuda_runtime.h" 3
return ::cudaFuncSetAttribute((const void *)entry, attr, value);
# 2252 "/usr/include/cuda_runtime.h" 3
}
# 2263 "/usr/include/cuda_runtime.h" 3
#pragma GCC diagnostic pop
# 30 "/usr/include/stdio.h" 3
extern "C" {
# 40 "/usr/lib/gcc/x86_64-linux-gnu/12/include/stdarg.h" 3
typedef __builtin_va_list __gnuc_va_list;
# 21 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
typedef
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
struct {
# 15 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
int __count;
# 17 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
union {
# 18 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
unsigned __wch;
# 19 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
char __wchb[4];
# 20 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
} __value;
# 21 "/usr/include/x86_64-linux-gnu/bits/types/__mbstate_t.h" 3
} __mbstate_t;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
typedef
# 10 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
struct _G_fpos_t {
# 12 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
__off_t __pos;
# 13 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
__mbstate_t __state;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos_t.h" 3
} __fpos_t;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
typedef
# 10 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
struct _G_fpos64_t {
# 12 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
__off64_t __pos;
# 13 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
__mbstate_t __state;
# 14 "/usr/include/x86_64-linux-gnu/bits/types/__fpos64_t.h" 3
} __fpos64_t;
# 4 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h" 3
struct _IO_FILE;
# 5 "/usr/include/x86_64-linux-gnu/bits/types/__FILE.h" 3
typedef _IO_FILE __FILE;
# 4 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h" 3
struct _IO_FILE;
# 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h" 3
typedef _IO_FILE FILE;
# 35 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_FILE;
# 36 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_marker;
# 37 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_codecvt;
# 38 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_wide_data;
# 43 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
typedef void _IO_lock_t;
# 49 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
struct _IO_FILE {
# 51 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _flags;
# 54 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_read_ptr;
# 55 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_read_end;
# 56 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_read_base;
# 57 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_write_base;
# 58 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_write_ptr;
# 59 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_write_end;
# 60 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_buf_base;
# 61 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_buf_end;
# 64 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_save_base;
# 65 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_backup_base;
# 66 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char *_IO_save_end;
# 68 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_marker *_markers;
# 70 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_FILE *_chain;
# 72 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _fileno;
# 73 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _flags2;
# 74 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
__off_t _old_offset;
# 77 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
unsigned short _cur_column;
# 78 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
signed char _vtable_offset;
# 79 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char _shortbuf[1];
# 81 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_lock_t *_lock;
# 89 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
__off64_t _offset;
# 91 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_codecvt *_codecvt;
# 92 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_wide_data *_wide_data;
# 93 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
_IO_FILE *_freeres_list;
# 94 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
void *_freeres_buf;
# 95 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
size_t __pad5;
# 96 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
int _mode;
# 98 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
char _unused2[(((15) * sizeof(int)) - ((4) * sizeof(void *))) - sizeof(size_t)];
# 99 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h" 3
};
# 27 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
typedef __ssize_t cookie_read_function_t(void * __cookie, char * __buf, size_t __nbytes);
# 36 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
typedef __ssize_t cookie_write_function_t(void * __cookie, const char * __buf, size_t __nbytes);
# 45 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
typedef int cookie_seek_function_t(void * __cookie, __off64_t * __pos, int __w);
# 48 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
typedef int cookie_close_function_t(void * __cookie);
# 61 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
typedef
# 55 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
struct _IO_cookie_io_functions_t {
# 57 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_read_function_t *read;
# 58 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_write_function_t *write;
# 59 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_seek_function_t *seek;
# 60 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
cookie_close_function_t *close;
# 61 "/usr/include/x86_64-linux-gnu/bits/types/cookie_io_functions_t.h" 3
} cookie_io_functions_t;
# 53 "/usr/include/stdio.h" 3
typedef __gnuc_va_list va_list;
# 85 "/usr/include/stdio.h" 3
typedef __fpos_t fpos_t;
# 90 "/usr/include/stdio.h" 3
typedef __fpos64_t fpos64_t;
# 149 "/usr/include/stdio.h" 3
extern FILE *stdin;
# 150 "/usr/include/stdio.h" 3
extern FILE *stdout;
# 151 "/usr/include/stdio.h" 3
extern FILE *stderr;
# 158 "/usr/include/stdio.h" 3
extern int remove(const char * __filename) noexcept(true);
# 160 "/usr/include/stdio.h" 3
extern int rename(const char * __old, const char * __new) noexcept(true);
# 164 "/usr/include/stdio.h" 3
extern int renameat(int __oldfd, const char * __old, int __newfd, const char * __new) noexcept(true);
# 176 "/usr/include/stdio.h" 3
extern int renameat2(int __oldfd, const char * __old, int __newfd, const char * __new, unsigned __flags) noexcept(true);
# 184 "/usr/include/stdio.h" 3
extern int fclose(FILE * __stream) __attribute((__nonnull__(1)));
# 194 "/usr/include/stdio.h" 3
extern FILE *tmpfile()
# 195 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__malloc__(fclose, 1)));
# 206 "/usr/include/stdio.h" 3
extern FILE *tmpfile64()
# 207 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__malloc__(fclose, 1)));
# 211 "/usr/include/stdio.h" 3
extern char *tmpnam(char [20]) noexcept(true);
# 216 "/usr/include/stdio.h" 3
extern char *tmpnam_r(char __s[20]) noexcept(true);
# 228 "/usr/include/stdio.h" 3
extern char *tempnam(const char * __dir, const char * __pfx) noexcept(true)
# 229 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__malloc__(__builtin_free, 1)));
# 236 "/usr/include/stdio.h" 3
extern int fflush(FILE * __stream);
# 245 "/usr/include/stdio.h" 3
extern int fflush_unlocked(FILE * __stream);
# 255 "/usr/include/stdio.h" 3
extern int fcloseall();
# 264 "/usr/include/stdio.h" 3
extern FILE *fopen(const char *__restrict__ __filename, const char *__restrict__ __modes)
# 266 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__malloc__(fclose, 1)));
# 271 "/usr/include/stdio.h" 3
extern FILE *freopen(const char *__restrict__ __filename, const char *__restrict__ __modes, FILE *__restrict__ __stream)
# 273 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(3)));
# 289 "/usr/include/stdio.h" 3
extern FILE *fopen64(const char *__restrict__ __filename, const char *__restrict__ __modes)
# 291 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__malloc__(fclose, 1)));
# 292 "/usr/include/stdio.h" 3
extern FILE *freopen64(const char *__restrict__ __filename, const char *__restrict__ __modes, FILE *__restrict__ __stream)
# 294 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(3)));
# 299 "/usr/include/stdio.h" 3
extern FILE *fdopen(int __fd, const char * __modes) noexcept(true)
# 300 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__malloc__(fclose, 1)));
# 306 "/usr/include/stdio.h" 3
extern FILE *fopencookie(void *__restrict__ __magic_cookie, const char *__restrict__ __modes, cookie_io_functions_t __io_funcs) noexcept(true)
# 309 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__malloc__(fclose, 1)));
# 314 "/usr/include/stdio.h" 3
extern FILE *fmemopen(void * __s, size_t __len, const char * __modes) noexcept(true)
# 315 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__malloc__(fclose, 1)));
# 320 "/usr/include/stdio.h" 3
extern FILE *open_memstream(char ** __bufloc, size_t * __sizeloc) noexcept(true)
# 321 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__malloc__(fclose, 1)));
# 334 "/usr/include/stdio.h" 3
extern void setbuf(FILE *__restrict__ __stream, char *__restrict__ __buf) noexcept(true)
# 335 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 339 "/usr/include/stdio.h" 3
extern int setvbuf(FILE *__restrict__ __stream, char *__restrict__ __buf, int __modes, size_t __n) noexcept(true)
# 340 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 345 "/usr/include/stdio.h" 3
extern void setbuffer(FILE *__restrict__ __stream, char *__restrict__ __buf, size_t __size) noexcept(true)
# 346 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 349 "/usr/include/stdio.h" 3
extern void setlinebuf(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 357 "/usr/include/stdio.h" 3
extern int fprintf(FILE *__restrict__ __stream, const char *__restrict__ __format, ...)
# 358 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 363 "/usr/include/stdio.h" 3
extern int printf(const char *__restrict__ __format, ...);
# 365 "/usr/include/stdio.h" 3
extern int sprintf(char *__restrict__ __s, const char *__restrict__ __format, ...) noexcept(true);
# 372 "/usr/include/stdio.h" 3
extern int vfprintf(FILE *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg)
# 373 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 378 "/usr/include/stdio.h" 3
extern int vprintf(const char *__restrict__ __format, __gnuc_va_list __arg);
# 380 "/usr/include/stdio.h" 3
extern int vsprintf(char *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) noexcept(true);
# 385 "/usr/include/stdio.h" 3
extern int snprintf(char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format, ...) noexcept(true)
# 387 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 4)));
# 389 "/usr/include/stdio.h" 3
extern int vsnprintf(char *__restrict__ __s, size_t __maxlen, const char *__restrict__ __format, __gnuc_va_list __arg) noexcept(true)
# 391 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 3, 0)));
# 397 "/usr/include/stdio.h" 3
extern int vasprintf(char **__restrict__ __ptr, const char *__restrict__ __f, __gnuc_va_list __arg) noexcept(true)
# 399 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 400 "/usr/include/stdio.h" 3
extern int __asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) noexcept(true)
# 402 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 403 "/usr/include/stdio.h" 3
extern int asprintf(char **__restrict__ __ptr, const char *__restrict__ __fmt, ...) noexcept(true)
# 405 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 410 "/usr/include/stdio.h" 3
extern int vdprintf(int __fd, const char *__restrict__ __fmt, __gnuc_va_list __arg)
# 412 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 413 "/usr/include/stdio.h" 3
extern int dprintf(int __fd, const char *__restrict__ __fmt, ...)
# 414 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 422 "/usr/include/stdio.h" 3
extern int fscanf(FILE *__restrict__ __stream, const char *__restrict__ __format, ...) __asm__("__isoc23_fscanf")
# 423 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 428 "/usr/include/stdio.h" 3
extern int scanf(const char *__restrict__ __format, ...) __asm__("__isoc23_scanf");
# 430 "/usr/include/stdio.h" 3
extern int sscanf(const char *__restrict__ __s, const char *__restrict__ __format, ...) noexcept(true) __asm__("__isoc23_sscanf");
# 442 "/usr/include/stdio.h" 3
extern int fscanf(FILE *__restrict__ __stream, const char *__restrict__ __format, ...) __asm__("__isoc23_fscanf")
# 444 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 445 "/usr/include/stdio.h" 3
extern int scanf(const char *__restrict__ __format, ...) __asm__("__isoc23_scanf");
# 447 "/usr/include/stdio.h" 3
extern int sscanf(const char *__restrict__ __s, const char *__restrict__ __format, ...) noexcept(true) __asm__("__isoc23_sscanf");
# 490 "/usr/include/stdio.h" 3
extern int vfscanf(FILE *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) __asm__("__isoc23_vfscanf")
# 492 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0))) __attribute((__nonnull__(1)));
# 498 "/usr/include/stdio.h" 3
extern int vscanf(const char *__restrict__ __format, __gnuc_va_list __arg) __asm__("__isoc23_vscanf")
# 499 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0)));
# 502 "/usr/include/stdio.h" 3
extern int vsscanf(const char *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) noexcept(true) __asm__("__isoc23_vsscanf")
# 504 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 511 "/usr/include/stdio.h" 3
extern int vfscanf(FILE *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) __asm__("__isoc23_vfscanf")
# 515 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0))) __attribute((__nonnull__(1)));
# 516 "/usr/include/stdio.h" 3
extern int vscanf(const char *__restrict__ __format, __gnuc_va_list __arg) __asm__("__isoc23_vscanf")
# 518 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 1, 0)));
# 519 "/usr/include/stdio.h" 3
extern int vsscanf(const char *__restrict__ __s, const char *__restrict__ __format, __gnuc_va_list __arg) noexcept(true) __asm__("__isoc23_vsscanf")
# 523 "/usr/include/stdio.h" 3
 __attribute((__format__(__scanf__, 2, 0)));
# 575 "/usr/include/stdio.h" 3
extern int fgetc(FILE * __stream) __attribute((__nonnull__(1)));
# 576 "/usr/include/stdio.h" 3
extern int getc(FILE * __stream) __attribute((__nonnull__(1)));
# 582 "/usr/include/stdio.h" 3
extern int getchar();
# 589 "/usr/include/stdio.h" 3
extern int getc_unlocked(FILE * __stream) __attribute((__nonnull__(1)));
# 590 "/usr/include/stdio.h" 3
extern int getchar_unlocked();
# 600 "/usr/include/stdio.h" 3
extern int fgetc_unlocked(FILE * __stream) __attribute((__nonnull__(1)));
# 611 "/usr/include/stdio.h" 3
extern int fputc(int __c, FILE * __stream) __attribute((__nonnull__(2)));
# 612 "/usr/include/stdio.h" 3
extern int putc(int __c, FILE * __stream) __attribute((__nonnull__(2)));
# 618 "/usr/include/stdio.h" 3
extern int putchar(int __c);
# 627 "/usr/include/stdio.h" 3
extern int fputc_unlocked(int __c, FILE * __stream) __attribute((__nonnull__(2)));
# 635 "/usr/include/stdio.h" 3
extern int putc_unlocked(int __c, FILE * __stream) __attribute((__nonnull__(2)));
# 636 "/usr/include/stdio.h" 3
extern int putchar_unlocked(int __c);
# 643 "/usr/include/stdio.h" 3
extern int getw(FILE * __stream) __attribute((__nonnull__(1)));
# 646 "/usr/include/stdio.h" 3
extern int putw(int __w, FILE * __stream) __attribute((__nonnull__(2)));
# 654 "/usr/include/stdio.h" 3
extern char *fgets(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 655 "/usr/include/stdio.h" 3
 __attribute((__access__(__write_only__ , 1 , 2 ))) __attribute((__nonnull__(3)));
# 677 "/usr/include/stdio.h" 3
extern char *fgets_unlocked(char *__restrict__ __s, int __n, FILE *__restrict__ __stream)
# 679 "/usr/include/stdio.h" 3
 __attribute((__access__(__write_only__ , 1 , 2 ))) __attribute((__nonnull__(3)));
# 694 "/usr/include/stdio.h" 3
extern __ssize_t __getdelim(char **__restrict__ __lineptr, size_t *__restrict__ __n, int __delimiter, FILE *__restrict__ __stream)
# 696 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(4)));
# 697 "/usr/include/stdio.h" 3
extern __ssize_t getdelim(char **__restrict__ __lineptr, size_t *__restrict__ __n, int __delimiter, FILE *__restrict__ __stream)
# 699 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(4)));
# 707 "/usr/include/stdio.h" 3
extern __ssize_t getline(char **__restrict__ __lineptr, size_t *__restrict__ __n, FILE *__restrict__ __stream)
# 709 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(3)));
# 717 "/usr/include/stdio.h" 3
extern int fputs(const char *__restrict__ __s, FILE *__restrict__ __stream)
# 718 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(2)));
# 724 "/usr/include/stdio.h" 3
extern int puts(const char * __s);
# 731 "/usr/include/stdio.h" 3
extern int ungetc(int __c, FILE * __stream) __attribute((__nonnull__(2)));
# 738 "/usr/include/stdio.h" 3
extern size_t fread(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream)
# 740 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(4)));
# 745 "/usr/include/stdio.h" 3
extern size_t fwrite(const void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __s)
# 746 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(4)));
# 755 "/usr/include/stdio.h" 3
extern int fputs_unlocked(const char *__restrict__ __s, FILE *__restrict__ __stream)
# 756 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(2)));
# 766 "/usr/include/stdio.h" 3
extern size_t fread_unlocked(void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream)
# 768 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(4)));
# 769 "/usr/include/stdio.h" 3
extern size_t fwrite_unlocked(const void *__restrict__ __ptr, size_t __size, size_t __n, FILE *__restrict__ __stream)
# 771 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(4)));
# 779 "/usr/include/stdio.h" 3
extern int fseek(FILE * __stream, long __off, int __whence)
# 780 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 785 "/usr/include/stdio.h" 3
extern long ftell(FILE * __stream) __attribute((__nonnull__(1)));
# 790 "/usr/include/stdio.h" 3
extern void rewind(FILE * __stream) __attribute((__nonnull__(1)));
# 803 "/usr/include/stdio.h" 3
extern int fseeko(FILE * __stream, __off_t __off, int __whence)
# 804 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 809 "/usr/include/stdio.h" 3
extern __off_t ftello(FILE * __stream) __attribute((__nonnull__(1)));
# 829 "/usr/include/stdio.h" 3
extern int fgetpos(FILE *__restrict__ __stream, fpos_t *__restrict__ __pos)
# 830 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 835 "/usr/include/stdio.h" 3
extern int fsetpos(FILE * __stream, const fpos_t * __pos) __attribute((__nonnull__(1)));
# 851 "/usr/include/stdio.h" 3
extern int fseeko64(FILE * __stream, __off64_t __off, int __whence)
# 852 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 853 "/usr/include/stdio.h" 3
extern __off64_t ftello64(FILE * __stream) __attribute((__nonnull__(1)));
# 854 "/usr/include/stdio.h" 3
extern int fgetpos64(FILE *__restrict__ __stream, fpos64_t *__restrict__ __pos)
# 855 "/usr/include/stdio.h" 3
 __attribute((__nonnull__(1)));
# 856 "/usr/include/stdio.h" 3
extern int fsetpos64(FILE * __stream, const fpos64_t * __pos) __attribute((__nonnull__(1)));
# 860 "/usr/include/stdio.h" 3
extern void clearerr(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 862 "/usr/include/stdio.h" 3
extern int feof(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 864 "/usr/include/stdio.h" 3
extern int ferror(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 868 "/usr/include/stdio.h" 3
extern void clearerr_unlocked(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 869 "/usr/include/stdio.h" 3
extern int feof_unlocked(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 870 "/usr/include/stdio.h" 3
extern int ferror_unlocked(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 878 "/usr/include/stdio.h" 3
extern void perror(const char * __s) __attribute((__cold__));
# 883 "/usr/include/stdio.h" 3
extern int fileno(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 888 "/usr/include/stdio.h" 3
extern int fileno_unlocked(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 897 "/usr/include/stdio.h" 3
extern int pclose(FILE * __stream) __attribute((__nonnull__(1)));
# 903 "/usr/include/stdio.h" 3
extern FILE *popen(const char * __command, const char * __modes)
# 904 "/usr/include/stdio.h" 3
 __attribute((__malloc__)) __attribute((__malloc__(pclose, 1)));
# 911 "/usr/include/stdio.h" 3
extern char *ctermid(char * __s) noexcept(true)
# 912 "/usr/include/stdio.h" 3
 __attribute((__access__(__write_only__ , 1 )));
# 918 "/usr/include/stdio.h" 3
extern char *cuserid(char * __s)
# 919 "/usr/include/stdio.h" 3
 __attribute((__access__(__write_only__ , 1 )));
# 924 "/usr/include/stdio.h" 3
struct obstack;
# 927 "/usr/include/stdio.h" 3
extern int obstack_printf(obstack *__restrict__ __obstack, const char *__restrict__ __format, ...) noexcept(true)
# 929 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 3)));
# 930 "/usr/include/stdio.h" 3
extern int obstack_vprintf(obstack *__restrict__ __obstack, const char *__restrict__ __format, __gnuc_va_list __args) noexcept(true)
# 933 "/usr/include/stdio.h" 3
 __attribute((__format__(__printf__, 2, 0)));
# 941 "/usr/include/stdio.h" 3
extern void flockfile(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 945 "/usr/include/stdio.h" 3
extern int ftrylockfile(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 948 "/usr/include/stdio.h" 3
extern void funlockfile(FILE * __stream) noexcept(true) __attribute((__nonnull__(1)));
# 959 "/usr/include/stdio.h" 3
extern int __uflow(FILE *);
# 960 "/usr/include/stdio.h" 3
extern int __overflow(FILE *, int);
# 983 "/usr/include/stdio.h" 3
}
# 66 "/usr/include/assert.h" 3
extern "C" {
# 69 "/usr/include/assert.h" 3
extern void __assert_fail(const char * __assertion, const char * __file, unsigned __line, const char * __function) noexcept(true)
# 71 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 74 "/usr/include/assert.h" 3
extern void __assert_perror_fail(int __errnum, const char * __file, unsigned __line, const char * __function) noexcept(true)
# 76 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 81 "/usr/include/assert.h" 3
extern void __assert(const char * __assertion, const char * __file, int __line) noexcept(true)
# 82 "/usr/include/assert.h" 3
 __attribute((__noreturn__));
# 85 "/usr/include/assert.h" 3
}
# 24 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3
typedef __uint8_t uint8_t;
# 25 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3
typedef __uint16_t uint16_t;
# 26 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3
typedef __uint32_t uint32_t;
# 27 "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h" 3
typedef __uint64_t uint64_t;
# 25 "/usr/include/x86_64-linux-gnu/bits/stdint-least.h" 3
typedef __int_least8_t int_least8_t;
# 26 "/usr/include/x86_64-linux-gnu/bits/stdint-least.h" 3
typedef __int_least16_t int_least16_t;
# 27 "/usr/include/x86_64-linux-gnu/bits/stdint-least.h" 3
typedef __int_least32_t int_least32_t;
# 28 "/usr/include/x86_64-linux-gnu/bits/stdint-least.h" 3
typedef __int_least64_t int_least64_t;
# 31 "/usr/include/x86_64-linux-gnu/bits/stdint-least.h" 3
typedef __uint_least8_t uint_least8_t;
# 32 "/usr/include/x86_64-linux-gnu/bits/stdint-least.h" 3
typedef __uint_least16_t uint_least16_t;
# 33 "/usr/include/x86_64-linux-gnu/bits/stdint-least.h" 3
typedef __uint_least32_t uint_least32_t;
# 34 "/usr/include/x86_64-linux-gnu/bits/stdint-least.h" 3
typedef __uint_least64_t uint_least64_t;
# 47 "/usr/include/stdint.h" 3
typedef signed char int_fast8_t;
# 49 "/usr/include/stdint.h" 3
typedef long int_fast16_t;
# 50 "/usr/include/stdint.h" 3
typedef long int_fast32_t;
# 51 "/usr/include/stdint.h" 3
typedef long int_fast64_t;
# 60 "/usr/include/stdint.h" 3
typedef unsigned char uint_fast8_t;
# 62 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast16_t;
# 63 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast32_t;
# 64 "/usr/include/stdint.h" 3
typedef unsigned long uint_fast64_t;
# 76 "/usr/include/stdint.h" 3
typedef long intptr_t;
# 79 "/usr/include/stdint.h" 3
typedef unsigned long uintptr_t;
# 90 "/usr/include/stdint.h" 3
typedef __intmax_t intmax_t;
# 91 "/usr/include/stdint.h" 3
typedef __uintmax_t uintmax_t;
# 61 "/usr/include/cuda.h" 3
typedef uint32_t cuuint32_t;
# 62 "/usr/include/cuda.h" 3
typedef uint64_t cuuint64_t;
# 243 "/usr/include/cuda.h" 3
extern "C" {
# 251 "/usr/include/cuda.h" 3
typedef unsigned long long CUdeviceptr_v2;
# 255 "/usr/include/cuda.h" 3
typedef CUdeviceptr_v2 CUdeviceptr;
# 257 "/usr/include/cuda.h" 3
typedef int CUdevice_v1;
# 258 "/usr/include/cuda.h" 3
typedef CUdevice_v1 CUdevice;
# 259 "/usr/include/cuda.h" 3
typedef struct CUctx_st *CUcontext;
# 260 "/usr/include/cuda.h" 3
typedef struct CUmod_st *CUmodule;
# 261 "/usr/include/cuda.h" 3
typedef CUfunc_st *CUfunction;
# 262 "/usr/include/cuda.h" 3
typedef struct CUlib_st *CUlibrary;
# 263 "/usr/include/cuda.h" 3
typedef struct CUkern_st *CUkernel;
# 264 "/usr/include/cuda.h" 3
typedef struct CUarray_st *CUarray;
# 265 "/usr/include/cuda.h" 3
typedef struct CUmipmappedArray_st *CUmipmappedArray;
# 266 "/usr/include/cuda.h" 3
typedef struct CUtexref_st *CUtexref;
# 267 "/usr/include/cuda.h" 3
typedef struct CUsurfref_st *CUsurfref;
# 268 "/usr/include/cuda.h" 3
typedef CUevent_st *CUevent;
# 269 "/usr/include/cuda.h" 3
typedef CUstream_st *CUstream;
# 270 "/usr/include/cuda.h" 3
typedef struct CUgraphicsResource_st *CUgraphicsResource;
# 271 "/usr/include/cuda.h" 3
typedef unsigned long long CUtexObject_v1;
# 272 "/usr/include/cuda.h" 3
typedef CUtexObject_v1 CUtexObject;
# 273 "/usr/include/cuda.h" 3
typedef unsigned long long CUsurfObject_v1;
# 274 "/usr/include/cuda.h" 3
typedef CUsurfObject_v1 CUsurfObject;
# 275 "/usr/include/cuda.h" 3
typedef struct CUextMemory_st *CUexternalMemory;
# 276 "/usr/include/cuda.h" 3
typedef struct CUextSemaphore_st *CUexternalSemaphore;
# 277 "/usr/include/cuda.h" 3
typedef CUgraph_st *CUgraph;
# 278 "/usr/include/cuda.h" 3
typedef CUgraphNode_st *CUgraphNode;
# 279 "/usr/include/cuda.h" 3
typedef CUgraphExec_st *CUgraphExec;
# 280 "/usr/include/cuda.h" 3
typedef CUmemPoolHandle_st *CUmemoryPool;
# 281 "/usr/include/cuda.h" 3
typedef CUuserObject_st *CUuserObject;
# 300 "/usr/include/cuda.h" 3
typedef
# 298 "/usr/include/cuda.h" 3
struct CUipcEventHandle_st {
# 299 "/usr/include/cuda.h" 3
char reserved[64];
# 300 "/usr/include/cuda.h" 3
} CUipcEventHandle_v1;
# 301 "/usr/include/cuda.h" 3
typedef CUipcEventHandle_v1 CUipcEventHandle;
# 308 "/usr/include/cuda.h" 3
typedef
# 306 "/usr/include/cuda.h" 3
struct CUipcMemHandle_st {
# 307 "/usr/include/cuda.h" 3
char reserved[64];
# 308 "/usr/include/cuda.h" 3
} CUipcMemHandle_v1;
# 309 "/usr/include/cuda.h" 3
typedef CUipcMemHandle_v1 CUipcMemHandle;
# 316 "/usr/include/cuda.h" 3
typedef
# 314 "/usr/include/cuda.h" 3
enum CUipcMem_flags_enum {
# 315 "/usr/include/cuda.h" 3
CU_IPC_MEM_LAZY_ENABLE_PEER_ACCESS = 1
# 316 "/usr/include/cuda.h" 3
} CUipcMem_flags;
# 326 "/usr/include/cuda.h" 3
typedef
# 322 "/usr/include/cuda.h" 3
enum CUmemAttach_flags_enum {
# 323 "/usr/include/cuda.h" 3
CU_MEM_ATTACH_GLOBAL = 1,
# 324 "/usr/include/cuda.h" 3
CU_MEM_ATTACH_HOST,
# 325 "/usr/include/cuda.h" 3
CU_MEM_ATTACH_SINGLE = 4
# 326 "/usr/include/cuda.h" 3
} CUmemAttach_flags;
# 345 "/usr/include/cuda.h" 3
typedef
# 331 "/usr/include/cuda.h" 3
enum CUctx_flags_enum {
# 332 "/usr/include/cuda.h" 3
CU_CTX_SCHED_AUTO,
# 333 "/usr/include/cuda.h" 3
CU_CTX_SCHED_SPIN,
# 334 "/usr/include/cuda.h" 3
CU_CTX_SCHED_YIELD,
# 335 "/usr/include/cuda.h" 3
CU_CTX_SCHED_BLOCKING_SYNC = 4,
# 336 "/usr/include/cuda.h" 3
CU_CTX_BLOCKING_SYNC = 4,
# 339 "/usr/include/cuda.h" 3
CU_CTX_SCHED_MASK = 7,
# 340 "/usr/include/cuda.h" 3
CU_CTX_MAP_HOST,
# 343 "/usr/include/cuda.h" 3
CU_CTX_LMEM_RESIZE_TO_MAX = 16,
# 344 "/usr/include/cuda.h" 3
CU_CTX_FLAGS_MASK = 31
# 345 "/usr/include/cuda.h" 3
} CUctx_flags;
# 355 "/usr/include/cuda.h" 3
typedef
# 350 "/usr/include/cuda.h" 3
enum CUevent_sched_flags_enum {
# 351 "/usr/include/cuda.h" 3
CU_EVENT_SCHED_AUTO,
# 352 "/usr/include/cuda.h" 3
CU_EVENT_SCHED_SPIN,
# 353 "/usr/include/cuda.h" 3
CU_EVENT_SCHED_YIELD,
# 354 "/usr/include/cuda.h" 3
CU_EVENT_SCHED_BLOCKING_SYNC = 4
# 355 "/usr/include/cuda.h" 3
} CUevent_sched_flags;
# 365 "/usr/include/cuda.h" 3
typedef
# 360 "/usr/include/cuda.h" 3
enum cl_event_flags_enum {
# 361 "/usr/include/cuda.h" 3
NVCL_EVENT_SCHED_AUTO,
# 362 "/usr/include/cuda.h" 3
NVCL_EVENT_SCHED_SPIN,
# 363 "/usr/include/cuda.h" 3
NVCL_EVENT_SCHED_YIELD,
# 364 "/usr/include/cuda.h" 3
NVCL_EVENT_SCHED_BLOCKING_SYNC = 4
# 365 "/usr/include/cuda.h" 3
} cl_event_flags;
# 375 "/usr/include/cuda.h" 3
typedef
# 370 "/usr/include/cuda.h" 3
enum cl_context_flags_enum {
# 371 "/usr/include/cuda.h" 3
NVCL_CTX_SCHED_AUTO,
# 372 "/usr/include/cuda.h" 3
NVCL_CTX_SCHED_SPIN,
# 373 "/usr/include/cuda.h" 3
NVCL_CTX_SCHED_YIELD,
# 374 "/usr/include/cuda.h" 3
NVCL_CTX_SCHED_BLOCKING_SYNC = 4
# 375 "/usr/include/cuda.h" 3
} cl_context_flags;
# 384 "/usr/include/cuda.h" 3
typedef
# 381 "/usr/include/cuda.h" 3
enum CUstream_flags_enum {
# 382 "/usr/include/cuda.h" 3
CU_STREAM_DEFAULT,
# 383 "/usr/include/cuda.h" 3
CU_STREAM_NON_BLOCKING
# 384 "/usr/include/cuda.h" 3
} CUstream_flags;
# 414 "/usr/include/cuda.h" 3
typedef
# 409 "/usr/include/cuda.h" 3
enum CUevent_flags_enum {
# 410 "/usr/include/cuda.h" 3
CU_EVENT_DEFAULT,
# 411 "/usr/include/cuda.h" 3
CU_EVENT_BLOCKING_SYNC,
# 412 "/usr/include/cuda.h" 3
CU_EVENT_DISABLE_TIMING,
# 413 "/usr/include/cuda.h" 3
CU_EVENT_INTERPROCESS = 4
# 414 "/usr/include/cuda.h" 3
} CUevent_flags;
# 424 "/usr/include/cuda.h" 3
typedef
# 419 "/usr/include/cuda.h" 3
enum CUevent_record_flags_enum {
# 420 "/usr/include/cuda.h" 3
CU_EVENT_RECORD_DEFAULT,
# 421 "/usr/include/cuda.h" 3
CU_EVENT_RECORD_EXTERNAL
# 424 "/usr/include/cuda.h" 3
} CUevent_record_flags;
# 434 "/usr/include/cuda.h" 3
typedef
# 429 "/usr/include/cuda.h" 3
enum CUevent_wait_flags_enum {
# 430 "/usr/include/cuda.h" 3
CU_EVENT_WAIT_DEFAULT,
# 431 "/usr/include/cuda.h" 3
CU_EVENT_WAIT_EXTERNAL
# 434 "/usr/include/cuda.h" 3
} CUevent_wait_flags;
# 457 "/usr/include/cuda.h" 3
typedef
# 439 "/usr/include/cuda.h" 3
enum CUstreamWaitValue_flags_enum {
# 440 "/usr/include/cuda.h" 3
CU_STREAM_WAIT_VALUE_GEQ,
# 443 "/usr/include/cuda.h" 3
CU_STREAM_WAIT_VALUE_EQ,
# 444 "/usr/include/cuda.h" 3
CU_STREAM_WAIT_VALUE_AND,
# 445 "/usr/include/cuda.h" 3
CU_STREAM_WAIT_VALUE_NOR,
# 448 "/usr/include/cuda.h" 3
CU_STREAM_WAIT_VALUE_FLUSH = (1 << 30)
# 457 "/usr/include/cuda.h" 3
} CUstreamWaitValue_flags;
# 471 "/usr/include/cuda.h" 3
typedef
# 462 "/usr/include/cuda.h" 3
enum CUstreamWriteValue_flags_enum {
# 463 "/usr/include/cuda.h" 3
CU_STREAM_WRITE_VALUE_DEFAULT,
# 464 "/usr/include/cuda.h" 3
CU_STREAM_WRITE_VALUE_NO_MEMORY_BARRIER
# 471 "/usr/include/cuda.h" 3
} CUstreamWriteValue_flags;
# 484 "/usr/include/cuda.h" 3
typedef
# 476 "/usr/include/cuda.h" 3
enum CUstreamBatchMemOpType_enum {
# 477 "/usr/include/cuda.h" 3
CU_STREAM_MEM_OP_WAIT_VALUE_32 = 1,
# 478 "/usr/include/cuda.h" 3
CU_STREAM_MEM_OP_WRITE_VALUE_32,
# 479 "/usr/include/cuda.h" 3
CU_STREAM_MEM_OP_WAIT_VALUE_64 = 4,
# 480 "/usr/include/cuda.h" 3
CU_STREAM_MEM_OP_WRITE_VALUE_64,
# 481 "/usr/include/cuda.h" 3
CU_STREAM_MEM_OP_BARRIER,
# 482 "/usr/include/cuda.h" 3
CU_STREAM_MEM_OP_FLUSH_REMOTE_WRITES = 3
# 484 "/usr/include/cuda.h" 3
} CUstreamBatchMemOpType;
# 492 "/usr/include/cuda.h" 3
typedef
# 489 "/usr/include/cuda.h" 3
enum CUstreamMemoryBarrier_flags_enum {
# 490 "/usr/include/cuda.h" 3
CU_STREAM_MEMORY_BARRIER_TYPE_SYS,
# 491 "/usr/include/cuda.h" 3
CU_STREAM_MEMORY_BARRIER_TYPE_GPU
# 492 "/usr/include/cuda.h" 3
} CUstreamMemoryBarrier_flags;
# 528 "/usr/include/cuda.h" 3
typedef
# 497 "/usr/include/cuda.h" 3
union CUstreamBatchMemOpParams_union {
# 498 "/usr/include/cuda.h" 3
CUstreamBatchMemOpType operation;
# 499 "/usr/include/cuda.h" 3
struct CUstreamMemOpWaitValueParams_st {
# 500 "/usr/include/cuda.h" 3
CUstreamBatchMemOpType operation;
# 501 "/usr/include/cuda.h" 3
CUdeviceptr address;
# 502 "/usr/include/cuda.h" 3
union {
# 503 "/usr/include/cuda.h" 3
cuuint32_t value;
# 504 "/usr/include/cuda.h" 3
cuuint64_t value64;
# 505 "/usr/include/cuda.h" 3
};
# 506 "/usr/include/cuda.h" 3
unsigned flags;
# 507 "/usr/include/cuda.h" 3
CUdeviceptr alias;
# 508 "/usr/include/cuda.h" 3
} waitValue;
# 509 "/usr/include/cuda.h" 3
struct CUstreamMemOpWriteValueParams_st {
# 510 "/usr/include/cuda.h" 3
CUstreamBatchMemOpType operation;
# 511 "/usr/include/cuda.h" 3
CUdeviceptr address;
# 512 "/usr/include/cuda.h" 3
union {
# 513 "/usr/include/cuda.h" 3
cuuint32_t value;
# 514 "/usr/include/cuda.h" 3
cuuint64_t value64;
# 515 "/usr/include/cuda.h" 3
};
# 516 "/usr/include/cuda.h" 3
unsigned flags;
# 517 "/usr/include/cuda.h" 3
CUdeviceptr alias;
# 518 "/usr/include/cuda.h" 3
} writeValue;
# 519 "/usr/include/cuda.h" 3
struct CUstreamMemOpFlushRemoteWritesParams_st {
# 520 "/usr/include/cuda.h" 3
CUstreamBatchMemOpType operation;
# 521 "/usr/include/cuda.h" 3
unsigned flags;
# 522 "/usr/include/cuda.h" 3
} flushRemoteWrites;
# 523 "/usr/include/cuda.h" 3
struct CUstreamMemOpMemoryBarrierParams_st {
# 524 "/usr/include/cuda.h" 3
CUstreamBatchMemOpType operation;
# 525 "/usr/include/cuda.h" 3
unsigned flags;
# 526 "/usr/include/cuda.h" 3
} memoryBarrier;
# 527 "/usr/include/cuda.h" 3
cuuint64_t pad[6];
# 528 "/usr/include/cuda.h" 3
} CUstreamBatchMemOpParams_v1;
# 529 "/usr/include/cuda.h" 3
typedef CUstreamBatchMemOpParams_v1 CUstreamBatchMemOpParams;
# 536 "/usr/include/cuda.h" 3
typedef
# 531 "/usr/include/cuda.h" 3
struct CUDA_BATCH_MEM_OP_NODE_PARAMS_st {
# 532 "/usr/include/cuda.h" 3
CUcontext ctx;
# 533 "/usr/include/cuda.h" 3
unsigned count;
# 534 "/usr/include/cuda.h" 3
CUstreamBatchMemOpParams *paramArray;
# 535 "/usr/include/cuda.h" 3
unsigned flags;
# 536 "/usr/include/cuda.h" 3
} CUDA_BATCH_MEM_OP_NODE_PARAMS;
# 544 "/usr/include/cuda.h" 3
typedef
# 541 "/usr/include/cuda.h" 3
enum CUoccupancy_flags_enum {
# 542 "/usr/include/cuda.h" 3
CU_OCCUPANCY_DEFAULT,
# 543 "/usr/include/cuda.h" 3
CU_OCCUPANCY_DISABLE_CACHING_OVERRIDE
# 544 "/usr/include/cuda.h" 3
} CUoccupancy_flags;
# 552 "/usr/include/cuda.h" 3
typedef
# 549 "/usr/include/cuda.h" 3
enum CUstreamUpdateCaptureDependencies_flags_enum {
# 550 "/usr/include/cuda.h" 3
CU_STREAM_ADD_CAPTURE_DEPENDENCIES,
# 551 "/usr/include/cuda.h" 3
CU_STREAM_SET_CAPTURE_DEPENDENCIES
# 552 "/usr/include/cuda.h" 3
} CUstreamUpdateCaptureDependencies_flags;
# 593 "/usr/include/cuda.h" 3
typedef
# 557 "/usr/include/cuda.h" 3
enum CUarray_format_enum {
# 558 "/usr/include/cuda.h" 3
CU_AD_FORMAT_UNSIGNED_INT8 = 1,
# 559 "/usr/include/cuda.h" 3
CU_AD_FORMAT_UNSIGNED_INT16,
# 560 "/usr/include/cuda.h" 3
CU_AD_FORMAT_UNSIGNED_INT32,
# 561 "/usr/include/cuda.h" 3
CU_AD_FORMAT_SIGNED_INT8 = 8,
# 562 "/usr/include/cuda.h" 3
CU_AD_FORMAT_SIGNED_INT16,
# 563 "/usr/include/cuda.h" 3
CU_AD_FORMAT_SIGNED_INT32,
# 564 "/usr/include/cuda.h" 3
CU_AD_FORMAT_HALF = 16,
# 565 "/usr/include/cuda.h" 3
CU_AD_FORMAT_FLOAT = 32,
# 566 "/usr/include/cuda.h" 3
CU_AD_FORMAT_NV12 = 176,
# 567 "/usr/include/cuda.h" 3
CU_AD_FORMAT_UNORM_INT8X1 = 192,
# 568 "/usr/include/cuda.h" 3
CU_AD_FORMAT_UNORM_INT8X2,
# 569 "/usr/include/cuda.h" 3
CU_AD_FORMAT_UNORM_INT8X4,
# 570 "/usr/include/cuda.h" 3
CU_AD_FORMAT_UNORM_INT16X1,
# 571 "/usr/include/cuda.h" 3
CU_AD_FORMAT_UNORM_INT16X2,
# 572 "/usr/include/cuda.h" 3
CU_AD_FORMAT_UNORM_INT16X4,
# 573 "/usr/include/cuda.h" 3
CU_AD_FORMAT_SNORM_INT8X1,
# 574 "/usr/include/cuda.h" 3
CU_AD_FORMAT_SNORM_INT8X2,
# 575 "/usr/include/cuda.h" 3
CU_AD_FORMAT_SNORM_INT8X4,
# 576 "/usr/include/cuda.h" 3
CU_AD_FORMAT_SNORM_INT16X1,
# 577 "/usr/include/cuda.h" 3
CU_AD_FORMAT_SNORM_INT16X2,
# 578 "/usr/include/cuda.h" 3
CU_AD_FORMAT_SNORM_INT16X4,
# 579 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC1_UNORM = 145,
# 580 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC1_UNORM_SRGB,
# 581 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC2_UNORM,
# 582 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC2_UNORM_SRGB,
# 583 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC3_UNORM,
# 584 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC3_UNORM_SRGB,
# 585 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC4_UNORM,
# 586 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC4_SNORM,
# 587 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC5_UNORM,
# 588 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC5_SNORM,
# 589 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC6H_UF16,
# 590 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC6H_SF16,
# 591 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC7_UNORM,
# 592 "/usr/include/cuda.h" 3
CU_AD_FORMAT_BC7_UNORM_SRGB
# 593 "/usr/include/cuda.h" 3
} CUarray_format;
# 603 "/usr/include/cuda.h" 3
typedef
# 598 "/usr/include/cuda.h" 3
enum CUaddress_mode_enum {
# 599 "/usr/include/cuda.h" 3
CU_TR_ADDRESS_MODE_WRAP,
# 600 "/usr/include/cuda.h" 3
CU_TR_ADDRESS_MODE_CLAMP,
# 601 "/usr/include/cuda.h" 3
CU_TR_ADDRESS_MODE_MIRROR,
# 602 "/usr/include/cuda.h" 3
CU_TR_ADDRESS_MODE_BORDER
# 603 "/usr/include/cuda.h" 3
} CUaddress_mode;
# 611 "/usr/include/cuda.h" 3
typedef
# 608 "/usr/include/cuda.h" 3
enum CUfilter_mode_enum {
# 609 "/usr/include/cuda.h" 3
CU_TR_FILTER_MODE_POINT,
# 610 "/usr/include/cuda.h" 3
CU_TR_FILTER_MODE_LINEAR
# 611 "/usr/include/cuda.h" 3
} CUfilter_mode;
# 752 "/usr/include/cuda.h" 3
typedef
# 616 "/usr/include/cuda.h" 3
enum CUdevice_attribute_enum {
# 617 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_BLOCK = 1,
# 618 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_X,
# 619 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Y,
# 620 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_BLOCK_DIM_Z,
# 621 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_X,
# 622 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Y,
# 623 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_GRID_DIM_Z,
# 624 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK,
# 625 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_SHARED_MEMORY_PER_BLOCK = 8,
# 626 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_TOTAL_CONSTANT_MEMORY,
# 627 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_WARP_SIZE,
# 628 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_PITCH,
# 629 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_BLOCK,
# 630 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_REGISTERS_PER_BLOCK = 12,
# 631 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CLOCK_RATE,
# 632 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_TEXTURE_ALIGNMENT,
# 633 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_GPU_OVERLAP,
# 634 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MULTIPROCESSOR_COUNT,
# 635 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_KERNEL_EXEC_TIMEOUT,
# 636 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_INTEGRATED,
# 637 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CAN_MAP_HOST_MEMORY,
# 638 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_COMPUTE_MODE,
# 639 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_WIDTH,
# 640 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_WIDTH,
# 641 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_HEIGHT,
# 642 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH,
# 643 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT,
# 644 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH,
# 645 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_WIDTH,
# 646 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_HEIGHT,
# 647 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LAYERED_LAYERS,
# 648 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_WIDTH = 27,
# 649 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_HEIGHT,
# 650 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_ARRAY_NUMSLICES,
# 651 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_SURFACE_ALIGNMENT,
# 652 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CONCURRENT_KERNELS,
# 653 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_ECC_ENABLED,
# 654 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_PCI_BUS_ID,
# 655 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_PCI_DEVICE_ID,
# 656 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_TCC_DRIVER,
# 657 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MEMORY_CLOCK_RATE,
# 658 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_GLOBAL_MEMORY_BUS_WIDTH,
# 659 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_L2_CACHE_SIZE,
# 660 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_THREADS_PER_MULTIPROCESSOR,
# 661 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_ASYNC_ENGINE_COUNT,
# 662 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_UNIFIED_ADDRESSING,
# 663 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_WIDTH,
# 664 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LAYERED_LAYERS,
# 665 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CAN_TEX2D_GATHER,
# 666 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_WIDTH,
# 667 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_GATHER_HEIGHT,
# 668 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_WIDTH_ALTERNATE,
# 669 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_HEIGHT_ALTERNATE,
# 670 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE3D_DEPTH_ALTERNATE,
# 671 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_PCI_DOMAIN_ID,
# 672 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_TEXTURE_PITCH_ALIGNMENT,
# 673 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_WIDTH,
# 674 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_WIDTH,
# 675 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURECUBEMAP_LAYERED_LAYERS,
# 676 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_WIDTH,
# 677 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_WIDTH,
# 678 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_HEIGHT,
# 679 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_WIDTH,
# 680 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_HEIGHT,
# 681 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE3D_DEPTH,
# 682 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_WIDTH,
# 683 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE1D_LAYERED_LAYERS,
# 684 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_WIDTH,
# 685 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_HEIGHT,
# 686 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACE2D_LAYERED_LAYERS,
# 687 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_WIDTH,
# 688 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_WIDTH,
# 689 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_SURFACECUBEMAP_LAYERED_LAYERS,
# 690 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_LINEAR_WIDTH,
# 691 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_WIDTH,
# 692 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_HEIGHT,
# 693 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_LINEAR_PITCH,
# 694 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_WIDTH,
# 695 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE2D_MIPMAPPED_HEIGHT,
# 696 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MAJOR,
# 697 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_COMPUTE_CAPABILITY_MINOR,
# 698 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAXIMUM_TEXTURE1D_MIPMAPPED_WIDTH,
# 699 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_STREAM_PRIORITIES_SUPPORTED,
# 700 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_GLOBAL_L1_CACHE_SUPPORTED,
# 701 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_LOCAL_L1_CACHE_SUPPORTED,
# 702 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_MULTIPROCESSOR,
# 703 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_REGISTERS_PER_MULTIPROCESSOR,
# 704 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MANAGED_MEMORY,
# 705 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD,
# 706 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MULTI_GPU_BOARD_GROUP_ID,
# 707 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_HOST_NATIVE_ATOMIC_SUPPORTED,
# 708 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_SINGLE_TO_DOUBLE_PRECISION_PERF_RATIO,
# 709 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_PAGEABLE_MEMORY_ACCESS,
# 710 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CONCURRENT_MANAGED_ACCESS,
# 711 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_COMPUTE_PREEMPTION_SUPPORTED,
# 712 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CAN_USE_HOST_POINTER_FOR_REGISTERED_MEM,
# 713 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CAN_USE_STREAM_MEM_OPS_V1,
# 714 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CAN_USE_64_BIT_STREAM_MEM_OPS_V1,
# 715 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CAN_USE_STREAM_WAIT_VALUE_NOR_V1,
# 716 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_COOPERATIVE_LAUNCH,
# 717 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_COOPERATIVE_MULTI_DEVICE_LAUNCH,
# 718 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_SHARED_MEMORY_PER_BLOCK_OPTIN,
# 719 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CAN_FLUSH_REMOTE_WRITES,
# 720 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_HOST_REGISTER_SUPPORTED,
# 721 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_PAGEABLE_MEMORY_ACCESS_USES_HOST_PAGE_TABLES,
# 722 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_DIRECT_MANAGED_MEM_ACCESS_FROM_HOST,
# 723 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_VIRTUAL_ADDRESS_MANAGEMENT_SUPPORTED,
# 724 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_VIRTUAL_MEMORY_MANAGEMENT_SUPPORTED = 102,
# 725 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_HANDLE_TYPE_POSIX_FILE_DESCRIPTOR_SUPPORTED,
# 726 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_HANDLE_TYPE_WIN32_HANDLE_SUPPORTED,
# 727 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_HANDLE_TYPE_WIN32_KMT_HANDLE_SUPPORTED,
# 728 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_BLOCKS_PER_MULTIPROCESSOR,
# 729 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_GENERIC_COMPRESSION_SUPPORTED,
# 730 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_PERSISTING_L2_CACHE_SIZE,
# 731 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX_ACCESS_POLICY_WINDOW_SIZE,
# 732 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_WITH_CUDA_VMM_SUPPORTED,
# 733 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_RESERVED_SHARED_MEMORY_PER_BLOCK,
# 734 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_SPARSE_CUDA_ARRAY_SUPPORTED,
# 735 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_READ_ONLY_HOST_REGISTER_SUPPORTED,
# 736 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_TIMELINE_SEMAPHORE_INTEROP_SUPPORTED,
# 737 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MEMORY_POOLS_SUPPORTED,
# 738 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_SUPPORTED,
# 739 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_FLUSH_WRITES_OPTIONS,
# 740 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_GPU_DIRECT_RDMA_WRITES_ORDERING,
# 741 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MEMPOOL_SUPPORTED_HANDLE_TYPES,
# 742 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CLUSTER_LAUNCH,
# 743 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_DEFERRED_MAPPING_CUDA_ARRAY_SUPPORTED,
# 744 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CAN_USE_64_BIT_STREAM_MEM_OPS,
# 745 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_CAN_USE_STREAM_WAIT_VALUE_NOR,
# 746 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_DMA_BUF_SUPPORTED,
# 747 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_IPC_EVENT_SUPPORTED,
# 748 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MEM_SYNC_DOMAIN_COUNT,
# 749 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_TENSOR_MAP_ACCESS_SUPPORTED,
# 750 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_UNIFIED_FUNCTION_POINTERS = 129,
# 751 "/usr/include/cuda.h" 3
CU_DEVICE_ATTRIBUTE_MAX
# 752 "/usr/include/cuda.h" 3
} CUdevice_attribute;
# 768 "/usr/include/cuda.h" 3
typedef
# 757 "/usr/include/cuda.h" 3
struct CUdevprop_st {
# 758 "/usr/include/cuda.h" 3
int maxThreadsPerBlock;
# 759 "/usr/include/cuda.h" 3
int maxThreadsDim[3];
# 760 "/usr/include/cuda.h" 3
int maxGridSize[3];
# 761 "/usr/include/cuda.h" 3
int sharedMemPerBlock;
# 762 "/usr/include/cuda.h" 3
int totalConstantMemory;
# 763 "/usr/include/cuda.h" 3
int SIMDWidth;
# 764 "/usr/include/cuda.h" 3
int memPitch;
# 765 "/usr/include/cuda.h" 3
int regsPerBlock;
# 766 "/usr/include/cuda.h" 3
int clockRate;
# 767 "/usr/include/cuda.h" 3
int textureAlign;
# 768 "/usr/include/cuda.h" 3
} CUdevprop_v1;
# 769 "/usr/include/cuda.h" 3
typedef CUdevprop_v1 CUdevprop;
# 796 "/usr/include/cuda.h" 3
typedef
# 774 "/usr/include/cuda.h" 3
enum CUpointer_attribute_enum {
# 775 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_CONTEXT = 1,
# 776 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_MEMORY_TYPE,
# 777 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_DEVICE_POINTER,
# 778 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_HOST_POINTER,
# 779 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_P2P_TOKENS,
# 780 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_SYNC_MEMOPS,
# 781 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_BUFFER_ID,
# 782 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_IS_MANAGED,
# 783 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_DEVICE_ORDINAL,
# 784 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_IS_LEGACY_CUDA_IPC_CAPABLE,
# 785 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_RANGE_START_ADDR,
# 786 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_RANGE_SIZE,
# 787 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_MAPPED,
# 788 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_ALLOWED_HANDLE_TYPES,
# 789 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_IS_GPU_DIRECT_RDMA_CAPABLE,
# 790 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_ACCESS_FLAGS,
# 791 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_MEMPOOL_HANDLE,
# 793 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_MAPPING_SIZE,
# 794 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_MAPPING_BASE_ADDR,
# 795 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_MEMORY_BLOCK_ID
# 796 "/usr/include/cuda.h" 3
} CUpointer_attribute;
# 943 "/usr/include/cuda.h" 3
typedef
# 801 "/usr/include/cuda.h" 3
enum CUfunction_attribute_enum {
# 807 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 814 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 820 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 825 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 830 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 839 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 848 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 854 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_CACHE_MODE_CA,
# 862 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_MAX_DYNAMIC_SHARED_SIZE_BYTES,
# 871 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_PREFERRED_SHARED_MEMORY_CARVEOUT,
# 878 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_CLUSTER_SIZE_MUST_BE_SET,
# 889 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_REQUIRED_CLUSTER_WIDTH,
# 900 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_REQUIRED_CLUSTER_HEIGHT,
# 911 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_REQUIRED_CLUSTER_DEPTH,
# 933 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_NON_PORTABLE_CLUSTER_SIZE_ALLOWED,
# 940 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_CLUSTER_SCHEDULING_POLICY_PREFERENCE,
# 942 "/usr/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_MAX
# 943 "/usr/include/cuda.h" 3
} CUfunction_attribute;
# 953 "/usr/include/cuda.h" 3
typedef
# 948 "/usr/include/cuda.h" 3
enum CUfunc_cache_enum {
# 949 "/usr/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_NONE,
# 950 "/usr/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_SHARED,
# 951 "/usr/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_L1,
# 952 "/usr/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_EQUAL
# 953 "/usr/include/cuda.h" 3
} CUfunc_cache;
# 962 "/usr/include/cuda.h" 3
typedef
# 958 "/usr/include/cuda.h" 3
enum CUsharedconfig_enum {
# 959 "/usr/include/cuda.h" 3
CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE,
# 960 "/usr/include/cuda.h" 3
CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE,
# 961 "/usr/include/cuda.h" 3
CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE
# 962 "/usr/include/cuda.h" 3
} CUsharedconfig;
# 971 "/usr/include/cuda.h" 3
typedef
# 967 "/usr/include/cuda.h" 3
enum CUshared_carveout_enum {
# 968 "/usr/include/cuda.h" 3
CU_SHAREDMEM_CARVEOUT_DEFAULT = (-1),
# 969 "/usr/include/cuda.h" 3
CU_SHAREDMEM_CARVEOUT_MAX_SHARED = 100,
# 970 "/usr/include/cuda.h" 3
CU_SHAREDMEM_CARVEOUT_MAX_L1 = 0
# 971 "/usr/include/cuda.h" 3
} CUshared_carveout;
# 981 "/usr/include/cuda.h" 3
typedef
# 976 "/usr/include/cuda.h" 3
enum CUmemorytype_enum {
# 977 "/usr/include/cuda.h" 3
CU_MEMORYTYPE_HOST = 1,
# 978 "/usr/include/cuda.h" 3
CU_MEMORYTYPE_DEVICE,
# 979 "/usr/include/cuda.h" 3
CU_MEMORYTYPE_ARRAY,
# 980 "/usr/include/cuda.h" 3
CU_MEMORYTYPE_UNIFIED
# 981 "/usr/include/cuda.h" 3
} CUmemorytype;
# 990 "/usr/include/cuda.h" 3
typedef
# 986 "/usr/include/cuda.h" 3
enum CUcomputemode_enum {
# 987 "/usr/include/cuda.h" 3
CU_COMPUTEMODE_DEFAULT,
# 988 "/usr/include/cuda.h" 3
CU_COMPUTEMODE_PROHIBITED = 2,
# 989 "/usr/include/cuda.h" 3
CU_COMPUTEMODE_EXCLUSIVE_PROCESS
# 990 "/usr/include/cuda.h" 3
} CUcomputemode;
# 1002 "/usr/include/cuda.h" 3
typedef
# 995 "/usr/include/cuda.h" 3
enum CUmem_advise_enum {
# 996 "/usr/include/cuda.h" 3
CU_MEM_ADVISE_SET_READ_MOSTLY = 1,
# 997 "/usr/include/cuda.h" 3
CU_MEM_ADVISE_UNSET_READ_MOSTLY,
# 998 "/usr/include/cuda.h" 3
CU_MEM_ADVISE_SET_PREFERRED_LOCATION,
# 999 "/usr/include/cuda.h" 3
CU_MEM_ADVISE_UNSET_PREFERRED_LOCATION,
# 1000 "/usr/include/cuda.h" 3
CU_MEM_ADVISE_SET_ACCESSED_BY,
# 1001 "/usr/include/cuda.h" 3
CU_MEM_ADVISE_UNSET_ACCESSED_BY
# 1002 "/usr/include/cuda.h" 3
} CUmem_advise;
# 1009 "/usr/include/cuda.h" 3
typedef
# 1004 "/usr/include/cuda.h" 3
enum CUmem_range_attribute_enum {
# 1005 "/usr/include/cuda.h" 3
CU_MEM_RANGE_ATTRIBUTE_READ_MOSTLY = 1,
# 1006 "/usr/include/cuda.h" 3
CU_MEM_RANGE_ATTRIBUTE_PREFERRED_LOCATION,
# 1007 "/usr/include/cuda.h" 3
CU_MEM_RANGE_ATTRIBUTE_ACCESSED_BY,
# 1008 "/usr/include/cuda.h" 3
CU_MEM_RANGE_ATTRIBUTE_LAST_PREFETCH_LOCATION
# 1009 "/usr/include/cuda.h" 3
} CUmem_range_attribute;
# 1332 "/usr/include/cuda.h" 3
typedef
# 1014 "/usr/include/cuda.h" 3
enum CUjit_option_enum {
# 1021 "/usr/include/cuda.h" 3
CU_JIT_MAX_REGISTERS,
# 1036 "/usr/include/cuda.h" 3
CU_JIT_THREADS_PER_BLOCK,
# 1044 "/usr/include/cuda.h" 3
CU_JIT_WALL_TIME,
# 1053 "/usr/include/cuda.h" 3
CU_JIT_INFO_LOG_BUFFER,
# 1062 "/usr/include/cuda.h" 3
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 1071 "/usr/include/cuda.h" 3
CU_JIT_ERROR_LOG_BUFFER,
# 1080 "/usr/include/cuda.h" 3
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 1088 "/usr/include/cuda.h" 3
CU_JIT_OPTIMIZATION_LEVEL,
# 1096 "/usr/include/cuda.h" 3
CU_JIT_TARGET_FROM_CUCONTEXT,
# 1104 "/usr/include/cuda.h" 3
CU_JIT_TARGET,
# 1113 "/usr/include/cuda.h" 3
CU_JIT_FALLBACK_STRATEGY,
# 1121 "/usr/include/cuda.h" 3
CU_JIT_GENERATE_DEBUG_INFO,
# 1128 "/usr/include/cuda.h" 3
CU_JIT_LOG_VERBOSE,
# 1135 "/usr/include/cuda.h" 3
CU_JIT_GENERATE_LINE_INFO,
# 1143 "/usr/include/cuda.h" 3
CU_JIT_CACHE_MODE,
# 1149 "/usr/include/cuda.h" 3
CU_JIT_NEW_SM3X_OPT,
# 1154 "/usr/include/cuda.h" 3
CU_JIT_FAST_COMPILE,
# 1168 "/usr/include/cuda.h" 3
CU_JIT_GLOBAL_SYMBOL_NAMES,
# 1177 "/usr/include/cuda.h" 3
CU_JIT_GLOBAL_SYMBOL_ADDRESSES,
# 1185 "/usr/include/cuda.h" 3
CU_JIT_GLOBAL_SYMBOL_COUNT,
# 1196 "/usr/include/cuda.h" 3
CU_JIT_LTO,
# 1208 "/usr/include/cuda.h" 3
CU_JIT_FTZ,
# 1221 "/usr/include/cuda.h" 3
CU_JIT_PREC_DIV,
# 1234 "/usr/include/cuda.h" 3
CU_JIT_PREC_SQRT,
# 1246 "/usr/include/cuda.h" 3
CU_JIT_FMA,
# 1266 "/usr/include/cuda.h" 3
CU_JIT_REFERENCED_KERNEL_NAMES,
# 1276 "/usr/include/cuda.h" 3
CU_JIT_REFERENCED_KERNEL_COUNT,
# 1296 "/usr/include/cuda.h" 3
CU_JIT_REFERENCED_VARIABLE_NAMES,
# 1306 "/usr/include/cuda.h" 3
CU_JIT_REFERENCED_VARIABLE_COUNT,
# 1321 "/usr/include/cuda.h" 3
CU_JIT_OPTIMIZE_UNUSED_DEVICE_VARIABLES,
# 1328 "/usr/include/cuda.h" 3
CU_JIT_POSITION_INDEPENDENT_CODE,
# 1330 "/usr/include/cuda.h" 3
CU_JIT_NUM_OPTIONS
# 1332 "/usr/include/cuda.h" 3
} CUjit_option;
# 1365 "/usr/include/cuda.h" 3
typedef
# 1342 "/usr/include/cuda.h" 3
enum CUjit_target_enum {
# 1344 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_30 = 30,
# 1345 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_32 = 32,
# 1346 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_35 = 35,
# 1347 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_37 = 37,
# 1348 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_50 = 50,
# 1349 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_52 = 52,
# 1350 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_53,
# 1351 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_60 = 60,
# 1352 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_61,
# 1353 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_62,
# 1354 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_70 = 70,
# 1355 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_72 = 72,
# 1356 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_75 = 75,
# 1357 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_80 = 80,
# 1358 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_86 = 86,
# 1359 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_87,
# 1360 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_89 = 89,
# 1361 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_90,
# 1364 "/usr/include/cuda.h" 3
CU_TARGET_COMPUTE_90A = (65536 + CU_TARGET_COMPUTE_90)
# 1365 "/usr/include/cuda.h" 3
} CUjit_target;
# 1376 "/usr/include/cuda.h" 3
typedef
# 1370 "/usr/include/cuda.h" 3
enum CUjit_fallback_enum {
# 1372 "/usr/include/cuda.h" 3
CU_PREFER_PTX,
# 1374 "/usr/include/cuda.h" 3
CU_PREFER_BINARY
# 1376 "/usr/include/cuda.h" 3
} CUjit_fallback;
# 1386 "/usr/include/cuda.h" 3
typedef
# 1381 "/usr/include/cuda.h" 3
enum CUjit_cacheMode_enum {
# 1383 "/usr/include/cuda.h" 3
CU_JIT_CACHE_OPTION_NONE,
# 1384 "/usr/include/cuda.h" 3
CU_JIT_CACHE_OPTION_CG,
# 1385 "/usr/include/cuda.h" 3
CU_JIT_CACHE_OPTION_CA
# 1386 "/usr/include/cuda.h" 3
} CUjit_cacheMode;
# 1433 "/usr/include/cuda.h" 3
typedef
# 1391 "/usr/include/cuda.h" 3
enum CUjitInputType_enum {
# 1397 "/usr/include/cuda.h" 3
CU_JIT_INPUT_CUBIN,
# 1403 "/usr/include/cuda.h" 3
CU_JIT_INPUT_PTX,
# 1409 "/usr/include/cuda.h" 3
CU_JIT_INPUT_FATBINARY,
# 1415 "/usr/include/cuda.h" 3
CU_JIT_INPUT_OBJECT,
# 1421 "/usr/include/cuda.h" 3
CU_JIT_INPUT_LIBRARY,
# 1430 "/usr/include/cuda.h" 3
CU_JIT_INPUT_NVVM,
# 1432 "/usr/include/cuda.h" 3
CU_JIT_NUM_INPUT_TYPES
# 1433 "/usr/include/cuda.h" 3
} CUjitInputType;
# 1435 "/usr/include/cuda.h" 3
typedef struct CUlinkState_st *CUlinkState;
# 1446 "/usr/include/cuda.h" 3
typedef
# 1440 "/usr/include/cuda.h" 3
enum CUgraphicsRegisterFlags_enum {
# 1441 "/usr/include/cuda.h" 3
CU_GRAPHICS_REGISTER_FLAGS_NONE,
# 1442 "/usr/include/cuda.h" 3
CU_GRAPHICS_REGISTER_FLAGS_READ_ONLY,
# 1443 "/usr/include/cuda.h" 3
CU_GRAPHICS_REGISTER_FLAGS_WRITE_DISCARD,
# 1444 "/usr/include/cuda.h" 3
CU_GRAPHICS_REGISTER_FLAGS_SURFACE_LDST = 4,
# 1445 "/usr/include/cuda.h" 3
CU_GRAPHICS_REGISTER_FLAGS_TEXTURE_GATHER = 8
# 1446 "/usr/include/cuda.h" 3
} CUgraphicsRegisterFlags;
# 1455 "/usr/include/cuda.h" 3
typedef
# 1451 "/usr/include/cuda.h" 3
enum CUgraphicsMapResourceFlags_enum {
# 1452 "/usr/include/cuda.h" 3
CU_GRAPHICS_MAP_RESOURCE_FLAGS_NONE,
# 1453 "/usr/include/cuda.h" 3
CU_GRAPHICS_MAP_RESOURCE_FLAGS_READ_ONLY,
# 1454 "/usr/include/cuda.h" 3
CU_GRAPHICS_MAP_RESOURCE_FLAGS_WRITE_DISCARD
# 1455 "/usr/include/cuda.h" 3
} CUgraphicsMapResourceFlags;
# 1467 "/usr/include/cuda.h" 3
typedef
# 1460 "/usr/include/cuda.h" 3
enum CUarray_cubemap_face_enum {
# 1461 "/usr/include/cuda.h" 3
CU_CUBEMAP_FACE_POSITIVE_X,
# 1462 "/usr/include/cuda.h" 3
CU_CUBEMAP_FACE_NEGATIVE_X,
# 1463 "/usr/include/cuda.h" 3
CU_CUBEMAP_FACE_POSITIVE_Y,
# 1464 "/usr/include/cuda.h" 3
CU_CUBEMAP_FACE_NEGATIVE_Y,
# 1465 "/usr/include/cuda.h" 3
CU_CUBEMAP_FACE_POSITIVE_Z,
# 1466 "/usr/include/cuda.h" 3
CU_CUBEMAP_FACE_NEGATIVE_Z
# 1467 "/usr/include/cuda.h" 3
} CUarray_cubemap_face;
# 1481 "/usr/include/cuda.h" 3
typedef
# 1472 "/usr/include/cuda.h" 3
enum CUlimit_enum {
# 1473 "/usr/include/cuda.h" 3
CU_LIMIT_STACK_SIZE,
# 1474 "/usr/include/cuda.h" 3
CU_LIMIT_PRINTF_FIFO_SIZE,
# 1475 "/usr/include/cuda.h" 3
CU_LIMIT_MALLOC_HEAP_SIZE,
# 1476 "/usr/include/cuda.h" 3
CU_LIMIT_DEV_RUNTIME_SYNC_DEPTH,
# 1477 "/usr/include/cuda.h" 3
CU_LIMIT_DEV_RUNTIME_PENDING_LAUNCH_COUNT,
# 1478 "/usr/include/cuda.h" 3
CU_LIMIT_MAX_L2_FETCH_GRANULARITY,
# 1479 "/usr/include/cuda.h" 3
CU_LIMIT_PERSISTING_L2_CACHE_SIZE,
# 1480 "/usr/include/cuda.h" 3
CU_LIMIT_MAX
# 1481 "/usr/include/cuda.h" 3
} CUlimit;
# 1491 "/usr/include/cuda.h" 3
typedef
# 1486 "/usr/include/cuda.h" 3
enum CUresourcetype_enum {
# 1487 "/usr/include/cuda.h" 3
CU_RESOURCE_TYPE_ARRAY,
# 1488 "/usr/include/cuda.h" 3
CU_RESOURCE_TYPE_MIPMAPPED_ARRAY,
# 1489 "/usr/include/cuda.h" 3
CU_RESOURCE_TYPE_LINEAR,
# 1490 "/usr/include/cuda.h" 3
CU_RESOURCE_TYPE_PITCH2D
# 1491 "/usr/include/cuda.h" 3
} CUresourcetype;
# 1503 "/usr/include/cuda.h" 3
typedef void (*CUhostFn)(void * userData);
# 1512 "/usr/include/cuda.h" 3
typedef
# 1508 "/usr/include/cuda.h" 3
enum CUaccessProperty_enum {
# 1509 "/usr/include/cuda.h" 3
CU_ACCESS_PROPERTY_NORMAL,
# 1510 "/usr/include/cuda.h" 3
CU_ACCESS_PROPERTY_STREAMING,
# 1511 "/usr/include/cuda.h" 3
CU_ACCESS_PROPERTY_PERSISTING
# 1512 "/usr/include/cuda.h" 3
} CUaccessProperty;
# 1532 "/usr/include/cuda.h" 3
typedef
# 1526 "/usr/include/cuda.h" 3
struct CUaccessPolicyWindow_st {
# 1527 "/usr/include/cuda.h" 3
void *base_ptr;
# 1528 "/usr/include/cuda.h" 3
size_t num_bytes;
# 1529 "/usr/include/cuda.h" 3
float hitRatio;
# 1530 "/usr/include/cuda.h" 3
CUaccessProperty hitProp;
# 1531 "/usr/include/cuda.h" 3
CUaccessProperty missProp;
# 1532 "/usr/include/cuda.h" 3
} CUaccessPolicyWindow_v1;
# 1536 "/usr/include/cuda.h" 3
typedef CUaccessPolicyWindow_v1 CUaccessPolicyWindow;
# 1552 "/usr/include/cuda.h" 3
typedef
# 1541 "/usr/include/cuda.h" 3
struct CUDA_KERNEL_NODE_PARAMS_st {
# 1542 "/usr/include/cuda.h" 3
CUfunction func;
# 1543 "/usr/include/cuda.h" 3
unsigned gridDimX;
# 1544 "/usr/include/cuda.h" 3
unsigned gridDimY;
# 1545 "/usr/include/cuda.h" 3
unsigned gridDimZ;
# 1546 "/usr/include/cuda.h" 3
unsigned blockDimX;
# 1547 "/usr/include/cuda.h" 3
unsigned blockDimY;
# 1548 "/usr/include/cuda.h" 3
unsigned blockDimZ;
# 1549 "/usr/include/cuda.h" 3
unsigned sharedMemBytes;
# 1550 "/usr/include/cuda.h" 3
void **kernelParams;
# 1551 "/usr/include/cuda.h" 3
void **extra;
# 1552 "/usr/include/cuda.h" 3
} CUDA_KERNEL_NODE_PARAMS_v1;
# 1569 "/usr/include/cuda.h" 3
typedef
# 1556 "/usr/include/cuda.h" 3
struct CUDA_KERNEL_NODE_PARAMS_v2_st {
# 1557 "/usr/include/cuda.h" 3
CUfunction func;
# 1558 "/usr/include/cuda.h" 3
unsigned gridDimX;
# 1559 "/usr/include/cuda.h" 3
unsigned gridDimY;
# 1560 "/usr/include/cuda.h" 3
unsigned gridDimZ;
# 1561 "/usr/include/cuda.h" 3
unsigned blockDimX;
# 1562 "/usr/include/cuda.h" 3
unsigned blockDimY;
# 1563 "/usr/include/cuda.h" 3
unsigned blockDimZ;
# 1564 "/usr/include/cuda.h" 3
unsigned sharedMemBytes;
# 1565 "/usr/include/cuda.h" 3
void **kernelParams;
# 1566 "/usr/include/cuda.h" 3
void **extra;
# 1567 "/usr/include/cuda.h" 3
CUkernel kern;
# 1568 "/usr/include/cuda.h" 3
CUcontext ctx;
# 1569 "/usr/include/cuda.h" 3
} CUDA_KERNEL_NODE_PARAMS_v2;
# 1570 "/usr/include/cuda.h" 3
typedef CUDA_KERNEL_NODE_PARAMS_v2 CUDA_KERNEL_NODE_PARAMS;
# 1582 "/usr/include/cuda.h" 3
typedef
# 1575 "/usr/include/cuda.h" 3
struct CUDA_MEMSET_NODE_PARAMS_st {
# 1576 "/usr/include/cuda.h" 3
CUdeviceptr dst;
# 1577 "/usr/include/cuda.h" 3
size_t pitch;
# 1578 "/usr/include/cuda.h" 3
unsigned value;
# 1579 "/usr/include/cuda.h" 3
unsigned elementSize;
# 1580 "/usr/include/cuda.h" 3
size_t width;
# 1581 "/usr/include/cuda.h" 3
size_t height;
# 1582 "/usr/include/cuda.h" 3
} CUDA_MEMSET_NODE_PARAMS_v1;
# 1583 "/usr/include/cuda.h" 3
typedef CUDA_MEMSET_NODE_PARAMS_v1 CUDA_MEMSET_NODE_PARAMS;
# 1591 "/usr/include/cuda.h" 3
typedef
# 1588 "/usr/include/cuda.h" 3
struct CUDA_HOST_NODE_PARAMS_st {
# 1589 "/usr/include/cuda.h" 3
CUhostFn fn;
# 1590 "/usr/include/cuda.h" 3
void *userData;
# 1591 "/usr/include/cuda.h" 3
} CUDA_HOST_NODE_PARAMS_v1;
# 1592 "/usr/include/cuda.h" 3
typedef CUDA_HOST_NODE_PARAMS_v1 CUDA_HOST_NODE_PARAMS;
# 1611 "/usr/include/cuda.h" 3
typedef
# 1597 "/usr/include/cuda.h" 3
enum CUgraphNodeType_enum {
# 1598 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_KERNEL,
# 1599 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_MEMCPY,
# 1600 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_MEMSET,
# 1601 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_HOST,
# 1602 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_GRAPH,
# 1603 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_EMPTY,
# 1604 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_WAIT_EVENT,
# 1605 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_EVENT_RECORD,
# 1606 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_EXT_SEMAS_SIGNAL,
# 1607 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_EXT_SEMAS_WAIT,
# 1608 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_MEM_ALLOC,
# 1609 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_MEM_FREE,
# 1610 "/usr/include/cuda.h" 3
CU_GRAPH_NODE_TYPE_BATCH_MEM_OP
# 1611 "/usr/include/cuda.h" 3
} CUgraphNodeType;
# 1623 "/usr/include/cuda.h" 3
typedef
# 1616 "/usr/include/cuda.h" 3
enum CUgraphInstantiateResult_enum {
# 1618 "/usr/include/cuda.h" 3
CUDA_GRAPH_INSTANTIATE_SUCCESS,
# 1619 "/usr/include/cuda.h" 3
CUDA_GRAPH_INSTANTIATE_ERROR,
# 1620 "/usr/include/cuda.h" 3
CUDA_GRAPH_INSTANTIATE_INVALID_STRUCTURE,
# 1621 "/usr/include/cuda.h" 3
CUDA_GRAPH_INSTANTIATE_NODE_OPERATION_NOT_SUPPORTED,
# 1622 "/usr/include/cuda.h" 3
CUDA_GRAPH_INSTANTIATE_MULTIPLE_CTXS_NOT_SUPPORTED
# 1623 "/usr/include/cuda.h" 3
} CUgraphInstantiateResult;
# 1634 "/usr/include/cuda.h" 3
typedef
# 1628 "/usr/include/cuda.h" 3
struct CUDA_GRAPH_INSTANTIATE_PARAMS_st {
# 1630 "/usr/include/cuda.h" 3
cuuint64_t flags;
# 1631 "/usr/include/cuda.h" 3
CUstream hUploadStream;
# 1632 "/usr/include/cuda.h" 3
CUgraphNode hErrNode_out;
# 1633 "/usr/include/cuda.h" 3
CUgraphInstantiateResult result_out;
# 1634 "/usr/include/cuda.h" 3
} CUDA_GRAPH_INSTANTIATE_PARAMS;
# 1641 "/usr/include/cuda.h" 3
typedef
# 1636 "/usr/include/cuda.h" 3
enum CUsynchronizationPolicy_enum {
# 1637 "/usr/include/cuda.h" 3
CU_SYNC_POLICY_AUTO = 1,
# 1638 "/usr/include/cuda.h" 3
CU_SYNC_POLICY_SPIN,
# 1639 "/usr/include/cuda.h" 3
CU_SYNC_POLICY_YIELD,
# 1640 "/usr/include/cuda.h" 3
CU_SYNC_POLICY_BLOCKING_SYNC
# 1641 "/usr/include/cuda.h" 3
} CUsynchronizationPolicy;
# 1650 "/usr/include/cuda.h" 3
typedef
# 1646 "/usr/include/cuda.h" 3
enum CUclusterSchedulingPolicy_enum {
# 1647 "/usr/include/cuda.h" 3
CU_CLUSTER_SCHEDULING_POLICY_DEFAULT,
# 1648 "/usr/include/cuda.h" 3
CU_CLUSTER_SCHEDULING_POLICY_SPREAD,
# 1649 "/usr/include/cuda.h" 3
CU_CLUSTER_SCHEDULING_POLICY_LOAD_BALANCING
# 1650 "/usr/include/cuda.h" 3
} CUclusterSchedulingPolicy;
# 1655 "/usr/include/cuda.h" 3
typedef
# 1652 "/usr/include/cuda.h" 3
enum CUlaunchMemSyncDomain_enum {
# 1653 "/usr/include/cuda.h" 3
CU_LAUNCH_MEM_SYNC_DOMAIN_DEFAULT,
# 1654 "/usr/include/cuda.h" 3
CU_LAUNCH_MEM_SYNC_DOMAIN_REMOTE
# 1655 "/usr/include/cuda.h" 3
} CUlaunchMemSyncDomain;
# 1660 "/usr/include/cuda.h" 3
typedef
# 1657 "/usr/include/cuda.h" 3
struct CUlaunchMemSyncDomainMap_st {
# 1658 "/usr/include/cuda.h" 3
unsigned char default_;
# 1659 "/usr/include/cuda.h" 3
unsigned char remote;
# 1660 "/usr/include/cuda.h" 3
} CUlaunchMemSyncDomainMap;
# 1706 "/usr/include/cuda.h" 3
typedef
# 1662 "/usr/include/cuda.h" 3
enum CUlaunchAttributeID_enum {
# 1663 "/usr/include/cuda.h" 3
CU_LAUNCH_ATTRIBUTE_IGNORE,
# 1664 "/usr/include/cuda.h" 3
CU_LAUNCH_ATTRIBUTE_ACCESS_POLICY_WINDOW,
# 1665 "/usr/include/cuda.h" 3
CU_LAUNCH_ATTRIBUTE_COOPERATIVE,
# 1666 "/usr/include/cuda.h" 3
CU_LAUNCH_ATTRIBUTE_SYNCHRONIZATION_POLICY,
# 1667 "/usr/include/cuda.h" 3
CU_LAUNCH_ATTRIBUTE_CLUSTER_DIMENSION,
# 1668 "/usr/include/cuda.h" 3
CU_LAUNCH_ATTRIBUTE_CLUSTER_SCHEDULING_POLICY_PREFERENCE,
# 1669 "/usr/include/cuda.h" 3
CU_LAUNCH_ATTRIBUTE_PROGRAMMATIC_STREAM_SERIALIZATION,
# 1680 "/usr/include/cuda.h" 3
CU_LAUNCH_ATTRIBUTE_PROGRAMMATIC_EVENT,
# 1703 "/usr/include/cuda.h" 3
CU_LAUNCH_ATTRIBUTE_PRIORITY,
# 1704 "/usr/include/cuda.h" 3
CU_LAUNCH_ATTRIBUTE_MEM_SYNC_DOMAIN_MAP,
# 1705 "/usr/include/cuda.h" 3
CU_LAUNCH_ATTRIBUTE_MEM_SYNC_DOMAIN
# 1706 "/usr/include/cuda.h" 3
} CUlaunchAttributeID;
# 1728 "/usr/include/cuda.h" 3
typedef
# 1708 "/usr/include/cuda.h" 3
union CUlaunchAttributeValue_union {
# 1709 "/usr/include/cuda.h" 3
char pad[64];
# 1710 "/usr/include/cuda.h" 3
CUaccessPolicyWindow accessPolicyWindow;
# 1711 "/usr/include/cuda.h" 3
int cooperative;
# 1712 "/usr/include/cuda.h" 3
CUsynchronizationPolicy syncPolicy;
# 1713 "/usr/include/cuda.h" 3
struct {
# 1714 "/usr/include/cuda.h" 3
unsigned x;
# 1715 "/usr/include/cuda.h" 3
unsigned y;
# 1716 "/usr/include/cuda.h" 3
unsigned z;
# 1717 "/usr/include/cuda.h" 3
} clusterDim;
# 1718 "/usr/include/cuda.h" 3
CUclusterSchedulingPolicy clusterSchedulingPolicyPreference;
# 1719 "/usr/include/cuda.h" 3
int programmaticStreamSerializationAllowed;
# 1720 "/usr/include/cuda.h" 3
struct {
# 1721 "/usr/include/cuda.h" 3
CUevent event;
# 1722 "/usr/include/cuda.h" 3
int flags;
# 1723 "/usr/include/cuda.h" 3
int triggerAtBlockStart;
# 1724 "/usr/include/cuda.h" 3
} programmaticEvent;
# 1725 "/usr/include/cuda.h" 3
int priority;
# 1726 "/usr/include/cuda.h" 3
CUlaunchMemSyncDomainMap memSyncDomainMap;
# 1727 "/usr/include/cuda.h" 3
CUlaunchMemSyncDomain memSyncDomain;
# 1728 "/usr/include/cuda.h" 3
} CUlaunchAttributeValue;
# 1734 "/usr/include/cuda.h" 3
typedef
# 1730 "/usr/include/cuda.h" 3
struct CUlaunchAttribute_st {
# 1731 "/usr/include/cuda.h" 3
CUlaunchAttributeID id;
# 1732 "/usr/include/cuda.h" 3
char pad[(8) - sizeof(CUlaunchAttributeID)];
# 1733 "/usr/include/cuda.h" 3
CUlaunchAttributeValue value;
# 1734 "/usr/include/cuda.h" 3
} CUlaunchAttribute;
# 1747 "/usr/include/cuda.h" 3
typedef
# 1736 "/usr/include/cuda.h" 3
struct CUlaunchConfig_st {
# 1737 "/usr/include/cuda.h" 3
unsigned gridDimX;
# 1738 "/usr/include/cuda.h" 3
unsigned gridDimY;
# 1739 "/usr/include/cuda.h" 3
unsigned gridDimZ;
# 1740 "/usr/include/cuda.h" 3
unsigned blockDimX;
# 1741 "/usr/include/cuda.h" 3
unsigned blockDimY;
# 1742 "/usr/include/cuda.h" 3
unsigned blockDimZ;
# 1743 "/usr/include/cuda.h" 3
unsigned sharedMemBytes;
# 1744 "/usr/include/cuda.h" 3
CUstream hStream;
# 1745 "/usr/include/cuda.h" 3
CUlaunchAttribute *attrs;
# 1746 "/usr/include/cuda.h" 3
unsigned numAttrs;
# 1747 "/usr/include/cuda.h" 3
} CUlaunchConfig;
# 1752 "/usr/include/cuda.h" 3
typedef CUlaunchAttributeID CUkernelNodeAttrID;
# 1764 "/usr/include/cuda.h" 3
typedef CUlaunchAttributeValue CUkernelNodeAttrValue_v1;
# 1765 "/usr/include/cuda.h" 3
typedef CUkernelNodeAttrValue_v1 CUkernelNodeAttrValue;
# 1775 "/usr/include/cuda.h" 3
typedef
# 1770 "/usr/include/cuda.h" 3
enum CUstreamCaptureStatus_enum {
# 1771 "/usr/include/cuda.h" 3
CU_STREAM_CAPTURE_STATUS_NONE,
# 1772 "/usr/include/cuda.h" 3
CU_STREAM_CAPTURE_STATUS_ACTIVE,
# 1773 "/usr/include/cuda.h" 3
CU_STREAM_CAPTURE_STATUS_INVALIDATED
# 1775 "/usr/include/cuda.h" 3
} CUstreamCaptureStatus;
# 1785 "/usr/include/cuda.h" 3
typedef
# 1781 "/usr/include/cuda.h" 3
enum CUstreamCaptureMode_enum {
# 1782 "/usr/include/cuda.h" 3
CU_STREAM_CAPTURE_MODE_GLOBAL,
# 1783 "/usr/include/cuda.h" 3
CU_STREAM_CAPTURE_MODE_THREAD_LOCAL,
# 1784 "/usr/include/cuda.h" 3
CU_STREAM_CAPTURE_MODE_RELAXED
# 1785 "/usr/include/cuda.h" 3
} CUstreamCaptureMode;
# 1790 "/usr/include/cuda.h" 3
typedef CUlaunchAttributeID CUstreamAttrID;
# 1800 "/usr/include/cuda.h" 3
typedef CUlaunchAttributeValue CUstreamAttrValue_v1;
# 1801 "/usr/include/cuda.h" 3
typedef CUstreamAttrValue_v1 CUstreamAttrValue;
# 1810 "/usr/include/cuda.h" 3
typedef
# 1806 "/usr/include/cuda.h" 3
enum CUdriverProcAddress_flags_enum {
# 1807 "/usr/include/cuda.h" 3
CU_GET_PROC_ADDRESS_DEFAULT,
# 1808 "/usr/include/cuda.h" 3
CU_GET_PROC_ADDRESS_LEGACY_STREAM,
# 1809 "/usr/include/cuda.h" 3
CU_GET_PROC_ADDRESS_PER_THREAD_DEFAULT_STREAM
# 1810 "/usr/include/cuda.h" 3
} CUdriverProcAddress_flags;
# 1819 "/usr/include/cuda.h" 3
typedef
# 1815 "/usr/include/cuda.h" 3
enum CUdriverProcAddressQueryResult_enum {
# 1816 "/usr/include/cuda.h" 3
CU_GET_PROC_ADDRESS_SUCCESS,
# 1817 "/usr/include/cuda.h" 3
CU_GET_PROC_ADDRESS_SYMBOL_NOT_FOUND,
# 1818 "/usr/include/cuda.h" 3
CU_GET_PROC_ADDRESS_VERSION_NOT_SUFFICIENT
# 1819 "/usr/include/cuda.h" 3
} CUdriverProcAddressQueryResult;
# 1827 "/usr/include/cuda.h" 3
typedef
# 1824 "/usr/include/cuda.h" 3
enum CUexecAffinityType_enum {
# 1825 "/usr/include/cuda.h" 3
CU_EXEC_AFFINITY_TYPE_SM_COUNT,
# 1826 "/usr/include/cuda.h" 3
CU_EXEC_AFFINITY_TYPE_MAX
# 1827 "/usr/include/cuda.h" 3
} CUexecAffinityType;
# 1834 "/usr/include/cuda.h" 3
typedef
# 1832 "/usr/include/cuda.h" 3
struct CUexecAffinitySmCount_st {
# 1833 "/usr/include/cuda.h" 3
unsigned val;
# 1834 "/usr/include/cuda.h" 3
} CUexecAffinitySmCount_v1;
# 1835 "/usr/include/cuda.h" 3
typedef CUexecAffinitySmCount_v1 CUexecAffinitySmCount;
# 1845 "/usr/include/cuda.h" 3
typedef
# 1840 "/usr/include/cuda.h" 3
struct CUexecAffinityParam_st {
# 1841 "/usr/include/cuda.h" 3
CUexecAffinityType type;
# 1842 "/usr/include/cuda.h" 3
union {
# 1843 "/usr/include/cuda.h" 3
CUexecAffinitySmCount smCount;
# 1844 "/usr/include/cuda.h" 3
} param;
# 1845 "/usr/include/cuda.h" 3
} CUexecAffinityParam_v1;
# 1849 "/usr/include/cuda.h" 3
typedef CUexecAffinityParam_v1 CUexecAffinityParam;
# 1870 "/usr/include/cuda.h" 3
typedef
# 1854 "/usr/include/cuda.h" 3
enum CUlibraryOption_enum {
# 1856 "/usr/include/cuda.h" 3
CU_LIBRARY_HOST_UNIVERSAL_FUNCTION_AND_DATA_TABLE,
# 1867 "/usr/include/cuda.h" 3
CU_LIBRARY_BINARY_IS_PRESERVED,
# 1869 "/usr/include/cuda.h" 3
CU_LIBRARY_NUM_OPTIONS
# 1870 "/usr/include/cuda.h" 3
} CUlibraryOption;
# 1878 "/usr/include/cuda.h" 3
typedef
# 1872 "/usr/include/cuda.h" 3
struct CUlibraryHostUniversalFunctionAndDataTable_st {
# 1874 "/usr/include/cuda.h" 3
void *functionTable;
# 1875 "/usr/include/cuda.h" 3
size_t functionWindowSize;
# 1876 "/usr/include/cuda.h" 3
void *dataTable;
# 1877 "/usr/include/cuda.h" 3
size_t dataWindowSize;
# 1878 "/usr/include/cuda.h" 3
} CUlibraryHostUniversalFunctionAndDataTable;
# 2484 "/usr/include/cuda.h" 3
typedef
# 1883 "/usr/include/cuda.h" 3
enum cudaError_enum {
# 1889 "/usr/include/cuda.h" 3
CUDA_SUCCESS,
# 1895 "/usr/include/cuda.h" 3
CUDA_ERROR_INVALID_VALUE,
# 1901 "/usr/include/cuda.h" 3
CUDA_ERROR_OUT_OF_MEMORY,
# 1907 "/usr/include/cuda.h" 3
CUDA_ERROR_NOT_INITIALIZED,
# 1912 "/usr/include/cuda.h" 3
CUDA_ERROR_DEINITIALIZED,
# 1919 "/usr/include/cuda.h" 3
CUDA_ERROR_PROFILER_DISABLED,
# 1927 "/usr/include/cuda.h" 3
CUDA_ERROR_PROFILER_NOT_INITIALIZED,
# 1934 "/usr/include/cuda.h" 3
CUDA_ERROR_PROFILER_ALREADY_STARTED,
# 1941 "/usr/include/cuda.h" 3
CUDA_ERROR_PROFILER_ALREADY_STOPPED,
# 1948 "/usr/include/cuda.h" 3
CUDA_ERROR_STUB_LIBRARY = 34,
# 1955 "/usr/include/cuda.h" 3
CUDA_ERROR_DEVICE_UNAVAILABLE = 46,
# 1961 "/usr/include/cuda.h" 3
CUDA_ERROR_NO_DEVICE = 100,
# 1968 "/usr/include/cuda.h" 3
CUDA_ERROR_INVALID_DEVICE,
# 1973 "/usr/include/cuda.h" 3
CUDA_ERROR_DEVICE_NOT_LICENSED,
# 1979 "/usr/include/cuda.h" 3
CUDA_ERROR_INVALID_IMAGE = 200,
# 1989 "/usr/include/cuda.h" 3
CUDA_ERROR_INVALID_CONTEXT,
# 1998 "/usr/include/cuda.h" 3
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 2003 "/usr/include/cuda.h" 3
CUDA_ERROR_MAP_FAILED = 205,
# 2008 "/usr/include/cuda.h" 3
CUDA_ERROR_UNMAP_FAILED,
# 2014 "/usr/include/cuda.h" 3
CUDA_ERROR_ARRAY_IS_MAPPED,
# 2019 "/usr/include/cuda.h" 3
CUDA_ERROR_ALREADY_MAPPED,
# 2027 "/usr/include/cuda.h" 3
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 2032 "/usr/include/cuda.h" 3
CUDA_ERROR_ALREADY_ACQUIRED,
# 2037 "/usr/include/cuda.h" 3
CUDA_ERROR_NOT_MAPPED,
# 2043 "/usr/include/cuda.h" 3
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 2049 "/usr/include/cuda.h" 3
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 2055 "/usr/include/cuda.h" 3
CUDA_ERROR_ECC_UNCORRECTABLE,
# 2061 "/usr/include/cuda.h" 3
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 2068 "/usr/include/cuda.h" 3
CUDA_ERROR_CONTEXT_ALREADY_IN_USE,
# 2074 "/usr/include/cuda.h" 3
CUDA_ERROR_PEER_ACCESS_UNSUPPORTED,
# 2079 "/usr/include/cuda.h" 3
CUDA_ERROR_INVALID_PTX,
# 2084 "/usr/include/cuda.h" 3
CUDA_ERROR_INVALID_GRAPHICS_CONTEXT,
# 2090 "/usr/include/cuda.h" 3
CUDA_ERROR_NVLINK_UNCORRECTABLE,
# 2095 "/usr/include/cuda.h" 3
CUDA_ERROR_JIT_COMPILER_NOT_FOUND,
# 2101 "/usr/include/cuda.h" 3
CUDA_ERROR_UNSUPPORTED_PTX_VERSION,
# 2106 "/usr/include/cuda.h" 3
CUDA_ERROR_JIT_COMPILATION_DISABLED,
# 2112 "/usr/include/cuda.h" 3
CUDA_ERROR_UNSUPPORTED_EXEC_AFFINITY,
# 2118 "/usr/include/cuda.h" 3
CUDA_ERROR_INVALID_SOURCE = 300,
# 2123 "/usr/include/cuda.h" 3
CUDA_ERROR_FILE_NOT_FOUND,
# 2128 "/usr/include/cuda.h" 3
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 2133 "/usr/include/cuda.h" 3
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 2138 "/usr/include/cuda.h" 3
CUDA_ERROR_OPERATING_SYSTEM,
# 2144 "/usr/include/cuda.h" 3
CUDA_ERROR_INVALID_HANDLE = 400,
# 2150 "/usr/include/cuda.h" 3
CUDA_ERROR_ILLEGAL_STATE,
# 2157 "/usr/include/cuda.h" 3
CUDA_ERROR_NOT_FOUND = 500,
# 2165 "/usr/include/cuda.h" 3
CUDA_ERROR_NOT_READY = 600,
# 2174 "/usr/include/cuda.h" 3
CUDA_ERROR_ILLEGAL_ADDRESS = 700,
# 2185 "/usr/include/cuda.h" 3
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 2195 "/usr/include/cuda.h" 3
CUDA_ERROR_LAUNCH_TIMEOUT,
# 2201 "/usr/include/cuda.h" 3
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 2208 "/usr/include/cuda.h" 3
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED,
# 2215 "/usr/include/cuda.h" 3
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED,
# 2221 "/usr/include/cuda.h" 3
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
# 2228 "/usr/include/cuda.h" 3
CUDA_ERROR_CONTEXT_IS_DESTROYED,
# 2236 "/usr/include/cuda.h" 3
CUDA_ERROR_ASSERT,
# 2243 "/usr/include/cuda.h" 3
CUDA_ERROR_TOO_MANY_PEERS,
# 2249 "/usr/include/cuda.h" 3
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,
# 2255 "/usr/include/cuda.h" 3
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED,
# 2264 "/usr/include/cuda.h" 3
CUDA_ERROR_HARDWARE_STACK_ERROR,
# 2272 "/usr/include/cuda.h" 3
CUDA_ERROR_ILLEGAL_INSTRUCTION,
# 2281 "/usr/include/cuda.h" 3
CUDA_ERROR_MISALIGNED_ADDRESS,
# 2292 "/usr/include/cuda.h" 3
CUDA_ERROR_INVALID_ADDRESS_SPACE,
# 2300 "/usr/include/cuda.h" 3
CUDA_ERROR_INVALID_PC,
# 2311 "/usr/include/cuda.h" 3
CUDA_ERROR_LAUNCH_FAILED,
# 2320 "/usr/include/cuda.h" 3
CUDA_ERROR_COOPERATIVE_LAUNCH_TOO_LARGE,
# 2325 "/usr/include/cuda.h" 3
CUDA_ERROR_NOT_PERMITTED = 800,
# 2331 "/usr/include/cuda.h" 3
CUDA_ERROR_NOT_SUPPORTED,
# 2340 "/usr/include/cuda.h" 3
CUDA_ERROR_SYSTEM_NOT_READY,
# 2347 "/usr/include/cuda.h" 3
CUDA_ERROR_SYSTEM_DRIVER_MISMATCH,
# 2356 "/usr/include/cuda.h" 3
CUDA_ERROR_COMPAT_NOT_SUPPORTED_ON_DEVICE,
# 2361 "/usr/include/cuda.h" 3
CUDA_ERROR_MPS_CONNECTION_FAILED,
# 2366 "/usr/include/cuda.h" 3
CUDA_ERROR_MPS_RPC_FAILURE,
# 2372 "/usr/include/cuda.h" 3
CUDA_ERROR_MPS_SERVER_NOT_READY,
# 2377 "/usr/include/cuda.h" 3
CUDA_ERROR_MPS_MAX_CLIENTS_REACHED,
# 2382 "/usr/include/cuda.h" 3
CUDA_ERROR_MPS_MAX_CONNECTIONS_REACHED,
# 2387 "/usr/include/cuda.h" 3
CUDA_ERROR_MPS_CLIENT_TERMINATED,
# 2392 "/usr/include/cuda.h" 3
CUDA_ERROR_CDP_NOT_SUPPORTED,
# 2397 "/usr/include/cuda.h" 3
CUDA_ERROR_CDP_VERSION_MISMATCH,
# 2403 "/usr/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_UNSUPPORTED = 900,
# 2409 "/usr/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_INVALIDATED,
# 2415 "/usr/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_MERGE,
# 2420 "/usr/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_UNMATCHED,
# 2426 "/usr/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_UNJOINED,
# 2433 "/usr/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_ISOLATION,
# 2439 "/usr/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_IMPLICIT,
# 2445 "/usr/include/cuda.h" 3
CUDA_ERROR_CAPTURED_EVENT,
# 2452 "/usr/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_WRONG_THREAD,
# 2457 "/usr/include/cuda.h" 3
CUDA_ERROR_TIMEOUT,
# 2463 "/usr/include/cuda.h" 3
CUDA_ERROR_GRAPH_EXEC_UPDATE_FAILURE,
# 2473 "/usr/include/cuda.h" 3
CUDA_ERROR_EXTERNAL_DEVICE,
# 2478 "/usr/include/cuda.h" 3
CUDA_ERROR_INVALID_CLUSTER_SIZE,
# 2483 "/usr/include/cuda.h" 3
CUDA_ERROR_UNKNOWN = 999
# 2484 "/usr/include/cuda.h" 3
} CUresult;
# 2495 "/usr/include/cuda.h" 3
typedef
# 2489 "/usr/include/cuda.h" 3
enum CUdevice_P2PAttribute_enum {
# 2490 "/usr/include/cuda.h" 3
CU_DEVICE_P2P_ATTRIBUTE_PERFORMANCE_RANK = 1,
# 2491 "/usr/include/cuda.h" 3
CU_DEVICE_P2P_ATTRIBUTE_ACCESS_SUPPORTED,
# 2492 "/usr/include/cuda.h" 3
CU_DEVICE_P2P_ATTRIBUTE_NATIVE_ATOMIC_SUPPORTED,
# 2493 "/usr/include/cuda.h" 3
CU_DEVICE_P2P_ATTRIBUTE_ACCESS_ACCESS_SUPPORTED,
# 2494 "/usr/include/cuda.h" 3
CU_DEVICE_P2P_ATTRIBUTE_CUDA_ARRAY_ACCESS_SUPPORTED = 4
# 2495 "/usr/include/cuda.h" 3
} CUdevice_P2PAttribute;
# 2503 "/usr/include/cuda.h" 3
typedef void (*CUstreamCallback)(CUstream hStream, CUresult status, void * userData);
# 2511 "/usr/include/cuda.h" 3
typedef size_t (*CUoccupancyB2DSize)(int blockSize);
# 2597 "/usr/include/cuda.h" 3
typedef
# 2576 "/usr/include/cuda.h" 3
struct CUDA_MEMCPY2D_st {
# 2577 "/usr/include/cuda.h" 3
size_t srcXInBytes;
# 2578 "/usr/include/cuda.h" 3
size_t srcY;
# 2580 "/usr/include/cuda.h" 3
CUmemorytype srcMemoryType;
# 2581 "/usr/include/cuda.h" 3
const void *srcHost;
# 2582 "/usr/include/cuda.h" 3
CUdeviceptr srcDevice;
# 2583 "/usr/include/cuda.h" 3
CUarray srcArray;
# 2584 "/usr/include/cuda.h" 3
size_t srcPitch;
# 2586 "/usr/include/cuda.h" 3
size_t dstXInBytes;
# 2587 "/usr/include/cuda.h" 3
size_t dstY;
# 2589 "/usr/include/cuda.h" 3
CUmemorytype dstMemoryType;
# 2590 "/usr/include/cuda.h" 3
void *dstHost;
# 2591 "/usr/include/cuda.h" 3
CUdeviceptr dstDevice;
# 2592 "/usr/include/cuda.h" 3
CUarray dstArray;
# 2593 "/usr/include/cuda.h" 3
size_t dstPitch;
# 2595 "/usr/include/cuda.h" 3
size_t WidthInBytes;
# 2596 "/usr/include/cuda.h" 3
size_t Height;
# 2597 "/usr/include/cuda.h" 3
} CUDA_MEMCPY2D_v2;
# 2598 "/usr/include/cuda.h" 3
typedef CUDA_MEMCPY2D_v2 CUDA_MEMCPY2D;
# 2631 "/usr/include/cuda.h" 3
typedef
# 2603 "/usr/include/cuda.h" 3
struct CUDA_MEMCPY3D_st {
# 2604 "/usr/include/cuda.h" 3
size_t srcXInBytes;
# 2605 "/usr/include/cuda.h" 3
size_t srcY;
# 2606 "/usr/include/cuda.h" 3
size_t srcZ;
# 2607 "/usr/include/cuda.h" 3
size_t srcLOD;
# 2608 "/usr/include/cuda.h" 3
CUmemorytype srcMemoryType;
# 2609 "/usr/include/cuda.h" 3
const void *srcHost;
# 2610 "/usr/include/cuda.h" 3
CUdeviceptr srcDevice;
# 2611 "/usr/include/cuda.h" 3
CUarray srcArray;
# 2612 "/usr/include/cuda.h" 3
void *reserved0;
# 2613 "/usr/include/cuda.h" 3
size_t srcPitch;
# 2614 "/usr/include/cuda.h" 3
size_t srcHeight;
# 2616 "/usr/include/cuda.h" 3
size_t dstXInBytes;
# 2617 "/usr/include/cuda.h" 3
size_t dstY;
# 2618 "/usr/include/cuda.h" 3
size_t dstZ;
# 2619 "/usr/include/cuda.h" 3
size_t dstLOD;
# 2620 "/usr/include/cuda.h" 3
CUmemorytype dstMemoryType;
# 2621 "/usr/include/cuda.h" 3
void *dstHost;
# 2622 "/usr/include/cuda.h" 3
CUdeviceptr dstDevice;
# 2623 "/usr/include/cuda.h" 3
CUarray dstArray;
# 2624 "/usr/include/cuda.h" 3
void *reserved1;
# 2625 "/usr/include/cuda.h" 3
size_t dstPitch;
# 2626 "/usr/include/cuda.h" 3
size_t dstHeight;
# 2628 "/usr/include/cuda.h" 3
size_t WidthInBytes;
# 2629 "/usr/include/cuda.h" 3
size_t Height;
# 2630 "/usr/include/cuda.h" 3
size_t Depth;
# 2631 "/usr/include/cuda.h" 3
} CUDA_MEMCPY3D_v2;
# 2632 "/usr/include/cuda.h" 3
typedef CUDA_MEMCPY3D_v2 CUDA_MEMCPY3D;
# 2665 "/usr/include/cuda.h" 3
typedef
# 2637 "/usr/include/cuda.h" 3
struct CUDA_MEMCPY3D_PEER_st {
# 2638 "/usr/include/cuda.h" 3
size_t srcXInBytes;
# 2639 "/usr/include/cuda.h" 3
size_t srcY;
# 2640 "/usr/include/cuda.h" 3
size_t srcZ;
# 2641 "/usr/include/cuda.h" 3
size_t srcLOD;
# 2642 "/usr/include/cuda.h" 3
CUmemorytype srcMemoryType;
# 2643 "/usr/include/cuda.h" 3
const void *srcHost;
# 2644 "/usr/include/cuda.h" 3
CUdeviceptr srcDevice;
# 2645 "/usr/include/cuda.h" 3
CUarray srcArray;
# 2646 "/usr/include/cuda.h" 3
CUcontext srcContext;
# 2647 "/usr/include/cuda.h" 3
size_t srcPitch;
# 2648 "/usr/include/cuda.h" 3
size_t srcHeight;
# 2650 "/usr/include/cuda.h" 3
size_t dstXInBytes;
# 2651 "/usr/include/cuda.h" 3
size_t dstY;
# 2652 "/usr/include/cuda.h" 3
size_t dstZ;
# 2653 "/usr/include/cuda.h" 3
size_t dstLOD;
# 2654 "/usr/include/cuda.h" 3
CUmemorytype dstMemoryType;
# 2655 "/usr/include/cuda.h" 3
void *dstHost;
# 2656 "/usr/include/cuda.h" 3
CUdeviceptr dstDevice;
# 2657 "/usr/include/cuda.h" 3
CUarray dstArray;
# 2658 "/usr/include/cuda.h" 3
CUcontext dstContext;
# 2659 "/usr/include/cuda.h" 3
size_t dstPitch;
# 2660 "/usr/include/cuda.h" 3
size_t dstHeight;
# 2662 "/usr/include/cuda.h" 3
size_t WidthInBytes;
# 2663 "/usr/include/cuda.h" 3
size_t Height;
# 2664 "/usr/include/cuda.h" 3
size_t Depth;
# 2665 "/usr/include/cuda.h" 3
} CUDA_MEMCPY3D_PEER_v1;
# 2666 "/usr/include/cuda.h" 3
typedef CUDA_MEMCPY3D_PEER_v1 CUDA_MEMCPY3D_PEER;
# 2678 "/usr/include/cuda.h" 3
typedef
# 2671 "/usr/include/cuda.h" 3
struct CUDA_ARRAY_DESCRIPTOR_st {
# 2673 "/usr/include/cuda.h" 3
size_t Width;
# 2674 "/usr/include/cuda.h" 3
size_t Height;
# 2676 "/usr/include/cuda.h" 3
CUarray_format Format;
# 2677 "/usr/include/cuda.h" 3
unsigned NumChannels;
# 2678 "/usr/include/cuda.h" 3
} CUDA_ARRAY_DESCRIPTOR_v2;
# 2679 "/usr/include/cuda.h" 3
typedef CUDA_ARRAY_DESCRIPTOR_v2 CUDA_ARRAY_DESCRIPTOR;
# 2693 "/usr/include/cuda.h" 3
typedef
# 2684 "/usr/include/cuda.h" 3
struct CUDA_ARRAY3D_DESCRIPTOR_st {
# 2686 "/usr/include/cuda.h" 3
size_t Width;
# 2687 "/usr/include/cuda.h" 3
size_t Height;
# 2688 "/usr/include/cuda.h" 3
size_t Depth;
# 2690 "/usr/include/cuda.h" 3
CUarray_format Format;
# 2691 "/usr/include/cuda.h" 3
unsigned NumChannels;
# 2692 "/usr/include/cuda.h" 3
unsigned Flags;
# 2693 "/usr/include/cuda.h" 3
} CUDA_ARRAY3D_DESCRIPTOR_v2;
# 2694 "/usr/include/cuda.h" 3
typedef CUDA_ARRAY3D_DESCRIPTOR_v2 CUDA_ARRAY3D_DESCRIPTOR;
# 2724 "/usr/include/cuda.h" 3
typedef
# 2704 "/usr/include/cuda.h" 3
struct CUDA_ARRAY_SPARSE_PROPERTIES_st {
# 2705 "/usr/include/cuda.h" 3
struct {
# 2706 "/usr/include/cuda.h" 3
unsigned width;
# 2707 "/usr/include/cuda.h" 3
unsigned height;
# 2708 "/usr/include/cuda.h" 3
unsigned depth;
# 2709 "/usr/include/cuda.h" 3
} tileExtent;
# 2714 "/usr/include/cuda.h" 3
unsigned miptailFirstLevel;
# 2718 "/usr/include/cuda.h" 3
unsigned long long miptailSize;
# 2722 "/usr/include/cuda.h" 3
unsigned flags;
# 2723 "/usr/include/cuda.h" 3
unsigned reserved[4];
# 2724 "/usr/include/cuda.h" 3
} CUDA_ARRAY_SPARSE_PROPERTIES_v1;
# 2725 "/usr/include/cuda.h" 3
typedef CUDA_ARRAY_SPARSE_PROPERTIES_v1 CUDA_ARRAY_SPARSE_PROPERTIES;
# 2734 "/usr/include/cuda.h" 3
typedef
# 2730 "/usr/include/cuda.h" 3
struct CUDA_ARRAY_MEMORY_REQUIREMENTS_st {
# 2731 "/usr/include/cuda.h" 3
size_t size;
# 2732 "/usr/include/cuda.h" 3
size_t alignment;
# 2733 "/usr/include/cuda.h" 3
unsigned reserved[4];
# 2734 "/usr/include/cuda.h" 3
} CUDA_ARRAY_MEMORY_REQUIREMENTS_v1;
# 2735 "/usr/include/cuda.h" 3
typedef CUDA_ARRAY_MEMORY_REQUIREMENTS_v1 CUDA_ARRAY_MEMORY_REQUIREMENTS;
# 2771 "/usr/include/cuda.h" 3
typedef
# 2740 "/usr/include/cuda.h" 3
struct CUDA_RESOURCE_DESC_st {
# 2742 "/usr/include/cuda.h" 3
CUresourcetype resType;
# 2744 "/usr/include/cuda.h" 3
union {
# 2745 "/usr/include/cuda.h" 3
struct {
# 2746 "/usr/include/cuda.h" 3
CUarray hArray;
# 2747 "/usr/include/cuda.h" 3
} array;
# 2748 "/usr/include/cuda.h" 3
struct {
# 2749 "/usr/include/cuda.h" 3
CUmipmappedArray hMipmappedArray;
# 2750 "/usr/include/cuda.h" 3
} mipmap;
# 2751 "/usr/include/cuda.h" 3
struct {
# 2752 "/usr/include/cuda.h" 3
CUdeviceptr devPtr;
# 2753 "/usr/include/cuda.h" 3
CUarray_format format;
# 2754 "/usr/include/cuda.h" 3
unsigned numChannels;
# 2755 "/usr/include/cuda.h" 3
size_t sizeInBytes;
# 2756 "/usr/include/cuda.h" 3
} linear;
# 2757 "/usr/include/cuda.h" 3
struct {
# 2758 "/usr/include/cuda.h" 3
CUdeviceptr devPtr;
# 2759 "/usr/include/cuda.h" 3
CUarray_format format;
# 2760 "/usr/include/cuda.h" 3
unsigned numChannels;
# 2761 "/usr/include/cuda.h" 3
size_t width;
# 2762 "/usr/include/cuda.h" 3
size_t height;
# 2763 "/usr/include/cuda.h" 3
size_t pitchInBytes;
# 2764 "/usr/include/cuda.h" 3
} pitch2D;
# 2765 "/usr/include/cuda.h" 3
struct {
# 2766 "/usr/include/cuda.h" 3
int reserved[32];
# 2767 "/usr/include/cuda.h" 3
} reserved;
# 2768 "/usr/include/cuda.h" 3
} res;
# 2770 "/usr/include/cuda.h" 3
unsigned flags;
# 2771 "/usr/include/cuda.h" 3
} CUDA_RESOURCE_DESC_v1;
# 2772 "/usr/include/cuda.h" 3
typedef CUDA_RESOURCE_DESC_v1 CUDA_RESOURCE_DESC;
# 2788 "/usr/include/cuda.h" 3
typedef
# 2777 "/usr/include/cuda.h" 3
struct CUDA_TEXTURE_DESC_st {
# 2778 "/usr/include/cuda.h" 3
CUaddress_mode addressMode[3];
# 2779 "/usr/include/cuda.h" 3
CUfilter_mode filterMode;
# 2780 "/usr/include/cuda.h" 3
unsigned flags;
# 2781 "/usr/include/cuda.h" 3
unsigned maxAnisotropy;
# 2782 "/usr/include/cuda.h" 3
CUfilter_mode mipmapFilterMode;
# 2783 "/usr/include/cuda.h" 3
float mipmapLevelBias;
# 2784 "/usr/include/cuda.h" 3
float minMipmapLevelClamp;
# 2785 "/usr/include/cuda.h" 3
float maxMipmapLevelClamp;
# 2786 "/usr/include/cuda.h" 3
float borderColor[4];
# 2787 "/usr/include/cuda.h" 3
int reserved[12];
# 2788 "/usr/include/cuda.h" 3
} CUDA_TEXTURE_DESC_v1;
# 2789 "/usr/include/cuda.h" 3
typedef CUDA_TEXTURE_DESC_v1 CUDA_TEXTURE_DESC;
# 2831 "/usr/include/cuda.h" 3
typedef
# 2794 "/usr/include/cuda.h" 3
enum CUresourceViewFormat_enum {
# 2796 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_NONE,
# 2797 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UINT_1X8,
# 2798 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UINT_2X8,
# 2799 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UINT_4X8,
# 2800 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SINT_1X8,
# 2801 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SINT_2X8,
# 2802 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SINT_4X8,
# 2803 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UINT_1X16,
# 2804 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UINT_2X16,
# 2805 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UINT_4X16,
# 2806 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SINT_1X16,
# 2807 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SINT_2X16,
# 2808 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SINT_4X16,
# 2809 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UINT_1X32,
# 2810 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UINT_2X32,
# 2811 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UINT_4X32,
# 2812 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SINT_1X32,
# 2813 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SINT_2X32,
# 2814 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SINT_4X32,
# 2815 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_FLOAT_1X16,
# 2816 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_FLOAT_2X16,
# 2817 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_FLOAT_4X16,
# 2818 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_FLOAT_1X32,
# 2819 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_FLOAT_2X32,
# 2820 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_FLOAT_4X32,
# 2821 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UNSIGNED_BC1,
# 2822 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UNSIGNED_BC2,
# 2823 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UNSIGNED_BC3,
# 2824 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UNSIGNED_BC4,
# 2825 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SIGNED_BC4,
# 2826 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UNSIGNED_BC5,
# 2827 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SIGNED_BC5,
# 2828 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UNSIGNED_BC6H,
# 2829 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_SIGNED_BC6H,
# 2830 "/usr/include/cuda.h" 3
CU_RES_VIEW_FORMAT_UNSIGNED_BC7
# 2831 "/usr/include/cuda.h" 3
} CUresourceViewFormat;
# 2847 "/usr/include/cuda.h" 3
typedef
# 2836 "/usr/include/cuda.h" 3
struct CUDA_RESOURCE_VIEW_DESC_st {
# 2838 "/usr/include/cuda.h" 3
CUresourceViewFormat format;
# 2839 "/usr/include/cuda.h" 3
size_t width;
# 2840 "/usr/include/cuda.h" 3
size_t height;
# 2841 "/usr/include/cuda.h" 3
size_t depth;
# 2842 "/usr/include/cuda.h" 3
unsigned firstMipmapLevel;
# 2843 "/usr/include/cuda.h" 3
unsigned lastMipmapLevel;
# 2844 "/usr/include/cuda.h" 3
unsigned firstLayer;
# 2845 "/usr/include/cuda.h" 3
unsigned lastLayer;
# 2846 "/usr/include/cuda.h" 3
unsigned reserved[16];
# 2847 "/usr/include/cuda.h" 3
} CUDA_RESOURCE_VIEW_DESC_v1;
# 2848 "/usr/include/cuda.h" 3
typedef CUDA_RESOURCE_VIEW_DESC_v1 CUDA_RESOURCE_VIEW_DESC;
# 2865 "/usr/include/cuda.h" 3
typedef
# 2858 "/usr/include/cuda.h" 3
struct CUtensorMap_st {
# 2860 "/usr/include/cuda.h" 3
alignas(64) cuuint64_t
# 2864 "/usr/include/cuda.h" 3
opaque[16];
# 2865 "/usr/include/cuda.h" 3
} CUtensorMap;
# 2884 "/usr/include/cuda.h" 3
typedef
# 2870 "/usr/include/cuda.h" 3
enum CUtensorMapDataType_enum {
# 2871 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_UINT8,
# 2872 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_UINT16,
# 2873 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_UINT32,
# 2874 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_INT32,
# 2875 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_UINT64,
# 2876 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_INT64,
# 2877 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_FLOAT16,
# 2878 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_FLOAT32,
# 2879 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_FLOAT64,
# 2880 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_BFLOAT16,
# 2881 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_FLOAT32_FTZ,
# 2882 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_TFLOAT32,
# 2883 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_DATA_TYPE_TFLOAT32_FTZ
# 2884 "/usr/include/cuda.h" 3
} CUtensorMapDataType;
# 2893 "/usr/include/cuda.h" 3
typedef
# 2889 "/usr/include/cuda.h" 3
enum CUtensorMapInterleave_enum {
# 2890 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_INTERLEAVE_NONE,
# 2891 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_INTERLEAVE_16B,
# 2892 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_INTERLEAVE_32B
# 2893 "/usr/include/cuda.h" 3
} CUtensorMapInterleave;
# 2903 "/usr/include/cuda.h" 3
typedef
# 2898 "/usr/include/cuda.h" 3
enum CUtensorMapSwizzle_enum {
# 2899 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_SWIZZLE_NONE,
# 2900 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_SWIZZLE_32B,
# 2901 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_SWIZZLE_64B,
# 2902 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_SWIZZLE_128B
# 2903 "/usr/include/cuda.h" 3
} CUtensorMapSwizzle;
# 2913 "/usr/include/cuda.h" 3
typedef
# 2908 "/usr/include/cuda.h" 3
enum CUtensorMapL2promotion_enum {
# 2909 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_L2_PROMOTION_NONE,
# 2910 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_L2_PROMOTION_L2_64B,
# 2911 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_L2_PROMOTION_L2_128B,
# 2912 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_L2_PROMOTION_L2_256B
# 2913 "/usr/include/cuda.h" 3
} CUtensorMapL2promotion;
# 2921 "/usr/include/cuda.h" 3
typedef
# 2918 "/usr/include/cuda.h" 3
enum CUtensorMapFloatOOBfill_enum {
# 2919 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_FLOAT_OOB_FILL_NONE,
# 2920 "/usr/include/cuda.h" 3
CU_TENSOR_MAP_FLOAT_OOB_FILL_NAN_REQUEST_ZERO_FMA
# 2921 "/usr/include/cuda.h" 3
} CUtensorMapFloatOOBfill;
# 2929 "/usr/include/cuda.h" 3
typedef
# 2926 "/usr/include/cuda.h" 3
struct CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_st {
# 2927 "/usr/include/cuda.h" 3
unsigned long long p2pToken;
# 2928 "/usr/include/cuda.h" 3
unsigned vaSpaceToken;
# 2929 "/usr/include/cuda.h" 3
} CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_v1;
# 2930 "/usr/include/cuda.h" 3
typedef CUDA_POINTER_ATTRIBUTE_P2P_TOKENS_v1 CUDA_POINTER_ATTRIBUTE_P2P_TOKENS;
# 2940 "/usr/include/cuda.h" 3
typedef
# 2936 "/usr/include/cuda.h" 3
enum CUDA_POINTER_ATTRIBUTE_ACCESS_FLAGS_enum {
# 2937 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_ACCESS_FLAG_NONE,
# 2938 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_ACCESS_FLAG_READ,
# 2939 "/usr/include/cuda.h" 3
CU_POINTER_ATTRIBUTE_ACCESS_FLAG_READWRITE = 3
# 2940 "/usr/include/cuda.h" 3
} CUDA_POINTER_ATTRIBUTE_ACCESS_FLAGS;
# 2956 "/usr/include/cuda.h" 3
typedef
# 2945 "/usr/include/cuda.h" 3
struct CUDA_LAUNCH_PARAMS_st {
# 2946 "/usr/include/cuda.h" 3
CUfunction function;
# 2947 "/usr/include/cuda.h" 3
unsigned gridDimX;
# 2948 "/usr/include/cuda.h" 3
unsigned gridDimY;
# 2949 "/usr/include/cuda.h" 3
unsigned gridDimZ;
# 2950 "/usr/include/cuda.h" 3
unsigned blockDimX;
# 2951 "/usr/include/cuda.h" 3
unsigned blockDimY;
# 2952 "/usr/include/cuda.h" 3
unsigned blockDimZ;
# 2953 "/usr/include/cuda.h" 3
unsigned sharedMemBytes;
# 2954 "/usr/include/cuda.h" 3
CUstream hStream;
# 2955 "/usr/include/cuda.h" 3
void **kernelParams;
# 2956 "/usr/include/cuda.h" 3
} CUDA_LAUNCH_PARAMS_v1;
# 2957 "/usr/include/cuda.h" 3
typedef CUDA_LAUNCH_PARAMS_v1 CUDA_LAUNCH_PARAMS;
# 2995 "/usr/include/cuda.h" 3
typedef
# 2962 "/usr/include/cuda.h" 3
enum CUexternalMemoryHandleType_enum {
# 2966 "/usr/include/cuda.h" 3
CU_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_FD = 1,
# 2970 "/usr/include/cuda.h" 3
CU_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32,
# 2974 "/usr/include/cuda.h" 3
CU_EXTERNAL_MEMORY_HANDLE_TYPE_OPAQUE_WIN32_KMT,
# 2978 "/usr/include/cuda.h" 3
CU_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_HEAP,
# 2982 "/usr/include/cuda.h" 3
CU_EXTERNAL_MEMORY_HANDLE_TYPE_D3D12_RESOURCE,
# 2986 "/usr/include/cuda.h" 3
CU_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_RESOURCE,
# 2990 "/usr/include/cuda.h" 3
CU_EXTERNAL_MEMORY_HANDLE_TYPE_D3D11_RESOURCE_KMT,
# 2994 "/usr/include/cuda.h" 3
CU_EXTERNAL_MEMORY_HANDLE_TYPE_NVSCIBUF
# 2995 "/usr/include/cuda.h" 3
} CUexternalMemoryHandleType;
# 3089 "/usr/include/cuda.h" 3
typedef
# 3036 "/usr/include/cuda.h" 3
struct CUDA_EXTERNAL_MEMORY_HANDLE_DESC_st {
# 3040 "/usr/include/cuda.h" 3
CUexternalMemoryHandleType type;
# 3041 "/usr/include/cuda.h" 3
union {
# 3047 "/usr/include/cuda.h" 3
int fd;
# 3063 "/usr/include/cuda.h" 3
struct {
# 3067 "/usr/include/cuda.h" 3
void *handle;
# 3072 "/usr/include/cuda.h" 3
const void *name;
# 3073 "/usr/include/cuda.h" 3
} win32;
# 3078 "/usr/include/cuda.h" 3
const void *nvSciBufObject;
# 3079 "/usr/include/cuda.h" 3
} handle;
# 3083 "/usr/include/cuda.h" 3
unsigned long long size;
# 3087 "/usr/include/cuda.h" 3
unsigned flags;
# 3088 "/usr/include/cuda.h" 3
unsigned reserved[16];
# 3089 "/usr/include/cuda.h" 3
} CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1;
# 3090 "/usr/include/cuda.h" 3
typedef CUDA_EXTERNAL_MEMORY_HANDLE_DESC_v1 CUDA_EXTERNAL_MEMORY_HANDLE_DESC;
# 3109 "/usr/include/cuda.h" 3
typedef
# 3095 "/usr/include/cuda.h" 3
struct CUDA_EXTERNAL_MEMORY_BUFFER_DESC_st {
# 3099 "/usr/include/cuda.h" 3
unsigned long long offset;
# 3103 "/usr/include/cuda.h" 3
unsigned long long size;
# 3107 "/usr/include/cuda.h" 3
unsigned flags;
# 3108 "/usr/include/cuda.h" 3
unsigned reserved[16];
# 3109 "/usr/include/cuda.h" 3
} CUDA_EXTERNAL_MEMORY_BUFFER_DESC_v1;
# 3110 "/usr/include/cuda.h" 3
typedef CUDA_EXTERNAL_MEMORY_BUFFER_DESC_v1 CUDA_EXTERNAL_MEMORY_BUFFER_DESC;
# 3130 "/usr/include/cuda.h" 3
typedef
# 3115 "/usr/include/cuda.h" 3
struct CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_st {
# 3120 "/usr/include/cuda.h" 3
unsigned long long offset;
# 3124 "/usr/include/cuda.h" 3
CUDA_ARRAY3D_DESCRIPTOR arrayDesc;
# 3128 "/usr/include/cuda.h" 3
unsigned numLevels;
# 3129 "/usr/include/cuda.h" 3
unsigned reserved[16];
# 3130 "/usr/include/cuda.h" 3
} CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_v1;
# 3131 "/usr/include/cuda.h" 3
typedef CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC_v1 CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC;
# 3177 "/usr/include/cuda.h" 3
typedef
# 3136 "/usr/include/cuda.h" 3
enum CUexternalSemaphoreHandleType_enum {
# 3140 "/usr/include/cuda.h" 3
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_FD = 1,
# 3144 "/usr/include/cuda.h" 3
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32,
# 3148 "/usr/include/cuda.h" 3
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_OPAQUE_WIN32_KMT,
# 3152 "/usr/include/cuda.h" 3
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D12_FENCE,
# 3156 "/usr/include/cuda.h" 3
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_FENCE,
# 3160 "/usr/include/cuda.h" 3
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_NVSCISYNC,
# 3164 "/usr/include/cuda.h" 3
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_KEYED_MUTEX,
# 3168 "/usr/include/cuda.h" 3
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_D3D11_KEYED_MUTEX_KMT,
# 3172 "/usr/include/cuda.h" 3
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_TIMELINE_SEMAPHORE_FD,
# 3176 "/usr/include/cuda.h" 3
CU_EXTERNAL_SEMAPHORE_HANDLE_TYPE_TIMELINE_SEMAPHORE_WIN32
# 3177 "/usr/include/cuda.h" 3
} CUexternalSemaphoreHandleType;
# 3231 "/usr/include/cuda.h" 3
typedef
# 3182 "/usr/include/cuda.h" 3
struct CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_st {
# 3186 "/usr/include/cuda.h" 3
CUexternalSemaphoreHandleType type;
# 3187 "/usr/include/cuda.h" 3
union {
# 3194 "/usr/include/cuda.h" 3
int fd;
# 3210 "/usr/include/cuda.h" 3
struct {
# 3214 "/usr/include/cuda.h" 3
void *handle;
# 3219 "/usr/include/cuda.h" 3
const void *name;
# 3220 "/usr/include/cuda.h" 3
} win32;
# 3224 "/usr/include/cuda.h" 3
const void *nvSciSyncObj;
# 3225 "/usr/include/cuda.h" 3
} handle;
# 3229 "/usr/include/cuda.h" 3
unsigned flags;
# 3230 "/usr/include/cuda.h" 3
unsigned reserved[16];
# 3231 "/usr/include/cuda.h" 3
} CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1;
# 3232 "/usr/include/cuda.h" 3
typedef CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC_v1 CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC;
# 3279 "/usr/include/cuda.h" 3
typedef
# 3237 "/usr/include/cuda.h" 3
struct CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_st {
# 3238 "/usr/include/cuda.h" 3
struct {
# 3242 "/usr/include/cuda.h" 3
struct {
# 3246 "/usr/include/cuda.h" 3
unsigned long long value;
# 3247 "/usr/include/cuda.h" 3
} fence;
# 3248 "/usr/include/cuda.h" 3
union {
# 3253 "/usr/include/cuda.h" 3
void *fence;
# 3254 "/usr/include/cuda.h" 3
unsigned long long reserved;
# 3255 "/usr/include/cuda.h" 3
} nvSciSync;
# 3259 "/usr/include/cuda.h" 3
struct {
# 3263 "/usr/include/cuda.h" 3
unsigned long long key;
# 3264 "/usr/include/cuda.h" 3
} keyedMutex;
# 3265 "/usr/include/cuda.h" 3
unsigned reserved[12];
# 3266 "/usr/include/cuda.h" 3
} params;
# 3277 "/usr/include/cuda.h" 3
unsigned flags;
# 3278 "/usr/include/cuda.h" 3
unsigned reserved[16];
# 3279 "/usr/include/cuda.h" 3
} CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1;
# 3280 "/usr/include/cuda.h" 3
typedef CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS_v1 CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS;
# 3330 "/usr/include/cuda.h" 3
typedef
# 3285 "/usr/include/cuda.h" 3
struct CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_st {
# 3286 "/usr/include/cuda.h" 3
struct {
# 3290 "/usr/include/cuda.h" 3
struct {
# 3294 "/usr/include/cuda.h" 3
unsigned long long value;
# 3295 "/usr/include/cuda.h" 3
} fence;
# 3300 "/usr/include/cuda.h" 3
union {
# 3301 "/usr/include/cuda.h" 3
void *fence;
# 3302 "/usr/include/cuda.h" 3
unsigned long long reserved;
# 3303 "/usr/include/cuda.h" 3
} nvSciSync;
# 3307 "/usr/include/cuda.h" 3
struct {
# 3311 "/usr/include/cuda.h" 3
unsigned long long key;
# 3315 "/usr/include/cuda.h" 3
unsigned timeoutMs;
# 3316 "/usr/include/cuda.h" 3
} keyedMutex;
# 3317 "/usr/include/cuda.h" 3
unsigned reserved[10];
# 3318 "/usr/include/cuda.h" 3
} params;
# 3328 "/usr/include/cuda.h" 3
unsigned flags;
# 3329 "/usr/include/cuda.h" 3
unsigned reserved[16];
# 3330 "/usr/include/cuda.h" 3
} CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1;
# 3331 "/usr/include/cuda.h" 3
typedef CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS_v1 CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS;
# 3340 "/usr/include/cuda.h" 3
typedef
# 3336 "/usr/include/cuda.h" 3
struct CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_st {
# 3337 "/usr/include/cuda.h" 3
CUexternalSemaphore *extSemArray;
# 3338 "/usr/include/cuda.h" 3
const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS *paramsArray;
# 3339 "/usr/include/cuda.h" 3
unsigned numExtSems;
# 3340 "/usr/include/cuda.h" 3
} CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_v1;
# 3341 "/usr/include/cuda.h" 3
typedef CUDA_EXT_SEM_SIGNAL_NODE_PARAMS_v1 CUDA_EXT_SEM_SIGNAL_NODE_PARAMS;
# 3350 "/usr/include/cuda.h" 3
typedef
# 3346 "/usr/include/cuda.h" 3
struct CUDA_EXT_SEM_WAIT_NODE_PARAMS_st {
# 3347 "/usr/include/cuda.h" 3
CUexternalSemaphore *extSemArray;
# 3348 "/usr/include/cuda.h" 3
const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS *paramsArray;
# 3349 "/usr/include/cuda.h" 3
unsigned numExtSems;
# 3350 "/usr/include/cuda.h" 3
} CUDA_EXT_SEM_WAIT_NODE_PARAMS_v1;
# 3351 "/usr/include/cuda.h" 3
typedef CUDA_EXT_SEM_WAIT_NODE_PARAMS_v1 CUDA_EXT_SEM_WAIT_NODE_PARAMS;
# 3353 "/usr/include/cuda.h" 3
typedef unsigned long long CUmemGenericAllocationHandle_v1;
# 3354 "/usr/include/cuda.h" 3
typedef CUmemGenericAllocationHandle_v1 CUmemGenericAllocationHandle;
# 3365 "/usr/include/cuda.h" 3
typedef
# 3359 "/usr/include/cuda.h" 3
enum CUmemAllocationHandleType_enum {
# 3360 "/usr/include/cuda.h" 3
CU_MEM_HANDLE_TYPE_NONE,
# 3361 "/usr/include/cuda.h" 3
CU_MEM_HANDLE_TYPE_POSIX_FILE_DESCRIPTOR,
# 3362 "/usr/include/cuda.h" 3
CU_MEM_HANDLE_TYPE_WIN32,
# 3363 "/usr/include/cuda.h" 3
CU_MEM_HANDLE_TYPE_WIN32_KMT = 4,
# 3364 "/usr/include/cuda.h" 3
CU_MEM_HANDLE_TYPE_MAX = 2147483647
# 3365 "/usr/include/cuda.h" 3
} CUmemAllocationHandleType;
# 3375 "/usr/include/cuda.h" 3
typedef
# 3370 "/usr/include/cuda.h" 3
enum CUmemAccess_flags_enum {
# 3371 "/usr/include/cuda.h" 3
CU_MEM_ACCESS_FLAGS_PROT_NONE,
# 3372 "/usr/include/cuda.h" 3
CU_MEM_ACCESS_FLAGS_PROT_READ,
# 3373 "/usr/include/cuda.h" 3
CU_MEM_ACCESS_FLAGS_PROT_READWRITE = 3,
# 3374 "/usr/include/cuda.h" 3
CU_MEM_ACCESS_FLAGS_PROT_MAX = 2147483647
# 3375 "/usr/include/cuda.h" 3
} CUmemAccess_flags;
# 3384 "/usr/include/cuda.h" 3
typedef
# 3380 "/usr/include/cuda.h" 3
enum CUmemLocationType_enum {
# 3381 "/usr/include/cuda.h" 3
CU_MEM_LOCATION_TYPE_INVALID,
# 3382 "/usr/include/cuda.h" 3
CU_MEM_LOCATION_TYPE_DEVICE,
# 3383 "/usr/include/cuda.h" 3
CU_MEM_LOCATION_TYPE_MAX = 2147483647
# 3384 "/usr/include/cuda.h" 3
} CUmemLocationType;
# 3397 "/usr/include/cuda.h" 3
typedef
# 3389 "/usr/include/cuda.h" 3
enum CUmemAllocationType_enum {
# 3390 "/usr/include/cuda.h" 3
CU_MEM_ALLOCATION_TYPE_INVALID,
# 3395 "/usr/include/cuda.h" 3
CU_MEM_ALLOCATION_TYPE_PINNED,
# 3396 "/usr/include/cuda.h" 3
CU_MEM_ALLOCATION_TYPE_MAX = 2147483647
# 3397 "/usr/include/cuda.h" 3
} CUmemAllocationType;
# 3405 "/usr/include/cuda.h" 3
typedef
# 3402 "/usr/include/cuda.h" 3
enum CUmemAllocationGranularity_flags_enum {
# 3403 "/usr/include/cuda.h" 3
CU_MEM_ALLOC_GRANULARITY_MINIMUM,
# 3404 "/usr/include/cuda.h" 3
CU_MEM_ALLOC_GRANULARITY_RECOMMENDED
# 3405 "/usr/include/cuda.h" 3
} CUmemAllocationGranularity_flags;
# 3414 "/usr/include/cuda.h" 3
typedef
# 3410 "/usr/include/cuda.h" 3
enum CUmemRangeHandleType_enum {
# 3412 "/usr/include/cuda.h" 3
CU_MEM_RANGE_HANDLE_TYPE_DMA_BUF_FD = 1,
# 3413 "/usr/include/cuda.h" 3
CU_MEM_RANGE_HANDLE_TYPE_MAX = 2147483647
# 3414 "/usr/include/cuda.h" 3
} CUmemRangeHandleType;
# 3422 "/usr/include/cuda.h" 3
typedef
# 3419 "/usr/include/cuda.h" 3
enum CUarraySparseSubresourceType_enum {
# 3420 "/usr/include/cuda.h" 3
CU_ARRAY_SPARSE_SUBRESOURCE_TYPE_SPARSE_LEVEL,
# 3421 "/usr/include/cuda.h" 3
CU_ARRAY_SPARSE_SUBRESOURCE_TYPE_MIPTAIL
# 3422 "/usr/include/cuda.h" 3
} CUarraySparseSubresourceType;
# 3430 "/usr/include/cuda.h" 3
typedef
# 3427 "/usr/include/cuda.h" 3
enum CUmemOperationType_enum {
# 3428 "/usr/include/cuda.h" 3
CU_MEM_OPERATION_TYPE_MAP = 1,
# 3429 "/usr/include/cuda.h" 3
CU_MEM_OPERATION_TYPE_UNMAP
# 3430 "/usr/include/cuda.h" 3
} CUmemOperationType;
# 3437 "/usr/include/cuda.h" 3
typedef
# 3435 "/usr/include/cuda.h" 3
enum CUmemHandleType_enum {
# 3436 "/usr/include/cuda.h" 3
CU_MEM_HANDLE_TYPE_GENERIC
# 3437 "/usr/include/cuda.h" 3
} CUmemHandleType;
# 3481 "/usr/include/cuda.h" 3
typedef
# 3442 "/usr/include/cuda.h" 3
struct CUarrayMapInfo_st {
# 3443 "/usr/include/cuda.h" 3
CUresourcetype resourceType;
# 3445 "/usr/include/cuda.h" 3
union {
# 3446 "/usr/include/cuda.h" 3
CUmipmappedArray mipmap;
# 3447 "/usr/include/cuda.h" 3
CUarray array;
# 3448 "/usr/include/cuda.h" 3
} resource;
# 3450 "/usr/include/cuda.h" 3
CUarraySparseSubresourceType subresourceType;
# 3452 "/usr/include/cuda.h" 3
union {
# 3453 "/usr/include/cuda.h" 3
struct {
# 3454 "/usr/include/cuda.h" 3
unsigned level;
# 3455 "/usr/include/cuda.h" 3
unsigned layer;
# 3456 "/usr/include/cuda.h" 3
unsigned offsetX;
# 3457 "/usr/include/cuda.h" 3
unsigned offsetY;
# 3458 "/usr/include/cuda.h" 3
unsigned offsetZ;
# 3459 "/usr/include/cuda.h" 3
unsigned extentWidth;
# 3460 "/usr/include/cuda.h" 3
unsigned extentHeight;
# 3461 "/usr/include/cuda.h" 3
unsigned extentDepth;
# 3462 "/usr/include/cuda.h" 3
} sparseLevel;
# 3463 "/usr/include/cuda.h" 3
struct {
# 3464 "/usr/include/cuda.h" 3
unsigned layer;
# 3465 "/usr/include/cuda.h" 3
unsigned long long offset;
# 3466 "/usr/include/cuda.h" 3
unsigned long long size;
# 3467 "/usr/include/cuda.h" 3
} miptail;
# 3468 "/usr/include/cuda.h" 3
} subresource;
# 3470 "/usr/include/cuda.h" 3
CUmemOperationType memOperationType;
# 3471 "/usr/include/cuda.h" 3
CUmemHandleType memHandleType;
# 3473 "/usr/include/cuda.h" 3
union {
# 3474 "/usr/include/cuda.h" 3
CUmemGenericAllocationHandle memHandle;
# 3475 "/usr/include/cuda.h" 3
} memHandle;
# 3477 "/usr/include/cuda.h" 3
unsigned long long offset;
# 3478 "/usr/include/cuda.h" 3
unsigned deviceBitMask;
# 3479 "/usr/include/cuda.h" 3
unsigned flags;
# 3480 "/usr/include/cuda.h" 3
unsigned reserved[2];
# 3481 "/usr/include/cuda.h" 3
} CUarrayMapInfo_v1;
# 3482 "/usr/include/cuda.h" 3
typedef CUarrayMapInfo_v1 CUarrayMapInfo;
# 3490 "/usr/include/cuda.h" 3
typedef
# 3487 "/usr/include/cuda.h" 3
struct CUmemLocation_st {
# 3488 "/usr/include/cuda.h" 3
CUmemLocationType type;
# 3489 "/usr/include/cuda.h" 3
int id;
# 3490 "/usr/include/cuda.h" 3
} CUmemLocation_v1;
# 3491 "/usr/include/cuda.h" 3
typedef CUmemLocation_v1 CUmemLocation;
# 3499 "/usr/include/cuda.h" 3
typedef
# 3496 "/usr/include/cuda.h" 3
enum CUmemAllocationCompType_enum {
# 3497 "/usr/include/cuda.h" 3
CU_MEM_ALLOCATION_COMP_NONE,
# 3498 "/usr/include/cuda.h" 3
CU_MEM_ALLOCATION_COMP_GENERIC
# 3499 "/usr/include/cuda.h" 3
} CUmemAllocationCompType;
# 3541 "/usr/include/cuda.h" 3
typedef
# 3509 "/usr/include/cuda.h" 3
struct CUmemAllocationProp_st {
# 3511 "/usr/include/cuda.h" 3
CUmemAllocationType type;
# 3513 "/usr/include/cuda.h" 3
CUmemAllocationHandleType requestedHandleTypes;
# 3515 "/usr/include/cuda.h" 3
CUmemLocation location;
# 3523 "/usr/include/cuda.h" 3
void *win32HandleMetaData;
# 3524 "/usr/include/cuda.h" 3
struct {
# 3535 "/usr/include/cuda.h" 3
unsigned char compressionType;
# 3536 "/usr/include/cuda.h" 3
unsigned char gpuDirectRDMACapable;
# 3538 "/usr/include/cuda.h" 3
unsigned short usage;
# 3539 "/usr/include/cuda.h" 3
unsigned char reserved[4];
# 3540 "/usr/include/cuda.h" 3
} allocFlags;
# 3541 "/usr/include/cuda.h" 3
} CUmemAllocationProp_v1;
# 3542 "/usr/include/cuda.h" 3
typedef CUmemAllocationProp_v1 CUmemAllocationProp;
# 3550 "/usr/include/cuda.h" 3
typedef
# 3547 "/usr/include/cuda.h" 3
struct CUmemAccessDesc_st {
# 3548 "/usr/include/cuda.h" 3
CUmemLocation location;
# 3549 "/usr/include/cuda.h" 3
CUmemAccess_flags flags;
# 3550 "/usr/include/cuda.h" 3
} CUmemAccessDesc_v1;
# 3551 "/usr/include/cuda.h" 3
typedef CUmemAccessDesc_v1 CUmemAccessDesc;
# 3566 "/usr/include/cuda.h" 3
typedef
# 3556 "/usr/include/cuda.h" 3
enum CUgraphExecUpdateResult_enum {
# 3557 "/usr/include/cuda.h" 3
CU_GRAPH_EXEC_UPDATE_SUCCESS,
# 3558 "/usr/include/cuda.h" 3
CU_GRAPH_EXEC_UPDATE_ERROR,
# 3559 "/usr/include/cuda.h" 3
CU_GRAPH_EXEC_UPDATE_ERROR_TOPOLOGY_CHANGED,
# 3560 "/usr/include/cuda.h" 3
CU_GRAPH_EXEC_UPDATE_ERROR_NODE_TYPE_CHANGED,
# 3561 "/usr/include/cuda.h" 3
CU_GRAPH_EXEC_UPDATE_ERROR_FUNCTION_CHANGED,
# 3562 "/usr/include/cuda.h" 3
CU_GRAPH_EXEC_UPDATE_ERROR_PARAMETERS_CHANGED,
# 3563 "/usr/include/cuda.h" 3
CU_GRAPH_EXEC_UPDATE_ERROR_NOT_SUPPORTED,
# 3564 "/usr/include/cuda.h" 3
CU_GRAPH_EXEC_UPDATE_ERROR_UNSUPPORTED_FUNCTION_CHANGE,
# 3565 "/usr/include/cuda.h" 3
CU_GRAPH_EXEC_UPDATE_ERROR_ATTRIBUTES_CHANGED
# 3566 "/usr/include/cuda.h" 3
} CUgraphExecUpdateResult;
# 3588 "/usr/include/cuda.h" 3
typedef
# 3571 "/usr/include/cuda.h" 3
struct CUgraphExecUpdateResultInfo_st {
# 3575 "/usr/include/cuda.h" 3
CUgraphExecUpdateResult result;
# 3582 "/usr/include/cuda.h" 3
CUgraphNode errorNode;
# 3587 "/usr/include/cuda.h" 3
CUgraphNode errorFromNode;
# 3588 "/usr/include/cuda.h" 3
} CUgraphExecUpdateResultInfo_v1;
# 3589 "/usr/include/cuda.h" 3
typedef CUgraphExecUpdateResultInfo_v1 CUgraphExecUpdateResultInfo;
# 3655 "/usr/include/cuda.h" 3
typedef
# 3594 "/usr/include/cuda.h" 3
enum CUmemPool_attribute_enum {
# 3603 "/usr/include/cuda.h" 3
CU_MEMPOOL_ATTR_REUSE_FOLLOW_EVENT_DEPENDENCIES = 1,
# 3610 "/usr/include/cuda.h" 3
CU_MEMPOOL_ATTR_REUSE_ALLOW_OPPORTUNISTIC,
# 3618 "/usr/include/cuda.h" 3
CU_MEMPOOL_ATTR_REUSE_ALLOW_INTERNAL_DEPENDENCIES,
# 3628 "/usr/include/cuda.h" 3
CU_MEMPOOL_ATTR_RELEASE_THRESHOLD,
# 3634 "/usr/include/cuda.h" 3
CU_MEMPOOL_ATTR_RESERVED_MEM_CURRENT,
# 3641 "/usr/include/cuda.h" 3
CU_MEMPOOL_ATTR_RESERVED_MEM_HIGH,
# 3647 "/usr/include/cuda.h" 3
CU_MEMPOOL_ATTR_USED_MEM_CURRENT,
# 3654 "/usr/include/cuda.h" 3
CU_MEMPOOL_ATTR_USED_MEM_HIGH
# 3655 "/usr/include/cuda.h" 3
} CUmemPool_attribute;
# 3672 "/usr/include/cuda.h" 3
typedef
# 3660 "/usr/include/cuda.h" 3
struct CUmemPoolProps_st {
# 3661 "/usr/include/cuda.h" 3
CUmemAllocationType allocType;
# 3662 "/usr/include/cuda.h" 3
CUmemAllocationHandleType handleTypes;
# 3663 "/usr/include/cuda.h" 3
CUmemLocation location;
# 3670 "/usr/include/cuda.h" 3
void *win32SecurityAttributes;
# 3671 "/usr/include/cuda.h" 3
unsigned char reserved[64];
# 3672 "/usr/include/cuda.h" 3
} CUmemPoolProps_v1;
# 3673 "/usr/include/cuda.h" 3
typedef CUmemPoolProps_v1 CUmemPoolProps;
# 3680 "/usr/include/cuda.h" 3
typedef
# 3678 "/usr/include/cuda.h" 3
struct CUmemPoolPtrExportData_st {
# 3679 "/usr/include/cuda.h" 3
unsigned char reserved[64];
# 3680 "/usr/include/cuda.h" 3
} CUmemPoolPtrExportData_v1;
# 3681 "/usr/include/cuda.h" 3
typedef CUmemPoolPtrExportData_v1 CUmemPoolPtrExportData;
# 3696 "/usr/include/cuda.h" 3
typedef
# 3686 "/usr/include/cuda.h" 3
struct CUDA_MEM_ALLOC_NODE_PARAMS_st {
# 3691 "/usr/include/cuda.h" 3
CUmemPoolProps poolProps;
# 3692 "/usr/include/cuda.h" 3
const CUmemAccessDesc *accessDescs;
# 3693 "/usr/include/cuda.h" 3
size_t accessDescCount;
# 3694 "/usr/include/cuda.h" 3
size_t bytesize;
# 3695 "/usr/include/cuda.h" 3
CUdeviceptr dptr;
# 3696 "/usr/include/cuda.h" 3
} CUDA_MEM_ALLOC_NODE_PARAMS;
# 3725 "/usr/include/cuda.h" 3
typedef
# 3698 "/usr/include/cuda.h" 3
enum CUgraphMem_attribute_enum {
# 3703 "/usr/include/cuda.h" 3
CU_GRAPH_MEM_ATTR_USED_MEM_CURRENT,
# 3710 "/usr/include/cuda.h" 3
CU_GRAPH_MEM_ATTR_USED_MEM_HIGH,
# 3717 "/usr/include/cuda.h" 3
CU_GRAPH_MEM_ATTR_RESERVED_MEM_CURRENT,
# 3724 "/usr/include/cuda.h" 3
CU_GRAPH_MEM_ATTR_RESERVED_MEM_HIGH
# 3725 "/usr/include/cuda.h" 3
} CUgraphMem_attribute;
# 3898 "/usr/include/cuda.h" 3
typedef
# 3895 "/usr/include/cuda.h" 3
enum CUflushGPUDirectRDMAWritesOptions_enum {
# 3896 "/usr/include/cuda.h" 3
CU_FLUSH_GPU_DIRECT_RDMA_WRITES_OPTION_HOST = (1 << 0),
# 3897 "/usr/include/cuda.h" 3
CU_FLUSH_GPU_DIRECT_RDMA_WRITES_OPTION_MEMOPS
# 3898 "/usr/include/cuda.h" 3
} CUflushGPUDirectRDMAWritesOptions;
# 3907 "/usr/include/cuda.h" 3
typedef
# 3903 "/usr/include/cuda.h" 3
enum CUGPUDirectRDMAWritesOrdering_enum {
# 3904 "/usr/include/cuda.h" 3
CU_GPU_DIRECT_RDMA_WRITES_ORDERING_NONE,
# 3905 "/usr/include/cuda.h" 3
CU_GPU_DIRECT_RDMA_WRITES_ORDERING_OWNER = 100,
# 3906 "/usr/include/cuda.h" 3
CU_GPU_DIRECT_RDMA_WRITES_ORDERING_ALL_DEVICES = 200
# 3907 "/usr/include/cuda.h" 3
} CUGPUDirectRDMAWritesOrdering;
# 3915 "/usr/include/cuda.h" 3
typedef
# 3912 "/usr/include/cuda.h" 3
enum CUflushGPUDirectRDMAWritesScope_enum {
# 3913 "/usr/include/cuda.h" 3
CU_FLUSH_GPU_DIRECT_RDMA_WRITES_TO_OWNER = 100,
# 3914 "/usr/include/cuda.h" 3
CU_FLUSH_GPU_DIRECT_RDMA_WRITES_TO_ALL_DEVICES = 200
# 3915 "/usr/include/cuda.h" 3
} CUflushGPUDirectRDMAWritesScope;
# 3922 "/usr/include/cuda.h" 3
typedef
# 3920 "/usr/include/cuda.h" 3
enum CUflushGPUDirectRDMAWritesTarget_enum {
# 3921 "/usr/include/cuda.h" 3
CU_FLUSH_GPU_DIRECT_RDMA_WRITES_TARGET_CURRENT_CTX
# 3922 "/usr/include/cuda.h" 3
} CUflushGPUDirectRDMAWritesTarget;
# 3943 "/usr/include/cuda.h" 3
typedef
# 3927 "/usr/include/cuda.h" 3
enum CUgraphDebugDot_flags_enum {
# 3928 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_VERBOSE = (1 << 0),
# 3929 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_RUNTIME_TYPES,
# 3930 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_KERNEL_NODE_PARAMS = (1 << 2),
# 3931 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_MEMCPY_NODE_PARAMS = (1 << 3),
# 3932 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_MEMSET_NODE_PARAMS = (1 << 4),
# 3933 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_HOST_NODE_PARAMS = (1 << 5),
# 3934 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_EVENT_NODE_PARAMS = (1 << 6),
# 3935 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_EXT_SEMAS_SIGNAL_NODE_PARAMS = (1 << 7),
# 3936 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_EXT_SEMAS_WAIT_NODE_PARAMS = (1 << 8),
# 3937 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_KERNEL_NODE_ATTRIBUTES = (1 << 9),
# 3938 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_HANDLES = (1 << 10),
# 3939 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_MEM_ALLOC_NODE_PARAMS = (1 << 11),
# 3940 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_MEM_FREE_NODE_PARAMS = (1 << 12),
# 3941 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_BATCH_MEM_OP_NODE_PARAMS = (1 << 13),
# 3942 "/usr/include/cuda.h" 3
CU_GRAPH_DEBUG_DOT_FLAGS_EXTRA_TOPO_INFO = (1 << 14)
# 3943 "/usr/include/cuda.h" 3
} CUgraphDebugDot_flags;
# 3950 "/usr/include/cuda.h" 3
typedef
# 3948 "/usr/include/cuda.h" 3
enum CUuserObject_flags_enum {
# 3949 "/usr/include/cuda.h" 3
CU_USER_OBJECT_NO_DESTRUCTOR_SYNC = 1
# 3950 "/usr/include/cuda.h" 3
} CUuserObject_flags;
# 3957 "/usr/include/cuda.h" 3
typedef
# 3955 "/usr/include/cuda.h" 3
enum CUuserObjectRetain_flags_enum {
# 3956 "/usr/include/cuda.h" 3
CU_GRAPH_USER_OBJECT_MOVE = 1
# 3957 "/usr/include/cuda.h" 3
} CUuserObjectRetain_flags;
# 3968 "/usr/include/cuda.h" 3
typedef
# 3962 "/usr/include/cuda.h" 3
enum CUgraphInstantiate_flags_enum {
# 3963 "/usr/include/cuda.h" 3
CUDA_GRAPH_INSTANTIATE_FLAG_AUTO_FREE_ON_LAUNCH = 1,
# 3964 "/usr/include/cuda.h" 3
CUDA_GRAPH_INSTANTIATE_FLAG_UPLOAD,
# 3965 "/usr/include/cuda.h" 3
CUDA_GRAPH_INSTANTIATE_FLAG_DEVICE_LAUNCH = 4,
# 3966 "/usr/include/cuda.h" 3
CUDA_GRAPH_INSTANTIATE_FLAG_USE_NODE_PRIORITY = 8
# 3968 "/usr/include/cuda.h" 3
} CUgraphInstantiate_flags;
# 4015 "/usr/include/cuda.h" 3
CUresult cuGetErrorString(CUresult error, const char ** pStr);
# 4036 "/usr/include/cuda.h" 3
CUresult cuGetErrorName(CUresult error, const char ** pStr);
# 4069 "/usr/include/cuda.h" 3
CUresult cuInit(unsigned Flags);
# 4107 "/usr/include/cuda.h" 3
CUresult cuDriverGetVersion(int * driverVersion);
# 4150 "/usr/include/cuda.h" 3
CUresult cuDeviceGet(CUdevice * device, int ordinal);
# 4179 "/usr/include/cuda.h" 3
CUresult cuDeviceGetCount(int * count);
# 4211 "/usr/include/cuda.h" 3
CUresult cuDeviceGetName(char * name, int len, CUdevice dev);
# 4244 "/usr/include/cuda.h" 3
CUresult cuDeviceGetUuid(CUuuid * uuid, CUdevice dev);
# 4273 "/usr/include/cuda.h" 3
CUresult cuDeviceGetUuid_v2(CUuuid * uuid, CUdevice dev);
# 4302 "/usr/include/cuda.h" 3
CUresult cuDeviceGetLuid(char * luid, unsigned * deviceNodeMask, CUdevice dev);
# 4331 "/usr/include/cuda.h" 3
CUresult cuDeviceTotalMem_v2(size_t * bytes, CUdevice dev);
# 4362 "/usr/include/cuda.h" 3
CUresult cuDeviceGetTexture1DLinearMaxWidth(size_t * maxWidthInElements, CUarray_format format, unsigned numChannels, CUdevice dev);
# 4585 "/usr/include/cuda.h" 3
CUresult cuDeviceGetAttribute(int * pi, CUdevice_attribute attrib, CUdevice dev);
# 4634 "/usr/include/cuda.h" 3
CUresult cuDeviceGetNvSciSyncAttributes(void * nvSciSyncAttrList, CUdevice dev, int flags);
# 4652 "/usr/include/cuda.h" 3
CUresult cuDeviceSetMemPool(CUdevice dev, CUmemoryPool pool);
# 4668 "/usr/include/cuda.h" 3
CUresult cuDeviceGetMemPool(CUmemoryPool * pool, CUdevice dev);
# 4686 "/usr/include/cuda.h" 3
CUresult cuDeviceGetDefaultMemPool(CUmemoryPool * pool_out, CUdevice dev);
# 4717 "/usr/include/cuda.h" 3
CUresult cuDeviceGetExecAffinitySupport(int * pi, CUexecAffinityType type, CUdevice dev);
# 4748 "/usr/include/cuda.h" 3
CUresult cuFlushGPUDirectRDMAWrites(CUflushGPUDirectRDMAWritesTarget target, CUflushGPUDirectRDMAWritesScope scope);
# 4826 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuDeviceGetProperties(CUdevprop * prop, CUdevice dev);
# 4860 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuDeviceComputeCapability(int * major, int * minor, CUdevice dev);
# 4927 "/usr/include/cuda.h" 3
CUresult cuDevicePrimaryCtxRetain(CUcontext * pctx, CUdevice dev);
# 4968 "/usr/include/cuda.h" 3
CUresult cuDevicePrimaryCtxRelease_v2(CUdevice dev);
# 5033 "/usr/include/cuda.h" 3
CUresult cuDevicePrimaryCtxSetFlags_v2(CUdevice dev, unsigned flags);
# 5059 "/usr/include/cuda.h" 3
CUresult cuDevicePrimaryCtxGetState(CUdevice dev, unsigned * flags, int * active);
# 5099 "/usr/include/cuda.h" 3
CUresult cuDevicePrimaryCtxReset_v2(CUdevice dev);
# 5210 "/usr/include/cuda.h" 3
CUresult cuCtxCreate_v2(CUcontext * pctx, unsigned flags, CUdevice dev);
# 5317 "/usr/include/cuda.h" 3
CUresult cuCtxCreate_v3(CUcontext * pctx, CUexecAffinityParam * paramsArray, int numParams, unsigned flags, CUdevice dev);
# 5362 "/usr/include/cuda.h" 3
CUresult cuCtxDestroy_v2(CUcontext ctx);
# 5396 "/usr/include/cuda.h" 3
CUresult cuCtxPushCurrent_v2(CUcontext ctx);
# 5430 "/usr/include/cuda.h" 3
CUresult cuCtxPopCurrent_v2(CUcontext * pctx);
# 5460 "/usr/include/cuda.h" 3
CUresult cuCtxSetCurrent(CUcontext ctx);
# 5483 "/usr/include/cuda.h" 3
CUresult cuCtxGetCurrent(CUcontext * pctx);
# 5513 "/usr/include/cuda.h" 3
CUresult cuCtxGetDevice(CUdevice * device);
# 5541 "/usr/include/cuda.h" 3
CUresult cuCtxGetFlags(unsigned * flags);
# 5572 "/usr/include/cuda.h" 3
CUresult cuCtxGetId(CUcontext ctx, unsigned long long * ctxId);
# 5602 "/usr/include/cuda.h" 3
CUresult cuCtxSynchronize();
# 5701 "/usr/include/cuda.h" 3
CUresult cuCtxSetLimit(CUlimit limit, size_t value);
# 5743 "/usr/include/cuda.h" 3
CUresult cuCtxGetLimit(size_t * pvalue, CUlimit limit);
# 5787 "/usr/include/cuda.h" 3
CUresult cuCtxGetCacheConfig(CUfunc_cache * pconfig);
# 5839 "/usr/include/cuda.h" 3
CUresult cuCtxSetCacheConfig(CUfunc_cache config);
# 5881 "/usr/include/cuda.h" 3
CUresult cuCtxGetSharedMemConfig(CUsharedconfig * pConfig);
# 5934 "/usr/include/cuda.h" 3
CUresult cuCtxSetSharedMemConfig(CUsharedconfig config);
# 5972 "/usr/include/cuda.h" 3
CUresult cuCtxGetApiVersion(CUcontext ctx, unsigned * version);
# 6012 "/usr/include/cuda.h" 3
CUresult cuCtxGetStreamPriorityRange(int * leastPriority, int * greatestPriority);
# 6028 "/usr/include/cuda.h" 3
CUresult cuCtxResetPersistingL2Cache();
# 6052 "/usr/include/cuda.h" 3
CUresult cuCtxGetExecAffinity(CUexecAffinityParam * pExecAffinity, CUexecAffinityType type);
# 6108 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuCtxAttach(CUcontext * pctx, unsigned flags);
# 6144 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuCtxDetach(CUcontext ctx);
# 6200 "/usr/include/cuda.h" 3
CUresult cuModuleLoad(CUmodule * module, const char * fname);
# 6238 "/usr/include/cuda.h" 3
CUresult cuModuleLoadData(CUmodule * module, const void * image);
# 6282 "/usr/include/cuda.h" 3
CUresult cuModuleLoadDataEx(CUmodule * module, const void * image, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 6325 "/usr/include/cuda.h" 3
CUresult cuModuleLoadFatBinary(CUmodule * module, const void * fatCubin);
# 6351 "/usr/include/cuda.h" 3
CUresult cuModuleUnload(CUmodule hmod);
# 6359 "/usr/include/cuda.h" 3
typedef
# 6356 "/usr/include/cuda.h" 3
enum CUmoduleLoadingMode_enum {
# 6357 "/usr/include/cuda.h" 3
CU_MODULE_EAGER_LOADING = 1,
# 6358 "/usr/include/cuda.h" 3
CU_MODULE_LAZY_LOADING
# 6359 "/usr/include/cuda.h" 3
} CUmoduleLoadingMode;
# 6377 "/usr/include/cuda.h" 3
CUresult cuModuleGetLoadingMode(CUmoduleLoadingMode * mode);
# 6407 "/usr/include/cuda.h" 3
CUresult cuModuleGetFunction(CUfunction * hfunc, CUmodule hmod, const char * name);
# 6442 "/usr/include/cuda.h" 3
CUresult cuModuleGetGlobal_v2(CUdeviceptr * dptr, size_t * bytes, CUmodule hmod, const char * name);
# 6485 "/usr/include/cuda.h" 3
CUresult cuLinkCreate_v2(unsigned numOptions, CUjit_option * options, void ** optionValues, CUlinkState * stateOut);
# 6525 "/usr/include/cuda.h" 3
CUresult cuLinkAddData_v2(CUlinkState state, CUjitInputType type, void * data, size_t size, const char * name, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 6567 "/usr/include/cuda.h" 3
CUresult cuLinkAddFile_v2(CUlinkState state, CUjitInputType type, const char * path, unsigned numOptions, CUjit_option * options, void ** optionValues);
# 6594 "/usr/include/cuda.h" 3
CUresult cuLinkComplete(CUlinkState state, void ** cubinOut, size_t * sizeOut);
# 6608 "/usr/include/cuda.h" 3
CUresult cuLinkDestroy(CUlinkState state);
# 6658 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuModuleGetTexRef(CUtexref * pTexRef, CUmodule hmod, const char * name);
# 6692 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuModuleGetSurfRef(CUsurfref * pSurfRef, CUmodule hmod, const char * name);
# 6751 "/usr/include/cuda.h" 3
CUresult cuLibraryLoadData(CUlibrary * library, const void * code, CUjit_option * jitOptions, void ** jitOptionsValues, unsigned numJitOptions, CUlibraryOption * libraryOptions, void ** libraryOptionValues, unsigned numLibraryOptions);
# 6798 "/usr/include/cuda.h" 3
CUresult cuLibraryLoadFromFile(CUlibrary * library, const char * fileName, CUjit_option * jitOptions, void ** jitOptionsValues, unsigned numJitOptions, CUlibraryOption * libraryOptions, void ** libraryOptionValues, unsigned numLibraryOptions);
# 6819 "/usr/include/cuda.h" 3
CUresult cuLibraryUnload(CUlibrary library);
# 6846 "/usr/include/cuda.h" 3
CUresult cuLibraryGetKernel(CUkernel * pKernel, CUlibrary library, const char * name);
# 6872 "/usr/include/cuda.h" 3
CUresult cuLibraryGetModule(CUmodule * pMod, CUlibrary library);
# 6900 "/usr/include/cuda.h" 3
CUresult cuKernelGetFunction(CUfunction * pFunc, CUkernel kernel);
# 6932 "/usr/include/cuda.h" 3
CUresult cuLibraryGetGlobal(CUdeviceptr * dptr, size_t * bytes, CUlibrary library, const char * name);
# 6964 "/usr/include/cuda.h" 3
CUresult cuLibraryGetManaged(CUdeviceptr * dptr, size_t * bytes, CUlibrary library, const char * name);
# 6990 "/usr/include/cuda.h" 3
CUresult cuLibraryGetUnifiedFunction(void ** fptr, CUlibrary library, const char * symbol);
# 7078 "/usr/include/cuda.h" 3
CUresult cuKernelGetAttribute(int * pi, CUfunction_attribute attrib, CUkernel kernel, CUdevice dev);
# 7156 "/usr/include/cuda.h" 3
CUresult cuKernelSetAttribute(CUfunction_attribute attrib, int val, CUkernel kernel, CUdevice dev);
# 7215 "/usr/include/cuda.h" 3
CUresult cuKernelSetCacheConfig(CUkernel kernel, CUfunc_cache config, CUdevice dev);
# 7272 "/usr/include/cuda.h" 3
CUresult cuMemGetInfo_v2(size_t * free, size_t * total);
# 7306 "/usr/include/cuda.h" 3
CUresult cuMemAlloc_v2(CUdeviceptr * dptr, size_t bytesize);
# 7368 "/usr/include/cuda.h" 3
CUresult cuMemAllocPitch_v2(CUdeviceptr * dptr, size_t * pPitch, size_t WidthInBytes, size_t Height, unsigned ElementSizeBytes);
# 7404 "/usr/include/cuda.h" 3
CUresult cuMemFree_v2(CUdeviceptr dptr);
# 7438 "/usr/include/cuda.h" 3
CUresult cuMemGetAddressRange_v2(CUdeviceptr * pbase, size_t * psize, CUdeviceptr dptr);
# 7485 "/usr/include/cuda.h" 3
CUresult cuMemAllocHost_v2(void ** pp, size_t bytesize);
# 7515 "/usr/include/cuda.h" 3
CUresult cuMemFreeHost(void * p);
# 7594 "/usr/include/cuda.h" 3
CUresult cuMemHostAlloc(void ** pp, size_t bytesize, unsigned Flags);
# 7647 "/usr/include/cuda.h" 3
CUresult cuMemHostGetDevicePointer_v2(CUdeviceptr * pdptr, void * p, unsigned Flags);
# 7674 "/usr/include/cuda.h" 3
CUresult cuMemHostGetFlags(unsigned * pFlags, void * p);
# 7784 "/usr/include/cuda.h" 3
CUresult cuMemAllocManaged(CUdeviceptr * dptr, size_t bytesize, unsigned flags);
# 7813 "/usr/include/cuda.h" 3
CUresult cuDeviceGetByPCIBusId(CUdevice * dev, const char * pciBusId);
# 7845 "/usr/include/cuda.h" 3
CUresult cuDeviceGetPCIBusId(char * pciBusId, int len, CUdevice dev);
# 7892 "/usr/include/cuda.h" 3
CUresult cuIpcGetEventHandle(CUipcEventHandle * pHandle, CUevent event);
# 7934 "/usr/include/cuda.h" 3
CUresult cuIpcOpenEventHandle(CUevent * phEvent, CUipcEventHandle handle);
# 7977 "/usr/include/cuda.h" 3
CUresult cuIpcGetMemHandle(CUipcMemHandle * pHandle, CUdeviceptr dptr);
# 8037 "/usr/include/cuda.h" 3
CUresult cuIpcOpenMemHandle_v2(CUdeviceptr * pdptr, CUipcMemHandle handle, unsigned Flags);
# 8073 "/usr/include/cuda.h" 3
CUresult cuIpcCloseMemHandle(CUdeviceptr dptr);
# 8160 "/usr/include/cuda.h" 3
CUresult cuMemHostRegister_v2(void * p, size_t bytesize, unsigned Flags);
# 8186 "/usr/include/cuda.h" 3
CUresult cuMemHostUnregister(void * p);
# 8226 "/usr/include/cuda.h" 3
CUresult cuMemcpy(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount);
# 8256 "/usr/include/cuda.h" 3
CUresult cuMemcpyPeer(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount);
# 8292 "/usr/include/cuda.h" 3
CUresult cuMemcpyHtoD_v2(CUdeviceptr dstDevice, const void * srcHost, size_t ByteCount);
# 8328 "/usr/include/cuda.h" 3
CUresult cuMemcpyDtoH_v2(void * dstHost, CUdeviceptr srcDevice, size_t ByteCount);
# 8364 "/usr/include/cuda.h" 3
CUresult cuMemcpyDtoD_v2(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount);
# 8400 "/usr/include/cuda.h" 3
CUresult cuMemcpyDtoA_v2(CUarray dstArray, size_t dstOffset, CUdeviceptr srcDevice, size_t ByteCount);
# 8438 "/usr/include/cuda.h" 3
CUresult cuMemcpyAtoD_v2(CUdeviceptr dstDevice, CUarray srcArray, size_t srcOffset, size_t ByteCount);
# 8475 "/usr/include/cuda.h" 3
CUresult cuMemcpyHtoA_v2(CUarray dstArray, size_t dstOffset, const void * srcHost, size_t ByteCount);
# 8512 "/usr/include/cuda.h" 3
CUresult cuMemcpyAtoH_v2(void * dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount);
# 8552 "/usr/include/cuda.h" 3
CUresult cuMemcpyAtoA_v2(CUarray dstArray, size_t dstOffset, CUarray srcArray, size_t srcOffset, size_t ByteCount);
# 8716 "/usr/include/cuda.h" 3
CUresult cuMemcpy2D_v2(const CUDA_MEMCPY2D * pCopy);
# 8878 "/usr/include/cuda.h" 3
CUresult cuMemcpy2DUnaligned_v2(const CUDA_MEMCPY2D * pCopy);
# 9047 "/usr/include/cuda.h" 3
CUresult cuMemcpy3D_v2(const CUDA_MEMCPY3D * pCopy);
# 9071 "/usr/include/cuda.h" 3
CUresult cuMemcpy3DPeer(const CUDA_MEMCPY3D_PEER * pCopy);
# 9116 "/usr/include/cuda.h" 3
CUresult cuMemcpyAsync(CUdeviceptr dst, CUdeviceptr src, size_t ByteCount, CUstream hStream);
# 9149 "/usr/include/cuda.h" 3
CUresult cuMemcpyPeerAsync(CUdeviceptr dstDevice, CUcontext dstContext, CUdeviceptr srcDevice, CUcontext srcContext, size_t ByteCount, CUstream hStream);
# 9190 "/usr/include/cuda.h" 3
CUresult cuMemcpyHtoDAsync_v2(CUdeviceptr dstDevice, const void * srcHost, size_t ByteCount, CUstream hStream);
# 9231 "/usr/include/cuda.h" 3
CUresult cuMemcpyDtoHAsync_v2(void * dstHost, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream);
# 9272 "/usr/include/cuda.h" 3
CUresult cuMemcpyDtoDAsync_v2(CUdeviceptr dstDevice, CUdeviceptr srcDevice, size_t ByteCount, CUstream hStream);
# 9314 "/usr/include/cuda.h" 3
CUresult cuMemcpyHtoAAsync_v2(CUarray dstArray, size_t dstOffset, const void * srcHost, size_t ByteCount, CUstream hStream);
# 9356 "/usr/include/cuda.h" 3
CUresult cuMemcpyAtoHAsync_v2(void * dstHost, CUarray srcArray, size_t srcOffset, size_t ByteCount, CUstream hStream);
# 9525 "/usr/include/cuda.h" 3
CUresult cuMemcpy2DAsync_v2(const CUDA_MEMCPY2D * pCopy, CUstream hStream);
# 9699 "/usr/include/cuda.h" 3
CUresult cuMemcpy3DAsync_v2(const CUDA_MEMCPY3D * pCopy, CUstream hStream);
# 9725 "/usr/include/cuda.h" 3
CUresult cuMemcpy3DPeerAsync(const CUDA_MEMCPY3D_PEER * pCopy, CUstream hStream);
# 9760 "/usr/include/cuda.h" 3
CUresult cuMemsetD8_v2(CUdeviceptr dstDevice, unsigned char uc, size_t N);
# 9795 "/usr/include/cuda.h" 3
CUresult cuMemsetD16_v2(CUdeviceptr dstDevice, unsigned short us, size_t N);
# 9830 "/usr/include/cuda.h" 3
CUresult cuMemsetD32_v2(CUdeviceptr dstDevice, unsigned ui, size_t N);
# 9870 "/usr/include/cuda.h" 3
CUresult cuMemsetD2D8_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height);
# 9911 "/usr/include/cuda.h" 3
CUresult cuMemsetD2D16_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height);
# 9952 "/usr/include/cuda.h" 3
CUresult cuMemsetD2D32_v2(CUdeviceptr dstDevice, size_t dstPitch, unsigned ui, size_t Width, size_t Height);
# 9989 "/usr/include/cuda.h" 3
CUresult cuMemsetD8Async(CUdeviceptr dstDevice, unsigned char uc, size_t N, CUstream hStream);
# 10026 "/usr/include/cuda.h" 3
CUresult cuMemsetD16Async(CUdeviceptr dstDevice, unsigned short us, size_t N, CUstream hStream);
# 10062 "/usr/include/cuda.h" 3
CUresult cuMemsetD32Async(CUdeviceptr dstDevice, unsigned ui, size_t N, CUstream hStream);
# 10104 "/usr/include/cuda.h" 3
CUresult cuMemsetD2D8Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned char uc, size_t Width, size_t Height, CUstream hStream);
# 10147 "/usr/include/cuda.h" 3
CUresult cuMemsetD2D16Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned short us, size_t Width, size_t Height, CUstream hStream);
# 10190 "/usr/include/cuda.h" 3
CUresult cuMemsetD2D32Async(CUdeviceptr dstDevice, size_t dstPitch, unsigned ui, size_t Width, size_t Height, CUstream hStream);
# 10294 "/usr/include/cuda.h" 3
CUresult cuArrayCreate_v2(CUarray * pHandle, const CUDA_ARRAY_DESCRIPTOR * pAllocateArray);
# 10328 "/usr/include/cuda.h" 3
CUresult cuArrayGetDescriptor_v2(CUDA_ARRAY_DESCRIPTOR * pArrayDescriptor, CUarray hArray);
# 10352 "/usr/include/cuda.h" 3
CUresult cuArrayGetSparseProperties(CUDA_ARRAY_SPARSE_PROPERTIES * sparseProperties, CUarray array);
# 10377 "/usr/include/cuda.h" 3
CUresult cuMipmappedArrayGetSparseProperties(CUDA_ARRAY_SPARSE_PROPERTIES * sparseProperties, CUmipmappedArray mipmap);
# 10400 "/usr/include/cuda.h" 3
CUresult cuArrayGetMemoryRequirements(CUDA_ARRAY_MEMORY_REQUIREMENTS * memoryRequirements, CUarray array, CUdevice device);
# 10424 "/usr/include/cuda.h" 3
CUresult cuMipmappedArrayGetMemoryRequirements(CUDA_ARRAY_MEMORY_REQUIREMENTS * memoryRequirements, CUmipmappedArray mipmap, CUdevice device);
# 10457 "/usr/include/cuda.h" 3
CUresult cuArrayGetPlane(CUarray * pPlaneArray, CUarray hArray, unsigned planeIdx);
# 10488 "/usr/include/cuda.h" 3
CUresult cuArrayDestroy(CUarray hArray);
# 10668 "/usr/include/cuda.h" 3
CUresult cuArray3DCreate_v2(CUarray * pHandle, const CUDA_ARRAY3D_DESCRIPTOR * pAllocateArray);
# 10706 "/usr/include/cuda.h" 3
CUresult cuArray3DGetDescriptor_v2(CUDA_ARRAY3D_DESCRIPTOR * pArrayDescriptor, CUarray hArray);
# 10848 "/usr/include/cuda.h" 3
CUresult cuMipmappedArrayCreate(CUmipmappedArray * pHandle, const CUDA_ARRAY3D_DESCRIPTOR * pMipmappedArrayDesc, unsigned numMipmapLevels);
# 10878 "/usr/include/cuda.h" 3
CUresult cuMipmappedArrayGetLevel(CUarray * pLevelArray, CUmipmappedArray hMipmappedArray, unsigned level);
# 10903 "/usr/include/cuda.h" 3
CUresult cuMipmappedArrayDestroy(CUmipmappedArray hMipmappedArray);
# 10936 "/usr/include/cuda.h" 3
CUresult cuMemGetHandleForAddressRange(void * handle, CUdeviceptr dptr, size_t size, CUmemRangeHandleType handleType, unsigned long long flags);
# 10977 "/usr/include/cuda.h" 3
CUresult cuMemAddressReserve(CUdeviceptr * ptr, size_t size, size_t alignment, CUdeviceptr addr, unsigned long long flags);
# 10998 "/usr/include/cuda.h" 3
CUresult cuMemAddressFree(CUdeviceptr ptr, size_t size);
# 11037 "/usr/include/cuda.h" 3
CUresult cuMemCreate(CUmemGenericAllocationHandle * handle, size_t size, const CUmemAllocationProp * prop, unsigned long long flags);
# 11064 "/usr/include/cuda.h" 3
CUresult cuMemRelease(CUmemGenericAllocationHandle handle);
# 11108 "/usr/include/cuda.h" 3
CUresult cuMemMap(CUdeviceptr ptr, size_t size, size_t offset, CUmemGenericAllocationHandle handle, unsigned long long flags);
# 11243 "/usr/include/cuda.h" 3
CUresult cuMemMapArrayAsync(CUarrayMapInfo * mapInfoList, unsigned count, CUstream hStream);
# 11272 "/usr/include/cuda.h" 3
CUresult cuMemUnmap(CUdeviceptr ptr, size_t size);
# 11297 "/usr/include/cuda.h" 3
CUresult cuMemSetAccess(CUdeviceptr ptr, size_t size, const CUmemAccessDesc * desc, size_t count);
# 11316 "/usr/include/cuda.h" 3
CUresult cuMemGetAccess(unsigned long long * flags, const CUmemLocation * location, CUdeviceptr ptr);
# 11349 "/usr/include/cuda.h" 3
CUresult cuMemExportToShareableHandle(void * shareableHandle, CUmemGenericAllocationHandle handle, CUmemAllocationHandleType handleType, unsigned long long flags);
# 11376 "/usr/include/cuda.h" 3
CUresult cuMemImportFromShareableHandle(CUmemGenericAllocationHandle * handle, void * osHandle, CUmemAllocationHandleType shHandleType);
# 11398 "/usr/include/cuda.h" 3
CUresult cuMemGetAllocationGranularity(size_t * granularity, const CUmemAllocationProp * prop, CUmemAllocationGranularity_flags option);
# 11415 "/usr/include/cuda.h" 3
CUresult cuMemGetAllocationPropertiesFromHandle(CUmemAllocationProp * prop, CUmemGenericAllocationHandle handle);
# 11439 "/usr/include/cuda.h" 3
CUresult cuMemRetainAllocationHandle(CUmemGenericAllocationHandle * handle, void * addr);
# 11496 "/usr/include/cuda.h" 3
CUresult cuMemFreeAsync(CUdeviceptr dptr, CUstream hStream);
# 11529 "/usr/include/cuda.h" 3
CUresult cuMemAllocAsync(CUdeviceptr * dptr, size_t bytesize, CUstream hStream);
# 11555 "/usr/include/cuda.h" 3
CUresult cuMemPoolTrimTo(CUmemoryPool pool, size_t minBytesToKeep);
# 11598 "/usr/include/cuda.h" 3
CUresult cuMemPoolSetAttribute(CUmemoryPool pool, CUmemPool_attribute attr, void * value);
# 11645 "/usr/include/cuda.h" 3
CUresult cuMemPoolGetAttribute(CUmemoryPool pool, CUmemPool_attribute attr, void * value);
# 11662 "/usr/include/cuda.h" 3
CUresult cuMemPoolSetAccess(CUmemoryPool pool, const CUmemAccessDesc * map, size_t count);
# 11676 "/usr/include/cuda.h" 3
CUresult cuMemPoolGetAccess(CUmemAccess_flags * flags, CUmemoryPool memPool, CUmemLocation * location);
# 11698 "/usr/include/cuda.h" 3
CUresult cuMemPoolCreate(CUmemoryPool * pool, const CUmemPoolProps * poolProps);
# 11721 "/usr/include/cuda.h" 3
CUresult cuMemPoolDestroy(CUmemoryPool pool);
# 11759 "/usr/include/cuda.h" 3
CUresult cuMemAllocFromPoolAsync(CUdeviceptr * dptr, size_t bytesize, CUmemoryPool pool, CUstream hStream);
# 11788 "/usr/include/cuda.h" 3
CUresult cuMemPoolExportToShareableHandle(void * handle_out, CUmemoryPool pool, CUmemAllocationHandleType handleType, unsigned long long flags);
# 11812 "/usr/include/cuda.h" 3
CUresult cuMemPoolImportFromShareableHandle(CUmemoryPool * pool_out, void * handle, CUmemAllocationHandleType handleType, unsigned long long flags);
# 11836 "/usr/include/cuda.h" 3
CUresult cuMemPoolExportPointer(CUmemPoolPtrExportData * shareData_out, CUdeviceptr ptr);
# 11865 "/usr/include/cuda.h" 3
CUresult cuMemPoolImportPointer(CUdeviceptr * ptr_out, CUmemoryPool pool, CUmemPoolPtrExportData * shareData);
# 12150 "/usr/include/cuda.h" 3
CUresult cuPointerGetAttribute(void * data, CUpointer_attribute attribute, CUdeviceptr ptr);
# 12218 "/usr/include/cuda.h" 3
CUresult cuMemPrefetchAsync(CUdeviceptr devPtr, size_t count, CUdevice dstDevice, CUstream hStream);
# 12332 "/usr/include/cuda.h" 3
CUresult cuMemAdvise(CUdeviceptr devPtr, size_t count, CUmem_advise advice, CUdevice device);
# 12390 "/usr/include/cuda.h" 3
CUresult cuMemRangeGetAttribute(void * data, size_t dataSize, CUmem_range_attribute attribute, CUdeviceptr devPtr, size_t count);
# 12430 "/usr/include/cuda.h" 3
CUresult cuMemRangeGetAttributes(void ** data, size_t * dataSizes, CUmem_range_attribute * attributes, size_t numAttributes, CUdeviceptr devPtr, size_t count);
# 12472 "/usr/include/cuda.h" 3
CUresult cuPointerSetAttribute(const void * value, CUpointer_attribute attribute, CUdeviceptr ptr);
# 12521 "/usr/include/cuda.h" 3
CUresult cuPointerGetAttributes(unsigned numAttributes, CUpointer_attribute * attributes, void ** data, CUdeviceptr ptr);
# 12572 "/usr/include/cuda.h" 3
CUresult cuStreamCreate(CUstream * phStream, unsigned Flags);
# 12621 "/usr/include/cuda.h" 3
CUresult cuStreamCreateWithPriority(CUstream * phStream, unsigned flags, int priority);
# 12652 "/usr/include/cuda.h" 3
CUresult cuStreamGetPriority(CUstream hStream, int * priority);
# 12680 "/usr/include/cuda.h" 3
CUresult cuStreamGetFlags(CUstream hStream, unsigned * flags);
# 12713 "/usr/include/cuda.h" 3
CUresult cuStreamGetId(CUstream hStream, unsigned long long * streamId);
# 12757 "/usr/include/cuda.h" 3
CUresult cuStreamGetCtx(CUstream hStream, CUcontext * pctx);
# 12794 "/usr/include/cuda.h" 3
CUresult cuStreamWaitEvent(CUstream hStream, CUevent hEvent, unsigned Flags);
# 12869 "/usr/include/cuda.h" 3
CUresult cuStreamAddCallback(CUstream hStream, CUstreamCallback callback, void * userData, unsigned flags);
# 12907 "/usr/include/cuda.h" 3
CUresult cuStreamBeginCapture_v2(CUstream hStream, CUstreamCaptureMode mode);
# 12960 "/usr/include/cuda.h" 3
CUresult cuThreadExchangeStreamCaptureMode(CUstreamCaptureMode * mode);
# 12990 "/usr/include/cuda.h" 3
CUresult cuStreamEndCapture(CUstream hStream, CUgraph * phGraph);
# 13030 "/usr/include/cuda.h" 3
CUresult cuStreamIsCapturing(CUstream hStream, CUstreamCaptureStatus * captureStatus);
# 13078 "/usr/include/cuda.h" 3
CUresult cuStreamGetCaptureInfo_v2(CUstream hStream, CUstreamCaptureStatus * captureStatus_out, cuuint64_t * id_out, CUgraph * graph_out, const CUgraphNode ** dependencies_out, size_t * numDependencies_out);
# 13110 "/usr/include/cuda.h" 3
CUresult cuStreamUpdateCaptureDependencies(CUstream hStream, CUgraphNode * dependencies, size_t numDependencies, unsigned flags);
# 13198 "/usr/include/cuda.h" 3
CUresult cuStreamAttachMemAsync(CUstream hStream, CUdeviceptr dptr, size_t length, unsigned flags);
# 13228 "/usr/include/cuda.h" 3
CUresult cuStreamQuery(CUstream hStream);
# 13257 "/usr/include/cuda.h" 3
CUresult cuStreamSynchronize(CUstream hStream);
# 13287 "/usr/include/cuda.h" 3
CUresult cuStreamDestroy_v2(CUstream hStream);
# 13307 "/usr/include/cuda.h" 3
CUresult cuStreamCopyAttributes(CUstream dst, CUstream src);
# 13328 "/usr/include/cuda.h" 3
CUresult cuStreamGetAttribute(CUstream hStream, CUstreamAttrID attr, CUstreamAttrValue * value_out);
# 13351 "/usr/include/cuda.h" 3
CUresult cuStreamSetAttribute(CUstream hStream, CUstreamAttrID attr, const CUstreamAttrValue * value);
# 13408 "/usr/include/cuda.h" 3
CUresult cuEventCreate(CUevent * phEvent, unsigned Flags);
# 13450 "/usr/include/cuda.h" 3
CUresult cuEventRecord(CUevent hEvent, CUstream hStream);
# 13499 "/usr/include/cuda.h" 3
CUresult cuEventRecordWithFlags(CUevent hEvent, CUstream hStream, unsigned flags);
# 13531 "/usr/include/cuda.h" 3
CUresult cuEventQuery(CUevent hEvent);
# 13562 "/usr/include/cuda.h" 3
CUresult cuEventSynchronize(CUevent hEvent);
# 13591 "/usr/include/cuda.h" 3
CUresult cuEventDestroy_v2(CUevent hEvent);
# 13636 "/usr/include/cuda.h" 3
CUresult cuEventElapsedTime(float * pMilliseconds, CUevent hStart, CUevent hEnd);
# 13815 "/usr/include/cuda.h" 3
CUresult cuImportExternalMemory(CUexternalMemory * extMem_out, const CUDA_EXTERNAL_MEMORY_HANDLE_DESC * memHandleDesc);
# 13869 "/usr/include/cuda.h" 3
CUresult cuExternalMemoryGetMappedBuffer(CUdeviceptr * devPtr, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_BUFFER_DESC * bufferDesc);
# 13922 "/usr/include/cuda.h" 3
CUresult cuExternalMemoryGetMappedMipmappedArray(CUmipmappedArray * mipmap, CUexternalMemory extMem, const CUDA_EXTERNAL_MEMORY_MIPMAPPED_ARRAY_DESC * mipmapDesc);
# 13944 "/usr/include/cuda.h" 3
CUresult cuDestroyExternalMemory(CUexternalMemory extMem);
# 14102 "/usr/include/cuda.h" 3
CUresult cuImportExternalSemaphore(CUexternalSemaphore * extSem_out, const CUDA_EXTERNAL_SEMAPHORE_HANDLE_DESC * semHandleDesc);
# 14184 "/usr/include/cuda.h" 3
CUresult cuSignalExternalSemaphoresAsync(const CUexternalSemaphore * extSemArray, const CUDA_EXTERNAL_SEMAPHORE_SIGNAL_PARAMS * paramsArray, unsigned numExtSems, CUstream stream);
# 14260 "/usr/include/cuda.h" 3
CUresult cuWaitExternalSemaphoresAsync(const CUexternalSemaphore * extSemArray, const CUDA_EXTERNAL_SEMAPHORE_WAIT_PARAMS * paramsArray, unsigned numExtSems, CUstream stream);
# 14281 "/usr/include/cuda.h" 3
CUresult cuDestroyExternalSemaphore(CUexternalSemaphore extSem);
# 14369 "/usr/include/cuda.h" 3
CUresult cuStreamWaitValue32_v2(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned flags);
# 14414 "/usr/include/cuda.h" 3
CUresult cuStreamWaitValue64_v2(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned flags);
# 14443 "/usr/include/cuda.h" 3
CUresult cuStreamWriteValue32_v2(CUstream stream, CUdeviceptr addr, cuuint32_t value, unsigned flags);
# 14474 "/usr/include/cuda.h" 3
CUresult cuStreamWriteValue64_v2(CUstream stream, CUdeviceptr addr, cuuint64_t value, unsigned flags);
# 14517 "/usr/include/cuda.h" 3
CUresult cuStreamBatchMemOp_v2(CUstream stream, unsigned count, CUstreamBatchMemOpParams * paramArray, unsigned flags);
# 14613 "/usr/include/cuda.h" 3
CUresult cuFuncGetAttribute(int * pi, CUfunction_attribute attrib, CUfunction hfunc);
# 14677 "/usr/include/cuda.h" 3
CUresult cuFuncSetAttribute(CUfunction hfunc, CUfunction_attribute attrib, int value);
# 14722 "/usr/include/cuda.h" 3
CUresult cuFuncSetCacheConfig(CUfunction hfunc, CUfunc_cache config);
# 14774 "/usr/include/cuda.h" 3
CUresult cuFuncSetSharedMemConfig(CUfunction hfunc, CUsharedconfig config);
# 14800 "/usr/include/cuda.h" 3
CUresult cuFuncGetModule(CUmodule * hmod, CUfunction hfunc);
# 14921 "/usr/include/cuda.h" 3
CUresult cuLaunchKernel(CUfunction f, unsigned gridDimX, unsigned gridDimY, unsigned gridDimZ, unsigned blockDimX, unsigned blockDimY, unsigned blockDimZ, unsigned sharedMemBytes, CUstream hStream, void ** kernelParams, void ** extra);
# 15115 "/usr/include/cuda.h" 3
CUresult cuLaunchKernelEx(const CUlaunchConfig * config, CUfunction f, void ** kernelParams, void ** extra);
# 15214 "/usr/include/cuda.h" 3
CUresult cuLaunchCooperativeKernel(CUfunction f, unsigned gridDimX, unsigned gridDimY, unsigned gridDimZ, unsigned blockDimX, unsigned blockDimY, unsigned blockDimZ, unsigned sharedMemBytes, CUstream hStream, void ** kernelParams);
# 15363 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuLaunchCooperativeKernelMultiDevice(CUDA_LAUNCH_PARAMS * launchParamsList, unsigned numDevices, unsigned flags);
# 15428 "/usr/include/cuda.h" 3
CUresult cuLaunchHostFunc(CUstream hStream, CUhostFn fn, void * userData);
# 15478 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuFuncSetBlockShape(CUfunction hfunc, int x, int y, int z);
# 15512 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuFuncSetSharedSize(CUfunction hfunc, unsigned bytes);
# 15544 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuParamSetSize(CUfunction hfunc, unsigned numbytes);
# 15577 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuParamSeti(CUfunction hfunc, int offset, unsigned value);
# 15610 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuParamSetf(CUfunction hfunc, int offset, float value);
# 15645 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuParamSetv(CUfunction hfunc, int offset, void * ptr, unsigned numbytes);
# 15697 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuLaunch(CUfunction f);
# 15751 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuLaunchGrid(CUfunction f, int grid_width, int grid_height);
# 15813 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuLaunchGridAsync(CUfunction f, int grid_width, int grid_height, CUstream hStream);
# 15838 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuParamSetTexRef(CUfunction hfunc, int texunit, CUtexref hTexRef);
# 15884 "/usr/include/cuda.h" 3
CUresult cuGraphCreate(CUgraph * phGraph, unsigned flags);
# 15984 "/usr/include/cuda.h" 3
CUresult cuGraphAddKernelNode_v2(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, const CUDA_KERNEL_NODE_PARAMS * nodeParams);
# 16016 "/usr/include/cuda.h" 3
CUresult cuGraphKernelNodeGetParams_v2(CUgraphNode hNode, CUDA_KERNEL_NODE_PARAMS * nodeParams);
# 16039 "/usr/include/cuda.h" 3
CUresult cuGraphKernelNodeSetParams_v2(CUgraphNode hNode, const CUDA_KERNEL_NODE_PARAMS * nodeParams);
# 16087 "/usr/include/cuda.h" 3
CUresult cuGraphAddMemcpyNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, const CUDA_MEMCPY3D * copyParams, CUcontext ctx);
# 16110 "/usr/include/cuda.h" 3
CUresult cuGraphMemcpyNodeGetParams(CUgraphNode hNode, CUDA_MEMCPY3D * nodeParams);
# 16133 "/usr/include/cuda.h" 3
CUresult cuGraphMemcpyNodeSetParams(CUgraphNode hNode, const CUDA_MEMCPY3D * nodeParams);
# 16175 "/usr/include/cuda.h" 3
CUresult cuGraphAddMemsetNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, const CUDA_MEMSET_NODE_PARAMS * memsetParams, CUcontext ctx);
# 16198 "/usr/include/cuda.h" 3
CUresult cuGraphMemsetNodeGetParams(CUgraphNode hNode, CUDA_MEMSET_NODE_PARAMS * nodeParams);
# 16221 "/usr/include/cuda.h" 3
CUresult cuGraphMemsetNodeSetParams(CUgraphNode hNode, const CUDA_MEMSET_NODE_PARAMS * nodeParams);
# 16262 "/usr/include/cuda.h" 3
CUresult cuGraphAddHostNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, const CUDA_HOST_NODE_PARAMS * nodeParams);
# 16285 "/usr/include/cuda.h" 3
CUresult cuGraphHostNodeGetParams(CUgraphNode hNode, CUDA_HOST_NODE_PARAMS * nodeParams);
# 16308 "/usr/include/cuda.h" 3
CUresult cuGraphHostNodeSetParams(CUgraphNode hNode, const CUDA_HOST_NODE_PARAMS * nodeParams);
# 16348 "/usr/include/cuda.h" 3
CUresult cuGraphAddChildGraphNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, CUgraph childGraph);
# 16375 "/usr/include/cuda.h" 3
CUresult cuGraphChildGraphNodeGetGraph(CUgraphNode hNode, CUgraph * phGraph);
# 16413 "/usr/include/cuda.h" 3
CUresult cuGraphAddEmptyNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies);
# 16454 "/usr/include/cuda.h" 3
CUresult cuGraphAddEventRecordNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, CUevent event);
# 16479 "/usr/include/cuda.h" 3
CUresult cuGraphEventRecordNodeGetEvent(CUgraphNode hNode, CUevent * event_out);
# 16504 "/usr/include/cuda.h" 3
CUresult cuGraphEventRecordNodeSetEvent(CUgraphNode hNode, CUevent event);
# 16546 "/usr/include/cuda.h" 3
CUresult cuGraphAddEventWaitNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, CUevent event);
# 16571 "/usr/include/cuda.h" 3
CUresult cuGraphEventWaitNodeGetEvent(CUgraphNode hNode, CUevent * event_out);
# 16596 "/usr/include/cuda.h" 3
CUresult cuGraphEventWaitNodeSetEvent(CUgraphNode hNode, CUevent event);
# 16644 "/usr/include/cuda.h" 3
CUresult cuGraphAddExternalSemaphoresSignalNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS * nodeParams);
# 16675 "/usr/include/cuda.h" 3
CUresult cuGraphExternalSemaphoresSignalNodeGetParams(CUgraphNode hNode, CUDA_EXT_SEM_SIGNAL_NODE_PARAMS * params_out);
# 16700 "/usr/include/cuda.h" 3
CUresult cuGraphExternalSemaphoresSignalNodeSetParams(CUgraphNode hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS * nodeParams);
# 16748 "/usr/include/cuda.h" 3
CUresult cuGraphAddExternalSemaphoresWaitNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, const CUDA_EXT_SEM_WAIT_NODE_PARAMS * nodeParams);
# 16779 "/usr/include/cuda.h" 3
CUresult cuGraphExternalSemaphoresWaitNodeGetParams(CUgraphNode hNode, CUDA_EXT_SEM_WAIT_NODE_PARAMS * params_out);
# 16804 "/usr/include/cuda.h" 3
CUresult cuGraphExternalSemaphoresWaitNodeSetParams(CUgraphNode hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS * nodeParams);
# 16859 "/usr/include/cuda.h" 3
CUresult cuGraphAddBatchMemOpNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, const CUDA_BATCH_MEM_OP_NODE_PARAMS * nodeParams);
# 16887 "/usr/include/cuda.h" 3
CUresult cuGraphBatchMemOpNodeGetParams(CUgraphNode hNode, CUDA_BATCH_MEM_OP_NODE_PARAMS * nodeParams_out);
# 16913 "/usr/include/cuda.h" 3
CUresult cuGraphBatchMemOpNodeSetParams(CUgraphNode hNode, const CUDA_BATCH_MEM_OP_NODE_PARAMS * nodeParams);
# 16959 "/usr/include/cuda.h" 3
CUresult cuGraphExecBatchMemOpNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_BATCH_MEM_OP_NODE_PARAMS * nodeParams);
# 17033 "/usr/include/cuda.h" 3
CUresult cuGraphAddMemAllocNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, CUDA_MEM_ALLOC_NODE_PARAMS * nodeParams);
# 17058 "/usr/include/cuda.h" 3
CUresult cuGraphMemAllocNodeGetParams(CUgraphNode hNode, CUDA_MEM_ALLOC_NODE_PARAMS * params_out);
# 17115 "/usr/include/cuda.h" 3
CUresult cuGraphAddMemFreeNode(CUgraphNode * phGraphNode, CUgraph hGraph, const CUgraphNode * dependencies, size_t numDependencies, CUdeviceptr dptr);
# 17137 "/usr/include/cuda.h" 3
CUresult cuGraphMemFreeNodeGetParams(CUgraphNode hNode, CUdeviceptr * dptr_out);
# 17157 "/usr/include/cuda.h" 3
CUresult cuDeviceGraphMemTrim(CUdevice device);
# 17185 "/usr/include/cuda.h" 3
CUresult cuDeviceGetGraphMemAttribute(CUdevice device, CUgraphMem_attribute attr, void * value);
# 17210 "/usr/include/cuda.h" 3
CUresult cuDeviceSetGraphMemAttribute(CUdevice device, CUgraphMem_attribute attr, void * value);
# 17235 "/usr/include/cuda.h" 3
CUresult cuGraphClone(CUgraph * phGraphClone, CUgraph originalGraph);
# 17261 "/usr/include/cuda.h" 3
CUresult cuGraphNodeFindInClone(CUgraphNode * phNode, CUgraphNode hOriginalNode, CUgraph hClonedGraph);
# 17292 "/usr/include/cuda.h" 3
CUresult cuGraphNodeGetType(CUgraphNode hNode, CUgraphNodeType * type);
# 17323 "/usr/include/cuda.h" 3
CUresult cuGraphGetNodes(CUgraph hGraph, CUgraphNode * nodes, size_t * numNodes);
# 17354 "/usr/include/cuda.h" 3
CUresult cuGraphGetRootNodes(CUgraph hGraph, CUgraphNode * rootNodes, size_t * numRootNodes);
# 17388 "/usr/include/cuda.h" 3
CUresult cuGraphGetEdges(CUgraph hGraph, CUgraphNode * from, CUgraphNode * to, size_t * numEdges);
# 17419 "/usr/include/cuda.h" 3
CUresult cuGraphNodeGetDependencies(CUgraphNode hNode, CUgraphNode * dependencies, size_t * numDependencies);
# 17451 "/usr/include/cuda.h" 3
CUresult cuGraphNodeGetDependentNodes(CUgraphNode hNode, CUgraphNode * dependentNodes, size_t * numDependentNodes);
# 17480 "/usr/include/cuda.h" 3
CUresult cuGraphAddDependencies(CUgraph hGraph, const CUgraphNode * from, const CUgraphNode * to, size_t numDependencies);
# 17512 "/usr/include/cuda.h" 3
CUresult cuGraphRemoveDependencies(CUgraph hGraph, const CUgraphNode * from, const CUgraphNode * to, size_t numDependencies);
# 17539 "/usr/include/cuda.h" 3
CUresult cuGraphDestroyNode(CUgraphNode hNode);
# 17609 "/usr/include/cuda.h" 3
CUresult cuGraphInstantiateWithFlags(CUgraphExec * phGraphExec, CUgraph hGraph, unsigned long long flags);
# 17710 "/usr/include/cuda.h" 3
CUresult cuGraphInstantiateWithParams(CUgraphExec * phGraphExec, CUgraph hGraph, CUDA_GRAPH_INSTANTIATE_PARAMS * instantiateParams);
# 17732 "/usr/include/cuda.h" 3
CUresult cuGraphExecGetFlags(CUgraphExec hGraphExec, cuuint64_t * flags);
# 17781 "/usr/include/cuda.h" 3
CUresult cuGraphExecKernelNodeSetParams_v2(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_KERNEL_NODE_PARAMS * nodeParams);
# 17827 "/usr/include/cuda.h" 3
CUresult cuGraphExecMemcpyNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_MEMCPY3D * copyParams, CUcontext ctx);
# 17873 "/usr/include/cuda.h" 3
CUresult cuGraphExecMemsetNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_MEMSET_NODE_PARAMS * memsetParams, CUcontext ctx);
# 17910 "/usr/include/cuda.h" 3
CUresult cuGraphExecHostNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_HOST_NODE_PARAMS * nodeParams);
# 17953 "/usr/include/cuda.h" 3
CUresult cuGraphExecChildGraphNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, CUgraph childGraph);
# 17993 "/usr/include/cuda.h" 3
CUresult cuGraphExecEventRecordNodeSetEvent(CUgraphExec hGraphExec, CUgraphNode hNode, CUevent event);
# 18033 "/usr/include/cuda.h" 3
CUresult cuGraphExecEventWaitNodeSetEvent(CUgraphExec hGraphExec, CUgraphNode hNode, CUevent event);
# 18076 "/usr/include/cuda.h" 3
CUresult cuGraphExecExternalSemaphoresSignalNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_EXT_SEM_SIGNAL_NODE_PARAMS * nodeParams);
# 18119 "/usr/include/cuda.h" 3
CUresult cuGraphExecExternalSemaphoresWaitNodeSetParams(CUgraphExec hGraphExec, CUgraphNode hNode, const CUDA_EXT_SEM_WAIT_NODE_PARAMS * nodeParams);
# 18155 "/usr/include/cuda.h" 3
CUresult cuGraphNodeSetEnabled(CUgraphExec hGraphExec, CUgraphNode hNode, unsigned isEnabled);
# 18185 "/usr/include/cuda.h" 3
CUresult cuGraphNodeGetEnabled(CUgraphExec hGraphExec, CUgraphNode hNode, unsigned * isEnabled);
# 18211 "/usr/include/cuda.h" 3
CUresult cuGraphUpload(CUgraphExec hGraphExec, CUstream hStream);
# 18241 "/usr/include/cuda.h" 3
CUresult cuGraphLaunch(CUgraphExec hGraphExec, CUstream hStream);
# 18266 "/usr/include/cuda.h" 3
CUresult cuGraphExecDestroy(CUgraphExec hGraphExec);
# 18286 "/usr/include/cuda.h" 3
CUresult cuGraphDestroy(CUgraph hGraph);
# 18369 "/usr/include/cuda.h" 3
CUresult cuGraphExecUpdate_v2(CUgraphExec hGraphExec, CUgraph hGraph, CUgraphExecUpdateResultInfo * resultInfo);
# 18389 "/usr/include/cuda.h" 3
CUresult cuGraphKernelNodeCopyAttributes(CUgraphNode dst, CUgraphNode src);
# 18410 "/usr/include/cuda.h" 3
CUresult cuGraphKernelNodeGetAttribute(CUgraphNode hNode, CUkernelNodeAttrID attr, CUkernelNodeAttrValue * value_out);
# 18432 "/usr/include/cuda.h" 3
CUresult cuGraphKernelNodeSetAttribute(CUgraphNode hNode, CUkernelNodeAttrID attr, const CUkernelNodeAttrValue * value);
# 18452 "/usr/include/cuda.h" 3
CUresult cuGraphDebugDotPrint(CUgraph hGraph, const char * path, unsigned flags);
# 18488 "/usr/include/cuda.h" 3
CUresult cuUserObjectCreate(CUuserObject * object_out, void * ptr, CUhostFn destroy, unsigned initialRefcount, unsigned flags);
# 18513 "/usr/include/cuda.h" 3
CUresult cuUserObjectRetain(CUuserObject object, unsigned count);
# 18541 "/usr/include/cuda.h" 3
CUresult cuUserObjectRelease(CUuserObject object, unsigned count);
# 18569 "/usr/include/cuda.h" 3
CUresult cuGraphRetainUserObject(CUgraph graph, CUuserObject object, unsigned count, unsigned flags);
# 18594 "/usr/include/cuda.h" 3
CUresult cuGraphReleaseUserObject(CUgraph graph, CUuserObject object, unsigned count);
# 18633 "/usr/include/cuda.h" 3
CUresult cuOccupancyMaxActiveBlocksPerMultiprocessor(int * numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize);
# 18675 "/usr/include/cuda.h" 3
CUresult cuOccupancyMaxActiveBlocksPerMultiprocessorWithFlags(int * numBlocks, CUfunction func, int blockSize, size_t dynamicSMemSize, unsigned flags);
# 18727 "/usr/include/cuda.h" 3
CUresult cuOccupancyMaxPotentialBlockSize(int * minGridSize, int * blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit);
# 18773 "/usr/include/cuda.h" 3
CUresult cuOccupancyMaxPotentialBlockSizeWithFlags(int * minGridSize, int * blockSize, CUfunction func, CUoccupancyB2DSize blockSizeToDynamicSMemSize, size_t dynamicSMemSize, int blockSizeLimit, unsigned flags);
# 18794 "/usr/include/cuda.h" 3
CUresult cuOccupancyAvailableDynamicSMemPerBlock(size_t * dynamicSmemSize, CUfunction func, int numBlocks, int blockSize);
# 18829 "/usr/include/cuda.h" 3
CUresult cuOccupancyMaxPotentialClusterSize(int * clusterSize, CUfunction func, const CUlaunchConfig * config);
# 18866 "/usr/include/cuda.h" 3
CUresult cuOccupancyMaxActiveClusters(int * numClusters, CUfunction func, const CUlaunchConfig * config);
# 18910 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetArray(CUtexref hTexRef, CUarray hArray, unsigned Flags);
# 18940 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetMipmappedArray(CUtexref hTexRef, CUmipmappedArray hMipmappedArray, unsigned Flags);
# 18986 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetAddress_v2(size_t * ByteOffset, CUtexref hTexRef, CUdeviceptr dptr, size_t bytes);
# 19041 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetAddress2D_v3(CUtexref hTexRef, const CUDA_ARRAY_DESCRIPTOR * desc, CUdeviceptr dptr, size_t Pitch);
# 19073 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetFormat(CUtexref hTexRef, CUarray_format fmt, int NumPackedComponents);
# 19116 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetAddressMode(CUtexref hTexRef, int dim, CUaddress_mode am);
# 19152 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetFilterMode(CUtexref hTexRef, CUfilter_mode fm);
# 19188 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetMipmapFilterMode(CUtexref hTexRef, CUfilter_mode fm);
# 19217 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetMipmapLevelBias(CUtexref hTexRef, float bias);
# 19248 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetMipmapLevelClamp(CUtexref hTexRef, float minMipmapLevelClamp, float maxMipmapLevelClamp);
# 19277 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetMaxAnisotropy(CUtexref hTexRef, unsigned maxAniso);
# 19310 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetBorderColor(CUtexref hTexRef, float * pBorderColor);
# 19352 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefSetFlags(CUtexref hTexRef, unsigned Flags);
# 19379 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetAddress_v2(CUdeviceptr * pdptr, CUtexref hTexRef);
# 19406 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetArray(CUarray * phArray, CUtexref hTexRef);
# 19433 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetMipmappedArray(CUmipmappedArray * phMipmappedArray, CUtexref hTexRef);
# 19461 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetAddressMode(CUaddress_mode * pam, CUtexref hTexRef, int dim);
# 19487 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetFilterMode(CUfilter_mode * pfm, CUtexref hTexRef);
# 19515 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetFormat(CUarray_format * pFormat, int * pNumChannels, CUtexref hTexRef);
# 19541 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetMipmapFilterMode(CUfilter_mode * pfm, CUtexref hTexRef);
# 19567 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetMipmapLevelBias(float * pbias, CUtexref hTexRef);
# 19594 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetMipmapLevelClamp(float * pminMipmapLevelClamp, float * pmaxMipmapLevelClamp, CUtexref hTexRef);
# 19620 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetMaxAnisotropy(int * pmaxAniso, CUtexref hTexRef);
# 19649 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetBorderColor(float * pBorderColor, CUtexref hTexRef);
# 19674 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefGetFlags(unsigned * pFlags, CUtexref hTexRef);
# 19699 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefCreate(CUtexref * pTexRef);
# 19719 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuTexRefDestroy(CUtexref hTexRef);
# 19762 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuSurfRefSetArray(CUsurfref hSurfRef, CUarray hArray, unsigned Flags);
# 19785 "/usr/include/cuda.h" 3
__attribute((deprecated)) CUresult cuSurfRefGetArray(CUarray * phArray, CUsurfref hSurfRef);
# 20025 "/usr/include/cuda.h" 3
CUresult cuTexObjectCreate(CUtexObject * pTexObject, const CUDA_RESOURCE_DESC * pResDesc, const CUDA_TEXTURE_DESC * pTexDesc, const CUDA_RESOURCE_VIEW_DESC * pResViewDesc);
# 20045 "/usr/include/cuda.h" 3
CUresult cuTexObjectDestroy(CUtexObject texObject);
# 20066 "/usr/include/cuda.h" 3
CUresult cuTexObjectGetResourceDesc(CUDA_RESOURCE_DESC * pResDesc, CUtexObject texObject);
# 20087 "/usr/include/cuda.h" 3
CUresult cuTexObjectGetTextureDesc(CUDA_TEXTURE_DESC * pTexDesc, CUtexObject texObject);
# 20109 "/usr/include/cuda.h" 3
CUresult cuTexObjectGetResourceViewDesc(CUDA_RESOURCE_VIEW_DESC * pResViewDesc, CUtexObject texObject);
# 20152 "/usr/include/cuda.h" 3
CUresult cuSurfObjectCreate(CUsurfObject * pSurfObject, const CUDA_RESOURCE_DESC * pResDesc);
# 20172 "/usr/include/cuda.h" 3
CUresult cuSurfObjectDestroy(CUsurfObject surfObject);
# 20193 "/usr/include/cuda.h" 3
CUresult cuSurfObjectGetResourceDesc(CUDA_RESOURCE_DESC * pResDesc, CUsurfObject surfObject);
# 20350 "/usr/include/cuda.h" 3
CUresult cuTensorMapEncodeTiled(CUtensorMap * tensorMap, CUtensorMapDataType tensorDataType, cuuint32_t tensorRank, void * globalAddress, const cuuint64_t * globalDim, const cuuint64_t * globalStrides, const cuuint32_t * boxDim, const cuuint32_t * elementStrides, CUtensorMapInterleave interleave, CUtensorMapSwizzle swizzle, CUtensorMapL2promotion l2Promotion, CUtensorMapFloatOOBfill oobFill);
# 20508 "/usr/include/cuda.h" 3
CUresult cuTensorMapEncodeIm2col(CUtensorMap * tensorMap, CUtensorMapDataType tensorDataType, cuuint32_t tensorRank, void * globalAddress, const cuuint64_t * globalDim, const cuuint64_t * globalStrides, const int * pixelBoxLowerCorner, const int * pixelBoxUpperCorner, cuuint32_t channelsPerPixel, cuuint32_t pixelsPerColumn, const cuuint32_t * elementStrides, CUtensorMapInterleave interleave, CUtensorMapSwizzle swizzle, CUtensorMapL2promotion l2Promotion, CUtensorMapFloatOOBfill oobFill);
# 20534 "/usr/include/cuda.h" 3
CUresult cuTensorMapReplaceAddress(CUtensorMap * tensorMap, void * globalAddress);
# 20577 "/usr/include/cuda.h" 3
CUresult cuDeviceCanAccessPeer(int * canAccessPeer, CUdevice dev, CUdevice peerDev);
# 20630 "/usr/include/cuda.h" 3
CUresult cuCtxEnablePeerAccess(CUcontext peerContext, unsigned Flags);
# 20657 "/usr/include/cuda.h" 3
CUresult cuCtxDisablePeerAccess(CUcontext peerContext);
# 20697 "/usr/include/cuda.h" 3
CUresult cuDeviceGetP2PAttribute(int * value, CUdevice_P2PAttribute attrib, CUdevice srcDevice, CUdevice dstDevice);
# 20741 "/usr/include/cuda.h" 3
CUresult cuGraphicsUnregisterResource(CUgraphicsResource resource);
# 20781 "/usr/include/cuda.h" 3
CUresult cuGraphicsSubResourceGetMappedArray(CUarray * pArray, CUgraphicsResource resource, unsigned arrayIndex, unsigned mipLevel);
# 20812 "/usr/include/cuda.h" 3
CUresult cuGraphicsResourceGetMappedMipmappedArray(CUmipmappedArray * pMipmappedArray, CUgraphicsResource resource);
# 20846 "/usr/include/cuda.h" 3
CUresult cuGraphicsResourceGetMappedPointer_v2(CUdeviceptr * pDevPtr, size_t * pSize, CUgraphicsResource resource);
# 20887 "/usr/include/cuda.h" 3
CUresult cuGraphicsResourceSetMapFlags_v2(CUgraphicsResource resource, unsigned flags);
# 20927 "/usr/include/cuda.h" 3
CUresult cuGraphicsMapResources(unsigned count, CUgraphicsResource * resources, CUstream hStream);
# 20964 "/usr/include/cuda.h" 3
CUresult cuGraphicsUnmapResources(unsigned count, CUgraphicsResource * resources, CUstream hStream);
# 21041 "/usr/include/cuda.h" 3
CUresult cuGetProcAddress_v2(const char * symbol, void ** pfn, int cudaVersion, cuuint64_t flags, CUdriverProcAddressQueryResult * symbolStatus);
# 21045 "/usr/include/cuda.h" 3
CUresult cuGetExportTable(const void ** ppExportTable, const CUuuid * pExportTableId);
# 21430 "/usr/include/cuda.h" 3
}
# 11 "vector_add.cu"

# 11 "vector_add.cu"
void vector_add(float *out, float *a, float *b, int n) ;
# 19 "vector_add.cu"
int main()
# 20 "vector_add.cu"
{
# 21 "vector_add.cu"
float *a, *b, *out;
# 22 "vector_add.cu"
float *d_a, *d_b, *d_out;
# 25 "vector_add.cu"
printf("Allocating host memory\n");
# 26 "vector_add.cu"
a = ((float *)malloc(sizeof(float) * (10)));
# 27 "vector_add.cu"
b = ((float *)malloc(sizeof(float) * (10)));
# 28 "vector_add.cu"
out = ((float *)malloc(sizeof(float) * (10)));
# 31 "vector_add.cu"
printf("Initializing host arrays\n");
# 32 "vector_add.cu"
for (int i = 0; i < 10; i++)
# 33 "vector_add.cu"
{
# 34 "vector_add.cu"
(a[i]) = (1.0F);
# 35 "vector_add.cu"
(b[i]) = (2.0F);
# 36 "vector_add.cu"
}
# 39 "vector_add.cu"
printf("Allocating device memory\n");
# 40 "vector_add.cu"
cudaMalloc((void **)(&d_a), sizeof(float) * (10));
# 41 "vector_add.cu"
cudaMalloc((void **)(&d_b), sizeof(float) * (10));
# 42 "vector_add.cu"
cudaMalloc((void **)(&d_out), sizeof(float) * (10));
# 45 "vector_add.cu"
printf("Transferring data from host to device memory\n");
# 46 "vector_add.cu"
cudaMemcpy(d_a, a, sizeof(float) * (10), cudaMemcpyHostToDevice);
# 47 "vector_add.cu"
cudaMemcpy(d_b, b, sizeof(float) * (10), cudaMemcpyHostToDevice);
# 50 "vector_add.cu"
printf("Executing kernel\n");
# 51 "vector_add.cu"
(__cudaPushCallConfiguration(1, 1)) ? (void)0 : vector_add(d_out, d_a, d_b, 10);
# 54 "vector_add.cu"
printf("Transferring data back to host memory\n");
# 55 "vector_add.cu"
cudaMemcpy(out, d_out, sizeof(float) * (10), cudaMemcpyDeviceToHost);
# 58 "vector_add.cu"
printf("Verifying\n");
# 59 "vector_add.cu"
for (int i = 0; i < 10; i++)
# 60 "vector_add.cu"
{
# 61 "vector_add.cu" 3

# 61 "vector_add.cu" 3
(static_cast< bool>((fabs(((out[i]) - (a[i])) - (b[i]))) < (1.0E-6))) ? (void)0 : __assert_fail("fabs(out[i] - a[i] - b[i]) < MAX_ERR", __builtin_FILE(), __builtin_LINE(), __extension__ __PRETTY_FUNCTION__);
# 62 "vector_add.cu"

# 62 "vector_add.cu"
}
# 63 "vector_add.cu"
printf("out[0] = %f\n", out[0]);
# 64 "vector_add.cu"
printf("PASSED\n");
# 67 "vector_add.cu"
printf("Deallocating device memory\n");
# 68 "vector_add.cu"
cudaFree(d_a);
# 69 "vector_add.cu"
cudaFree(d_b);
# 70 "vector_add.cu"
cudaFree(d_out);
# 73 "vector_add.cu"
printf("Deallocating host memory\n");
# 74 "vector_add.cu"
free(a);
# 75 "vector_add.cu"
free(b);
# 76 "vector_add.cu"
free(out); return 0;
# 77 "vector_add.cu"
}
# 1 "tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
# 1 "tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 1 3
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wunused-function"
#pragma GCC diagnostic ignored "-Wcast-qual"




# 1 "/usr/include/crt/host_runtime.h" 1 3 4
# 63 "/usr/include/crt/host_runtime.h" 3 4

# 63 "/usr/include/crt/host_runtime.h" 3 4
template <typename T>
static inline T *__cudaAddressOf(T &val)
{
    return (T *)((void *)(&(const_cast<char &>(reinterpret_cast<const volatile char &>(val)))));
}
# 86 "/usr/include/crt/host_runtime.h" 3 4
extern "C" cudaError_t __cudaPopCallConfiguration(
  dim3 *gridDim,
  dim3 *blockDim,
  size_t *sharedMem,
  void *stream
);
# 133 "/usr/include/crt/host_runtime.h" 3 4
static void ____nv_dummy_param_ref(void *param) { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)param; }




extern "C" {
void __cudaRegisterLinkedBinary__NV_MODULE_ID ( void (*)(void **), void *, void *, void (*)(void *));
}




extern "C" {







  static const unsigned char __module_id_str[] __attribute__((section ("__nv_module_id"))) = "__NV_MODULE_ID";
# 164 "/usr/include/crt/host_runtime.h" 3 4
}

extern "C" {
extern void** __cudaRegisterFatBinary(
  void *fatCubin
);

extern void __cudaRegisterFatBinaryEnd(
  void **fatCubinHandle
);

extern void __cudaUnregisterFatBinary(
  void **fatCubinHandle
);

extern void __cudaRegisterVar(
        void **fatCubinHandle,
        char *hostVar,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        size_t size,
        int constant,
        int global
);

extern void __cudaRegisterManagedVar(
        void **fatCubinHandle,
        void **hostVarPtrAddress,
        char *deviceAddress,
  const char *deviceName,
        int ext,
        size_t size,
        int constant,
        int global
);

extern char __cudaInitModule(
        void **fatCubinHandle
);

extern void __cudaRegisterTexture(
        void **fatCubinHandle,
  const struct textureReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int norm,
        int ext
);

extern void __cudaRegisterSurface(
        void **fatCubinHandle,
  const struct surfaceReference *hostVar,
  const void **deviceAddress,
  const char *deviceName,
        int dim,
        int ext
);

extern void __cudaRegisterFunction(
        void **fatCubinHandle,
  const char *hostFun,
        char *deviceFun,
  const char *deviceName,
        int thread_limit,
        uint3 *tid,
        uint3 *bid,
        dim3 *bDim,
        dim3 *gDim,
        int *wSize
);





extern int atexit(void(*)(void)) throw();
# 252 "/usr/include/crt/host_runtime.h" 3 4
}

static void **__cudaFatCubinHandle;

static void __cudaUnregisterBinaryUtil(void)
{
  ____nv_dummy_param_ref((void *)&__cudaFatCubinHandle);
  __cudaUnregisterFatBinary(__cudaFatCubinHandle);
}

static char __nv_init_managed_rt_with_module(void **handle)
{
  return __cudaInitModule(handle);
}

# 1 "/usr/include/crt/common_functions.h" 1 3 4
# 303 "/usr/include/crt/common_functions.h" 3 4
# 1 "/usr/include/crt/math_functions.h" 1 3 4
# 11911 "/usr/include/crt/math_functions.h" 3 4
# 1 "/usr/include/crt/func_macro.h" 1 3 4
# 11912 "/usr/include/crt/math_functions.h" 2 3 4







inline double rsqrt(double a);

inline double rcbrt(double a);

inline double sinpi(double a);

inline double cospi(double a);

inline void sincospi(double a, double *sptr, double *cptr);

inline double erfinv(double a);

inline double erfcinv(double a);

inline double normcdfinv(double a);

inline double normcdf(double a);

inline double erfcx(double a);

inline float rsqrtf(float a);

inline float rcbrtf(float a);

inline float sinpif(float a);

inline float cospif(float a);

inline void sincospif(float a, float *sptr, float *cptr);

inline float erfinvf(float a);

inline float erfcinvf(float a);

inline float normcdfinvf(float a);

inline float normcdff(float a);

inline float erfcxf(float a);

inline int min(int a, int b);

inline unsigned int umin(unsigned int a, unsigned int b);

inline long long int llmin(long long int a, long long int b);

inline unsigned long long int ullmin(unsigned long long int a, unsigned long long int b);

inline int max(int a, int b);

inline unsigned int umax(unsigned int a, unsigned int b);

inline long long int llmax(long long int a, long long int b);

inline unsigned long long int ullmax(unsigned long long int a, unsigned long long int b);
# 12181 "/usr/include/crt/math_functions.h" 3 4
# 1 "/usr/include/crt/math_functions.hpp" 1 3 4
# 1188 "/usr/include/crt/math_functions.hpp" 3 4
# 1 "/usr/include/crt/host_defines.h" 1 3 4
# 1189 "/usr/include/crt/math_functions.hpp" 2 3 4
# 1 "/usr/include/math_constants.h" 1 3 4
# 1190 "/usr/include/crt/math_functions.hpp" 2 3 4
# 1200 "/usr/include/crt/math_functions.hpp" 3 4
# 1 "/usr/include/crt/func_macro.h" 1 3 4
# 1201 "/usr/include/crt/math_functions.hpp" 2 3 4
# 2944 "/usr/include/crt/math_functions.hpp" 3 4
inline double rsqrt(const double a)
{
  return 1.0 / sqrt(a);
}

inline double rcbrt(const double a)
{
  double s, t;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return 1.0 / a;
  }
  s = fabs(a);
  t = exp2(-3.3333333333333333e-1 * log2(s));
  t = ((t*t) * (-s*t) + 1.0) * (3.3333333333333333e-1*t) + t;



  if (__signbit(a))

  {
    t = -t;
  }
  return t;
}

inline double sinpi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (a == 0.0 || __isinf(a)) {
    return sin (a);
  }
  if (a == floor(a)) {
    return ((a / 1.0e308) / 1.0e308) / 1.0e308;
  }
  double twoa = a + a;
  double rtwoa = round(twoa);
  long long int l = (long long int)rtwoa;
  n = (int)l;
  a -= rtwoa * 0.5;
  a = a * 3.1415926535897931e+0;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  return a;
}

inline double cospi(double a)
{
  int n;

  if (__isnan(a)) {
    return a + a;
  }
  if (__isinf(a)) {
    return cos (a);
  }
  if (fabs(a) > 9.0071992547409920e+015) {
    a = 0.0;
  }
  double twoa = a + a;
  double rtwoa = round(twoa);
  long long int l = (long long int)rtwoa;
  n = (int)l;
  a -= rtwoa * 0.5;
  a = a * 3.1415926535897931e+0;
  n++;
  if (n & 1) {
    a = cos (a);
  } else {
    a = sin (a);
  }
  if (n & 2) {
    a = -a;
  }
  if (a == 0.0) {
    a = fabs(a);
  }
  return a;
}

inline void sincospi(const double a, double *sptr, double *cptr)
{
  *sptr = sinpi(a);
  *cptr = cospi(a);
}

inline double erfinv(const double a)
{
  double p, q, t, fa;
  unsigned long long int l;

  fa = fabs(a);
  if (fa >= 1.0) {
    l = 0xfff8000000000000ULL;
    memcpy(&t, &l, sizeof(double));
    if (fa == 1.0) {
      t = a * exp(1000.0);
    }
  } else if (fa >= 0.9375) {




    t = log1p(-fa);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
    if (a < 0.0) t = -t;
  } else if (fa >= 0.75) {




    t = a * a - .87890625;
    p = .21489185007307062000e+0;
    p = p * t - .64200071507209448655e+1;
    p = p * t + .29631331505876308123e+2;
    p = p * t - .47644367129787181803e+2;
    p = p * t + .34810057749357500873e+2;
    p = p * t - .12954198980646771502e+2;
    p = p * t + .25349389220714893917e+1;
    p = p * t - .24758242362823355486e+0;
    p = p * t + .94897362808681080020e-2;
    q = t - .12831383833953226499e+2;
    q = q * t + .41409991778428888716e+2;
    q = q * t - .53715373448862143349e+2;
    q = q * t + .33880176779595142685e+2;
    q = q * t - .11315360624238054876e+2;
    q = q * t + .20369295047216351160e+1;
    q = q * t - .18611650627372178511e+0;
    q = q * t + .67544512778850945940e-2;
    p = p / q;
    t = a * p;
  } else {




    t = a * a - .5625;
    p = - .23886240104308755900e+2;
    p = p * t + .45560204272689128170e+3;
    p = p * t - .22977467176607144887e+4;
    p = p * t + .46631433533434331287e+4;
    p = p * t - .43799652308386926161e+4;
    p = p * t + .19007153590528134753e+4;
    p = p * t - .30786872642313695280e+3;
    q = t - .83288327901936570000e+2;
    q = q * t + .92741319160935318800e+3;
    q = q * t - .35088976383877264098e+4;
    q = q * t + .59039348134843665626e+4;
    q = q * t - .48481635430048872102e+4;
    q = q * t + .18997769186453057810e+4;
    q = q * t - .28386514725366621129e+3;
    p = p / q;
    t = a * p;
  }
  return t;
}

inline double erfcinv(const double a)
{
  double t;
  unsigned long long int l;

  if (__isnan(a)) {
    return a + a;
  }
  if (a <= 0.0) {
    l = 0xfff8000000000000ULL;
    memcpy(&t, &l, sizeof(double));
    if (a == 0.0) {
        t = (1.0 - a) * exp(1000.0);
    }
  }
  else if (a >= 0.0625) {
    t = erfinv (1.0 - a);
  }
  else if (a >= 1e-100) {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 2.7834010353747001060e-3;
    p = p * t + 8.6030097526280260580e-1;
    p = p * t + 2.1371214997265515515e+0;
    p = p * t + 3.1598519601132090206e+0;
    p = p * t + 3.5780402569085996758e+0;
    p = p * t + 1.5335297523989890804e+0;
    p = p * t + 3.4839207139657522572e-1;
    p = p * t + 5.3644861147153648366e-2;
    p = p * t + 4.3836709877126095665e-3;
    p = p * t + 1.3858518113496718808e-4;
    p = p * t + 1.1738352509991666680e-6;
    q = t + 2.2859981272422905412e+0;
    q = q * t + 4.3859045256449554654e+0;
    q = q * t + 4.6632960348736635331e+0;
    q = q * t + 3.9846608184671757296e+0;
    q = q * t + 1.6068377709719017609e+0;
    q = q * t + 3.5609087305900265560e-1;
    q = q * t + 5.3963550303200816744e-2;
    q = q * t + 4.3873424022706935023e-3;
    q = q * t + 1.3858762165532246059e-4;
    q = q * t + 1.1738313872397777529e-6;
    t = p / (q * t);
  }
  else {




    double p, q;
    t = log(a);
    t = 1.0 / sqrt(-t);
    p = 6.9952990607058154858e-1;
    p = p * t + 1.9507620287580568829e+0;
    p = p * t + 8.2810030904462690216e-1;
    p = p * t + 1.1279046353630280005e-1;
    p = p * t + 6.0537914739162189689e-3;
    p = p * t + 1.3714329569665128933e-4;
    p = p * t + 1.2964481560643197452e-6;
    p = p * t + 4.6156006321345332510e-9;
    p = p * t + 4.5344689563209398450e-12;
    q = t + 1.5771922386662040546e+0;
    q = q * t + 2.1238242087454993542e+0;
    q = q * t + 8.4001814918178042919e-1;
    q = q * t + 1.1311889334355782065e-1;
    q = q * t + 6.0574830550097140404e-3;
    q = q * t + 1.3715891988350205065e-4;
    q = q * t + 1.2964671850944981713e-6;
    q = q * t + 4.6156017600933592558e-9;
    q = q * t + 4.5344687377088206783e-12;
    t = p / (q * t);
  }
  return t;
}

inline double normcdfinv(const double a)
{
  return -1.4142135623730951 * erfcinv(a + a);
}

inline double normcdf(double a)
{
  double ah, al, t1, t2, u1, u2, v1, v2, z;
  if (fabs (a) > 38.5) a = copysign (38.5, a);
  ah = a * 134217729.0;
  u1 = (a - ah) + ah;
  u2 = a - u1;
  v1 = -7.0710678398609161e-01;
  v2 = 2.7995440410322203e-09;
  t1 = a * -7.0710678118654757e-1;
  t2 = (((u1 * v1 - t1) + u1 * v2) + u2 * v1) + u2 * v2;
  t2 = (a * -(-4.8336466567264567e-17)) + t2;
  ah = t1 + t2;
  z = erfc (ah);
  if (a < -1.0) {
    al = (t1 - ah) + t2;
    t1 = -2.0 * ah * z;
    z = t1 * al + z;
  }
  return 0.5 * z;
}

inline double erfcx(const double a)
{
  double x, t1, t2, t3;

  if (__isnan(a)) {
    return a + a;
  }
  x = fabs(a);
  if (x < 32.0) {
# 3266 "/usr/include/crt/math_functions.hpp" 3 4
    t1 = x - 4.0;
    t2 = x + 4.0;
    t2 = t1 / t2;

    t1 = - 3.5602694826817400E-010;
    t1 = t1 * t2 - 9.7239122591447274E-009;
    t1 = t1 * t2 - 8.9350224851649119E-009;
    t1 = t1 * t2 + 1.0404430921625484E-007;
    t1 = t1 * t2 + 5.8806698585341259E-008;
    t1 = t1 * t2 - 8.2147414929116908E-007;
    t1 = t1 * t2 + 3.0956409853306241E-007;
    t1 = t1 * t2 + 5.7087871844325649E-006;
    t1 = t1 * t2 - 1.1231787437600085E-005;
    t1 = t1 * t2 - 2.4399558857200190E-005;
    t1 = t1 * t2 + 1.5062557169571788E-004;
    t1 = t1 * t2 - 1.9925637684786154E-004;
    t1 = t1 * t2 - 7.5777429182785833E-004;
    t1 = t1 * t2 + 5.0319698792599572E-003;
    t1 = t1 * t2 - 1.6197733895953217E-002;
    t1 = t1 * t2 + 3.7167515553018733E-002;
    t1 = t1 * t2 - 6.6330365827532434E-002;
    t1 = t1 * t2 + 9.3732834997115544E-002;
    t1 = t1 * t2 - 1.0103906603555676E-001;
    t1 = t1 * t2 + 6.8097054254735140E-002;
    t1 = t1 * t2 + 1.5379652102605428E-002;
    t1 = t1 * t2 - 1.3962111684056291E-001;
    t1 = t1 * t2 + 1.2329951186255526E+000;



    t2 = 2.0 * x + 1.0;
    t1 = t1 / t2;
  } else {

    t2 = 1.0 / x;
    t3 = t2 * t2;
    t1 = -29.53125;
    t1 = t1 * t3 + 6.5625;
    t1 = t1 * t3 - 1.875;
    t1 = t1 * t3 + 0.75;
    t1 = t1 * t3 - 0.5;
    t1 = t1 * t3 + 1.0;
    t2 = t2 * 5.6418958354775628e-001;
    t1 = t1 * t2;
  }
  if (a < 0.0) {



    t2 = (static_cast<int>(x * 16.0)) * 0.0625;
    t3 = (x - t2) * (x + t2);
    t3 = exp(t2 * t2) * exp(t3);
    t3 = t3 + t3;
    t1 = t3 - t1;
  }
  return t1;
}

inline float rsqrtf(const float a)
{
  return static_cast<float>(rsqrt(static_cast<double>(a)));
}

inline float rcbrtf(const float a)
{
  return static_cast<float>(rcbrt(static_cast<double>(a)));
}

inline float sinpif(const float a)
{
  return static_cast<float>(sinpi(static_cast<double>(a)));
}

inline float cospif(const float a)
{
  return static_cast<float>(cospi(static_cast<double>(a)));
}

inline void sincospif(const float a, float *sptr, float *cptr)
{
  double s, c;

  sincospi(static_cast<double>(a), &s, &c);
  *sptr = static_cast<float>(s);
  *cptr = static_cast<float>(c);
}

inline float erfinvf(const float a)
{
  return static_cast<float>(erfinv(static_cast<double>(a)));
}

inline float erfcinvf(const float a)
{
  return static_cast<float>(erfcinv(static_cast<double>(a)));
}

inline float normcdfinvf(const float a)
{
  return static_cast<float>(normcdfinv(static_cast<double>(a)));
}

inline float normcdff(const float a)
{
  return static_cast<float>(normcdf(static_cast<double>(a)));
}

inline float erfcxf(const float a)
{
  return static_cast<float>(erfcx(static_cast<double>(a)));
}
# 12182 "/usr/include/crt/math_functions.h" 2 3 4
# 304 "/usr/include/crt/common_functions.h" 2 3 4
# 268 "/usr/include/crt/host_runtime.h" 2 3 4

#pragma pack()
# 9 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 2 3
# 1 "/tmp/tmpxft_00191bbd_00000000-3_vector_add.fatbin.c" 1 3

# 1 "/usr/include/fatbinary_section.h" 1 3 4
# 19 "/usr/include/fatbinary_section.h" 3 4
extern "C" {
# 29 "/usr/include/fatbinary_section.h" 3 4
typedef struct {
  int magic;
  int version;
  const unsigned long long* data;
  void *filename_or_fatbins;

} __fatBinC_Wrapper_t;
# 58 "/usr/include/fatbinary_section.h" 3 4
}
# 3 "/tmp/tmpxft_00191bbd_00000000-3_vector_add.fatbin.c" 2 3



asm(
".section .nv_fatbin, \"a\"\n"
".align 8\n"
"fatbinData:\n"
".quad 0x00100001ba55ed50,0x0000000000001428,0x0000004001010002,0x0000000000001028\n"
".quad 0x0000000000000000,0x0000003400010007,0x0000000000000000,0x0000000000000011\n"
".quad 0x0000000000000000,0x0000000000000000,0x33010102464c457f,0x0000000000000007\n"
".quad 0x0000007800be0002,0x0000000000000000,0x0000000000000f80,0x0000000000000d80\n"
".quad 0x0038004000340534,0x0001000800400003,0x7472747368732e00,0x747274732e006261\n"
".quad 0x746d79732e006261,0x746d79732e006261,0x78646e68735f6261,0x7466752e766e2e00\n"
".quad 0x2e007972746e652e,0x006f666e692e766e,0x5a5f2e747865742e,0x726f746365763031\n"
".quad 0x5f5366506464615f,0x2e766e2e00695f53,0x315a5f2e6f666e69,0x5f726f7463657630\n"
".quad 0x535f536650646461,0x732e766e2e00695f,0x5a5f2e6465726168,0x726f746365763031\n"
".quad 0x5f5366506464615f,0x2e766e2e00695f53,0x746e6174736e6f63,0x657630315a5f2e30\n"
".quad 0x6464615f726f7463,0x00695f535f536650,0x7472747368732e00,0x747274732e006261\n"
".quad 0x746d79732e006261,0x746d79732e006261,0x78646e68735f6261,0x7466752e766e2e00\n"
".quad 0x2e007972746e652e,0x006f666e692e766e,0x7463657630315a5f,0x66506464615f726f\n"
".quad 0x742e00695f535f53,0x30315a5f2e747865,0x615f726f74636576,0x5f535f5366506464\n"
".quad 0x6e692e766e2e0069,0x7630315a5f2e6f66,0x64615f726f746365,0x695f535f53665064\n"
".quad 0x6168732e766e2e00,0x30315a5f2e646572,0x615f726f74636576,0x5f535f5366506464\n"
".quad 0x6f632e766e2e0069,0x2e30746e6174736e,0x7463657630315a5f,0x66506464615f726f\n"
".quad 0x705f00695f535f53,0x000000006d617261,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0007000300000056,0x0000000000000000,0x0000000000000000\n"
".quad 0x00060003000000b2,0x0000000000000000,0x0000000000000000,0x0007101200000040\n"
".quad 0x0000000000000000,0x0000000000000940,0x0000000300082f04,0x0008230400000013\n"
".quad 0x0000000000000003,0x0000000300081204,0x0008110400000000,0x0000000000000003\n"
".quad 0x0000007800043704,0x00002a0100003001,0x0000000200080a04,0x001c1903001c0140\n"
".quad 0x00000000000c1704,0x0011f00000180003,0x00000000000c1704,0x0021f00000100002\n"
".quad 0x00000000000c1704,0x0021f00000080001,0x00000000000c1704,0x0021f00000000000\n"
".quad 0x000c1c0400ff1b03,0x000007f800000048,0x0000000000000918,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x001fb400fec007f6,0x4c98078000870001\n"
".quad 0x4c98078005670000,0x366d038000170007,0x001f8c00fde007ef,0x50b0000000070f00\n"
".quad 0x50b0000000070f00,0x50b0000000070f00,0x001fc440fe2007fd,0xe30000000008000f\n"
".quad 0x1c0ffffffff70002,0x0400000000370000,0x001ff400fda007f4,0x5c9807800ff70009\n"
".quad 0x366c038000370207,0xe24000007588000f,0x001fc400fe2007f1,0x4c12000005670008\n"
".quad 0x4c98078005070004,0x4c98078005170005,0x001f8400fe2007f1,0x4c98078005470002\n"
".quad 0x4c98078005570003,0x4c98078005270006,0x001ff400fe0007ed,0x5b6903800ff70807\n"
".quad 0x4c98078005370007,0xe24000005a08000f,0x001fb400fe0007ed,0x3669038000c7080f\n"
".quad 0x50900380e0077007,0xe24000003609000f,0x001fc400fe0007ed,0x50900380e007f007\n"
".quad 0x1c10000004070611,0xeed420000007020a,0x041fc800f58007f0,0x1c0fffffff070808\n"
".quad 0xeed420000007060b,0x5c58000000b70a0a,0x001ec800fe2007f1,0xeedc20000007040a\n"
".quad 0xeed420000047020b,0xeed420000047060c,0x001fc400fe2107e2,0x5c58000000c70b0b\n"
".quad 0xeedc20000047040b,0xeed420000087020c,0x001fc420fe4007b2,0xeed420000087060d\n"
".quad 0x5c58000000d70c0d,0xeedc20000087040d,0x041f8800f64007f1,0xeed4200000c7020c\n"
".quad 0xeed4200000c7060e,0x5c58000000e70c0e,0x001ec800fe2007f1,0xeedc200000c7040e\n"
".quad 0xeed420000107020a,0xeed420000107060c,0x001fc400fe2107f2,0x5c58000000c70a0a\n"
".quad 0xeedc20000107040a,0xeed420000147020b,0x001fc420fc4007b2,0xeed420000147060c\n"
".quad 0x5c58000000c70b0b,0xeedc20000147040b,0x041fc800f64007f1,0xeed420000187020c\n"
".quad 0xeed420000187060d,0x5c58000000d70c0d,0x001ec800fe2007f1,0xeedc20000187040d\n"
".quad 0xeed4200001c7020c,0xeed4200001c7060e,0x001fc400fe2107e2,0x5c58000000e70c0e\n"
".quad 0xeedc200001c7040e,0xeed420000207020a,0x001fc420fe4007b2,0xeed420000207060c\n"
".quad 0x5c58000000c70a0a,0xeedc20000207040a,0x041f8800f64007f1,0xeed420000247020b\n"
".quad 0xeed420000247060c,0x5c58000000c70b0b,0x001ec800fe2007f1,0xeedc20000247040b\n"
".quad 0xeed420000287020c,0xeed420000287060d,0x001fc400fe2107f2,0x5c58000000d70c0d\n"
".quad 0xeedc20000287040d,0xeed4200002c7020c,0x001fc420fc4007b2,0xeed4200002c7060e\n"
".quad 0x5c58000000e70c0e,0xeedc200002c7040e,0x041fc800f64007f1,0xeed420000307020a\n"
".quad 0xeed420000307060c,0x5c58000000c70a0a,0x001ec800fe2007f1,0xeedc20000307040a\n"
".quad 0xeed420000347020b,0xeed420000347060c,0x001fc400fe2107e2,0x5c58000000c70b0b\n"
".quad 0xeedc20000347040b,0xeed420000387020c,0x001fc400fe2007b1,0xeed420000387060d\n"
".quad 0x5c1008000077ff12,0x1c1000000407020f,0x001fc420fc4007ed,0x3669038000c7080f\n"
".quad 0x5c58000000d70c0d,0xeedc20000387040d,0x001fc400362000f1,0xeed4200003c7020c\n"
".quad 0xeed4200003c7060e,0x5c1008000037ff10,0x001fc400fca007f1,0x1c1000000407040a\n"
".quad 0x1c00000001070909,0x5c1008000057ff0b,0x005fc400fe200ff1,0x5c98078000f70002\n"
".quad 0x5c98078001070003,0x5c98078001170006,0x0003f420fc4007f1,0x5c98078001270007\n"
".quad 0x5c58000000e70c0e,0xeedc200003c7040e,0x001ff400fe000ff1,0x5c98078000a70004\n"
".quad 0x5c98078000b70005,0xe2400fffcb01000f,0x001fc000ffa007ed,0x366903800047080f\n"
".quad 0xe24000001f89000f,0x1c10000002070611,0x001edc00fe0007f6,0xeed420000007020a\n"
".quad 0x5c1008000077ff12,0xeed420000007060b,0x001fc400fe2107f2,0x5c58000000b70a0a\n"
".quad 0xeedc20000007040a,0xeed420000047020b,0x001fc420fc4007b2,0xeed420000047060c\n"
".quad 0x5c58000000c70b0b,0xeedc20000047040b,0x041fc800f64007f1,0xeed420000087020c\n"
".quad 0xeed420000087060d,0x5c58000000d70c0d,0x001ec800fe2007f1,0xeedc20000087040d\n"
".quad 0xeed4200000c7020c,0xeed4200000c7060e,0x001fc400fe2107e2,0x5c58000000e70c0e\n"
".quad 0xeedc200000c7040e,0xeed420000107020a,0x001fc420fe4007b2,0xeed420000107060c\n"
".quad 0x5c58000000c70a0a,0xeedc20000107040a,0x041f8800f64007f1,0xeed420000147020b\n"
".quad 0xeed420000147060c,0x5c58000000c70b0b,0x001ec400fe2007f1,0xeedc20000147040b\n"
".quad 0xeed420000187020c,0xeed420000187060d,0x041f8800fee007f6,0x1c1000000207020f\n"
".quad 0x5c1008000037ff10,0x5c58000000d70c0d,0x0006c4001e2007f1,0xeedc20000187040d\n"
".quad 0xeed4200001c7020c,0xeed4200001c7060e,0x001f8400fe2007f1,0x1c1000000207040a\n"
".quad 0x50900380e007f007,0x1c00000000870909,0x003fc400fe2007f3,0x1c0fffffff870808\n"
".quad 0x5c1008000057ff0b,0x5c98078000f70002,0x001f8402fe2007f1,0x5c98078001070003\n"
".quad 0x5c98078001170006,0x5c98078001270007,0x003fc4001fa107f2,0x5c58000000e70c0e\n"
".quad 0xeedc200001c7040e,0x5c98078000a70004,0x001ff400fda007f6,0x5c98078000b70005\n"
".quad 0x5b6b20000ff70807,0xe24000001588000f,0x001fc000fe2007f0,0x1c10000001070611\n"
".quad 0xeed420000007020a,0x1c0fffffffc70808,0x001fc420fe4007ac,0xeed420000007060b\n"
".quad 0x5c58000000b70a0a,0xeedc20000007040a,0x041f8800f64007f1,0xeed420000047020b\n"
".quad 0xeed420000047060c,0x5c58000000c70b0b,0x001ec400fe2007f1,0xeedc20000047040b\n"
".quad 0xeed420000087020c,0xeed420000087060d,0x001fb400fe2007f1,0x5c1008000077ff12\n"
".quad 0x1c1000000107020f,0x5b6b03800ff70807,0x0003c400fe2107e2,0x5c58000000d70c0d\n"
".quad 0xeedc20000087040d,0xeed4200000c7020c,0x001fc400fe2001b1,0xeed4200000c7060e\n"
".quad 0x5c1008000037ff10,0x1c1000000107040a,0x003fc400fe2007e5,0x1c00000000470909\n"
".quad 0x5c1008000057ff0b,0x5c98078000f70002,0x001fc402fe2007f1,0x5c98078001070003\n"
".quad 0x5c98078001170006,0x5c98078001270007,0x003fc4001fa107e2,0x5c58000000e70c0e\n"
".quad 0xeedc200000c7040e,0x5c98078000a70004,0x001fb400ffa007f0,0x5c98078000b70005\n"
".quad 0xe2400fffea80000f,0x5b6b03800ff70007,0x001ff400fca007ef,0x50b0000000070f00\n"
".quad 0x50b0000000070f00,0xe30000000008000f,0x081fd800fea207f1,0x3848000000270908\n"
".quad 0x3829000001e70905,0x4c1080000507080b,0x001f8400fec207f1,0x4c1008000517050c\n"
".quad 0x4c10800005470809,0x4c1008000557050a,0x003fc400fec007f6,0x4c10800005270808\n"
".quad 0x4c10080005370505,0x5c98078000970002,0x0003c800fe0007f2,0x5c98078000a70003\n"
".quad 0x5c98078000870004,0xeed4200000070206,0x001fc40036c007f0,0x1c0ffffffff70000\n"
".quad 0xeed4200000070404,0x5b6b03800ff70007,0x101fd400fe200fe1,0x5c98078000b70002\n"
".quad 0x1c10000000470b0b,0x5c98078000c70003,0x001fc400fec007f1,0x5c10080000c7ff0c\n"
".quad 0x1c10000000470909,0x5c10080000a7ff0a,0x041fc802fee007e6,0x1c10000000470808\n"
".quad 0x5c1008000057ff05,0x5c58000000470607,0x001ffc00ffa000f1,0xeedc200000070207\n"
".quad 0xe2400ffff400000f,0xe30000000007000f,0x001f8000fc0007ff,0xe2400fffff07000f\n"
".quad 0x50b0000000070f00,0x50b0000000070f00,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000000000000,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000000,0x0000000300000001,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000040,0x00000000000000c0,0x0000000000000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x000000030000000b,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000100,0x00000000000000dd,0x0000000000000000\n"
".quad 0x0000000000000001,0x0000000000000000,0x0000000200000013,0x0000000000000000\n"
".quad 0x0000000000000000,0x00000000000001e0,0x0000000000000060,0x0000000300000002\n"
".quad 0x0000000000000008,0x0000000000000018,0x7000000000000037,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000240,0x0000000000000030,0x0000000000000005\n"
".quad 0x0000000000000004,0x0000000000000000,0x700000000000005c,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000270,0x0000000000000074,0x0000000700000005\n"
".quad 0x0000000000000004,0x0000000000000000,0x000000010000009c,0x0000000000000002\n"
".quad 0x0000000000000000,0x00000000000002e4,0x000000000000015c,0x0000000700000000\n"
".quad 0x0000000000000004,0x0000000000000000,0x0000000100000040,0x0000000000000006\n"
".quad 0x0000000000000000,0x0000000000000440,0x0000000000000940,0x1300000300000005\n"
".quad 0x0000000000000020,0x0000000000000000,0x0000000500000006,0x0000000000000f80\n"
".quad 0x0000000000000000,0x0000000000000000,0x00000000000000a8,0x00000000000000a8\n"
".quad 0x0000000000000008,0x0000000500000001,0x00000000000002e4,0x0000000000000000\n"
".quad 0x0000000000000000,0x0000000000000a9c,0x0000000000000a9c,0x0000000000000008\n"
".quad 0x0000000500000001,0x0000000000000f80,0x0000000000000000,0x0000000000000000\n"
".quad 0x00000000000000a8,0x00000000000000a8,0x0000000000000008,0x0000004801010001\n"
".quad 0x0000000000000378,0x0000004000000374,0x0000003400080000,0x0000000000000000\n"
".quad 0x0000000000002011,0x0000000000000000,0x00000000000007e4,0x0000000000000000\n"
".quad 0x762e1cf200010a13,0x38206e6f69737265,0x677261742e0a302e,0x32355f6d73207465\n"
".quad 0x7365726464612e0a,0x3620657a69735f73,0x69736921ff002f34,0x746e652e20656c62\n"
".quad 0x7630315a5f207972,0x64615f726f746365,0x695f535f53665064,0x6d617261702e0a28\n"
".quad 0x0300233436752e20,0x2c305f3f00215f11,0x17002b311f16002b,0x2b32332f002b3217\n"
".quad 0x0a290a3308f30a00,0x2e206765722e0a7b,0x3c70252064657270,0x33668600123b3e36\n"
".quad 0x0012313c66252032,0x313c724600126210,0x20343601f2001238,0x3b3e39323c647225\n"
".quad 0x22007b646c0a0a0a,0x2c39315f0018752e,0x5d303d0900825b20,0x003530322f00353b\n"
".quad 0x311f010035311f0c,0x01003532190c0035,0xf40d0069311f00c9,0x7476630a3b5d3303\n"
".quad 0x6f6c672e6f742e61,0x2c3121006f6c6162,0x22050020391f0006,0x0500200f00952c32\n"
".quad 0x0a3b30c000203312,0x2e746c2e70746573,0x982c317033009373,0x25400a3b310cf200\n"
".quad 0x2420617262203170,0x375f3042425f5f4c,0x002b6464610a0a3b,0x2d73002c32317234\n"
".quad 0x019f646e610a3b31,0x5e33160018373124,0x2c32703300f10100,0x6f6d0a3b33640038\n"
".quad 0x30202c3641010776,0x3474006f3219006f,0x006f6275730a0a3b,0x0300630000573514\n"
".quad 0x00ce0200ed030040,0x001534110015311a,0x540045010015321a,0x2000660a0a3b3364\n"
".quad 0x02011e0301973a33,0x002d0001cb000273,0x3213001c3b5d343d,0x010c3b5d3531001c\n"
".quad 0x001b2c3322001602,0x74730a3b31662578,0x5d3320002e010033,0x3414004f331e001c\n"
".quad 0x1401006d2b1f006b,0x006f342b29006d35,0x66253f001d2c3622,0x71342b2103006f34\n"
".quad 0x7137150053361e00,0x3815000071381f00,0x3922007138190071,0x713766253f001d2c\n"
".quad 0x391e007138110400,0x3f00723031250053,0x31150000205d3231,0x0100753231290074\n"
".quad 0x0046000020010261,0x793231210400780f,0x23029b3b32313800,0x0017341300062c36\n"
".quad 0x312a00070001ff09,0x341e022e03001a36,0x0500072c3324001a,0x2c3553029108001a\n"
".quad 0x656e2202e9342d20,0x02001b337024001c,0x7e0802d8331902d8,0x6523003a3a342202\n"
".quad 0x03432c3423003a71,0x730381341d003a02,0x6a6469772e6c756d,0x00ec323264724f00\n"
".quad 0x2a04290401af0004,0x252c3727001c3232,0x212c3627001c0b04,0x3606ff00ac321704\n"
".quad 0x6d676172702e0a3a,0x726e756f6e222061,0x130001d1226c6c6f,0x0101ee371f01d133\n"
".quad 0x2301eb361a02f104,0x0f004000001d2c35,0x312f0261020201eb,0x1f0007000100e535\n"
".quad 0x0019371d0200e234,0xce341900072c3624,0x312d2c0179371401,0x35190194351a01ce\n"
".quad 0x37d0012236170194, 0x0a0a3b7465720a3a, 0x00000000000a0a7d\n"
".text\n");

extern "C" {

extern const unsigned long long fatbinData[647];

}


extern "C" {

static const __fatBinC_Wrapper_t __fatDeviceText __attribute__ ((aligned (8))) __attribute__ ((section (".nvFatBinSegment")))=
 { 0x466243b1, 1, fatbinData, 0 };

}
# 10 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 2 3
extern void __device_stub__Z10vector_addPfS_S_i(float *, float *, float *, int);
static void __nv_cudaEntityRegisterCallback(void **);
static void __sti____cudaRegisterAll(void) __attribute__((__constructor__));
void __device_stub__Z10vector_addPfS_S_i(float *__par0, float *__par1, float *__par2, int __par3){void * __args_arr[4]; int __args_idx = 0;__args_arr[__args_idx] = (void *)(char *)&__par0; ++__args_idx;__args_arr[__args_idx] = (void *)(char *)&__par1; ++__args_idx;__args_arr[__args_idx] = (void *)(char *)&__par2; ++__args_idx;__args_arr[__args_idx] = (void *)(char *)&__par3; ++__args_idx;{ volatile static char *__f __attribute__((unused)); __f = ((char *)((void ( *)(float *, float *, float *, int))vector_add)); dim3 __gridDim, __blockDim; size_t __sharedMem; cudaStream_t __stream; if (__cudaPopCallConfiguration(&__gridDim, &__blockDim, &__sharedMem, &__stream) != cudaSuccess) return; if (__args_idx == 0) { (void)cudaLaunchKernel(((char *)((void ( *)(float *, float *, float *, int))vector_add)), __gridDim, __blockDim, &__args_arr[__args_idx], __sharedMem, __stream); } else { (void)cudaLaunchKernel(((char *)((void ( *)(float *, float *, float *, int))vector_add)), __gridDim, __blockDim, &__args_arr[0], __sharedMem, __stream); } };}
# 11 "vector_add.cu"

# 11 "vector_add.cu"
void vector_add( float *__cuda_0,float *__cuda_1,float *__cuda_2,int __cuda_3)
# 12 "vector_add.cu"
{__device_stub__Z10vector_addPfS_S_i( __cuda_0,__cuda_1,__cuda_2,__cuda_3);




}
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
static void __nv_cudaEntityRegisterCallback( void **__T3) { 
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 3 4
                                                            { volatile static void **__ref __attribute__((unused)); __ref = (volatile void **)
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
                                                            __T3
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 3 4
                                                            ; }
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
                                                                                      ; __nv_save_fatbinhandle_for_managed_rt(__T3); 
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 3 4
                                                                                                                                     __cudaRegisterFunction(
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
                                                                                                                                     __T3
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 3 4
                                                                                                                                     , (const char*)
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
                                                                                                                                     ((void ( *)(float *, float *, float *, int))vector_add)
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 3 4
                                                                                                                                     , (char*)
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
                                                                                                                                     "_Z10vector_addPfS_S_i"
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 3 4
                                                                                                                                     , 
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
                                                                                                                                     "_Z10vector_addPfS_S_i"
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 3 4
                                                                                                                                     , -1, (uint3*)0, (uint3*)0, (dim3*)0, (dim3*)0, (int*)0)
# 1 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
                                                                                                                                                                                                                                                    ; }
static void __sti____cudaRegisterAll(void) { 
# 2 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 3 4
                                             __cudaFatCubinHandle = __cudaRegisterFatBinary((void*)&__fatDeviceText); { void (*callback_fp)(void **) = (void (*)(void **))(
# 2 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
                                             __nv_cudaEntityRegisterCallback
# 2 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 3 4
                                             ); (*callback_fp)(__cudaFatCubinHandle); __cudaRegisterFatBinaryEnd(__cudaFatCubinHandle); } atexit(__cudaUnregisterBinaryUtil)
# 2 "/tmp/tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
                                                                                                  ; }

#pragma GCC diagnostic pop
# 2 "tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c" 2
# 1 "tmpxft_00191bbd_00000000-6_vector_add.cudafe1.stub.c"
